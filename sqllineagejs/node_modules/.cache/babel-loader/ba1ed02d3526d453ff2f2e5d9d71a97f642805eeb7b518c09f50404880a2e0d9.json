{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { SimpleWorkerServer } from '../base/common/worker/simpleWorker.js';\nimport { EditorSimpleWorker } from './common/services/editorSimpleWorker.js';\nlet initialized = false;\nexport function initialize(foreignModule) {\n  if (initialized) {\n    return;\n  }\n  initialized = true;\n  const simpleWorker = new SimpleWorkerServer(msg => {\n    self.postMessage(msg);\n  }, host => new EditorSimpleWorker(host, foreignModule));\n  self.onmessage = e => {\n    simpleWorker.onmessage(e.data);\n  };\n}\nself.onmessage = e => {\n  // Ignore first message in this case and initialize if not yet initialized\n  if (!initialized) {\n    initialize(null);\n  }\n};","map":{"version":3,"names":["SimpleWorkerServer","EditorSimpleWorker","initialized","initialize","foreignModule","simpleWorker","msg","self","postMessage","host","onmessage","e","data"],"sources":["C:/Users/Administrator/Desktop/sqllineage-master/sqllineagejs/node_modules/monaco-editor/esm/vs/editor/editor.worker.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { SimpleWorkerServer } from '../base/common/worker/simpleWorker.js';\r\nimport { EditorSimpleWorker } from './common/services/editorSimpleWorker.js';\r\nlet initialized = false;\r\nexport function initialize(foreignModule) {\r\n    if (initialized) {\r\n        return;\r\n    }\r\n    initialized = true;\r\n    const simpleWorker = new SimpleWorkerServer((msg) => {\r\n        self.postMessage(msg);\r\n    }, (host) => new EditorSimpleWorker(host, foreignModule));\r\n    self.onmessage = (e) => {\r\n        simpleWorker.onmessage(e.data);\r\n    };\r\n}\r\nself.onmessage = (e) => {\r\n    // Ignore first message in this case and initialize if not yet initialized\r\n    if (!initialized) {\r\n        initialize(null);\r\n    }\r\n};\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,kBAAkB,QAAQ,uCAAuC;AAC1E,SAASC,kBAAkB,QAAQ,yCAAyC;AAC5E,IAAIC,WAAW,GAAG,KAAK;AACvB,OAAO,SAASC,UAAUA,CAACC,aAAa,EAAE;EACtC,IAAIF,WAAW,EAAE;IACb;EACJ;EACAA,WAAW,GAAG,IAAI;EAClB,MAAMG,YAAY,GAAG,IAAIL,kBAAkB,CAAEM,GAAG,IAAK;IACjDC,IAAI,CAACC,WAAW,CAACF,GAAG,CAAC;EACzB,CAAC,EAAGG,IAAI,IAAK,IAAIR,kBAAkB,CAACQ,IAAI,EAAEL,aAAa,CAAC,CAAC;EACzDG,IAAI,CAACG,SAAS,GAAIC,CAAC,IAAK;IACpBN,YAAY,CAACK,SAAS,CAACC,CAAC,CAACC,IAAI,CAAC;EAClC,CAAC;AACL;AACAL,IAAI,CAACG,SAAS,GAAIC,CAAC,IAAK;EACpB;EACA,IAAI,CAACT,WAAW,EAAE;IACdC,UAAU,CAAC,IAAI,CAAC;EACpB;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}