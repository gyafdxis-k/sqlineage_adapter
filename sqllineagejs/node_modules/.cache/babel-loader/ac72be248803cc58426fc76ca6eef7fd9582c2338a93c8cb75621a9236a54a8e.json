{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../dom.js';\nimport { createFastDomNode } from '../../fastDomNode.js';\nimport { GlobalMouseMoveMonitor, standardMouseMoveMerger } from '../../globalMouseMoveMonitor.js';\nimport { ScrollbarArrow } from './scrollbarArrow.js';\nimport { ScrollbarVisibilityController } from './scrollbarVisibilityController.js';\nimport { Widget } from '../widget.js';\nimport * as platform from '../../../common/platform.js';\n/**\r\n * The orthogonal distance to the slider at which dragging \"resets\". This implements \"snapping\"\r\n */\nconst MOUSE_DRAG_RESET_DISTANCE = 140;\nexport class AbstractScrollbar extends Widget {\n  constructor(opts) {\n    super();\n    this._lazyRender = opts.lazyRender;\n    this._host = opts.host;\n    this._scrollable = opts.scrollable;\n    this._scrollByPage = opts.scrollByPage;\n    this._scrollbarState = opts.scrollbarState;\n    this._visibilityController = this._register(new ScrollbarVisibilityController(opts.visibility, 'visible scrollbar ' + opts.extraScrollbarClassName, 'invisible scrollbar ' + opts.extraScrollbarClassName));\n    this._visibilityController.setIsNeeded(this._scrollbarState.isNeeded());\n    this._mouseMoveMonitor = this._register(new GlobalMouseMoveMonitor());\n    this._shouldRender = true;\n    this.domNode = createFastDomNode(document.createElement('div'));\n    this.domNode.setAttribute('role', 'presentation');\n    this.domNode.setAttribute('aria-hidden', 'true');\n    this._visibilityController.setDomNode(this.domNode);\n    this.domNode.setPosition('absolute');\n    this.onmousedown(this.domNode.domNode, e => this._domNodeMouseDown(e));\n  }\n  // ----------------- creation\n  /**\r\n   * Creates the dom node for an arrow & adds it to the container\r\n   */\n  _createArrow(opts) {\n    const arrow = this._register(new ScrollbarArrow(opts));\n    this.domNode.domNode.appendChild(arrow.bgDomNode);\n    this.domNode.domNode.appendChild(arrow.domNode);\n  }\n  /**\r\n   * Creates the slider dom node, adds it to the container & hooks up the events\r\n   */\n  _createSlider(top, left, width, height) {\n    this.slider = createFastDomNode(document.createElement('div'));\n    this.slider.setClassName('slider');\n    this.slider.setPosition('absolute');\n    this.slider.setTop(top);\n    this.slider.setLeft(left);\n    if (typeof width === 'number') {\n      this.slider.setWidth(width);\n    }\n    if (typeof height === 'number') {\n      this.slider.setHeight(height);\n    }\n    this.slider.setLayerHinting(true);\n    this.slider.setContain('strict');\n    this.domNode.domNode.appendChild(this.slider.domNode);\n    this.onmousedown(this.slider.domNode, e => {\n      if (e.leftButton) {\n        e.preventDefault();\n        this._sliderMouseDown(e, () => {});\n      }\n    });\n    this.onclick(this.slider.domNode, e => {\n      if (e.leftButton) {\n        e.stopPropagation();\n      }\n    });\n  }\n  // ----------------- Update state\n  _onElementSize(visibleSize) {\n    if (this._scrollbarState.setVisibleSize(visibleSize)) {\n      this._visibilityController.setIsNeeded(this._scrollbarState.isNeeded());\n      this._shouldRender = true;\n      if (!this._lazyRender) {\n        this.render();\n      }\n    }\n    return this._shouldRender;\n  }\n  _onElementScrollSize(elementScrollSize) {\n    if (this._scrollbarState.setScrollSize(elementScrollSize)) {\n      this._visibilityController.setIsNeeded(this._scrollbarState.isNeeded());\n      this._shouldRender = true;\n      if (!this._lazyRender) {\n        this.render();\n      }\n    }\n    return this._shouldRender;\n  }\n  _onElementScrollPosition(elementScrollPosition) {\n    if (this._scrollbarState.setScrollPosition(elementScrollPosition)) {\n      this._visibilityController.setIsNeeded(this._scrollbarState.isNeeded());\n      this._shouldRender = true;\n      if (!this._lazyRender) {\n        this.render();\n      }\n    }\n    return this._shouldRender;\n  }\n  // ----------------- rendering\n  beginReveal() {\n    this._visibilityController.setShouldBeVisible(true);\n  }\n  beginHide() {\n    this._visibilityController.setShouldBeVisible(false);\n  }\n  render() {\n    if (!this._shouldRender) {\n      return;\n    }\n    this._shouldRender = false;\n    this._renderDomNode(this._scrollbarState.getRectangleLargeSize(), this._scrollbarState.getRectangleSmallSize());\n    this._updateSlider(this._scrollbarState.getSliderSize(), this._scrollbarState.getArrowSize() + this._scrollbarState.getSliderPosition());\n  }\n  // ----------------- DOM events\n  _domNodeMouseDown(e) {\n    if (e.target !== this.domNode.domNode) {\n      return;\n    }\n    this._onMouseDown(e);\n  }\n  delegateMouseDown(e) {\n    const domTop = this.domNode.domNode.getClientRects()[0].top;\n    const sliderStart = domTop + this._scrollbarState.getSliderPosition();\n    const sliderStop = domTop + this._scrollbarState.getSliderPosition() + this._scrollbarState.getSliderSize();\n    const mousePos = this._sliderMousePosition(e);\n    if (sliderStart <= mousePos && mousePos <= sliderStop) {\n      // Act as if it was a mouse down on the slider\n      if (e.leftButton) {\n        e.preventDefault();\n        this._sliderMouseDown(e, () => {});\n      }\n    } else {\n      // Act as if it was a mouse down on the scrollbar\n      this._onMouseDown(e);\n    }\n  }\n  _onMouseDown(e) {\n    let offsetX;\n    let offsetY;\n    if (e.target === this.domNode.domNode && typeof e.browserEvent.offsetX === 'number' && typeof e.browserEvent.offsetY === 'number') {\n      offsetX = e.browserEvent.offsetX;\n      offsetY = e.browserEvent.offsetY;\n    } else {\n      const domNodePosition = dom.getDomNodePagePosition(this.domNode.domNode);\n      offsetX = e.posx - domNodePosition.left;\n      offsetY = e.posy - domNodePosition.top;\n    }\n    const offset = this._mouseDownRelativePosition(offsetX, offsetY);\n    this._setDesiredScrollPositionNow(this._scrollByPage ? this._scrollbarState.getDesiredScrollPositionFromOffsetPaged(offset) : this._scrollbarState.getDesiredScrollPositionFromOffset(offset));\n    if (e.leftButton) {\n      e.preventDefault();\n      this._sliderMouseDown(e, () => {});\n    }\n  }\n  _sliderMouseDown(e, onDragFinished) {\n    const initialMousePosition = this._sliderMousePosition(e);\n    const initialMouseOrthogonalPosition = this._sliderOrthogonalMousePosition(e);\n    const initialScrollbarState = this._scrollbarState.clone();\n    this.slider.toggleClassName('active', true);\n    this._mouseMoveMonitor.startMonitoring(e.target, e.buttons, standardMouseMoveMerger, mouseMoveData => {\n      const mouseOrthogonalPosition = this._sliderOrthogonalMousePosition(mouseMoveData);\n      const mouseOrthogonalDelta = Math.abs(mouseOrthogonalPosition - initialMouseOrthogonalPosition);\n      if (platform.isWindows && mouseOrthogonalDelta > MOUSE_DRAG_RESET_DISTANCE) {\n        // The mouse has wondered away from the scrollbar => reset dragging\n        this._setDesiredScrollPositionNow(initialScrollbarState.getScrollPosition());\n        return;\n      }\n      const mousePosition = this._sliderMousePosition(mouseMoveData);\n      const mouseDelta = mousePosition - initialMousePosition;\n      this._setDesiredScrollPositionNow(initialScrollbarState.getDesiredScrollPositionFromDelta(mouseDelta));\n    }, () => {\n      this.slider.toggleClassName('active', false);\n      this._host.onDragEnd();\n      onDragFinished();\n    });\n    this._host.onDragStart();\n  }\n  _setDesiredScrollPositionNow(_desiredScrollPosition) {\n    const desiredScrollPosition = {};\n    this.writeScrollPosition(desiredScrollPosition, _desiredScrollPosition);\n    this._scrollable.setScrollPositionNow(desiredScrollPosition);\n  }\n  updateScrollbarSize(scrollbarSize) {\n    this._updateScrollbarSize(scrollbarSize);\n    this._scrollbarState.setScrollbarSize(scrollbarSize);\n    this._shouldRender = true;\n    if (!this._lazyRender) {\n      this.render();\n    }\n  }\n  isNeeded() {\n    return this._scrollbarState.isNeeded();\n  }\n}","map":{"version":3,"names":["dom","createFastDomNode","GlobalMouseMoveMonitor","standardMouseMoveMerger","ScrollbarArrow","ScrollbarVisibilityController","Widget","platform","MOUSE_DRAG_RESET_DISTANCE","AbstractScrollbar","constructor","opts","_lazyRender","lazyRender","_host","host","_scrollable","scrollable","_scrollByPage","scrollByPage","_scrollbarState","scrollbarState","_visibilityController","_register","visibility","extraScrollbarClassName","setIsNeeded","isNeeded","_mouseMoveMonitor","_shouldRender","domNode","document","createElement","setAttribute","setDomNode","setPosition","onmousedown","e","_domNodeMouseDown","_createArrow","arrow","appendChild","bgDomNode","_createSlider","top","left","width","height","slider","setClassName","setTop","setLeft","setWidth","setHeight","setLayerHinting","setContain","leftButton","preventDefault","_sliderMouseDown","onclick","stopPropagation","_onElementSize","visibleSize","setVisibleSize","render","_onElementScrollSize","elementScrollSize","setScrollSize","_onElementScrollPosition","elementScrollPosition","setScrollPosition","beginReveal","setShouldBeVisible","beginHide","_renderDomNode","getRectangleLargeSize","getRectangleSmallSize","_updateSlider","getSliderSize","getArrowSize","getSliderPosition","target","_onMouseDown","delegateMouseDown","domTop","getClientRects","sliderStart","sliderStop","mousePos","_sliderMousePosition","offsetX","offsetY","browserEvent","domNodePosition","getDomNodePagePosition","posx","posy","offset","_mouseDownRelativePosition","_setDesiredScrollPositionNow","getDesiredScrollPositionFromOffsetPaged","getDesiredScrollPositionFromOffset","onDragFinished","initialMousePosition","initialMouseOrthogonalPosition","_sliderOrthogonalMousePosition","initialScrollbarState","clone","toggleClassName","startMonitoring","buttons","mouseMoveData","mouseOrthogonalPosition","mouseOrthogonalDelta","Math","abs","isWindows","getScrollPosition","mousePosition","mouseDelta","getDesiredScrollPositionFromDelta","onDragEnd","onDragStart","_desiredScrollPosition","desiredScrollPosition","writeScrollPosition","setScrollPositionNow","updateScrollbarSize","scrollbarSize","_updateScrollbarSize","setScrollbarSize"],"sources":["C:/Users/Administrator/Desktop/sqllineage-master/sqllineagejs/node_modules/monaco-editor/esm/vs/base/browser/ui/scrollbar/abstractScrollbar.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as dom from '../../dom.js';\r\nimport { createFastDomNode } from '../../fastDomNode.js';\r\nimport { GlobalMouseMoveMonitor, standardMouseMoveMerger } from '../../globalMouseMoveMonitor.js';\r\nimport { ScrollbarArrow } from './scrollbarArrow.js';\r\nimport { ScrollbarVisibilityController } from './scrollbarVisibilityController.js';\r\nimport { Widget } from '../widget.js';\r\nimport * as platform from '../../../common/platform.js';\r\n/**\r\n * The orthogonal distance to the slider at which dragging \"resets\". This implements \"snapping\"\r\n */\r\nconst MOUSE_DRAG_RESET_DISTANCE = 140;\r\nexport class AbstractScrollbar extends Widget {\r\n    constructor(opts) {\r\n        super();\r\n        this._lazyRender = opts.lazyRender;\r\n        this._host = opts.host;\r\n        this._scrollable = opts.scrollable;\r\n        this._scrollByPage = opts.scrollByPage;\r\n        this._scrollbarState = opts.scrollbarState;\r\n        this._visibilityController = this._register(new ScrollbarVisibilityController(opts.visibility, 'visible scrollbar ' + opts.extraScrollbarClassName, 'invisible scrollbar ' + opts.extraScrollbarClassName));\r\n        this._visibilityController.setIsNeeded(this._scrollbarState.isNeeded());\r\n        this._mouseMoveMonitor = this._register(new GlobalMouseMoveMonitor());\r\n        this._shouldRender = true;\r\n        this.domNode = createFastDomNode(document.createElement('div'));\r\n        this.domNode.setAttribute('role', 'presentation');\r\n        this.domNode.setAttribute('aria-hidden', 'true');\r\n        this._visibilityController.setDomNode(this.domNode);\r\n        this.domNode.setPosition('absolute');\r\n        this.onmousedown(this.domNode.domNode, (e) => this._domNodeMouseDown(e));\r\n    }\r\n    // ----------------- creation\r\n    /**\r\n     * Creates the dom node for an arrow & adds it to the container\r\n     */\r\n    _createArrow(opts) {\r\n        const arrow = this._register(new ScrollbarArrow(opts));\r\n        this.domNode.domNode.appendChild(arrow.bgDomNode);\r\n        this.domNode.domNode.appendChild(arrow.domNode);\r\n    }\r\n    /**\r\n     * Creates the slider dom node, adds it to the container & hooks up the events\r\n     */\r\n    _createSlider(top, left, width, height) {\r\n        this.slider = createFastDomNode(document.createElement('div'));\r\n        this.slider.setClassName('slider');\r\n        this.slider.setPosition('absolute');\r\n        this.slider.setTop(top);\r\n        this.slider.setLeft(left);\r\n        if (typeof width === 'number') {\r\n            this.slider.setWidth(width);\r\n        }\r\n        if (typeof height === 'number') {\r\n            this.slider.setHeight(height);\r\n        }\r\n        this.slider.setLayerHinting(true);\r\n        this.slider.setContain('strict');\r\n        this.domNode.domNode.appendChild(this.slider.domNode);\r\n        this.onmousedown(this.slider.domNode, (e) => {\r\n            if (e.leftButton) {\r\n                e.preventDefault();\r\n                this._sliderMouseDown(e, () => { });\r\n            }\r\n        });\r\n        this.onclick(this.slider.domNode, e => {\r\n            if (e.leftButton) {\r\n                e.stopPropagation();\r\n            }\r\n        });\r\n    }\r\n    // ----------------- Update state\r\n    _onElementSize(visibleSize) {\r\n        if (this._scrollbarState.setVisibleSize(visibleSize)) {\r\n            this._visibilityController.setIsNeeded(this._scrollbarState.isNeeded());\r\n            this._shouldRender = true;\r\n            if (!this._lazyRender) {\r\n                this.render();\r\n            }\r\n        }\r\n        return this._shouldRender;\r\n    }\r\n    _onElementScrollSize(elementScrollSize) {\r\n        if (this._scrollbarState.setScrollSize(elementScrollSize)) {\r\n            this._visibilityController.setIsNeeded(this._scrollbarState.isNeeded());\r\n            this._shouldRender = true;\r\n            if (!this._lazyRender) {\r\n                this.render();\r\n            }\r\n        }\r\n        return this._shouldRender;\r\n    }\r\n    _onElementScrollPosition(elementScrollPosition) {\r\n        if (this._scrollbarState.setScrollPosition(elementScrollPosition)) {\r\n            this._visibilityController.setIsNeeded(this._scrollbarState.isNeeded());\r\n            this._shouldRender = true;\r\n            if (!this._lazyRender) {\r\n                this.render();\r\n            }\r\n        }\r\n        return this._shouldRender;\r\n    }\r\n    // ----------------- rendering\r\n    beginReveal() {\r\n        this._visibilityController.setShouldBeVisible(true);\r\n    }\r\n    beginHide() {\r\n        this._visibilityController.setShouldBeVisible(false);\r\n    }\r\n    render() {\r\n        if (!this._shouldRender) {\r\n            return;\r\n        }\r\n        this._shouldRender = false;\r\n        this._renderDomNode(this._scrollbarState.getRectangleLargeSize(), this._scrollbarState.getRectangleSmallSize());\r\n        this._updateSlider(this._scrollbarState.getSliderSize(), this._scrollbarState.getArrowSize() + this._scrollbarState.getSliderPosition());\r\n    }\r\n    // ----------------- DOM events\r\n    _domNodeMouseDown(e) {\r\n        if (e.target !== this.domNode.domNode) {\r\n            return;\r\n        }\r\n        this._onMouseDown(e);\r\n    }\r\n    delegateMouseDown(e) {\r\n        const domTop = this.domNode.domNode.getClientRects()[0].top;\r\n        const sliderStart = domTop + this._scrollbarState.getSliderPosition();\r\n        const sliderStop = domTop + this._scrollbarState.getSliderPosition() + this._scrollbarState.getSliderSize();\r\n        const mousePos = this._sliderMousePosition(e);\r\n        if (sliderStart <= mousePos && mousePos <= sliderStop) {\r\n            // Act as if it was a mouse down on the slider\r\n            if (e.leftButton) {\r\n                e.preventDefault();\r\n                this._sliderMouseDown(e, () => { });\r\n            }\r\n        }\r\n        else {\r\n            // Act as if it was a mouse down on the scrollbar\r\n            this._onMouseDown(e);\r\n        }\r\n    }\r\n    _onMouseDown(e) {\r\n        let offsetX;\r\n        let offsetY;\r\n        if (e.target === this.domNode.domNode && typeof e.browserEvent.offsetX === 'number' && typeof e.browserEvent.offsetY === 'number') {\r\n            offsetX = e.browserEvent.offsetX;\r\n            offsetY = e.browserEvent.offsetY;\r\n        }\r\n        else {\r\n            const domNodePosition = dom.getDomNodePagePosition(this.domNode.domNode);\r\n            offsetX = e.posx - domNodePosition.left;\r\n            offsetY = e.posy - domNodePosition.top;\r\n        }\r\n        const offset = this._mouseDownRelativePosition(offsetX, offsetY);\r\n        this._setDesiredScrollPositionNow(this._scrollByPage\r\n            ? this._scrollbarState.getDesiredScrollPositionFromOffsetPaged(offset)\r\n            : this._scrollbarState.getDesiredScrollPositionFromOffset(offset));\r\n        if (e.leftButton) {\r\n            e.preventDefault();\r\n            this._sliderMouseDown(e, () => { });\r\n        }\r\n    }\r\n    _sliderMouseDown(e, onDragFinished) {\r\n        const initialMousePosition = this._sliderMousePosition(e);\r\n        const initialMouseOrthogonalPosition = this._sliderOrthogonalMousePosition(e);\r\n        const initialScrollbarState = this._scrollbarState.clone();\r\n        this.slider.toggleClassName('active', true);\r\n        this._mouseMoveMonitor.startMonitoring(e.target, e.buttons, standardMouseMoveMerger, (mouseMoveData) => {\r\n            const mouseOrthogonalPosition = this._sliderOrthogonalMousePosition(mouseMoveData);\r\n            const mouseOrthogonalDelta = Math.abs(mouseOrthogonalPosition - initialMouseOrthogonalPosition);\r\n            if (platform.isWindows && mouseOrthogonalDelta > MOUSE_DRAG_RESET_DISTANCE) {\r\n                // The mouse has wondered away from the scrollbar => reset dragging\r\n                this._setDesiredScrollPositionNow(initialScrollbarState.getScrollPosition());\r\n                return;\r\n            }\r\n            const mousePosition = this._sliderMousePosition(mouseMoveData);\r\n            const mouseDelta = mousePosition - initialMousePosition;\r\n            this._setDesiredScrollPositionNow(initialScrollbarState.getDesiredScrollPositionFromDelta(mouseDelta));\r\n        }, () => {\r\n            this.slider.toggleClassName('active', false);\r\n            this._host.onDragEnd();\r\n            onDragFinished();\r\n        });\r\n        this._host.onDragStart();\r\n    }\r\n    _setDesiredScrollPositionNow(_desiredScrollPosition) {\r\n        const desiredScrollPosition = {};\r\n        this.writeScrollPosition(desiredScrollPosition, _desiredScrollPosition);\r\n        this._scrollable.setScrollPositionNow(desiredScrollPosition);\r\n    }\r\n    updateScrollbarSize(scrollbarSize) {\r\n        this._updateScrollbarSize(scrollbarSize);\r\n        this._scrollbarState.setScrollbarSize(scrollbarSize);\r\n        this._shouldRender = true;\r\n        if (!this._lazyRender) {\r\n            this.render();\r\n        }\r\n    }\r\n    isNeeded() {\r\n        return this._scrollbarState.isNeeded();\r\n    }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}