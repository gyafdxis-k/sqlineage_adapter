{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport './findWidget.css';\nimport * as nls from '../../../nls.js';\nimport * as dom from '../../../base/browser/dom.js';\nimport { alert as alertFn } from '../../../base/browser/ui/aria/aria.js';\nimport { Checkbox } from '../../../base/browser/ui/checkbox/checkbox.js';\nimport { Sash } from '../../../base/browser/ui/sash/sash.js';\nimport { Widget } from '../../../base/browser/ui/widget.js';\nimport { Delayer } from '../../../base/common/async.js';\nimport { onUnexpectedError } from '../../../base/common/errors.js';\nimport { toDisposable } from '../../../base/common/lifecycle.js';\nimport * as platform from '../../../base/common/platform.js';\nimport * as strings from '../../../base/common/strings.js';\nimport { Range } from '../../common/core/range.js';\nimport { CONTEXT_FIND_INPUT_FOCUSED, CONTEXT_REPLACE_INPUT_FOCUSED, FIND_IDS, MATCHES_LIMIT } from './findModel.js';\nimport { contrastBorder, editorFindMatch, editorFindMatchBorder, editorFindMatchHighlight, editorFindMatchHighlightBorder, editorFindRangeHighlight, editorFindRangeHighlightBorder, editorWidgetBackground, editorWidgetBorder, editorWidgetResizeBorder, errorForeground, inputActiveOptionBorder, inputActiveOptionBackground, inputActiveOptionForeground, inputBackground, inputBorder, inputForeground, inputValidationErrorBackground, inputValidationErrorBorder, inputValidationErrorForeground, inputValidationInfoBackground, inputValidationInfoBorder, inputValidationInfoForeground, inputValidationWarningBackground, inputValidationWarningBorder, inputValidationWarningForeground, widgetShadow, editorWidgetForeground, focusBorder } from '../../../platform/theme/common/colorRegistry.js';\nimport { registerThemingParticipant, ThemeIcon } from '../../../platform/theme/common/themeService.js';\nimport { ContextScopedFindInput, ContextScopedReplaceInput } from '../../../platform/browser/contextScopedHistoryWidget.js';\nimport { Codicon } from '../../../base/common/codicons.js';\nimport { registerIcon, widgetClose } from '../../../platform/theme/common/iconRegistry.js';\nconst findSelectionIcon = registerIcon('find-selection', Codicon.selection, nls.localize('findSelectionIcon', 'Icon for \\'Find in Selection\\' in the editor find widget.'));\nconst findCollapsedIcon = registerIcon('find-collapsed', Codicon.chevronRight, nls.localize('findCollapsedIcon', 'Icon to indicate that the editor find widget is collapsed.'));\nconst findExpandedIcon = registerIcon('find-expanded', Codicon.chevronDown, nls.localize('findExpandedIcon', 'Icon to indicate that the editor find widget is expanded.'));\nexport const findReplaceIcon = registerIcon('find-replace', Codicon.replace, nls.localize('findReplaceIcon', 'Icon for \\'Replace\\' in the editor find widget.'));\nexport const findReplaceAllIcon = registerIcon('find-replace-all', Codicon.replaceAll, nls.localize('findReplaceAllIcon', 'Icon for \\'Replace All\\' in the editor find widget.'));\nexport const findPreviousMatchIcon = registerIcon('find-previous-match', Codicon.arrowUp, nls.localize('findPreviousMatchIcon', 'Icon for \\'Find Previous\\' in the editor find widget.'));\nexport const findNextMatchIcon = registerIcon('find-next-match', Codicon.arrowDown, nls.localize('findNextMatchIcon', 'Icon for \\'Find Next\\' in the editor find widget.'));\nconst NLS_FIND_INPUT_LABEL = nls.localize('label.find', \"Find\");\nconst NLS_FIND_INPUT_PLACEHOLDER = nls.localize('placeholder.find', \"Find\");\nconst NLS_PREVIOUS_MATCH_BTN_LABEL = nls.localize('label.previousMatchButton', \"Previous match\");\nconst NLS_NEXT_MATCH_BTN_LABEL = nls.localize('label.nextMatchButton', \"Next match\");\nconst NLS_TOGGLE_SELECTION_FIND_TITLE = nls.localize('label.toggleSelectionFind', \"Find in selection\");\nconst NLS_CLOSE_BTN_LABEL = nls.localize('label.closeButton', \"Close\");\nconst NLS_REPLACE_INPUT_LABEL = nls.localize('label.replace', \"Replace\");\nconst NLS_REPLACE_INPUT_PLACEHOLDER = nls.localize('placeholder.replace', \"Replace\");\nconst NLS_REPLACE_BTN_LABEL = nls.localize('label.replaceButton', \"Replace\");\nconst NLS_REPLACE_ALL_BTN_LABEL = nls.localize('label.replaceAllButton', \"Replace All\");\nconst NLS_TOGGLE_REPLACE_MODE_BTN_LABEL = nls.localize('label.toggleReplaceButton', \"Toggle Replace mode\");\nconst NLS_MATCHES_COUNT_LIMIT_TITLE = nls.localize('title.matchesCountLimit', \"Only the first {0} results are highlighted, but all find operations work on the entire text.\", MATCHES_LIMIT);\nconst NLS_MATCHES_LOCATION = nls.localize('label.matchesLocation', \"{0} of {1}\");\nconst NLS_NO_RESULTS = nls.localize('label.noResults', \"No results\");\nconst FIND_WIDGET_INITIAL_WIDTH = 419;\nconst PART_WIDTH = 275;\nconst FIND_INPUT_AREA_WIDTH = PART_WIDTH - 54;\nlet MAX_MATCHES_COUNT_WIDTH = 69;\n// let FIND_ALL_CONTROLS_WIDTH = 17/** Find Input margin-left */ + (MAX_MATCHES_COUNT_WIDTH + 3 + 1) /** Match Results */ + 23 /** Button */ * 4 + 2/** sash */;\nconst FIND_INPUT_AREA_HEIGHT = 33; // The height of Find Widget when Replace Input is not visible.\nconst ctrlEnterReplaceAllWarningPromptedKey = 'ctrlEnterReplaceAll.windows.donotask';\nconst ctrlKeyMod = platform.isMacintosh ? 256 /* WinCtrl */ : 2048 /* CtrlCmd */;\nexport class FindWidgetViewZone {\n  constructor(afterLineNumber) {\n    this.afterLineNumber = afterLineNumber;\n    this.heightInPx = FIND_INPUT_AREA_HEIGHT;\n    this.suppressMouseDown = false;\n    this.domNode = document.createElement('div');\n    this.domNode.className = 'dock-find-viewzone';\n  }\n}\nfunction stopPropagationForMultiLineUpwards(event, value, textarea) {\n  const isMultiline = !!value.match(/\\n/);\n  if (textarea && isMultiline && textarea.selectionStart > 0) {\n    event.stopPropagation();\n    return;\n  }\n}\nfunction stopPropagationForMultiLineDownwards(event, value, textarea) {\n  const isMultiline = !!value.match(/\\n/);\n  if (textarea && isMultiline && textarea.selectionEnd < textarea.value.length) {\n    event.stopPropagation();\n    return;\n  }\n}\nexport class FindWidget extends Widget {\n  constructor(codeEditor, controller, state, contextViewProvider, keybindingService, contextKeyService, themeService, storageService, notificationService) {\n    super();\n    this._cachedHeight = null;\n    this._revealTimeouts = [];\n    this._codeEditor = codeEditor;\n    this._controller = controller;\n    this._state = state;\n    this._contextViewProvider = contextViewProvider;\n    this._keybindingService = keybindingService;\n    this._contextKeyService = contextKeyService;\n    this._storageService = storageService;\n    this._notificationService = notificationService;\n    this._ctrlEnterReplaceAllWarningPrompted = !!storageService.getBoolean(ctrlEnterReplaceAllWarningPromptedKey, 0 /* GLOBAL */);\n    this._isVisible = false;\n    this._isReplaceVisible = false;\n    this._ignoreChangeEvent = false;\n    this._updateHistoryDelayer = new Delayer(500);\n    this._register(toDisposable(() => this._updateHistoryDelayer.cancel()));\n    this._register(this._state.onFindReplaceStateChange(e => this._onStateChanged(e)));\n    this._buildDomNode();\n    this._updateButtons();\n    this._tryUpdateWidgetWidth();\n    this._findInput.inputBox.layout();\n    this._register(this._codeEditor.onDidChangeConfiguration(e => {\n      if (e.hasChanged(75 /* readOnly */)) {\n        if (this._codeEditor.getOption(75 /* readOnly */)) {\n          // Hide replace part if editor becomes read only\n          this._state.change({\n            isReplaceRevealed: false\n          }, false);\n        }\n        this._updateButtons();\n      }\n      if (e.hasChanged(124 /* layoutInfo */)) {\n        this._tryUpdateWidgetWidth();\n      }\n      if (e.hasChanged(2 /* accessibilitySupport */)) {\n        this.updateAccessibilitySupport();\n      }\n      if (e.hasChanged(31 /* find */)) {\n        const addExtraSpaceOnTop = this._codeEditor.getOption(31 /* find */).addExtraSpaceOnTop;\n        if (addExtraSpaceOnTop && !this._viewZone) {\n          this._viewZone = new FindWidgetViewZone(0);\n          this._showViewZone();\n        }\n        if (!addExtraSpaceOnTop && this._viewZone) {\n          this._removeViewZone();\n        }\n      }\n    }));\n    this.updateAccessibilitySupport();\n    this._register(this._codeEditor.onDidChangeCursorSelection(() => {\n      if (this._isVisible) {\n        this._updateToggleSelectionFindButton();\n      }\n    }));\n    this._register(this._codeEditor.onDidFocusEditorWidget(() => __awaiter(this, void 0, void 0, function* () {\n      if (this._isVisible) {\n        let globalBufferTerm = yield this._controller.getGlobalBufferTerm();\n        if (globalBufferTerm && globalBufferTerm !== this._state.searchString) {\n          this._state.change({\n            searchString: globalBufferTerm\n          }, false);\n          this._findInput.select();\n        }\n      }\n    })));\n    this._findInputFocused = CONTEXT_FIND_INPUT_FOCUSED.bindTo(contextKeyService);\n    this._findFocusTracker = this._register(dom.trackFocus(this._findInput.inputBox.inputElement));\n    this._register(this._findFocusTracker.onDidFocus(() => {\n      this._findInputFocused.set(true);\n      this._updateSearchScope();\n    }));\n    this._register(this._findFocusTracker.onDidBlur(() => {\n      this._findInputFocused.set(false);\n    }));\n    this._replaceInputFocused = CONTEXT_REPLACE_INPUT_FOCUSED.bindTo(contextKeyService);\n    this._replaceFocusTracker = this._register(dom.trackFocus(this._replaceInput.inputBox.inputElement));\n    this._register(this._replaceFocusTracker.onDidFocus(() => {\n      this._replaceInputFocused.set(true);\n      this._updateSearchScope();\n    }));\n    this._register(this._replaceFocusTracker.onDidBlur(() => {\n      this._replaceInputFocused.set(false);\n    }));\n    this._codeEditor.addOverlayWidget(this);\n    if (this._codeEditor.getOption(31 /* find */).addExtraSpaceOnTop) {\n      this._viewZone = new FindWidgetViewZone(0); // Put it before the first line then users can scroll beyond the first line.\n    }\n\n    this._applyTheme(themeService.getColorTheme());\n    this._register(themeService.onDidColorThemeChange(this._applyTheme.bind(this)));\n    this._register(this._codeEditor.onDidChangeModel(() => {\n      if (!this._isVisible) {\n        return;\n      }\n      this._viewZoneId = undefined;\n    }));\n    this._register(this._codeEditor.onDidScrollChange(e => {\n      if (e.scrollTopChanged) {\n        this._layoutViewZone();\n        return;\n      }\n      // for other scroll changes, layout the viewzone in next tick to avoid ruining current rendering.\n      setTimeout(() => {\n        this._layoutViewZone();\n      }, 0);\n    }));\n  }\n  // ----- IOverlayWidget API\n  getId() {\n    return FindWidget.ID;\n  }\n  getDomNode() {\n    return this._domNode;\n  }\n  getPosition() {\n    if (this._isVisible) {\n      return {\n        preference: 0 /* TOP_RIGHT_CORNER */\n      };\n    }\n\n    return null;\n  }\n  // ----- React to state changes\n  _onStateChanged(e) {\n    if (e.searchString) {\n      try {\n        this._ignoreChangeEvent = true;\n        this._findInput.setValue(this._state.searchString);\n      } finally {\n        this._ignoreChangeEvent = false;\n      }\n      this._updateButtons();\n    }\n    if (e.replaceString) {\n      this._replaceInput.inputBox.value = this._state.replaceString;\n    }\n    if (e.isRevealed) {\n      if (this._state.isRevealed) {\n        this._reveal();\n      } else {\n        this._hide(true);\n      }\n    }\n    if (e.isReplaceRevealed) {\n      if (this._state.isReplaceRevealed) {\n        if (!this._codeEditor.getOption(75 /* readOnly */) && !this._isReplaceVisible) {\n          this._isReplaceVisible = true;\n          this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n          this._updateButtons();\n          this._replaceInput.inputBox.layout();\n        }\n      } else {\n        if (this._isReplaceVisible) {\n          this._isReplaceVisible = false;\n          this._updateButtons();\n        }\n      }\n    }\n    if ((e.isRevealed || e.isReplaceRevealed) && (this._state.isRevealed || this._state.isReplaceRevealed)) {\n      if (this._tryUpdateHeight()) {\n        this._showViewZone();\n      }\n    }\n    if (e.isRegex) {\n      this._findInput.setRegex(this._state.isRegex);\n    }\n    if (e.wholeWord) {\n      this._findInput.setWholeWords(this._state.wholeWord);\n    }\n    if (e.matchCase) {\n      this._findInput.setCaseSensitive(this._state.matchCase);\n    }\n    if (e.preserveCase) {\n      this._replaceInput.setPreserveCase(this._state.preserveCase);\n    }\n    if (e.searchScope) {\n      if (this._state.searchScope) {\n        this._toggleSelectionFind.checked = true;\n      } else {\n        this._toggleSelectionFind.checked = false;\n      }\n      this._updateToggleSelectionFindButton();\n    }\n    if (e.searchString || e.matchesCount || e.matchesPosition) {\n      let showRedOutline = this._state.searchString.length > 0 && this._state.matchesCount === 0;\n      this._domNode.classList.toggle('no-results', showRedOutline);\n      this._updateMatchesCount();\n      this._updateButtons();\n    }\n    if (e.searchString || e.currentMatch) {\n      this._layoutViewZone();\n    }\n    if (e.updateHistory) {\n      this._delayedUpdateHistory();\n    }\n    if (e.loop) {\n      this._updateButtons();\n    }\n  }\n  _delayedUpdateHistory() {\n    this._updateHistoryDelayer.trigger(this._updateHistory.bind(this)).then(undefined, onUnexpectedError);\n  }\n  _updateHistory() {\n    if (this._state.searchString) {\n      this._findInput.inputBox.addToHistory();\n    }\n    if (this._state.replaceString) {\n      this._replaceInput.inputBox.addToHistory();\n    }\n  }\n  _updateMatchesCount() {\n    this._matchesCount.style.minWidth = MAX_MATCHES_COUNT_WIDTH + 'px';\n    if (this._state.matchesCount >= MATCHES_LIMIT) {\n      this._matchesCount.title = NLS_MATCHES_COUNT_LIMIT_TITLE;\n    } else {\n      this._matchesCount.title = '';\n    }\n    // remove previous content\n    if (this._matchesCount.firstChild) {\n      this._matchesCount.removeChild(this._matchesCount.firstChild);\n    }\n    let label;\n    if (this._state.matchesCount > 0) {\n      let matchesCount = String(this._state.matchesCount);\n      if (this._state.matchesCount >= MATCHES_LIMIT) {\n        matchesCount += '+';\n      }\n      let matchesPosition = String(this._state.matchesPosition);\n      if (matchesPosition === '0') {\n        matchesPosition = '?';\n      }\n      label = strings.format(NLS_MATCHES_LOCATION, matchesPosition, matchesCount);\n    } else {\n      label = NLS_NO_RESULTS;\n    }\n    this._matchesCount.appendChild(document.createTextNode(label));\n    alertFn(this._getAriaLabel(label, this._state.currentMatch, this._state.searchString));\n    MAX_MATCHES_COUNT_WIDTH = Math.max(MAX_MATCHES_COUNT_WIDTH, this._matchesCount.clientWidth);\n  }\n  // ----- actions\n  _getAriaLabel(label, currentMatch, searchString) {\n    if (label === NLS_NO_RESULTS) {\n      return searchString === '' ? nls.localize('ariaSearchNoResultEmpty', \"{0} found\", label) : nls.localize('ariaSearchNoResult', \"{0} found for '{1}'\", label, searchString);\n    }\n    if (currentMatch) {\n      const ariaLabel = nls.localize('ariaSearchNoResultWithLineNum', \"{0} found for '{1}', at {2}\", label, searchString, currentMatch.startLineNumber + ':' + currentMatch.startColumn);\n      const model = this._codeEditor.getModel();\n      if (model && currentMatch.startLineNumber <= model.getLineCount() && currentMatch.startLineNumber >= 1) {\n        const lineContent = model.getLineContent(currentMatch.startLineNumber);\n        return \"\".concat(lineContent, \", \").concat(ariaLabel);\n      }\n      return ariaLabel;\n    }\n    return nls.localize('ariaSearchNoResultWithLineNumNoCurrentMatch', \"{0} found for '{1}'\", label, searchString);\n  }\n  /**\r\n   * If 'selection find' is ON we should not disable the button (its function is to cancel 'selection find').\r\n   * If 'selection find' is OFF we enable the button only if there is a selection.\r\n   */\n  _updateToggleSelectionFindButton() {\n    let selection = this._codeEditor.getSelection();\n    let isSelection = selection ? selection.startLineNumber !== selection.endLineNumber || selection.startColumn !== selection.endColumn : false;\n    let isChecked = this._toggleSelectionFind.checked;\n    if (this._isVisible && (isChecked || isSelection)) {\n      this._toggleSelectionFind.enable();\n    } else {\n      this._toggleSelectionFind.disable();\n    }\n  }\n  _updateButtons() {\n    this._findInput.setEnabled(this._isVisible);\n    this._replaceInput.setEnabled(this._isVisible && this._isReplaceVisible);\n    this._updateToggleSelectionFindButton();\n    this._closeBtn.setEnabled(this._isVisible);\n    let findInputIsNonEmpty = this._state.searchString.length > 0;\n    let matchesCount = this._state.matchesCount ? true : false;\n    this._prevBtn.setEnabled(this._isVisible && findInputIsNonEmpty && matchesCount && this._state.canNavigateBack());\n    this._nextBtn.setEnabled(this._isVisible && findInputIsNonEmpty && matchesCount && this._state.canNavigateForward());\n    this._replaceBtn.setEnabled(this._isVisible && this._isReplaceVisible && findInputIsNonEmpty);\n    this._replaceAllBtn.setEnabled(this._isVisible && this._isReplaceVisible && findInputIsNonEmpty);\n    this._domNode.classList.toggle('replaceToggled', this._isReplaceVisible);\n    this._toggleReplaceBtn.setExpanded(this._isReplaceVisible);\n    let canReplace = !this._codeEditor.getOption(75 /* readOnly */);\n    this._toggleReplaceBtn.setEnabled(this._isVisible && canReplace);\n  }\n  _reveal() {\n    this._revealTimeouts.forEach(e => {\n      clearTimeout(e);\n    });\n    this._revealTimeouts = [];\n    if (!this._isVisible) {\n      this._isVisible = true;\n      const selection = this._codeEditor.getSelection();\n      switch (this._codeEditor.getOption(31 /* find */).autoFindInSelection) {\n        case 'always':\n          this._toggleSelectionFind.checked = true;\n          break;\n        case 'never':\n          this._toggleSelectionFind.checked = false;\n          break;\n        case 'multiline':\n          const isSelectionMultipleLine = !!selection && selection.startLineNumber !== selection.endLineNumber;\n          this._toggleSelectionFind.checked = isSelectionMultipleLine;\n          break;\n        default:\n          break;\n      }\n      this._tryUpdateWidgetWidth();\n      this._updateButtons();\n      this._revealTimeouts.push(setTimeout(() => {\n        this._domNode.classList.add('visible');\n        this._domNode.setAttribute('aria-hidden', 'false');\n      }, 0));\n      // validate query again as it's being dismissed when we hide the find widget.\n      this._revealTimeouts.push(setTimeout(() => {\n        this._findInput.validate();\n      }, 200));\n      this._codeEditor.layoutOverlayWidget(this);\n      let adjustEditorScrollTop = true;\n      if (this._codeEditor.getOption(31 /* find */).seedSearchStringFromSelection && selection) {\n        const domNode = this._codeEditor.getDomNode();\n        if (domNode) {\n          const editorCoords = dom.getDomNodePagePosition(domNode);\n          const startCoords = this._codeEditor.getScrolledVisiblePosition(selection.getStartPosition());\n          const startLeft = editorCoords.left + (startCoords ? startCoords.left : 0);\n          const startTop = startCoords ? startCoords.top : 0;\n          if (this._viewZone && startTop < this._viewZone.heightInPx) {\n            if (selection.endLineNumber > selection.startLineNumber) {\n              adjustEditorScrollTop = false;\n            }\n            const leftOfFindWidget = dom.getTopLeftOffset(this._domNode).left;\n            if (startLeft > leftOfFindWidget) {\n              adjustEditorScrollTop = false;\n            }\n            const endCoords = this._codeEditor.getScrolledVisiblePosition(selection.getEndPosition());\n            const endLeft = editorCoords.left + (endCoords ? endCoords.left : 0);\n            if (endLeft > leftOfFindWidget) {\n              adjustEditorScrollTop = false;\n            }\n          }\n        }\n      }\n      this._showViewZone(adjustEditorScrollTop);\n    }\n  }\n  _hide(focusTheEditor) {\n    this._revealTimeouts.forEach(e => {\n      clearTimeout(e);\n    });\n    this._revealTimeouts = [];\n    if (this._isVisible) {\n      this._isVisible = false;\n      this._updateButtons();\n      this._domNode.classList.remove('visible');\n      this._domNode.setAttribute('aria-hidden', 'true');\n      this._findInput.clearMessage();\n      if (focusTheEditor) {\n        this._codeEditor.focus();\n      }\n      this._codeEditor.layoutOverlayWidget(this);\n      this._removeViewZone();\n    }\n  }\n  _layoutViewZone(targetScrollTop) {\n    const addExtraSpaceOnTop = this._codeEditor.getOption(31 /* find */).addExtraSpaceOnTop;\n    if (!addExtraSpaceOnTop) {\n      this._removeViewZone();\n      return;\n    }\n    if (!this._isVisible) {\n      return;\n    }\n    const viewZone = this._viewZone;\n    if (this._viewZoneId !== undefined || !viewZone) {\n      return;\n    }\n    this._codeEditor.changeViewZones(accessor => {\n      viewZone.heightInPx = this._getHeight();\n      this._viewZoneId = accessor.addZone(viewZone);\n      // scroll top adjust to make sure the editor doesn't scroll when adding viewzone at the beginning.\n      this._codeEditor.setScrollTop(targetScrollTop || this._codeEditor.getScrollTop() + viewZone.heightInPx);\n    });\n  }\n  _showViewZone() {\n    let adjustScroll = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    if (!this._isVisible) {\n      return;\n    }\n    const addExtraSpaceOnTop = this._codeEditor.getOption(31 /* find */).addExtraSpaceOnTop;\n    if (!addExtraSpaceOnTop) {\n      return;\n    }\n    if (this._viewZone === undefined) {\n      this._viewZone = new FindWidgetViewZone(0);\n    }\n    const viewZone = this._viewZone;\n    this._codeEditor.changeViewZones(accessor => {\n      if (this._viewZoneId !== undefined) {\n        // the view zone already exists, we need to update the height\n        const newHeight = this._getHeight();\n        if (newHeight === viewZone.heightInPx) {\n          return;\n        }\n        let scrollAdjustment = newHeight - viewZone.heightInPx;\n        viewZone.heightInPx = newHeight;\n        accessor.layoutZone(this._viewZoneId);\n        if (adjustScroll) {\n          this._codeEditor.setScrollTop(this._codeEditor.getScrollTop() + scrollAdjustment);\n        }\n        return;\n      } else {\n        let scrollAdjustment = this._getHeight();\n        // if the editor has top padding, factor that into the zone height\n        scrollAdjustment -= this._codeEditor.getOption(69 /* padding */).top;\n        if (scrollAdjustment <= 0) {\n          return;\n        }\n        viewZone.heightInPx = scrollAdjustment;\n        this._viewZoneId = accessor.addZone(viewZone);\n        if (adjustScroll) {\n          this._codeEditor.setScrollTop(this._codeEditor.getScrollTop() + scrollAdjustment);\n        }\n      }\n    });\n  }\n  _removeViewZone() {\n    this._codeEditor.changeViewZones(accessor => {\n      if (this._viewZoneId !== undefined) {\n        accessor.removeZone(this._viewZoneId);\n        this._viewZoneId = undefined;\n        if (this._viewZone) {\n          this._codeEditor.setScrollTop(this._codeEditor.getScrollTop() - this._viewZone.heightInPx);\n          this._viewZone = undefined;\n        }\n      }\n    });\n  }\n  _applyTheme(theme) {\n    let inputStyles = {\n      inputActiveOptionBorder: theme.getColor(inputActiveOptionBorder),\n      inputActiveOptionBackground: theme.getColor(inputActiveOptionBackground),\n      inputActiveOptionForeground: theme.getColor(inputActiveOptionForeground),\n      inputBackground: theme.getColor(inputBackground),\n      inputForeground: theme.getColor(inputForeground),\n      inputBorder: theme.getColor(inputBorder),\n      inputValidationInfoBackground: theme.getColor(inputValidationInfoBackground),\n      inputValidationInfoForeground: theme.getColor(inputValidationInfoForeground),\n      inputValidationInfoBorder: theme.getColor(inputValidationInfoBorder),\n      inputValidationWarningBackground: theme.getColor(inputValidationWarningBackground),\n      inputValidationWarningForeground: theme.getColor(inputValidationWarningForeground),\n      inputValidationWarningBorder: theme.getColor(inputValidationWarningBorder),\n      inputValidationErrorBackground: theme.getColor(inputValidationErrorBackground),\n      inputValidationErrorForeground: theme.getColor(inputValidationErrorForeground),\n      inputValidationErrorBorder: theme.getColor(inputValidationErrorBorder)\n    };\n    this._findInput.style(inputStyles);\n    this._replaceInput.style(inputStyles);\n    this._toggleSelectionFind.style(inputStyles);\n  }\n  _tryUpdateWidgetWidth() {\n    if (!this._isVisible) {\n      return;\n    }\n    if (!dom.isInDOM(this._domNode)) {\n      // the widget is not in the DOM\n      return;\n    }\n    const layoutInfo = this._codeEditor.getLayoutInfo();\n    const editorContentWidth = layoutInfo.contentWidth;\n    if (editorContentWidth <= 0) {\n      // for example, diff view original editor\n      this._domNode.classList.add('hiddenEditor');\n      return;\n    } else if (this._domNode.classList.contains('hiddenEditor')) {\n      this._domNode.classList.remove('hiddenEditor');\n    }\n    const editorWidth = layoutInfo.width;\n    const minimapWidth = layoutInfo.minimap.minimapWidth;\n    let collapsedFindWidget = false;\n    let reducedFindWidget = false;\n    let narrowFindWidget = false;\n    if (this._resized) {\n      let widgetWidth = dom.getTotalWidth(this._domNode);\n      if (widgetWidth > FIND_WIDGET_INITIAL_WIDTH) {\n        // as the widget is resized by users, we may need to change the max width of the widget as the editor width changes.\n        this._domNode.style.maxWidth = \"\".concat(editorWidth - 28 - minimapWidth - 15, \"px\");\n        this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n        return;\n      }\n    }\n    if (FIND_WIDGET_INITIAL_WIDTH + 28 + minimapWidth >= editorWidth) {\n      reducedFindWidget = true;\n    }\n    if (FIND_WIDGET_INITIAL_WIDTH + 28 + minimapWidth - MAX_MATCHES_COUNT_WIDTH >= editorWidth) {\n      narrowFindWidget = true;\n    }\n    if (FIND_WIDGET_INITIAL_WIDTH + 28 + minimapWidth - MAX_MATCHES_COUNT_WIDTH >= editorWidth + 50) {\n      collapsedFindWidget = true;\n    }\n    this._domNode.classList.toggle('collapsed-find-widget', collapsedFindWidget);\n    this._domNode.classList.toggle('narrow-find-widget', narrowFindWidget);\n    this._domNode.classList.toggle('reduced-find-widget', reducedFindWidget);\n    if (!narrowFindWidget && !collapsedFindWidget) {\n      // the minimal left offset of findwidget is 15px.\n      this._domNode.style.maxWidth = \"\".concat(editorWidth - 28 - minimapWidth - 15, \"px\");\n    }\n    if (this._resized) {\n      this._findInput.inputBox.layout();\n      let findInputWidth = this._findInput.inputBox.element.clientWidth;\n      if (findInputWidth > 0) {\n        this._replaceInput.width = findInputWidth;\n      }\n    } else if (this._isReplaceVisible) {\n      this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n    }\n  }\n  _getHeight() {\n    let totalheight = 0;\n    // find input margin top\n    totalheight += 4;\n    // find input height\n    totalheight += this._findInput.inputBox.height + 2 /** input box border */;\n    if (this._isReplaceVisible) {\n      // replace input margin\n      totalheight += 4;\n      totalheight += this._replaceInput.inputBox.height + 2 /** input box border */;\n    }\n    // margin bottom\n    totalheight += 4;\n    return totalheight;\n  }\n  _tryUpdateHeight() {\n    const totalHeight = this._getHeight();\n    if (this._cachedHeight !== null && this._cachedHeight === totalHeight) {\n      return false;\n    }\n    this._cachedHeight = totalHeight;\n    this._domNode.style.height = \"\".concat(totalHeight, \"px\");\n    return true;\n  }\n  // ----- Public\n  focusFindInput() {\n    this._findInput.select();\n    // Edge browser requires focus() in addition to select()\n    this._findInput.focus();\n  }\n  focusReplaceInput() {\n    this._replaceInput.select();\n    // Edge browser requires focus() in addition to select()\n    this._replaceInput.focus();\n  }\n  highlightFindOptions() {\n    this._findInput.highlightFindOptions();\n  }\n  _updateSearchScope() {\n    if (!this._codeEditor.hasModel()) {\n      return;\n    }\n    if (this._toggleSelectionFind.checked) {\n      let selections = this._codeEditor.getSelections();\n      selections.map(selection => {\n        if (selection.endColumn === 1 && selection.endLineNumber > selection.startLineNumber) {\n          selection = selection.setEndPosition(selection.endLineNumber - 1, this._codeEditor.getModel().getLineMaxColumn(selection.endLineNumber - 1));\n        }\n        const currentMatch = this._state.currentMatch;\n        if (selection.startLineNumber !== selection.endLineNumber) {\n          if (!Range.equalsRange(selection, currentMatch)) {\n            return selection;\n          }\n        }\n        return null;\n      }).filter(element => !!element);\n      if (selections.length) {\n        this._state.change({\n          searchScope: selections\n        }, true);\n      }\n    }\n  }\n  _onFindInputMouseDown(e) {\n    // on linux, middle key does pasting.\n    if (e.middleButton) {\n      e.stopPropagation();\n    }\n  }\n  _onFindInputKeyDown(e) {\n    if (e.equals(ctrlKeyMod | 3 /* Enter */)) {\n      this._findInput.inputBox.insertAtCursor('\\n');\n      e.preventDefault();\n      return;\n    }\n    if (e.equals(2 /* Tab */)) {\n      if (this._isReplaceVisible) {\n        this._replaceInput.focus();\n      } else {\n        this._findInput.focusOnCaseSensitive();\n      }\n      e.preventDefault();\n      return;\n    }\n    if (e.equals(2048 /* CtrlCmd */ | 18 /* DownArrow */)) {\n      this._codeEditor.focus();\n      e.preventDefault();\n      return;\n    }\n    if (e.equals(16 /* UpArrow */)) {\n      return stopPropagationForMultiLineUpwards(e, this._findInput.getValue(), this._findInput.domNode.querySelector('textarea'));\n    }\n    if (e.equals(18 /* DownArrow */)) {\n      return stopPropagationForMultiLineDownwards(e, this._findInput.getValue(), this._findInput.domNode.querySelector('textarea'));\n    }\n  }\n  _onReplaceInputKeyDown(e) {\n    if (e.equals(ctrlKeyMod | 3 /* Enter */)) {\n      if (platform.isWindows && platform.isNative && !this._ctrlEnterReplaceAllWarningPrompted) {\n        // this is the first time when users press Ctrl + Enter to replace all\n        this._notificationService.info(nls.localize('ctrlEnter.keybindingChanged', 'Ctrl+Enter now inserts line break instead of replacing all. You can modify the keybinding for editor.action.replaceAll to override this behavior.'));\n        this._ctrlEnterReplaceAllWarningPrompted = true;\n        this._storageService.store(ctrlEnterReplaceAllWarningPromptedKey, true, 0 /* GLOBAL */, 0 /* USER */);\n      }\n\n      this._replaceInput.inputBox.insertAtCursor('\\n');\n      e.preventDefault();\n      return;\n    }\n    if (e.equals(2 /* Tab */)) {\n      this._findInput.focusOnCaseSensitive();\n      e.preventDefault();\n      return;\n    }\n    if (e.equals(1024 /* Shift */ | 2 /* Tab */)) {\n      this._findInput.focus();\n      e.preventDefault();\n      return;\n    }\n    if (e.equals(2048 /* CtrlCmd */ | 18 /* DownArrow */)) {\n      this._codeEditor.focus();\n      e.preventDefault();\n      return;\n    }\n    if (e.equals(16 /* UpArrow */)) {\n      return stopPropagationForMultiLineUpwards(e, this._replaceInput.inputBox.value, this._replaceInput.inputBox.element.querySelector('textarea'));\n    }\n    if (e.equals(18 /* DownArrow */)) {\n      return stopPropagationForMultiLineDownwards(e, this._replaceInput.inputBox.value, this._replaceInput.inputBox.element.querySelector('textarea'));\n    }\n  }\n  // ----- sash\n  getVerticalSashLeft(_sash) {\n    return 0;\n  }\n  // ----- initialization\n  _keybindingLabelFor(actionId) {\n    let kb = this._keybindingService.lookupKeybinding(actionId);\n    if (!kb) {\n      return '';\n    }\n    return \" (\".concat(kb.getLabel(), \")\");\n  }\n  _buildDomNode() {\n    const flexibleHeight = true;\n    const flexibleWidth = true;\n    // Find input\n    this._findInput = this._register(new ContextScopedFindInput(null, this._contextViewProvider, {\n      width: FIND_INPUT_AREA_WIDTH,\n      label: NLS_FIND_INPUT_LABEL,\n      placeholder: NLS_FIND_INPUT_PLACEHOLDER,\n      appendCaseSensitiveLabel: this._keybindingLabelFor(FIND_IDS.ToggleCaseSensitiveCommand),\n      appendWholeWordsLabel: this._keybindingLabelFor(FIND_IDS.ToggleWholeWordCommand),\n      appendRegexLabel: this._keybindingLabelFor(FIND_IDS.ToggleRegexCommand),\n      validation: value => {\n        if (value.length === 0 || !this._findInput.getRegex()) {\n          return null;\n        }\n        try {\n          // use `g` and `u` which are also used by the TextModel search\n          new RegExp(value, 'gu');\n          return null;\n        } catch (e) {\n          return {\n            content: e.message\n          };\n        }\n      },\n      flexibleHeight,\n      flexibleWidth,\n      flexibleMaxHeight: 118\n    }, this._contextKeyService, true));\n    this._findInput.setRegex(!!this._state.isRegex);\n    this._findInput.setCaseSensitive(!!this._state.matchCase);\n    this._findInput.setWholeWords(!!this._state.wholeWord);\n    this._register(this._findInput.onKeyDown(e => this._onFindInputKeyDown(e)));\n    this._register(this._findInput.inputBox.onDidChange(() => {\n      if (this._ignoreChangeEvent) {\n        return;\n      }\n      this._state.change({\n        searchString: this._findInput.getValue()\n      }, true);\n    }));\n    this._register(this._findInput.onDidOptionChange(() => {\n      this._state.change({\n        isRegex: this._findInput.getRegex(),\n        wholeWord: this._findInput.getWholeWords(),\n        matchCase: this._findInput.getCaseSensitive()\n      }, true);\n    }));\n    this._register(this._findInput.onCaseSensitiveKeyDown(e => {\n      if (e.equals(1024 /* Shift */ | 2 /* Tab */)) {\n        if (this._isReplaceVisible) {\n          this._replaceInput.focus();\n          e.preventDefault();\n        }\n      }\n    }));\n    this._register(this._findInput.onRegexKeyDown(e => {\n      if (e.equals(2 /* Tab */)) {\n        if (this._isReplaceVisible) {\n          this._replaceInput.focusOnPreserve();\n          e.preventDefault();\n        }\n      }\n    }));\n    this._register(this._findInput.inputBox.onDidHeightChange(e => {\n      if (this._tryUpdateHeight()) {\n        this._showViewZone();\n      }\n    }));\n    if (platform.isLinux) {\n      this._register(this._findInput.onMouseDown(e => this._onFindInputMouseDown(e)));\n    }\n    this._matchesCount = document.createElement('div');\n    this._matchesCount.className = 'matchesCount';\n    this._updateMatchesCount();\n    // Previous button\n    this._prevBtn = this._register(new SimpleButton({\n      label: NLS_PREVIOUS_MATCH_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.PreviousMatchFindAction),\n      icon: findPreviousMatchIcon,\n      onTrigger: () => {\n        this._codeEditor.getAction(FIND_IDS.PreviousMatchFindAction).run().then(undefined, onUnexpectedError);\n      }\n    }));\n    // Next button\n    this._nextBtn = this._register(new SimpleButton({\n      label: NLS_NEXT_MATCH_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.NextMatchFindAction),\n      icon: findNextMatchIcon,\n      onTrigger: () => {\n        this._codeEditor.getAction(FIND_IDS.NextMatchFindAction).run().then(undefined, onUnexpectedError);\n      }\n    }));\n    let findPart = document.createElement('div');\n    findPart.className = 'find-part';\n    findPart.appendChild(this._findInput.domNode);\n    const actionsContainer = document.createElement('div');\n    actionsContainer.className = 'find-actions';\n    findPart.appendChild(actionsContainer);\n    actionsContainer.appendChild(this._matchesCount);\n    actionsContainer.appendChild(this._prevBtn.domNode);\n    actionsContainer.appendChild(this._nextBtn.domNode);\n    // Toggle selection button\n    this._toggleSelectionFind = this._register(new Checkbox({\n      icon: findSelectionIcon,\n      title: NLS_TOGGLE_SELECTION_FIND_TITLE + this._keybindingLabelFor(FIND_IDS.ToggleSearchScopeCommand),\n      isChecked: false\n    }));\n    this._register(this._toggleSelectionFind.onChange(() => {\n      if (this._toggleSelectionFind.checked) {\n        if (this._codeEditor.hasModel()) {\n          let selections = this._codeEditor.getSelections();\n          selections.map(selection => {\n            if (selection.endColumn === 1 && selection.endLineNumber > selection.startLineNumber) {\n              selection = selection.setEndPosition(selection.endLineNumber - 1, this._codeEditor.getModel().getLineMaxColumn(selection.endLineNumber - 1));\n            }\n            if (!selection.isEmpty()) {\n              return selection;\n            }\n            return null;\n          }).filter(element => !!element);\n          if (selections.length) {\n            this._state.change({\n              searchScope: selections\n            }, true);\n          }\n        }\n      } else {\n        this._state.change({\n          searchScope: null\n        }, true);\n      }\n    }));\n    actionsContainer.appendChild(this._toggleSelectionFind.domNode);\n    // Close button\n    this._closeBtn = this._register(new SimpleButton({\n      label: NLS_CLOSE_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.CloseFindWidgetCommand),\n      icon: widgetClose,\n      onTrigger: () => {\n        this._state.change({\n          isRevealed: false,\n          searchScope: null\n        }, false);\n      },\n      onKeyDown: e => {\n        if (e.equals(2 /* Tab */)) {\n          if (this._isReplaceVisible) {\n            if (this._replaceBtn.isEnabled()) {\n              this._replaceBtn.focus();\n            } else {\n              this._codeEditor.focus();\n            }\n            e.preventDefault();\n          }\n        }\n      }\n    }));\n    actionsContainer.appendChild(this._closeBtn.domNode);\n    // Replace input\n    this._replaceInput = this._register(new ContextScopedReplaceInput(null, undefined, {\n      label: NLS_REPLACE_INPUT_LABEL,\n      placeholder: NLS_REPLACE_INPUT_PLACEHOLDER,\n      appendPreserveCaseLabel: this._keybindingLabelFor(FIND_IDS.TogglePreserveCaseCommand),\n      history: [],\n      flexibleHeight,\n      flexibleWidth,\n      flexibleMaxHeight: 118\n    }, this._contextKeyService, true));\n    this._replaceInput.setPreserveCase(!!this._state.preserveCase);\n    this._register(this._replaceInput.onKeyDown(e => this._onReplaceInputKeyDown(e)));\n    this._register(this._replaceInput.inputBox.onDidChange(() => {\n      this._state.change({\n        replaceString: this._replaceInput.inputBox.value\n      }, false);\n    }));\n    this._register(this._replaceInput.inputBox.onDidHeightChange(e => {\n      if (this._isReplaceVisible && this._tryUpdateHeight()) {\n        this._showViewZone();\n      }\n    }));\n    this._register(this._replaceInput.onDidOptionChange(() => {\n      this._state.change({\n        preserveCase: this._replaceInput.getPreserveCase()\n      }, true);\n    }));\n    this._register(this._replaceInput.onPreserveCaseKeyDown(e => {\n      if (e.equals(2 /* Tab */)) {\n        if (this._prevBtn.isEnabled()) {\n          this._prevBtn.focus();\n        } else if (this._nextBtn.isEnabled()) {\n          this._nextBtn.focus();\n        } else if (this._toggleSelectionFind.enabled) {\n          this._toggleSelectionFind.focus();\n        } else if (this._closeBtn.isEnabled()) {\n          this._closeBtn.focus();\n        }\n        e.preventDefault();\n      }\n    }));\n    // Replace one button\n    this._replaceBtn = this._register(new SimpleButton({\n      label: NLS_REPLACE_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.ReplaceOneAction),\n      icon: findReplaceIcon,\n      onTrigger: () => {\n        this._controller.replace();\n      },\n      onKeyDown: e => {\n        if (e.equals(1024 /* Shift */ | 2 /* Tab */)) {\n          this._closeBtn.focus();\n          e.preventDefault();\n        }\n      }\n    }));\n    // Replace all button\n    this._replaceAllBtn = this._register(new SimpleButton({\n      label: NLS_REPLACE_ALL_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.ReplaceAllAction),\n      icon: findReplaceAllIcon,\n      onTrigger: () => {\n        this._controller.replaceAll();\n      }\n    }));\n    let replacePart = document.createElement('div');\n    replacePart.className = 'replace-part';\n    replacePart.appendChild(this._replaceInput.domNode);\n    const replaceActionsContainer = document.createElement('div');\n    replaceActionsContainer.className = 'replace-actions';\n    replacePart.appendChild(replaceActionsContainer);\n    replaceActionsContainer.appendChild(this._replaceBtn.domNode);\n    replaceActionsContainer.appendChild(this._replaceAllBtn.domNode);\n    // Toggle replace button\n    this._toggleReplaceBtn = this._register(new SimpleButton({\n      label: NLS_TOGGLE_REPLACE_MODE_BTN_LABEL,\n      className: 'codicon toggle left',\n      onTrigger: () => {\n        this._state.change({\n          isReplaceRevealed: !this._isReplaceVisible\n        }, false);\n        if (this._isReplaceVisible) {\n          this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n          this._replaceInput.inputBox.layout();\n        }\n        this._showViewZone();\n      }\n    }));\n    this._toggleReplaceBtn.setExpanded(this._isReplaceVisible);\n    // Widget\n    this._domNode = document.createElement('div');\n    this._domNode.className = 'editor-widget find-widget';\n    this._domNode.setAttribute('aria-hidden', 'true');\n    // We need to set this explicitly, otherwise on IE11, the width inheritence of flex doesn't work.\n    this._domNode.style.width = \"\".concat(FIND_WIDGET_INITIAL_WIDTH, \"px\");\n    this._domNode.appendChild(this._toggleReplaceBtn.domNode);\n    this._domNode.appendChild(findPart);\n    this._domNode.appendChild(replacePart);\n    this._resizeSash = new Sash(this._domNode, this, {\n      orientation: 0 /* VERTICAL */,\n      size: 2\n    });\n    this._resized = false;\n    let originalWidth = FIND_WIDGET_INITIAL_WIDTH;\n    this._register(this._resizeSash.onDidStart(() => {\n      originalWidth = dom.getTotalWidth(this._domNode);\n    }));\n    this._register(this._resizeSash.onDidChange(evt => {\n      this._resized = true;\n      let width = originalWidth + evt.startX - evt.currentX;\n      if (width < FIND_WIDGET_INITIAL_WIDTH) {\n        // narrow down the find widget should be handled by CSS.\n        return;\n      }\n      const maxWidth = parseFloat(dom.getComputedStyle(this._domNode).maxWidth) || 0;\n      if (width > maxWidth) {\n        return;\n      }\n      this._domNode.style.width = \"\".concat(width, \"px\");\n      if (this._isReplaceVisible) {\n        this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n      }\n      this._findInput.inputBox.layout();\n      this._tryUpdateHeight();\n    }));\n    this._register(this._resizeSash.onDidReset(() => {\n      // users double click on the sash\n      const currentWidth = dom.getTotalWidth(this._domNode);\n      if (currentWidth < FIND_WIDGET_INITIAL_WIDTH) {\n        // The editor is narrow and the width of the find widget is controlled fully by CSS.\n        return;\n      }\n      let width = FIND_WIDGET_INITIAL_WIDTH;\n      if (!this._resized || currentWidth === FIND_WIDGET_INITIAL_WIDTH) {\n        // 1. never resized before, double click should maximizes it\n        // 2. users resized it already but its width is the same as default\n        const layoutInfo = this._codeEditor.getLayoutInfo();\n        width = layoutInfo.width - 28 - layoutInfo.minimap.minimapWidth - 15;\n        this._resized = true;\n      } else {\n        /**\r\n         * no op, the find widget should be shrinked to its default size.\r\n         */\n      }\n      this._domNode.style.width = \"\".concat(width, \"px\");\n      if (this._isReplaceVisible) {\n        this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n      }\n      this._findInput.inputBox.layout();\n    }));\n  }\n  updateAccessibilitySupport() {\n    const value = this._codeEditor.getOption(2 /* accessibilitySupport */);\n    this._findInput.setFocusInputOnOptionClick(value !== 2 /* Enabled */);\n  }\n}\n\nFindWidget.ID = 'editor.contrib.findWidget';\nexport class SimpleButton extends Widget {\n  constructor(opts) {\n    super();\n    this._opts = opts;\n    let className = 'button';\n    if (this._opts.className) {\n      className = className + ' ' + this._opts.className;\n    }\n    if (this._opts.icon) {\n      className = className + ' ' + ThemeIcon.asClassName(this._opts.icon);\n    }\n    this._domNode = document.createElement('div');\n    this._domNode.title = this._opts.label;\n    this._domNode.tabIndex = 0;\n    this._domNode.className = className;\n    this._domNode.setAttribute('role', 'button');\n    this._domNode.setAttribute('aria-label', this._opts.label);\n    this.onclick(this._domNode, e => {\n      this._opts.onTrigger();\n      e.preventDefault();\n    });\n    this.onkeydown(this._domNode, e => {\n      if (e.equals(10 /* Space */) || e.equals(3 /* Enter */)) {\n        this._opts.onTrigger();\n        e.preventDefault();\n        return;\n      }\n      if (this._opts.onKeyDown) {\n        this._opts.onKeyDown(e);\n      }\n    });\n  }\n  get domNode() {\n    return this._domNode;\n  }\n  isEnabled() {\n    return this._domNode.tabIndex >= 0;\n  }\n  focus() {\n    this._domNode.focus();\n  }\n  setEnabled(enabled) {\n    this._domNode.classList.toggle('disabled', !enabled);\n    this._domNode.setAttribute('aria-disabled', String(!enabled));\n    this._domNode.tabIndex = enabled ? 0 : -1;\n  }\n  setExpanded(expanded) {\n    this._domNode.setAttribute('aria-expanded', String(!!expanded));\n    if (expanded) {\n      this._domNode.classList.remove(...ThemeIcon.asClassNameArray(findCollapsedIcon));\n      this._domNode.classList.add(...ThemeIcon.asClassNameArray(findExpandedIcon));\n    } else {\n      this._domNode.classList.remove(...ThemeIcon.asClassNameArray(findExpandedIcon));\n      this._domNode.classList.add(...ThemeIcon.asClassNameArray(findCollapsedIcon));\n    }\n  }\n}\n// theming\nregisterThemingParticipant((theme, collector) => {\n  const addBackgroundColorRule = (selector, color) => {\n    if (color) {\n      collector.addRule(\".monaco-editor \".concat(selector, \" { background-color: \").concat(color, \"; }\"));\n    }\n  };\n  addBackgroundColorRule('.findMatch', theme.getColor(editorFindMatchHighlight));\n  addBackgroundColorRule('.currentFindMatch', theme.getColor(editorFindMatch));\n  addBackgroundColorRule('.findScope', theme.getColor(editorFindRangeHighlight));\n  const widgetBackground = theme.getColor(editorWidgetBackground);\n  addBackgroundColorRule('.find-widget', widgetBackground);\n  const widgetShadowColor = theme.getColor(widgetShadow);\n  if (widgetShadowColor) {\n    collector.addRule(\".monaco-editor .find-widget { box-shadow: 0 0 8px 2px \".concat(widgetShadowColor, \"; }\"));\n  }\n  const findMatchHighlightBorder = theme.getColor(editorFindMatchHighlightBorder);\n  if (findMatchHighlightBorder) {\n    collector.addRule(\".monaco-editor .findMatch { border: 1px \".concat(theme.type === 'hc' ? 'dotted' : 'solid', \" \").concat(findMatchHighlightBorder, \"; box-sizing: border-box; }\"));\n  }\n  const findMatchBorder = theme.getColor(editorFindMatchBorder);\n  if (findMatchBorder) {\n    collector.addRule(\".monaco-editor .currentFindMatch { border: 2px solid \".concat(findMatchBorder, \"; padding: 1px; box-sizing: border-box; }\"));\n  }\n  const findRangeHighlightBorder = theme.getColor(editorFindRangeHighlightBorder);\n  if (findRangeHighlightBorder) {\n    collector.addRule(\".monaco-editor .findScope { border: 1px \".concat(theme.type === 'hc' ? 'dashed' : 'solid', \" \").concat(findRangeHighlightBorder, \"; }\"));\n  }\n  const hcBorder = theme.getColor(contrastBorder);\n  if (hcBorder) {\n    collector.addRule(\".monaco-editor .find-widget { border: 1px solid \".concat(hcBorder, \"; }\"));\n  }\n  const foreground = theme.getColor(editorWidgetForeground);\n  if (foreground) {\n    collector.addRule(\".monaco-editor .find-widget { color: \".concat(foreground, \"; }\"));\n  }\n  const error = theme.getColor(errorForeground);\n  if (error) {\n    collector.addRule(\".monaco-editor .find-widget.no-results .matchesCount { color: \".concat(error, \"; }\"));\n  }\n  const resizeBorderBackground = theme.getColor(editorWidgetResizeBorder);\n  if (resizeBorderBackground) {\n    collector.addRule(\".monaco-editor .find-widget .monaco-sash { background-color: \".concat(resizeBorderBackground, \"; }\"));\n  } else {\n    const border = theme.getColor(editorWidgetBorder);\n    if (border) {\n      collector.addRule(\".monaco-editor .find-widget .monaco-sash { background-color: \".concat(border, \"; }\"));\n    }\n  }\n  // This rule is used to override the outline color for synthetic-focus find input.\n  const focusOutline = theme.getColor(focusBorder);\n  if (focusOutline) {\n    collector.addRule(\".monaco-editor .find-widget .monaco-inputbox.synthetic-focus { outline-color: \".concat(focusOutline, \"; }\"));\n  }\n});","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","nls","dom","alert","alertFn","Checkbox","Sash","Widget","Delayer","onUnexpectedError","toDisposable","platform","strings","Range","CONTEXT_FIND_INPUT_FOCUSED","CONTEXT_REPLACE_INPUT_FOCUSED","FIND_IDS","MATCHES_LIMIT","contrastBorder","editorFindMatch","editorFindMatchBorder","editorFindMatchHighlight","editorFindMatchHighlightBorder","editorFindRangeHighlight","editorFindRangeHighlightBorder","editorWidgetBackground","editorWidgetBorder","editorWidgetResizeBorder","errorForeground","inputActiveOptionBorder","inputActiveOptionBackground","inputActiveOptionForeground","inputBackground","inputBorder","inputForeground","inputValidationErrorBackground","inputValidationErrorBorder","inputValidationErrorForeground","inputValidationInfoBackground","inputValidationInfoBorder","inputValidationInfoForeground","inputValidationWarningBackground","inputValidationWarningBorder","inputValidationWarningForeground","widgetShadow","editorWidgetForeground","focusBorder","registerThemingParticipant","ThemeIcon","ContextScopedFindInput","ContextScopedReplaceInput","Codicon","registerIcon","widgetClose","findSelectionIcon","selection","localize","findCollapsedIcon","chevronRight","findExpandedIcon","chevronDown","findReplaceIcon","replace","findReplaceAllIcon","replaceAll","findPreviousMatchIcon","arrowUp","findNextMatchIcon","arrowDown","NLS_FIND_INPUT_LABEL","NLS_FIND_INPUT_PLACEHOLDER","NLS_PREVIOUS_MATCH_BTN_LABEL","NLS_NEXT_MATCH_BTN_LABEL","NLS_TOGGLE_SELECTION_FIND_TITLE","NLS_CLOSE_BTN_LABEL","NLS_REPLACE_INPUT_LABEL","NLS_REPLACE_INPUT_PLACEHOLDER","NLS_REPLACE_BTN_LABEL","NLS_REPLACE_ALL_BTN_LABEL","NLS_TOGGLE_REPLACE_MODE_BTN_LABEL","NLS_MATCHES_COUNT_LIMIT_TITLE","NLS_MATCHES_LOCATION","NLS_NO_RESULTS","FIND_WIDGET_INITIAL_WIDTH","PART_WIDTH","FIND_INPUT_AREA_WIDTH","MAX_MATCHES_COUNT_WIDTH","FIND_INPUT_AREA_HEIGHT","ctrlEnterReplaceAllWarningPromptedKey","ctrlKeyMod","isMacintosh","FindWidgetViewZone","constructor","afterLineNumber","heightInPx","suppressMouseDown","domNode","document","createElement","className","stopPropagationForMultiLineUpwards","event","textarea","isMultiline","match","selectionStart","stopPropagation","stopPropagationForMultiLineDownwards","selectionEnd","length","FindWidget","codeEditor","controller","state","contextViewProvider","keybindingService","contextKeyService","themeService","storageService","notificationService","_cachedHeight","_revealTimeouts","_codeEditor","_controller","_state","_contextViewProvider","_keybindingService","_contextKeyService","_storageService","_notificationService","_ctrlEnterReplaceAllWarningPrompted","getBoolean","_isVisible","_isReplaceVisible","_ignoreChangeEvent","_updateHistoryDelayer","_register","cancel","onFindReplaceStateChange","_onStateChanged","_buildDomNode","_updateButtons","_tryUpdateWidgetWidth","_findInput","inputBox","layout","onDidChangeConfiguration","hasChanged","getOption","change","isReplaceRevealed","updateAccessibilitySupport","addExtraSpaceOnTop","_viewZone","_showViewZone","_removeViewZone","onDidChangeCursorSelection","_updateToggleSelectionFindButton","onDidFocusEditorWidget","globalBufferTerm","getGlobalBufferTerm","searchString","select","_findInputFocused","bindTo","_findFocusTracker","trackFocus","inputElement","onDidFocus","set","_updateSearchScope","onDidBlur","_replaceInputFocused","_replaceFocusTracker","_replaceInput","addOverlayWidget","_applyTheme","getColorTheme","onDidColorThemeChange","bind","onDidChangeModel","_viewZoneId","undefined","onDidScrollChange","scrollTopChanged","_layoutViewZone","setTimeout","getId","ID","getDomNode","_domNode","getPosition","preference","setValue","replaceString","isRevealed","_reveal","_hide","width","getTotalWidth","_tryUpdateHeight","isRegex","setRegex","wholeWord","setWholeWords","matchCase","setCaseSensitive","preserveCase","setPreserveCase","searchScope","_toggleSelectionFind","checked","matchesCount","matchesPosition","showRedOutline","classList","toggle","_updateMatchesCount","currentMatch","updateHistory","_delayedUpdateHistory","loop","trigger","_updateHistory","addToHistory","_matchesCount","style","minWidth","title","firstChild","removeChild","label","String","format","appendChild","createTextNode","_getAriaLabel","Math","max","clientWidth","ariaLabel","startLineNumber","startColumn","model","getModel","getLineCount","lineContent","getLineContent","concat","getSelection","isSelection","endLineNumber","endColumn","isChecked","enable","disable","setEnabled","_closeBtn","findInputIsNonEmpty","_prevBtn","canNavigateBack","_nextBtn","canNavigateForward","_replaceBtn","_replaceAllBtn","_toggleReplaceBtn","setExpanded","canReplace","forEach","clearTimeout","autoFindInSelection","isSelectionMultipleLine","push","add","setAttribute","validate","layoutOverlayWidget","adjustEditorScrollTop","seedSearchStringFromSelection","editorCoords","getDomNodePagePosition","startCoords","getScrolledVisiblePosition","getStartPosition","startLeft","left","startTop","top","leftOfFindWidget","getTopLeftOffset","endCoords","getEndPosition","endLeft","focusTheEditor","remove","clearMessage","focus","targetScrollTop","viewZone","changeViewZones","accessor","_getHeight","addZone","setScrollTop","getScrollTop","adjustScroll","arguments","newHeight","scrollAdjustment","layoutZone","removeZone","theme","inputStyles","getColor","isInDOM","layoutInfo","getLayoutInfo","editorContentWidth","contentWidth","contains","editorWidth","minimapWidth","minimap","collapsedFindWidget","reducedFindWidget","narrowFindWidget","_resized","widgetWidth","maxWidth","findInputWidth","element","totalheight","height","totalHeight","focusFindInput","focusReplaceInput","highlightFindOptions","hasModel","selections","getSelections","map","setEndPosition","getLineMaxColumn","equalsRange","filter","_onFindInputMouseDown","middleButton","_onFindInputKeyDown","equals","insertAtCursor","preventDefault","focusOnCaseSensitive","getValue","querySelector","_onReplaceInputKeyDown","isWindows","isNative","info","store","getVerticalSashLeft","_sash","_keybindingLabelFor","actionId","kb","lookupKeybinding","getLabel","flexibleHeight","flexibleWidth","placeholder","appendCaseSensitiveLabel","ToggleCaseSensitiveCommand","appendWholeWordsLabel","ToggleWholeWordCommand","appendRegexLabel","ToggleRegexCommand","validation","getRegex","RegExp","content","message","flexibleMaxHeight","onKeyDown","onDidChange","onDidOptionChange","getWholeWords","getCaseSensitive","onCaseSensitiveKeyDown","onRegexKeyDown","focusOnPreserve","onDidHeightChange","isLinux","onMouseDown","SimpleButton","PreviousMatchFindAction","icon","onTrigger","getAction","run","NextMatchFindAction","findPart","actionsContainer","ToggleSearchScopeCommand","onChange","isEmpty","CloseFindWidgetCommand","isEnabled","appendPreserveCaseLabel","TogglePreserveCaseCommand","history","getPreserveCase","onPreserveCaseKeyDown","enabled","ReplaceOneAction","ReplaceAllAction","replacePart","replaceActionsContainer","_resizeSash","orientation","size","originalWidth","onDidStart","evt","startX","currentX","parseFloat","getComputedStyle","onDidReset","currentWidth","setFocusInputOnOptionClick","opts","_opts","asClassName","tabIndex","onclick","onkeydown","expanded","asClassNameArray","collector","addBackgroundColorRule","selector","color","addRule","widgetBackground","widgetShadowColor","findMatchHighlightBorder","type","findMatchBorder","findRangeHighlightBorder","hcBorder","foreground","error","resizeBorderBackground","border","focusOutline"],"sources":["C:/Users/Administrator/Desktop/sqllineage-master/sqllineagejs/node_modules/monaco-editor/esm/vs/editor/contrib/find/findWidget.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport './findWidget.css';\r\nimport * as nls from '../../../nls.js';\r\nimport * as dom from '../../../base/browser/dom.js';\r\nimport { alert as alertFn } from '../../../base/browser/ui/aria/aria.js';\r\nimport { Checkbox } from '../../../base/browser/ui/checkbox/checkbox.js';\r\nimport { Sash } from '../../../base/browser/ui/sash/sash.js';\r\nimport { Widget } from '../../../base/browser/ui/widget.js';\r\nimport { Delayer } from '../../../base/common/async.js';\r\nimport { onUnexpectedError } from '../../../base/common/errors.js';\r\nimport { toDisposable } from '../../../base/common/lifecycle.js';\r\nimport * as platform from '../../../base/common/platform.js';\r\nimport * as strings from '../../../base/common/strings.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { CONTEXT_FIND_INPUT_FOCUSED, CONTEXT_REPLACE_INPUT_FOCUSED, FIND_IDS, MATCHES_LIMIT } from './findModel.js';\r\nimport { contrastBorder, editorFindMatch, editorFindMatchBorder, editorFindMatchHighlight, editorFindMatchHighlightBorder, editorFindRangeHighlight, editorFindRangeHighlightBorder, editorWidgetBackground, editorWidgetBorder, editorWidgetResizeBorder, errorForeground, inputActiveOptionBorder, inputActiveOptionBackground, inputActiveOptionForeground, inputBackground, inputBorder, inputForeground, inputValidationErrorBackground, inputValidationErrorBorder, inputValidationErrorForeground, inputValidationInfoBackground, inputValidationInfoBorder, inputValidationInfoForeground, inputValidationWarningBackground, inputValidationWarningBorder, inputValidationWarningForeground, widgetShadow, editorWidgetForeground, focusBorder } from '../../../platform/theme/common/colorRegistry.js';\r\nimport { registerThemingParticipant, ThemeIcon } from '../../../platform/theme/common/themeService.js';\r\nimport { ContextScopedFindInput, ContextScopedReplaceInput } from '../../../platform/browser/contextScopedHistoryWidget.js';\r\nimport { Codicon } from '../../../base/common/codicons.js';\r\nimport { registerIcon, widgetClose } from '../../../platform/theme/common/iconRegistry.js';\r\nconst findSelectionIcon = registerIcon('find-selection', Codicon.selection, nls.localize('findSelectionIcon', 'Icon for \\'Find in Selection\\' in the editor find widget.'));\r\nconst findCollapsedIcon = registerIcon('find-collapsed', Codicon.chevronRight, nls.localize('findCollapsedIcon', 'Icon to indicate that the editor find widget is collapsed.'));\r\nconst findExpandedIcon = registerIcon('find-expanded', Codicon.chevronDown, nls.localize('findExpandedIcon', 'Icon to indicate that the editor find widget is expanded.'));\r\nexport const findReplaceIcon = registerIcon('find-replace', Codicon.replace, nls.localize('findReplaceIcon', 'Icon for \\'Replace\\' in the editor find widget.'));\r\nexport const findReplaceAllIcon = registerIcon('find-replace-all', Codicon.replaceAll, nls.localize('findReplaceAllIcon', 'Icon for \\'Replace All\\' in the editor find widget.'));\r\nexport const findPreviousMatchIcon = registerIcon('find-previous-match', Codicon.arrowUp, nls.localize('findPreviousMatchIcon', 'Icon for \\'Find Previous\\' in the editor find widget.'));\r\nexport const findNextMatchIcon = registerIcon('find-next-match', Codicon.arrowDown, nls.localize('findNextMatchIcon', 'Icon for \\'Find Next\\' in the editor find widget.'));\r\nconst NLS_FIND_INPUT_LABEL = nls.localize('label.find', \"Find\");\r\nconst NLS_FIND_INPUT_PLACEHOLDER = nls.localize('placeholder.find', \"Find\");\r\nconst NLS_PREVIOUS_MATCH_BTN_LABEL = nls.localize('label.previousMatchButton', \"Previous match\");\r\nconst NLS_NEXT_MATCH_BTN_LABEL = nls.localize('label.nextMatchButton', \"Next match\");\r\nconst NLS_TOGGLE_SELECTION_FIND_TITLE = nls.localize('label.toggleSelectionFind', \"Find in selection\");\r\nconst NLS_CLOSE_BTN_LABEL = nls.localize('label.closeButton', \"Close\");\r\nconst NLS_REPLACE_INPUT_LABEL = nls.localize('label.replace', \"Replace\");\r\nconst NLS_REPLACE_INPUT_PLACEHOLDER = nls.localize('placeholder.replace', \"Replace\");\r\nconst NLS_REPLACE_BTN_LABEL = nls.localize('label.replaceButton', \"Replace\");\r\nconst NLS_REPLACE_ALL_BTN_LABEL = nls.localize('label.replaceAllButton', \"Replace All\");\r\nconst NLS_TOGGLE_REPLACE_MODE_BTN_LABEL = nls.localize('label.toggleReplaceButton', \"Toggle Replace mode\");\r\nconst NLS_MATCHES_COUNT_LIMIT_TITLE = nls.localize('title.matchesCountLimit', \"Only the first {0} results are highlighted, but all find operations work on the entire text.\", MATCHES_LIMIT);\r\nconst NLS_MATCHES_LOCATION = nls.localize('label.matchesLocation', \"{0} of {1}\");\r\nconst NLS_NO_RESULTS = nls.localize('label.noResults', \"No results\");\r\nconst FIND_WIDGET_INITIAL_WIDTH = 419;\r\nconst PART_WIDTH = 275;\r\nconst FIND_INPUT_AREA_WIDTH = PART_WIDTH - 54;\r\nlet MAX_MATCHES_COUNT_WIDTH = 69;\r\n// let FIND_ALL_CONTROLS_WIDTH = 17/** Find Input margin-left */ + (MAX_MATCHES_COUNT_WIDTH + 3 + 1) /** Match Results */ + 23 /** Button */ * 4 + 2/** sash */;\r\nconst FIND_INPUT_AREA_HEIGHT = 33; // The height of Find Widget when Replace Input is not visible.\r\nconst ctrlEnterReplaceAllWarningPromptedKey = 'ctrlEnterReplaceAll.windows.donotask';\r\nconst ctrlKeyMod = (platform.isMacintosh ? 256 /* WinCtrl */ : 2048 /* CtrlCmd */);\r\nexport class FindWidgetViewZone {\r\n    constructor(afterLineNumber) {\r\n        this.afterLineNumber = afterLineNumber;\r\n        this.heightInPx = FIND_INPUT_AREA_HEIGHT;\r\n        this.suppressMouseDown = false;\r\n        this.domNode = document.createElement('div');\r\n        this.domNode.className = 'dock-find-viewzone';\r\n    }\r\n}\r\nfunction stopPropagationForMultiLineUpwards(event, value, textarea) {\r\n    const isMultiline = !!value.match(/\\n/);\r\n    if (textarea && isMultiline && textarea.selectionStart > 0) {\r\n        event.stopPropagation();\r\n        return;\r\n    }\r\n}\r\nfunction stopPropagationForMultiLineDownwards(event, value, textarea) {\r\n    const isMultiline = !!value.match(/\\n/);\r\n    if (textarea && isMultiline && textarea.selectionEnd < textarea.value.length) {\r\n        event.stopPropagation();\r\n        return;\r\n    }\r\n}\r\nexport class FindWidget extends Widget {\r\n    constructor(codeEditor, controller, state, contextViewProvider, keybindingService, contextKeyService, themeService, storageService, notificationService) {\r\n        super();\r\n        this._cachedHeight = null;\r\n        this._revealTimeouts = [];\r\n        this._codeEditor = codeEditor;\r\n        this._controller = controller;\r\n        this._state = state;\r\n        this._contextViewProvider = contextViewProvider;\r\n        this._keybindingService = keybindingService;\r\n        this._contextKeyService = contextKeyService;\r\n        this._storageService = storageService;\r\n        this._notificationService = notificationService;\r\n        this._ctrlEnterReplaceAllWarningPrompted = !!storageService.getBoolean(ctrlEnterReplaceAllWarningPromptedKey, 0 /* GLOBAL */);\r\n        this._isVisible = false;\r\n        this._isReplaceVisible = false;\r\n        this._ignoreChangeEvent = false;\r\n        this._updateHistoryDelayer = new Delayer(500);\r\n        this._register(toDisposable(() => this._updateHistoryDelayer.cancel()));\r\n        this._register(this._state.onFindReplaceStateChange((e) => this._onStateChanged(e)));\r\n        this._buildDomNode();\r\n        this._updateButtons();\r\n        this._tryUpdateWidgetWidth();\r\n        this._findInput.inputBox.layout();\r\n        this._register(this._codeEditor.onDidChangeConfiguration((e) => {\r\n            if (e.hasChanged(75 /* readOnly */)) {\r\n                if (this._codeEditor.getOption(75 /* readOnly */)) {\r\n                    // Hide replace part if editor becomes read only\r\n                    this._state.change({ isReplaceRevealed: false }, false);\r\n                }\r\n                this._updateButtons();\r\n            }\r\n            if (e.hasChanged(124 /* layoutInfo */)) {\r\n                this._tryUpdateWidgetWidth();\r\n            }\r\n            if (e.hasChanged(2 /* accessibilitySupport */)) {\r\n                this.updateAccessibilitySupport();\r\n            }\r\n            if (e.hasChanged(31 /* find */)) {\r\n                const addExtraSpaceOnTop = this._codeEditor.getOption(31 /* find */).addExtraSpaceOnTop;\r\n                if (addExtraSpaceOnTop && !this._viewZone) {\r\n                    this._viewZone = new FindWidgetViewZone(0);\r\n                    this._showViewZone();\r\n                }\r\n                if (!addExtraSpaceOnTop && this._viewZone) {\r\n                    this._removeViewZone();\r\n                }\r\n            }\r\n        }));\r\n        this.updateAccessibilitySupport();\r\n        this._register(this._codeEditor.onDidChangeCursorSelection(() => {\r\n            if (this._isVisible) {\r\n                this._updateToggleSelectionFindButton();\r\n            }\r\n        }));\r\n        this._register(this._codeEditor.onDidFocusEditorWidget(() => __awaiter(this, void 0, void 0, function* () {\r\n            if (this._isVisible) {\r\n                let globalBufferTerm = yield this._controller.getGlobalBufferTerm();\r\n                if (globalBufferTerm && globalBufferTerm !== this._state.searchString) {\r\n                    this._state.change({ searchString: globalBufferTerm }, false);\r\n                    this._findInput.select();\r\n                }\r\n            }\r\n        })));\r\n        this._findInputFocused = CONTEXT_FIND_INPUT_FOCUSED.bindTo(contextKeyService);\r\n        this._findFocusTracker = this._register(dom.trackFocus(this._findInput.inputBox.inputElement));\r\n        this._register(this._findFocusTracker.onDidFocus(() => {\r\n            this._findInputFocused.set(true);\r\n            this._updateSearchScope();\r\n        }));\r\n        this._register(this._findFocusTracker.onDidBlur(() => {\r\n            this._findInputFocused.set(false);\r\n        }));\r\n        this._replaceInputFocused = CONTEXT_REPLACE_INPUT_FOCUSED.bindTo(contextKeyService);\r\n        this._replaceFocusTracker = this._register(dom.trackFocus(this._replaceInput.inputBox.inputElement));\r\n        this._register(this._replaceFocusTracker.onDidFocus(() => {\r\n            this._replaceInputFocused.set(true);\r\n            this._updateSearchScope();\r\n        }));\r\n        this._register(this._replaceFocusTracker.onDidBlur(() => {\r\n            this._replaceInputFocused.set(false);\r\n        }));\r\n        this._codeEditor.addOverlayWidget(this);\r\n        if (this._codeEditor.getOption(31 /* find */).addExtraSpaceOnTop) {\r\n            this._viewZone = new FindWidgetViewZone(0); // Put it before the first line then users can scroll beyond the first line.\r\n        }\r\n        this._applyTheme(themeService.getColorTheme());\r\n        this._register(themeService.onDidColorThemeChange(this._applyTheme.bind(this)));\r\n        this._register(this._codeEditor.onDidChangeModel(() => {\r\n            if (!this._isVisible) {\r\n                return;\r\n            }\r\n            this._viewZoneId = undefined;\r\n        }));\r\n        this._register(this._codeEditor.onDidScrollChange((e) => {\r\n            if (e.scrollTopChanged) {\r\n                this._layoutViewZone();\r\n                return;\r\n            }\r\n            // for other scroll changes, layout the viewzone in next tick to avoid ruining current rendering.\r\n            setTimeout(() => {\r\n                this._layoutViewZone();\r\n            }, 0);\r\n        }));\r\n    }\r\n    // ----- IOverlayWidget API\r\n    getId() {\r\n        return FindWidget.ID;\r\n    }\r\n    getDomNode() {\r\n        return this._domNode;\r\n    }\r\n    getPosition() {\r\n        if (this._isVisible) {\r\n            return {\r\n                preference: 0 /* TOP_RIGHT_CORNER */\r\n            };\r\n        }\r\n        return null;\r\n    }\r\n    // ----- React to state changes\r\n    _onStateChanged(e) {\r\n        if (e.searchString) {\r\n            try {\r\n                this._ignoreChangeEvent = true;\r\n                this._findInput.setValue(this._state.searchString);\r\n            }\r\n            finally {\r\n                this._ignoreChangeEvent = false;\r\n            }\r\n            this._updateButtons();\r\n        }\r\n        if (e.replaceString) {\r\n            this._replaceInput.inputBox.value = this._state.replaceString;\r\n        }\r\n        if (e.isRevealed) {\r\n            if (this._state.isRevealed) {\r\n                this._reveal();\r\n            }\r\n            else {\r\n                this._hide(true);\r\n            }\r\n        }\r\n        if (e.isReplaceRevealed) {\r\n            if (this._state.isReplaceRevealed) {\r\n                if (!this._codeEditor.getOption(75 /* readOnly */) && !this._isReplaceVisible) {\r\n                    this._isReplaceVisible = true;\r\n                    this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\r\n                    this._updateButtons();\r\n                    this._replaceInput.inputBox.layout();\r\n                }\r\n            }\r\n            else {\r\n                if (this._isReplaceVisible) {\r\n                    this._isReplaceVisible = false;\r\n                    this._updateButtons();\r\n                }\r\n            }\r\n        }\r\n        if ((e.isRevealed || e.isReplaceRevealed) && (this._state.isRevealed || this._state.isReplaceRevealed)) {\r\n            if (this._tryUpdateHeight()) {\r\n                this._showViewZone();\r\n            }\r\n        }\r\n        if (e.isRegex) {\r\n            this._findInput.setRegex(this._state.isRegex);\r\n        }\r\n        if (e.wholeWord) {\r\n            this._findInput.setWholeWords(this._state.wholeWord);\r\n        }\r\n        if (e.matchCase) {\r\n            this._findInput.setCaseSensitive(this._state.matchCase);\r\n        }\r\n        if (e.preserveCase) {\r\n            this._replaceInput.setPreserveCase(this._state.preserveCase);\r\n        }\r\n        if (e.searchScope) {\r\n            if (this._state.searchScope) {\r\n                this._toggleSelectionFind.checked = true;\r\n            }\r\n            else {\r\n                this._toggleSelectionFind.checked = false;\r\n            }\r\n            this._updateToggleSelectionFindButton();\r\n        }\r\n        if (e.searchString || e.matchesCount || e.matchesPosition) {\r\n            let showRedOutline = (this._state.searchString.length > 0 && this._state.matchesCount === 0);\r\n            this._domNode.classList.toggle('no-results', showRedOutline);\r\n            this._updateMatchesCount();\r\n            this._updateButtons();\r\n        }\r\n        if (e.searchString || e.currentMatch) {\r\n            this._layoutViewZone();\r\n        }\r\n        if (e.updateHistory) {\r\n            this._delayedUpdateHistory();\r\n        }\r\n        if (e.loop) {\r\n            this._updateButtons();\r\n        }\r\n    }\r\n    _delayedUpdateHistory() {\r\n        this._updateHistoryDelayer.trigger(this._updateHistory.bind(this)).then(undefined, onUnexpectedError);\r\n    }\r\n    _updateHistory() {\r\n        if (this._state.searchString) {\r\n            this._findInput.inputBox.addToHistory();\r\n        }\r\n        if (this._state.replaceString) {\r\n            this._replaceInput.inputBox.addToHistory();\r\n        }\r\n    }\r\n    _updateMatchesCount() {\r\n        this._matchesCount.style.minWidth = MAX_MATCHES_COUNT_WIDTH + 'px';\r\n        if (this._state.matchesCount >= MATCHES_LIMIT) {\r\n            this._matchesCount.title = NLS_MATCHES_COUNT_LIMIT_TITLE;\r\n        }\r\n        else {\r\n            this._matchesCount.title = '';\r\n        }\r\n        // remove previous content\r\n        if (this._matchesCount.firstChild) {\r\n            this._matchesCount.removeChild(this._matchesCount.firstChild);\r\n        }\r\n        let label;\r\n        if (this._state.matchesCount > 0) {\r\n            let matchesCount = String(this._state.matchesCount);\r\n            if (this._state.matchesCount >= MATCHES_LIMIT) {\r\n                matchesCount += '+';\r\n            }\r\n            let matchesPosition = String(this._state.matchesPosition);\r\n            if (matchesPosition === '0') {\r\n                matchesPosition = '?';\r\n            }\r\n            label = strings.format(NLS_MATCHES_LOCATION, matchesPosition, matchesCount);\r\n        }\r\n        else {\r\n            label = NLS_NO_RESULTS;\r\n        }\r\n        this._matchesCount.appendChild(document.createTextNode(label));\r\n        alertFn(this._getAriaLabel(label, this._state.currentMatch, this._state.searchString));\r\n        MAX_MATCHES_COUNT_WIDTH = Math.max(MAX_MATCHES_COUNT_WIDTH, this._matchesCount.clientWidth);\r\n    }\r\n    // ----- actions\r\n    _getAriaLabel(label, currentMatch, searchString) {\r\n        if (label === NLS_NO_RESULTS) {\r\n            return searchString === ''\r\n                ? nls.localize('ariaSearchNoResultEmpty', \"{0} found\", label)\r\n                : nls.localize('ariaSearchNoResult', \"{0} found for '{1}'\", label, searchString);\r\n        }\r\n        if (currentMatch) {\r\n            const ariaLabel = nls.localize('ariaSearchNoResultWithLineNum', \"{0} found for '{1}', at {2}\", label, searchString, currentMatch.startLineNumber + ':' + currentMatch.startColumn);\r\n            const model = this._codeEditor.getModel();\r\n            if (model && (currentMatch.startLineNumber <= model.getLineCount()) && (currentMatch.startLineNumber >= 1)) {\r\n                const lineContent = model.getLineContent(currentMatch.startLineNumber);\r\n                return `${lineContent}, ${ariaLabel}`;\r\n            }\r\n            return ariaLabel;\r\n        }\r\n        return nls.localize('ariaSearchNoResultWithLineNumNoCurrentMatch', \"{0} found for '{1}'\", label, searchString);\r\n    }\r\n    /**\r\n     * If 'selection find' is ON we should not disable the button (its function is to cancel 'selection find').\r\n     * If 'selection find' is OFF we enable the button only if there is a selection.\r\n     */\r\n    _updateToggleSelectionFindButton() {\r\n        let selection = this._codeEditor.getSelection();\r\n        let isSelection = selection ? (selection.startLineNumber !== selection.endLineNumber || selection.startColumn !== selection.endColumn) : false;\r\n        let isChecked = this._toggleSelectionFind.checked;\r\n        if (this._isVisible && (isChecked || isSelection)) {\r\n            this._toggleSelectionFind.enable();\r\n        }\r\n        else {\r\n            this._toggleSelectionFind.disable();\r\n        }\r\n    }\r\n    _updateButtons() {\r\n        this._findInput.setEnabled(this._isVisible);\r\n        this._replaceInput.setEnabled(this._isVisible && this._isReplaceVisible);\r\n        this._updateToggleSelectionFindButton();\r\n        this._closeBtn.setEnabled(this._isVisible);\r\n        let findInputIsNonEmpty = (this._state.searchString.length > 0);\r\n        let matchesCount = this._state.matchesCount ? true : false;\r\n        this._prevBtn.setEnabled(this._isVisible && findInputIsNonEmpty && matchesCount && this._state.canNavigateBack());\r\n        this._nextBtn.setEnabled(this._isVisible && findInputIsNonEmpty && matchesCount && this._state.canNavigateForward());\r\n        this._replaceBtn.setEnabled(this._isVisible && this._isReplaceVisible && findInputIsNonEmpty);\r\n        this._replaceAllBtn.setEnabled(this._isVisible && this._isReplaceVisible && findInputIsNonEmpty);\r\n        this._domNode.classList.toggle('replaceToggled', this._isReplaceVisible);\r\n        this._toggleReplaceBtn.setExpanded(this._isReplaceVisible);\r\n        let canReplace = !this._codeEditor.getOption(75 /* readOnly */);\r\n        this._toggleReplaceBtn.setEnabled(this._isVisible && canReplace);\r\n    }\r\n    _reveal() {\r\n        this._revealTimeouts.forEach(e => {\r\n            clearTimeout(e);\r\n        });\r\n        this._revealTimeouts = [];\r\n        if (!this._isVisible) {\r\n            this._isVisible = true;\r\n            const selection = this._codeEditor.getSelection();\r\n            switch (this._codeEditor.getOption(31 /* find */).autoFindInSelection) {\r\n                case 'always':\r\n                    this._toggleSelectionFind.checked = true;\r\n                    break;\r\n                case 'never':\r\n                    this._toggleSelectionFind.checked = false;\r\n                    break;\r\n                case 'multiline':\r\n                    const isSelectionMultipleLine = !!selection && selection.startLineNumber !== selection.endLineNumber;\r\n                    this._toggleSelectionFind.checked = isSelectionMultipleLine;\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            this._tryUpdateWidgetWidth();\r\n            this._updateButtons();\r\n            this._revealTimeouts.push(setTimeout(() => {\r\n                this._domNode.classList.add('visible');\r\n                this._domNode.setAttribute('aria-hidden', 'false');\r\n            }, 0));\r\n            // validate query again as it's being dismissed when we hide the find widget.\r\n            this._revealTimeouts.push(setTimeout(() => {\r\n                this._findInput.validate();\r\n            }, 200));\r\n            this._codeEditor.layoutOverlayWidget(this);\r\n            let adjustEditorScrollTop = true;\r\n            if (this._codeEditor.getOption(31 /* find */).seedSearchStringFromSelection && selection) {\r\n                const domNode = this._codeEditor.getDomNode();\r\n                if (domNode) {\r\n                    const editorCoords = dom.getDomNodePagePosition(domNode);\r\n                    const startCoords = this._codeEditor.getScrolledVisiblePosition(selection.getStartPosition());\r\n                    const startLeft = editorCoords.left + (startCoords ? startCoords.left : 0);\r\n                    const startTop = startCoords ? startCoords.top : 0;\r\n                    if (this._viewZone && startTop < this._viewZone.heightInPx) {\r\n                        if (selection.endLineNumber > selection.startLineNumber) {\r\n                            adjustEditorScrollTop = false;\r\n                        }\r\n                        const leftOfFindWidget = dom.getTopLeftOffset(this._domNode).left;\r\n                        if (startLeft > leftOfFindWidget) {\r\n                            adjustEditorScrollTop = false;\r\n                        }\r\n                        const endCoords = this._codeEditor.getScrolledVisiblePosition(selection.getEndPosition());\r\n                        const endLeft = editorCoords.left + (endCoords ? endCoords.left : 0);\r\n                        if (endLeft > leftOfFindWidget) {\r\n                            adjustEditorScrollTop = false;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this._showViewZone(adjustEditorScrollTop);\r\n        }\r\n    }\r\n    _hide(focusTheEditor) {\r\n        this._revealTimeouts.forEach(e => {\r\n            clearTimeout(e);\r\n        });\r\n        this._revealTimeouts = [];\r\n        if (this._isVisible) {\r\n            this._isVisible = false;\r\n            this._updateButtons();\r\n            this._domNode.classList.remove('visible');\r\n            this._domNode.setAttribute('aria-hidden', 'true');\r\n            this._findInput.clearMessage();\r\n            if (focusTheEditor) {\r\n                this._codeEditor.focus();\r\n            }\r\n            this._codeEditor.layoutOverlayWidget(this);\r\n            this._removeViewZone();\r\n        }\r\n    }\r\n    _layoutViewZone(targetScrollTop) {\r\n        const addExtraSpaceOnTop = this._codeEditor.getOption(31 /* find */).addExtraSpaceOnTop;\r\n        if (!addExtraSpaceOnTop) {\r\n            this._removeViewZone();\r\n            return;\r\n        }\r\n        if (!this._isVisible) {\r\n            return;\r\n        }\r\n        const viewZone = this._viewZone;\r\n        if (this._viewZoneId !== undefined || !viewZone) {\r\n            return;\r\n        }\r\n        this._codeEditor.changeViewZones((accessor) => {\r\n            viewZone.heightInPx = this._getHeight();\r\n            this._viewZoneId = accessor.addZone(viewZone);\r\n            // scroll top adjust to make sure the editor doesn't scroll when adding viewzone at the beginning.\r\n            this._codeEditor.setScrollTop(targetScrollTop || this._codeEditor.getScrollTop() + viewZone.heightInPx);\r\n        });\r\n    }\r\n    _showViewZone(adjustScroll = true) {\r\n        if (!this._isVisible) {\r\n            return;\r\n        }\r\n        const addExtraSpaceOnTop = this._codeEditor.getOption(31 /* find */).addExtraSpaceOnTop;\r\n        if (!addExtraSpaceOnTop) {\r\n            return;\r\n        }\r\n        if (this._viewZone === undefined) {\r\n            this._viewZone = new FindWidgetViewZone(0);\r\n        }\r\n        const viewZone = this._viewZone;\r\n        this._codeEditor.changeViewZones((accessor) => {\r\n            if (this._viewZoneId !== undefined) {\r\n                // the view zone already exists, we need to update the height\r\n                const newHeight = this._getHeight();\r\n                if (newHeight === viewZone.heightInPx) {\r\n                    return;\r\n                }\r\n                let scrollAdjustment = newHeight - viewZone.heightInPx;\r\n                viewZone.heightInPx = newHeight;\r\n                accessor.layoutZone(this._viewZoneId);\r\n                if (adjustScroll) {\r\n                    this._codeEditor.setScrollTop(this._codeEditor.getScrollTop() + scrollAdjustment);\r\n                }\r\n                return;\r\n            }\r\n            else {\r\n                let scrollAdjustment = this._getHeight();\r\n                // if the editor has top padding, factor that into the zone height\r\n                scrollAdjustment -= this._codeEditor.getOption(69 /* padding */).top;\r\n                if (scrollAdjustment <= 0) {\r\n                    return;\r\n                }\r\n                viewZone.heightInPx = scrollAdjustment;\r\n                this._viewZoneId = accessor.addZone(viewZone);\r\n                if (adjustScroll) {\r\n                    this._codeEditor.setScrollTop(this._codeEditor.getScrollTop() + scrollAdjustment);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    _removeViewZone() {\r\n        this._codeEditor.changeViewZones((accessor) => {\r\n            if (this._viewZoneId !== undefined) {\r\n                accessor.removeZone(this._viewZoneId);\r\n                this._viewZoneId = undefined;\r\n                if (this._viewZone) {\r\n                    this._codeEditor.setScrollTop(this._codeEditor.getScrollTop() - this._viewZone.heightInPx);\r\n                    this._viewZone = undefined;\r\n                }\r\n            }\r\n        });\r\n    }\r\n    _applyTheme(theme) {\r\n        let inputStyles = {\r\n            inputActiveOptionBorder: theme.getColor(inputActiveOptionBorder),\r\n            inputActiveOptionBackground: theme.getColor(inputActiveOptionBackground),\r\n            inputActiveOptionForeground: theme.getColor(inputActiveOptionForeground),\r\n            inputBackground: theme.getColor(inputBackground),\r\n            inputForeground: theme.getColor(inputForeground),\r\n            inputBorder: theme.getColor(inputBorder),\r\n            inputValidationInfoBackground: theme.getColor(inputValidationInfoBackground),\r\n            inputValidationInfoForeground: theme.getColor(inputValidationInfoForeground),\r\n            inputValidationInfoBorder: theme.getColor(inputValidationInfoBorder),\r\n            inputValidationWarningBackground: theme.getColor(inputValidationWarningBackground),\r\n            inputValidationWarningForeground: theme.getColor(inputValidationWarningForeground),\r\n            inputValidationWarningBorder: theme.getColor(inputValidationWarningBorder),\r\n            inputValidationErrorBackground: theme.getColor(inputValidationErrorBackground),\r\n            inputValidationErrorForeground: theme.getColor(inputValidationErrorForeground),\r\n            inputValidationErrorBorder: theme.getColor(inputValidationErrorBorder),\r\n        };\r\n        this._findInput.style(inputStyles);\r\n        this._replaceInput.style(inputStyles);\r\n        this._toggleSelectionFind.style(inputStyles);\r\n    }\r\n    _tryUpdateWidgetWidth() {\r\n        if (!this._isVisible) {\r\n            return;\r\n        }\r\n        if (!dom.isInDOM(this._domNode)) {\r\n            // the widget is not in the DOM\r\n            return;\r\n        }\r\n        const layoutInfo = this._codeEditor.getLayoutInfo();\r\n        const editorContentWidth = layoutInfo.contentWidth;\r\n        if (editorContentWidth <= 0) {\r\n            // for example, diff view original editor\r\n            this._domNode.classList.add('hiddenEditor');\r\n            return;\r\n        }\r\n        else if (this._domNode.classList.contains('hiddenEditor')) {\r\n            this._domNode.classList.remove('hiddenEditor');\r\n        }\r\n        const editorWidth = layoutInfo.width;\r\n        const minimapWidth = layoutInfo.minimap.minimapWidth;\r\n        let collapsedFindWidget = false;\r\n        let reducedFindWidget = false;\r\n        let narrowFindWidget = false;\r\n        if (this._resized) {\r\n            let widgetWidth = dom.getTotalWidth(this._domNode);\r\n            if (widgetWidth > FIND_WIDGET_INITIAL_WIDTH) {\r\n                // as the widget is resized by users, we may need to change the max width of the widget as the editor width changes.\r\n                this._domNode.style.maxWidth = `${editorWidth - 28 - minimapWidth - 15}px`;\r\n                this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\r\n                return;\r\n            }\r\n        }\r\n        if (FIND_WIDGET_INITIAL_WIDTH + 28 + minimapWidth >= editorWidth) {\r\n            reducedFindWidget = true;\r\n        }\r\n        if (FIND_WIDGET_INITIAL_WIDTH + 28 + minimapWidth - MAX_MATCHES_COUNT_WIDTH >= editorWidth) {\r\n            narrowFindWidget = true;\r\n        }\r\n        if (FIND_WIDGET_INITIAL_WIDTH + 28 + minimapWidth - MAX_MATCHES_COUNT_WIDTH >= editorWidth + 50) {\r\n            collapsedFindWidget = true;\r\n        }\r\n        this._domNode.classList.toggle('collapsed-find-widget', collapsedFindWidget);\r\n        this._domNode.classList.toggle('narrow-find-widget', narrowFindWidget);\r\n        this._domNode.classList.toggle('reduced-find-widget', reducedFindWidget);\r\n        if (!narrowFindWidget && !collapsedFindWidget) {\r\n            // the minimal left offset of findwidget is 15px.\r\n            this._domNode.style.maxWidth = `${editorWidth - 28 - minimapWidth - 15}px`;\r\n        }\r\n        if (this._resized) {\r\n            this._findInput.inputBox.layout();\r\n            let findInputWidth = this._findInput.inputBox.element.clientWidth;\r\n            if (findInputWidth > 0) {\r\n                this._replaceInput.width = findInputWidth;\r\n            }\r\n        }\r\n        else if (this._isReplaceVisible) {\r\n            this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\r\n        }\r\n    }\r\n    _getHeight() {\r\n        let totalheight = 0;\r\n        // find input margin top\r\n        totalheight += 4;\r\n        // find input height\r\n        totalheight += this._findInput.inputBox.height + 2 /** input box border */;\r\n        if (this._isReplaceVisible) {\r\n            // replace input margin\r\n            totalheight += 4;\r\n            totalheight += this._replaceInput.inputBox.height + 2 /** input box border */;\r\n        }\r\n        // margin bottom\r\n        totalheight += 4;\r\n        return totalheight;\r\n    }\r\n    _tryUpdateHeight() {\r\n        const totalHeight = this._getHeight();\r\n        if (this._cachedHeight !== null && this._cachedHeight === totalHeight) {\r\n            return false;\r\n        }\r\n        this._cachedHeight = totalHeight;\r\n        this._domNode.style.height = `${totalHeight}px`;\r\n        return true;\r\n    }\r\n    // ----- Public\r\n    focusFindInput() {\r\n        this._findInput.select();\r\n        // Edge browser requires focus() in addition to select()\r\n        this._findInput.focus();\r\n    }\r\n    focusReplaceInput() {\r\n        this._replaceInput.select();\r\n        // Edge browser requires focus() in addition to select()\r\n        this._replaceInput.focus();\r\n    }\r\n    highlightFindOptions() {\r\n        this._findInput.highlightFindOptions();\r\n    }\r\n    _updateSearchScope() {\r\n        if (!this._codeEditor.hasModel()) {\r\n            return;\r\n        }\r\n        if (this._toggleSelectionFind.checked) {\r\n            let selections = this._codeEditor.getSelections();\r\n            selections.map(selection => {\r\n                if (selection.endColumn === 1 && selection.endLineNumber > selection.startLineNumber) {\r\n                    selection = selection.setEndPosition(selection.endLineNumber - 1, this._codeEditor.getModel().getLineMaxColumn(selection.endLineNumber - 1));\r\n                }\r\n                const currentMatch = this._state.currentMatch;\r\n                if (selection.startLineNumber !== selection.endLineNumber) {\r\n                    if (!Range.equalsRange(selection, currentMatch)) {\r\n                        return selection;\r\n                    }\r\n                }\r\n                return null;\r\n            }).filter(element => !!element);\r\n            if (selections.length) {\r\n                this._state.change({ searchScope: selections }, true);\r\n            }\r\n        }\r\n    }\r\n    _onFindInputMouseDown(e) {\r\n        // on linux, middle key does pasting.\r\n        if (e.middleButton) {\r\n            e.stopPropagation();\r\n        }\r\n    }\r\n    _onFindInputKeyDown(e) {\r\n        if (e.equals(ctrlKeyMod | 3 /* Enter */)) {\r\n            this._findInput.inputBox.insertAtCursor('\\n');\r\n            e.preventDefault();\r\n            return;\r\n        }\r\n        if (e.equals(2 /* Tab */)) {\r\n            if (this._isReplaceVisible) {\r\n                this._replaceInput.focus();\r\n            }\r\n            else {\r\n                this._findInput.focusOnCaseSensitive();\r\n            }\r\n            e.preventDefault();\r\n            return;\r\n        }\r\n        if (e.equals(2048 /* CtrlCmd */ | 18 /* DownArrow */)) {\r\n            this._codeEditor.focus();\r\n            e.preventDefault();\r\n            return;\r\n        }\r\n        if (e.equals(16 /* UpArrow */)) {\r\n            return stopPropagationForMultiLineUpwards(e, this._findInput.getValue(), this._findInput.domNode.querySelector('textarea'));\r\n        }\r\n        if (e.equals(18 /* DownArrow */)) {\r\n            return stopPropagationForMultiLineDownwards(e, this._findInput.getValue(), this._findInput.domNode.querySelector('textarea'));\r\n        }\r\n    }\r\n    _onReplaceInputKeyDown(e) {\r\n        if (e.equals(ctrlKeyMod | 3 /* Enter */)) {\r\n            if (platform.isWindows && platform.isNative && !this._ctrlEnterReplaceAllWarningPrompted) {\r\n                // this is the first time when users press Ctrl + Enter to replace all\r\n                this._notificationService.info(nls.localize('ctrlEnter.keybindingChanged', 'Ctrl+Enter now inserts line break instead of replacing all. You can modify the keybinding for editor.action.replaceAll to override this behavior.'));\r\n                this._ctrlEnterReplaceAllWarningPrompted = true;\r\n                this._storageService.store(ctrlEnterReplaceAllWarningPromptedKey, true, 0 /* GLOBAL */, 0 /* USER */);\r\n            }\r\n            this._replaceInput.inputBox.insertAtCursor('\\n');\r\n            e.preventDefault();\r\n            return;\r\n        }\r\n        if (e.equals(2 /* Tab */)) {\r\n            this._findInput.focusOnCaseSensitive();\r\n            e.preventDefault();\r\n            return;\r\n        }\r\n        if (e.equals(1024 /* Shift */ | 2 /* Tab */)) {\r\n            this._findInput.focus();\r\n            e.preventDefault();\r\n            return;\r\n        }\r\n        if (e.equals(2048 /* CtrlCmd */ | 18 /* DownArrow */)) {\r\n            this._codeEditor.focus();\r\n            e.preventDefault();\r\n            return;\r\n        }\r\n        if (e.equals(16 /* UpArrow */)) {\r\n            return stopPropagationForMultiLineUpwards(e, this._replaceInput.inputBox.value, this._replaceInput.inputBox.element.querySelector('textarea'));\r\n        }\r\n        if (e.equals(18 /* DownArrow */)) {\r\n            return stopPropagationForMultiLineDownwards(e, this._replaceInput.inputBox.value, this._replaceInput.inputBox.element.querySelector('textarea'));\r\n        }\r\n    }\r\n    // ----- sash\r\n    getVerticalSashLeft(_sash) {\r\n        return 0;\r\n    }\r\n    // ----- initialization\r\n    _keybindingLabelFor(actionId) {\r\n        let kb = this._keybindingService.lookupKeybinding(actionId);\r\n        if (!kb) {\r\n            return '';\r\n        }\r\n        return ` (${kb.getLabel()})`;\r\n    }\r\n    _buildDomNode() {\r\n        const flexibleHeight = true;\r\n        const flexibleWidth = true;\r\n        // Find input\r\n        this._findInput = this._register(new ContextScopedFindInput(null, this._contextViewProvider, {\r\n            width: FIND_INPUT_AREA_WIDTH,\r\n            label: NLS_FIND_INPUT_LABEL,\r\n            placeholder: NLS_FIND_INPUT_PLACEHOLDER,\r\n            appendCaseSensitiveLabel: this._keybindingLabelFor(FIND_IDS.ToggleCaseSensitiveCommand),\r\n            appendWholeWordsLabel: this._keybindingLabelFor(FIND_IDS.ToggleWholeWordCommand),\r\n            appendRegexLabel: this._keybindingLabelFor(FIND_IDS.ToggleRegexCommand),\r\n            validation: (value) => {\r\n                if (value.length === 0 || !this._findInput.getRegex()) {\r\n                    return null;\r\n                }\r\n                try {\r\n                    // use `g` and `u` which are also used by the TextModel search\r\n                    new RegExp(value, 'gu');\r\n                    return null;\r\n                }\r\n                catch (e) {\r\n                    return { content: e.message };\r\n                }\r\n            },\r\n            flexibleHeight,\r\n            flexibleWidth,\r\n            flexibleMaxHeight: 118\r\n        }, this._contextKeyService, true));\r\n        this._findInput.setRegex(!!this._state.isRegex);\r\n        this._findInput.setCaseSensitive(!!this._state.matchCase);\r\n        this._findInput.setWholeWords(!!this._state.wholeWord);\r\n        this._register(this._findInput.onKeyDown((e) => this._onFindInputKeyDown(e)));\r\n        this._register(this._findInput.inputBox.onDidChange(() => {\r\n            if (this._ignoreChangeEvent) {\r\n                return;\r\n            }\r\n            this._state.change({ searchString: this._findInput.getValue() }, true);\r\n        }));\r\n        this._register(this._findInput.onDidOptionChange(() => {\r\n            this._state.change({\r\n                isRegex: this._findInput.getRegex(),\r\n                wholeWord: this._findInput.getWholeWords(),\r\n                matchCase: this._findInput.getCaseSensitive()\r\n            }, true);\r\n        }));\r\n        this._register(this._findInput.onCaseSensitiveKeyDown((e) => {\r\n            if (e.equals(1024 /* Shift */ | 2 /* Tab */)) {\r\n                if (this._isReplaceVisible) {\r\n                    this._replaceInput.focus();\r\n                    e.preventDefault();\r\n                }\r\n            }\r\n        }));\r\n        this._register(this._findInput.onRegexKeyDown((e) => {\r\n            if (e.equals(2 /* Tab */)) {\r\n                if (this._isReplaceVisible) {\r\n                    this._replaceInput.focusOnPreserve();\r\n                    e.preventDefault();\r\n                }\r\n            }\r\n        }));\r\n        this._register(this._findInput.inputBox.onDidHeightChange((e) => {\r\n            if (this._tryUpdateHeight()) {\r\n                this._showViewZone();\r\n            }\r\n        }));\r\n        if (platform.isLinux) {\r\n            this._register(this._findInput.onMouseDown((e) => this._onFindInputMouseDown(e)));\r\n        }\r\n        this._matchesCount = document.createElement('div');\r\n        this._matchesCount.className = 'matchesCount';\r\n        this._updateMatchesCount();\r\n        // Previous button\r\n        this._prevBtn = this._register(new SimpleButton({\r\n            label: NLS_PREVIOUS_MATCH_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.PreviousMatchFindAction),\r\n            icon: findPreviousMatchIcon,\r\n            onTrigger: () => {\r\n                this._codeEditor.getAction(FIND_IDS.PreviousMatchFindAction).run().then(undefined, onUnexpectedError);\r\n            }\r\n        }));\r\n        // Next button\r\n        this._nextBtn = this._register(new SimpleButton({\r\n            label: NLS_NEXT_MATCH_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.NextMatchFindAction),\r\n            icon: findNextMatchIcon,\r\n            onTrigger: () => {\r\n                this._codeEditor.getAction(FIND_IDS.NextMatchFindAction).run().then(undefined, onUnexpectedError);\r\n            }\r\n        }));\r\n        let findPart = document.createElement('div');\r\n        findPart.className = 'find-part';\r\n        findPart.appendChild(this._findInput.domNode);\r\n        const actionsContainer = document.createElement('div');\r\n        actionsContainer.className = 'find-actions';\r\n        findPart.appendChild(actionsContainer);\r\n        actionsContainer.appendChild(this._matchesCount);\r\n        actionsContainer.appendChild(this._prevBtn.domNode);\r\n        actionsContainer.appendChild(this._nextBtn.domNode);\r\n        // Toggle selection button\r\n        this._toggleSelectionFind = this._register(new Checkbox({\r\n            icon: findSelectionIcon,\r\n            title: NLS_TOGGLE_SELECTION_FIND_TITLE + this._keybindingLabelFor(FIND_IDS.ToggleSearchScopeCommand),\r\n            isChecked: false\r\n        }));\r\n        this._register(this._toggleSelectionFind.onChange(() => {\r\n            if (this._toggleSelectionFind.checked) {\r\n                if (this._codeEditor.hasModel()) {\r\n                    let selections = this._codeEditor.getSelections();\r\n                    selections.map(selection => {\r\n                        if (selection.endColumn === 1 && selection.endLineNumber > selection.startLineNumber) {\r\n                            selection = selection.setEndPosition(selection.endLineNumber - 1, this._codeEditor.getModel().getLineMaxColumn(selection.endLineNumber - 1));\r\n                        }\r\n                        if (!selection.isEmpty()) {\r\n                            return selection;\r\n                        }\r\n                        return null;\r\n                    }).filter(element => !!element);\r\n                    if (selections.length) {\r\n                        this._state.change({ searchScope: selections }, true);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                this._state.change({ searchScope: null }, true);\r\n            }\r\n        }));\r\n        actionsContainer.appendChild(this._toggleSelectionFind.domNode);\r\n        // Close button\r\n        this._closeBtn = this._register(new SimpleButton({\r\n            label: NLS_CLOSE_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.CloseFindWidgetCommand),\r\n            icon: widgetClose,\r\n            onTrigger: () => {\r\n                this._state.change({ isRevealed: false, searchScope: null }, false);\r\n            },\r\n            onKeyDown: (e) => {\r\n                if (e.equals(2 /* Tab */)) {\r\n                    if (this._isReplaceVisible) {\r\n                        if (this._replaceBtn.isEnabled()) {\r\n                            this._replaceBtn.focus();\r\n                        }\r\n                        else {\r\n                            this._codeEditor.focus();\r\n                        }\r\n                        e.preventDefault();\r\n                    }\r\n                }\r\n            }\r\n        }));\r\n        actionsContainer.appendChild(this._closeBtn.domNode);\r\n        // Replace input\r\n        this._replaceInput = this._register(new ContextScopedReplaceInput(null, undefined, {\r\n            label: NLS_REPLACE_INPUT_LABEL,\r\n            placeholder: NLS_REPLACE_INPUT_PLACEHOLDER,\r\n            appendPreserveCaseLabel: this._keybindingLabelFor(FIND_IDS.TogglePreserveCaseCommand),\r\n            history: [],\r\n            flexibleHeight,\r\n            flexibleWidth,\r\n            flexibleMaxHeight: 118\r\n        }, this._contextKeyService, true));\r\n        this._replaceInput.setPreserveCase(!!this._state.preserveCase);\r\n        this._register(this._replaceInput.onKeyDown((e) => this._onReplaceInputKeyDown(e)));\r\n        this._register(this._replaceInput.inputBox.onDidChange(() => {\r\n            this._state.change({ replaceString: this._replaceInput.inputBox.value }, false);\r\n        }));\r\n        this._register(this._replaceInput.inputBox.onDidHeightChange((e) => {\r\n            if (this._isReplaceVisible && this._tryUpdateHeight()) {\r\n                this._showViewZone();\r\n            }\r\n        }));\r\n        this._register(this._replaceInput.onDidOptionChange(() => {\r\n            this._state.change({\r\n                preserveCase: this._replaceInput.getPreserveCase()\r\n            }, true);\r\n        }));\r\n        this._register(this._replaceInput.onPreserveCaseKeyDown((e) => {\r\n            if (e.equals(2 /* Tab */)) {\r\n                if (this._prevBtn.isEnabled()) {\r\n                    this._prevBtn.focus();\r\n                }\r\n                else if (this._nextBtn.isEnabled()) {\r\n                    this._nextBtn.focus();\r\n                }\r\n                else if (this._toggleSelectionFind.enabled) {\r\n                    this._toggleSelectionFind.focus();\r\n                }\r\n                else if (this._closeBtn.isEnabled()) {\r\n                    this._closeBtn.focus();\r\n                }\r\n                e.preventDefault();\r\n            }\r\n        }));\r\n        // Replace one button\r\n        this._replaceBtn = this._register(new SimpleButton({\r\n            label: NLS_REPLACE_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.ReplaceOneAction),\r\n            icon: findReplaceIcon,\r\n            onTrigger: () => {\r\n                this._controller.replace();\r\n            },\r\n            onKeyDown: (e) => {\r\n                if (e.equals(1024 /* Shift */ | 2 /* Tab */)) {\r\n                    this._closeBtn.focus();\r\n                    e.preventDefault();\r\n                }\r\n            }\r\n        }));\r\n        // Replace all button\r\n        this._replaceAllBtn = this._register(new SimpleButton({\r\n            label: NLS_REPLACE_ALL_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.ReplaceAllAction),\r\n            icon: findReplaceAllIcon,\r\n            onTrigger: () => {\r\n                this._controller.replaceAll();\r\n            }\r\n        }));\r\n        let replacePart = document.createElement('div');\r\n        replacePart.className = 'replace-part';\r\n        replacePart.appendChild(this._replaceInput.domNode);\r\n        const replaceActionsContainer = document.createElement('div');\r\n        replaceActionsContainer.className = 'replace-actions';\r\n        replacePart.appendChild(replaceActionsContainer);\r\n        replaceActionsContainer.appendChild(this._replaceBtn.domNode);\r\n        replaceActionsContainer.appendChild(this._replaceAllBtn.domNode);\r\n        // Toggle replace button\r\n        this._toggleReplaceBtn = this._register(new SimpleButton({\r\n            label: NLS_TOGGLE_REPLACE_MODE_BTN_LABEL,\r\n            className: 'codicon toggle left',\r\n            onTrigger: () => {\r\n                this._state.change({ isReplaceRevealed: !this._isReplaceVisible }, false);\r\n                if (this._isReplaceVisible) {\r\n                    this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\r\n                    this._replaceInput.inputBox.layout();\r\n                }\r\n                this._showViewZone();\r\n            }\r\n        }));\r\n        this._toggleReplaceBtn.setExpanded(this._isReplaceVisible);\r\n        // Widget\r\n        this._domNode = document.createElement('div');\r\n        this._domNode.className = 'editor-widget find-widget';\r\n        this._domNode.setAttribute('aria-hidden', 'true');\r\n        // We need to set this explicitly, otherwise on IE11, the width inheritence of flex doesn't work.\r\n        this._domNode.style.width = `${FIND_WIDGET_INITIAL_WIDTH}px`;\r\n        this._domNode.appendChild(this._toggleReplaceBtn.domNode);\r\n        this._domNode.appendChild(findPart);\r\n        this._domNode.appendChild(replacePart);\r\n        this._resizeSash = new Sash(this._domNode, this, { orientation: 0 /* VERTICAL */, size: 2 });\r\n        this._resized = false;\r\n        let originalWidth = FIND_WIDGET_INITIAL_WIDTH;\r\n        this._register(this._resizeSash.onDidStart(() => {\r\n            originalWidth = dom.getTotalWidth(this._domNode);\r\n        }));\r\n        this._register(this._resizeSash.onDidChange((evt) => {\r\n            this._resized = true;\r\n            let width = originalWidth + evt.startX - evt.currentX;\r\n            if (width < FIND_WIDGET_INITIAL_WIDTH) {\r\n                // narrow down the find widget should be handled by CSS.\r\n                return;\r\n            }\r\n            const maxWidth = parseFloat(dom.getComputedStyle(this._domNode).maxWidth) || 0;\r\n            if (width > maxWidth) {\r\n                return;\r\n            }\r\n            this._domNode.style.width = `${width}px`;\r\n            if (this._isReplaceVisible) {\r\n                this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\r\n            }\r\n            this._findInput.inputBox.layout();\r\n            this._tryUpdateHeight();\r\n        }));\r\n        this._register(this._resizeSash.onDidReset(() => {\r\n            // users double click on the sash\r\n            const currentWidth = dom.getTotalWidth(this._domNode);\r\n            if (currentWidth < FIND_WIDGET_INITIAL_WIDTH) {\r\n                // The editor is narrow and the width of the find widget is controlled fully by CSS.\r\n                return;\r\n            }\r\n            let width = FIND_WIDGET_INITIAL_WIDTH;\r\n            if (!this._resized || currentWidth === FIND_WIDGET_INITIAL_WIDTH) {\r\n                // 1. never resized before, double click should maximizes it\r\n                // 2. users resized it already but its width is the same as default\r\n                const layoutInfo = this._codeEditor.getLayoutInfo();\r\n                width = layoutInfo.width - 28 - layoutInfo.minimap.minimapWidth - 15;\r\n                this._resized = true;\r\n            }\r\n            else {\r\n                /**\r\n                 * no op, the find widget should be shrinked to its default size.\r\n                 */\r\n            }\r\n            this._domNode.style.width = `${width}px`;\r\n            if (this._isReplaceVisible) {\r\n                this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\r\n            }\r\n            this._findInput.inputBox.layout();\r\n        }));\r\n    }\r\n    updateAccessibilitySupport() {\r\n        const value = this._codeEditor.getOption(2 /* accessibilitySupport */);\r\n        this._findInput.setFocusInputOnOptionClick(value !== 2 /* Enabled */);\r\n    }\r\n}\r\nFindWidget.ID = 'editor.contrib.findWidget';\r\nexport class SimpleButton extends Widget {\r\n    constructor(opts) {\r\n        super();\r\n        this._opts = opts;\r\n        let className = 'button';\r\n        if (this._opts.className) {\r\n            className = className + ' ' + this._opts.className;\r\n        }\r\n        if (this._opts.icon) {\r\n            className = className + ' ' + ThemeIcon.asClassName(this._opts.icon);\r\n        }\r\n        this._domNode = document.createElement('div');\r\n        this._domNode.title = this._opts.label;\r\n        this._domNode.tabIndex = 0;\r\n        this._domNode.className = className;\r\n        this._domNode.setAttribute('role', 'button');\r\n        this._domNode.setAttribute('aria-label', this._opts.label);\r\n        this.onclick(this._domNode, (e) => {\r\n            this._opts.onTrigger();\r\n            e.preventDefault();\r\n        });\r\n        this.onkeydown(this._domNode, (e) => {\r\n            if (e.equals(10 /* Space */) || e.equals(3 /* Enter */)) {\r\n                this._opts.onTrigger();\r\n                e.preventDefault();\r\n                return;\r\n            }\r\n            if (this._opts.onKeyDown) {\r\n                this._opts.onKeyDown(e);\r\n            }\r\n        });\r\n    }\r\n    get domNode() {\r\n        return this._domNode;\r\n    }\r\n    isEnabled() {\r\n        return (this._domNode.tabIndex >= 0);\r\n    }\r\n    focus() {\r\n        this._domNode.focus();\r\n    }\r\n    setEnabled(enabled) {\r\n        this._domNode.classList.toggle('disabled', !enabled);\r\n        this._domNode.setAttribute('aria-disabled', String(!enabled));\r\n        this._domNode.tabIndex = enabled ? 0 : -1;\r\n    }\r\n    setExpanded(expanded) {\r\n        this._domNode.setAttribute('aria-expanded', String(!!expanded));\r\n        if (expanded) {\r\n            this._domNode.classList.remove(...ThemeIcon.asClassNameArray(findCollapsedIcon));\r\n            this._domNode.classList.add(...ThemeIcon.asClassNameArray(findExpandedIcon));\r\n        }\r\n        else {\r\n            this._domNode.classList.remove(...ThemeIcon.asClassNameArray(findExpandedIcon));\r\n            this._domNode.classList.add(...ThemeIcon.asClassNameArray(findCollapsedIcon));\r\n        }\r\n    }\r\n}\r\n// theming\r\nregisterThemingParticipant((theme, collector) => {\r\n    const addBackgroundColorRule = (selector, color) => {\r\n        if (color) {\r\n            collector.addRule(`.monaco-editor ${selector} { background-color: ${color}; }`);\r\n        }\r\n    };\r\n    addBackgroundColorRule('.findMatch', theme.getColor(editorFindMatchHighlight));\r\n    addBackgroundColorRule('.currentFindMatch', theme.getColor(editorFindMatch));\r\n    addBackgroundColorRule('.findScope', theme.getColor(editorFindRangeHighlight));\r\n    const widgetBackground = theme.getColor(editorWidgetBackground);\r\n    addBackgroundColorRule('.find-widget', widgetBackground);\r\n    const widgetShadowColor = theme.getColor(widgetShadow);\r\n    if (widgetShadowColor) {\r\n        collector.addRule(`.monaco-editor .find-widget { box-shadow: 0 0 8px 2px ${widgetShadowColor}; }`);\r\n    }\r\n    const findMatchHighlightBorder = theme.getColor(editorFindMatchHighlightBorder);\r\n    if (findMatchHighlightBorder) {\r\n        collector.addRule(`.monaco-editor .findMatch { border: 1px ${theme.type === 'hc' ? 'dotted' : 'solid'} ${findMatchHighlightBorder}; box-sizing: border-box; }`);\r\n    }\r\n    const findMatchBorder = theme.getColor(editorFindMatchBorder);\r\n    if (findMatchBorder) {\r\n        collector.addRule(`.monaco-editor .currentFindMatch { border: 2px solid ${findMatchBorder}; padding: 1px; box-sizing: border-box; }`);\r\n    }\r\n    const findRangeHighlightBorder = theme.getColor(editorFindRangeHighlightBorder);\r\n    if (findRangeHighlightBorder) {\r\n        collector.addRule(`.monaco-editor .findScope { border: 1px ${theme.type === 'hc' ? 'dashed' : 'solid'} ${findRangeHighlightBorder}; }`);\r\n    }\r\n    const hcBorder = theme.getColor(contrastBorder);\r\n    if (hcBorder) {\r\n        collector.addRule(`.monaco-editor .find-widget { border: 1px solid ${hcBorder}; }`);\r\n    }\r\n    const foreground = theme.getColor(editorWidgetForeground);\r\n    if (foreground) {\r\n        collector.addRule(`.monaco-editor .find-widget { color: ${foreground}; }`);\r\n    }\r\n    const error = theme.getColor(errorForeground);\r\n    if (error) {\r\n        collector.addRule(`.monaco-editor .find-widget.no-results .matchesCount { color: ${error}; }`);\r\n    }\r\n    const resizeBorderBackground = theme.getColor(editorWidgetResizeBorder);\r\n    if (resizeBorderBackground) {\r\n        collector.addRule(`.monaco-editor .find-widget .monaco-sash { background-color: ${resizeBorderBackground}; }`);\r\n    }\r\n    else {\r\n        const border = theme.getColor(editorWidgetBorder);\r\n        if (border) {\r\n            collector.addRule(`.monaco-editor .find-widget .monaco-sash { background-color: ${border}; }`);\r\n        }\r\n    }\r\n    // This rule is used to override the outline color for synthetic-focus find input.\r\n    const focusOutline = theme.getColor(focusBorder);\r\n    if (focusOutline) {\r\n        collector.addRule(`.monaco-editor .find-widget .monaco-inputbox.synthetic-focus { outline-color: ${focusOutline}; }`);\r\n    }\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}