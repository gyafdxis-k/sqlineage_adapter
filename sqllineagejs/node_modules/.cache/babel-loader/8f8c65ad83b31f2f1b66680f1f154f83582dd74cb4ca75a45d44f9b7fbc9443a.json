{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { URI } from './uri.js';\nimport * as platform from './platform.js';\nexport var Schemas;\n(function (Schemas) {\n  /**\r\n   * A schema that is used for models that exist in memory\r\n   * only and that have no correspondence on a server or such.\r\n   */\n  Schemas.inMemory = 'inmemory';\n  /**\r\n   * A schema that is used for setting files\r\n   */\n  Schemas.vscode = 'vscode';\n  /**\r\n   * A schema that is used for internal private files\r\n   */\n  Schemas.internal = 'private';\n  /**\r\n   * A walk-through document.\r\n   */\n  Schemas.walkThrough = 'walkThrough';\n  /**\r\n   * An embedded code snippet.\r\n   */\n  Schemas.walkThroughSnippet = 'walkThroughSnippet';\n  Schemas.http = 'http';\n  Schemas.https = 'https';\n  Schemas.file = 'file';\n  Schemas.mailto = 'mailto';\n  Schemas.untitled = 'untitled';\n  Schemas.data = 'data';\n  Schemas.command = 'command';\n  Schemas.vscodeRemote = 'vscode-remote';\n  Schemas.vscodeRemoteResource = 'vscode-remote-resource';\n  Schemas.userData = 'vscode-userdata';\n  Schemas.vscodeCustomEditor = 'vscode-custom-editor';\n  Schemas.vscodeNotebook = 'vscode-notebook';\n  Schemas.vscodeNotebookCell = 'vscode-notebook-cell';\n  Schemas.vscodeNotebookCellMetadata = 'vscode-notebook-cell-metadata';\n  Schemas.vscodeSettings = 'vscode-settings';\n  Schemas.webviewPanel = 'webview-panel';\n  /**\r\n   * Scheme used for loading the wrapper html and script in webviews.\r\n   */\n  Schemas.vscodeWebview = 'vscode-webview';\n  /**\r\n   * Scheme used for loading resources inside of webviews.\r\n   */\n  Schemas.vscodeWebviewResource = 'vscode-webview-resource';\n  /**\r\n   * Scheme used for extension pages\r\n   */\n  Schemas.extension = 'extension';\n  /**\r\n   * Scheme used as a replacement of `file` scheme to load\r\n   * files with our custom protocol handler (desktop only).\r\n   */\n  Schemas.vscodeFileResource = 'vscode-file';\n})(Schemas || (Schemas = {}));\nclass RemoteAuthoritiesImpl {\n  constructor() {\n    this._hosts = Object.create(null);\n    this._ports = Object.create(null);\n    this._connectionTokens = Object.create(null);\n    this._preferredWebSchema = 'http';\n    this._delegate = null;\n  }\n  setPreferredWebSchema(schema) {\n    this._preferredWebSchema = schema;\n  }\n  rewrite(uri) {\n    if (this._delegate) {\n      return this._delegate(uri);\n    }\n    const authority = uri.authority;\n    let host = this._hosts[authority];\n    if (host && host.indexOf(':') !== -1) {\n      host = \"[\".concat(host, \"]\");\n    }\n    const port = this._ports[authority];\n    const connectionToken = this._connectionTokens[authority];\n    let query = \"path=\".concat(encodeURIComponent(uri.path));\n    if (typeof connectionToken === 'string') {\n      query += \"&tkn=\".concat(encodeURIComponent(connectionToken));\n    }\n    return URI.from({\n      scheme: platform.isWeb ? this._preferredWebSchema : Schemas.vscodeRemoteResource,\n      authority: \"\".concat(host, \":\").concat(port),\n      path: \"/vscode-remote-resource\",\n      query\n    });\n  }\n}\nexport const RemoteAuthorities = new RemoteAuthoritiesImpl();\nclass FileAccessImpl {\n  constructor() {\n    this.FALLBACK_AUTHORITY = 'vscode-app';\n  }\n  asBrowserUri(uriOrModule, moduleIdToUrl, __forceCodeFileUri) {\n    const uri = this.toUri(uriOrModule, moduleIdToUrl);\n    // Handle remote URIs via `RemoteAuthorities`\n    if (uri.scheme === Schemas.vscodeRemote) {\n      return RemoteAuthorities.rewrite(uri);\n    }\n    // Only convert the URI if we are in a native context and it has `file:` scheme\n    // and we have explicitly enabled the conversion (sandbox, or ENABLE_VSCODE_BROWSER_CODE_LOADING)\n    if (platform.isNative && (__forceCodeFileUri || platform.isPreferringBrowserCodeLoad) && uri.scheme === Schemas.file) {\n      return uri.with({\n        scheme: Schemas.vscodeFileResource,\n        // We need to provide an authority here so that it can serve\n        // as origin for network and loading matters in chromium.\n        // If the URI is not coming with an authority already, we\n        // add our own\n        authority: uri.authority || this.FALLBACK_AUTHORITY,\n        query: null,\n        fragment: null\n      });\n    }\n    return uri;\n  }\n  toUri(uriOrModule, moduleIdToUrl) {\n    if (URI.isUri(uriOrModule)) {\n      return uriOrModule;\n    }\n    return URI.parse(moduleIdToUrl.toUrl(uriOrModule));\n  }\n}\nexport const FileAccess = new FileAccessImpl();","map":{"version":3,"names":["URI","platform","Schemas","inMemory","vscode","internal","walkThrough","walkThroughSnippet","http","https","file","mailto","untitled","data","command","vscodeRemote","vscodeRemoteResource","userData","vscodeCustomEditor","vscodeNotebook","vscodeNotebookCell","vscodeNotebookCellMetadata","vscodeSettings","webviewPanel","vscodeWebview","vscodeWebviewResource","extension","vscodeFileResource","RemoteAuthoritiesImpl","constructor","_hosts","Object","create","_ports","_connectionTokens","_preferredWebSchema","_delegate","setPreferredWebSchema","schema","rewrite","uri","authority","host","indexOf","concat","port","connectionToken","query","encodeURIComponent","path","from","scheme","isWeb","RemoteAuthorities","FileAccessImpl","FALLBACK_AUTHORITY","asBrowserUri","uriOrModule","moduleIdToUrl","__forceCodeFileUri","toUri","isNative","isPreferringBrowserCodeLoad","with","fragment","isUri","parse","toUrl","FileAccess"],"sources":["C:/Users/Administrator/Desktop/sqllineage-master/sqllineagejs/node_modules/monaco-editor/esm/vs/base/common/network.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { URI } from './uri.js';\r\nimport * as platform from './platform.js';\r\nexport var Schemas;\r\n(function (Schemas) {\r\n    /**\r\n     * A schema that is used for models that exist in memory\r\n     * only and that have no correspondence on a server or such.\r\n     */\r\n    Schemas.inMemory = 'inmemory';\r\n    /**\r\n     * A schema that is used for setting files\r\n     */\r\n    Schemas.vscode = 'vscode';\r\n    /**\r\n     * A schema that is used for internal private files\r\n     */\r\n    Schemas.internal = 'private';\r\n    /**\r\n     * A walk-through document.\r\n     */\r\n    Schemas.walkThrough = 'walkThrough';\r\n    /**\r\n     * An embedded code snippet.\r\n     */\r\n    Schemas.walkThroughSnippet = 'walkThroughSnippet';\r\n    Schemas.http = 'http';\r\n    Schemas.https = 'https';\r\n    Schemas.file = 'file';\r\n    Schemas.mailto = 'mailto';\r\n    Schemas.untitled = 'untitled';\r\n    Schemas.data = 'data';\r\n    Schemas.command = 'command';\r\n    Schemas.vscodeRemote = 'vscode-remote';\r\n    Schemas.vscodeRemoteResource = 'vscode-remote-resource';\r\n    Schemas.userData = 'vscode-userdata';\r\n    Schemas.vscodeCustomEditor = 'vscode-custom-editor';\r\n    Schemas.vscodeNotebook = 'vscode-notebook';\r\n    Schemas.vscodeNotebookCell = 'vscode-notebook-cell';\r\n    Schemas.vscodeNotebookCellMetadata = 'vscode-notebook-cell-metadata';\r\n    Schemas.vscodeSettings = 'vscode-settings';\r\n    Schemas.webviewPanel = 'webview-panel';\r\n    /**\r\n     * Scheme used for loading the wrapper html and script in webviews.\r\n     */\r\n    Schemas.vscodeWebview = 'vscode-webview';\r\n    /**\r\n     * Scheme used for loading resources inside of webviews.\r\n     */\r\n    Schemas.vscodeWebviewResource = 'vscode-webview-resource';\r\n    /**\r\n     * Scheme used for extension pages\r\n     */\r\n    Schemas.extension = 'extension';\r\n    /**\r\n     * Scheme used as a replacement of `file` scheme to load\r\n     * files with our custom protocol handler (desktop only).\r\n     */\r\n    Schemas.vscodeFileResource = 'vscode-file';\r\n})(Schemas || (Schemas = {}));\r\nclass RemoteAuthoritiesImpl {\r\n    constructor() {\r\n        this._hosts = Object.create(null);\r\n        this._ports = Object.create(null);\r\n        this._connectionTokens = Object.create(null);\r\n        this._preferredWebSchema = 'http';\r\n        this._delegate = null;\r\n    }\r\n    setPreferredWebSchema(schema) {\r\n        this._preferredWebSchema = schema;\r\n    }\r\n    rewrite(uri) {\r\n        if (this._delegate) {\r\n            return this._delegate(uri);\r\n        }\r\n        const authority = uri.authority;\r\n        let host = this._hosts[authority];\r\n        if (host && host.indexOf(':') !== -1) {\r\n            host = `[${host}]`;\r\n        }\r\n        const port = this._ports[authority];\r\n        const connectionToken = this._connectionTokens[authority];\r\n        let query = `path=${encodeURIComponent(uri.path)}`;\r\n        if (typeof connectionToken === 'string') {\r\n            query += `&tkn=${encodeURIComponent(connectionToken)}`;\r\n        }\r\n        return URI.from({\r\n            scheme: platform.isWeb ? this._preferredWebSchema : Schemas.vscodeRemoteResource,\r\n            authority: `${host}:${port}`,\r\n            path: `/vscode-remote-resource`,\r\n            query\r\n        });\r\n    }\r\n}\r\nexport const RemoteAuthorities = new RemoteAuthoritiesImpl();\r\nclass FileAccessImpl {\r\n    constructor() {\r\n        this.FALLBACK_AUTHORITY = 'vscode-app';\r\n    }\r\n    asBrowserUri(uriOrModule, moduleIdToUrl, __forceCodeFileUri) {\r\n        const uri = this.toUri(uriOrModule, moduleIdToUrl);\r\n        // Handle remote URIs via `RemoteAuthorities`\r\n        if (uri.scheme === Schemas.vscodeRemote) {\r\n            return RemoteAuthorities.rewrite(uri);\r\n        }\r\n        // Only convert the URI if we are in a native context and it has `file:` scheme\r\n        // and we have explicitly enabled the conversion (sandbox, or ENABLE_VSCODE_BROWSER_CODE_LOADING)\r\n        if (platform.isNative && (__forceCodeFileUri || platform.isPreferringBrowserCodeLoad) && uri.scheme === Schemas.file) {\r\n            return uri.with({\r\n                scheme: Schemas.vscodeFileResource,\r\n                // We need to provide an authority here so that it can serve\r\n                // as origin for network and loading matters in chromium.\r\n                // If the URI is not coming with an authority already, we\r\n                // add our own\r\n                authority: uri.authority || this.FALLBACK_AUTHORITY,\r\n                query: null,\r\n                fragment: null\r\n            });\r\n        }\r\n        return uri;\r\n    }\r\n    toUri(uriOrModule, moduleIdToUrl) {\r\n        if (URI.isUri(uriOrModule)) {\r\n            return uriOrModule;\r\n        }\r\n        return URI.parse(moduleIdToUrl.toUrl(uriOrModule));\r\n    }\r\n}\r\nexport const FileAccess = new FileAccessImpl();\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}