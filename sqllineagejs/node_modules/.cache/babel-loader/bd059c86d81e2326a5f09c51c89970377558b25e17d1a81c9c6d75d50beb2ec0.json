{"ast":null,"code":"// prep-work\nconst _data = new Uint8Array(16);\nconst _hex = [];\nfor (let i = 0; i < 256; i++) {\n  _hex.push(i.toString(16).padStart(2, '0'));\n}\n// todo@jrieken\n// 1. node nodejs use`crypto#randomBytes`, see: https://nodejs.org/docs/latest/api/crypto.html#crypto_crypto_randombytes_size_callback\n// 2. use browser-crypto\nconst _fillRandomValues = function (bucket) {\n  for (let i = 0; i < bucket.length; i++) {\n    bucket[i] = Math.floor(Math.random() * 256);\n  }\n  return bucket;\n};\nexport function generateUuid() {\n  // get data\n  _fillRandomValues(_data);\n  // set version bits\n  _data[6] = _data[6] & 0x0f | 0x40;\n  _data[8] = _data[8] & 0x3f | 0x80;\n  // print as string\n  let i = 0;\n  let result = '';\n  result += _hex[_data[i++]];\n  result += _hex[_data[i++]];\n  result += _hex[_data[i++]];\n  result += _hex[_data[i++]];\n  result += '-';\n  result += _hex[_data[i++]];\n  result += _hex[_data[i++]];\n  result += '-';\n  result += _hex[_data[i++]];\n  result += _hex[_data[i++]];\n  result += '-';\n  result += _hex[_data[i++]];\n  result += _hex[_data[i++]];\n  result += '-';\n  result += _hex[_data[i++]];\n  result += _hex[_data[i++]];\n  result += _hex[_data[i++]];\n  result += _hex[_data[i++]];\n  result += _hex[_data[i++]];\n  result += _hex[_data[i++]];\n  return result;\n}","map":{"version":3,"names":["_data","Uint8Array","_hex","i","push","toString","padStart","_fillRandomValues","bucket","length","Math","floor","random","generateUuid","result"],"sources":["C:/Users/Administrator/Desktop/sqllineage-master/sqllineagejs/node_modules/monaco-editor/esm/vs/base/common/uuid.js"],"sourcesContent":["// prep-work\r\nconst _data = new Uint8Array(16);\r\nconst _hex = [];\r\nfor (let i = 0; i < 256; i++) {\r\n    _hex.push(i.toString(16).padStart(2, '0'));\r\n}\r\n// todo@jrieken\r\n// 1. node nodejs use`crypto#randomBytes`, see: https://nodejs.org/docs/latest/api/crypto.html#crypto_crypto_randombytes_size_callback\r\n// 2. use browser-crypto\r\nconst _fillRandomValues = function (bucket) {\r\n    for (let i = 0; i < bucket.length; i++) {\r\n        bucket[i] = Math.floor(Math.random() * 256);\r\n    }\r\n    return bucket;\r\n};\r\nexport function generateUuid() {\r\n    // get data\r\n    _fillRandomValues(_data);\r\n    // set version bits\r\n    _data[6] = (_data[6] & 0x0f) | 0x40;\r\n    _data[8] = (_data[8] & 0x3f) | 0x80;\r\n    // print as string\r\n    let i = 0;\r\n    let result = '';\r\n    result += _hex[_data[i++]];\r\n    result += _hex[_data[i++]];\r\n    result += _hex[_data[i++]];\r\n    result += _hex[_data[i++]];\r\n    result += '-';\r\n    result += _hex[_data[i++]];\r\n    result += _hex[_data[i++]];\r\n    result += '-';\r\n    result += _hex[_data[i++]];\r\n    result += _hex[_data[i++]];\r\n    result += '-';\r\n    result += _hex[_data[i++]];\r\n    result += _hex[_data[i++]];\r\n    result += '-';\r\n    result += _hex[_data[i++]];\r\n    result += _hex[_data[i++]];\r\n    result += _hex[_data[i++]];\r\n    result += _hex[_data[i++]];\r\n    result += _hex[_data[i++]];\r\n    result += _hex[_data[i++]];\r\n    return result;\r\n}\r\n"],"mappings":"AAAA;AACA,MAAMA,KAAK,GAAG,IAAIC,UAAU,CAAC,EAAE,CAAC;AAChC,MAAMC,IAAI,GAAG,EAAE;AACf,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,GAAG,EAAEA,CAAC,EAAE,EAAE;EAC1BD,IAAI,CAACE,IAAI,CAACD,CAAC,CAACE,QAAQ,CAAC,EAAE,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;AAC9C;AACA;AACA;AACA;AACA,MAAMC,iBAAiB,GAAG,SAAAA,CAAUC,MAAM,EAAE;EACxC,KAAK,IAAIL,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGK,MAAM,CAACC,MAAM,EAAEN,CAAC,EAAE,EAAE;IACpCK,MAAM,CAACL,CAAC,CAAC,GAAGO,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;EAC/C;EACA,OAAOJ,MAAM;AACjB,CAAC;AACD,OAAO,SAASK,YAAYA,CAAA,EAAG;EAC3B;EACAN,iBAAiB,CAACP,KAAK,CAAC;EACxB;EACAA,KAAK,CAAC,CAAC,CAAC,GAAIA,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,GAAI,IAAI;EACnCA,KAAK,CAAC,CAAC,CAAC,GAAIA,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,GAAI,IAAI;EACnC;EACA,IAAIG,CAAC,GAAG,CAAC;EACT,IAAIW,MAAM,GAAG,EAAE;EACfA,MAAM,IAAIZ,IAAI,CAACF,KAAK,CAACG,CAAC,EAAE,CAAC,CAAC;EAC1BW,MAAM,IAAIZ,IAAI,CAACF,KAAK,CAACG,CAAC,EAAE,CAAC,CAAC;EAC1BW,MAAM,IAAIZ,IAAI,CAACF,KAAK,CAACG,CAAC,EAAE,CAAC,CAAC;EAC1BW,MAAM,IAAIZ,IAAI,CAACF,KAAK,CAACG,CAAC,EAAE,CAAC,CAAC;EAC1BW,MAAM,IAAI,GAAG;EACbA,MAAM,IAAIZ,IAAI,CAACF,KAAK,CAACG,CAAC,EAAE,CAAC,CAAC;EAC1BW,MAAM,IAAIZ,IAAI,CAACF,KAAK,CAACG,CAAC,EAAE,CAAC,CAAC;EAC1BW,MAAM,IAAI,GAAG;EACbA,MAAM,IAAIZ,IAAI,CAACF,KAAK,CAACG,CAAC,EAAE,CAAC,CAAC;EAC1BW,MAAM,IAAIZ,IAAI,CAACF,KAAK,CAACG,CAAC,EAAE,CAAC,CAAC;EAC1BW,MAAM,IAAI,GAAG;EACbA,MAAM,IAAIZ,IAAI,CAACF,KAAK,CAACG,CAAC,EAAE,CAAC,CAAC;EAC1BW,MAAM,IAAIZ,IAAI,CAACF,KAAK,CAACG,CAAC,EAAE,CAAC,CAAC;EAC1BW,MAAM,IAAI,GAAG;EACbA,MAAM,IAAIZ,IAAI,CAACF,KAAK,CAACG,CAAC,EAAE,CAAC,CAAC;EAC1BW,MAAM,IAAIZ,IAAI,CAACF,KAAK,CAACG,CAAC,EAAE,CAAC,CAAC;EAC1BW,MAAM,IAAIZ,IAAI,CAACF,KAAK,CAACG,CAAC,EAAE,CAAC,CAAC;EAC1BW,MAAM,IAAIZ,IAAI,CAACF,KAAK,CAACG,CAAC,EAAE,CAAC,CAAC;EAC1BW,MAAM,IAAIZ,IAAI,CAACF,KAAK,CAACG,CAAC,EAAE,CAAC,CAAC;EAC1BW,MAAM,IAAIZ,IAAI,CAACF,KAAK,CAACG,CAAC,EAAE,CAAC,CAAC;EAC1B,OAAOW,MAAM;AACjB"},"metadata":{},"sourceType":"module","externalDependencies":[]}