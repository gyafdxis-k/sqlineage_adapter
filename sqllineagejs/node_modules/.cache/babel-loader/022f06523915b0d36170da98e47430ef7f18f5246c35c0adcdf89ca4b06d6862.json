{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport { RunOnceScheduler, createCancelablePromise, disposableTimeout } from '../../../base/common/async.js';\nimport { onUnexpectedError, onUnexpectedExternalError } from '../../../base/common/errors.js';\nimport { toDisposable, DisposableStore } from '../../../base/common/lifecycle.js';\nimport { StableEditorScrollState } from '../../browser/core/editorState.js';\nimport { registerEditorContribution, registerEditorAction, EditorAction } from '../../browser/editorExtensions.js';\nimport { CodeLensProviderRegistry } from '../../common/modes.js';\nimport { getCodeLensModel } from './codelens.js';\nimport { CodeLensWidget, CodeLensHelper } from './codelensWidget.js';\nimport { ICommandService } from '../../../platform/commands/common/commands.js';\nimport { INotificationService } from '../../../platform/notification/common/notification.js';\nimport { ICodeLensCache } from './codeLensCache.js';\nimport * as dom from '../../../base/browser/dom.js';\nimport { hash } from '../../../base/common/hash.js';\nimport { IQuickInputService } from '../../../platform/quickinput/common/quickInput.js';\nimport { localize } from '../../../nls.js';\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\nimport { LanguageFeatureRequestDelays } from '../../common/modes/languageFeatureRegistry.js';\nlet CodeLensContribution = class CodeLensContribution {\n  constructor(_editor, _commandService, _notificationService, _codeLensCache) {\n    this._editor = _editor;\n    this._commandService = _commandService;\n    this._notificationService = _notificationService;\n    this._codeLensCache = _codeLensCache;\n    this._disposables = new DisposableStore();\n    this._localToDispose = new DisposableStore();\n    this._lenses = [];\n    this._getCodeLensModelDelays = new LanguageFeatureRequestDelays(CodeLensProviderRegistry, 250, 2500);\n    this._oldCodeLensModels = new DisposableStore();\n    this._resolveCodeLensesDelays = new LanguageFeatureRequestDelays(CodeLensProviderRegistry, 250, 2500);\n    this._resolveCodeLensesScheduler = new RunOnceScheduler(() => this._resolveCodeLensesInViewport(), this._resolveCodeLensesDelays.min);\n    this._disposables.add(this._editor.onDidChangeModel(() => this._onModelChange()));\n    this._disposables.add(this._editor.onDidChangeModelLanguage(() => this._onModelChange()));\n    this._disposables.add(this._editor.onDidChangeConfiguration(e => {\n      if (e.hasChanged(38 /* fontInfo */) || e.hasChanged(13 /* codeLensFontSize */) || e.hasChanged(12 /* codeLensFontFamily */)) {\n        this._updateLensStyle();\n      }\n      if (e.hasChanged(11 /* codeLens */)) {\n        this._onModelChange();\n      }\n    }));\n    this._disposables.add(CodeLensProviderRegistry.onDidChange(this._onModelChange, this));\n    this._onModelChange();\n    this._styleClassName = '_' + hash(this._editor.getId()).toString(16);\n    this._styleElement = dom.createStyleSheet(dom.isInShadowDOM(this._editor.getContainerDomNode()) ? this._editor.getContainerDomNode() : undefined);\n    this._updateLensStyle();\n  }\n  dispose() {\n    var _a;\n    this._localDispose();\n    this._disposables.dispose();\n    this._oldCodeLensModels.dispose();\n    (_a = this._currentCodeLensModel) === null || _a === void 0 ? void 0 : _a.dispose();\n    this._styleElement.remove();\n  }\n  _getLayoutInfo() {\n    let fontSize = this._editor.getOption(13 /* codeLensFontSize */);\n    let codeLensHeight;\n    if (!fontSize || fontSize < 5) {\n      fontSize = this._editor.getOption(40 /* fontSize */) * .9 | 0;\n      codeLensHeight = this._editor.getOption(53 /* lineHeight */);\n    } else {\n      codeLensHeight = fontSize * Math.max(1.3, this._editor.getOption(53 /* lineHeight */) / this._editor.getOption(40 /* fontSize */)) | 0;\n    }\n    return {\n      codeLensHeight,\n      fontSize\n    };\n  }\n  _updateLensStyle() {\n    var _a;\n    const {\n      codeLensHeight,\n      fontSize\n    } = this._getLayoutInfo();\n    const fontFamily = this._editor.getOption(12 /* codeLensFontFamily */);\n    const editorFontInfo = this._editor.getOption(38 /* fontInfo */);\n    const fontFamilyVar = \"--codelens-font-family\".concat(this._styleClassName);\n    let newStyle = \"\\n\\t\\t.monaco-editor .codelens-decoration.\".concat(this._styleClassName, \" { line-height: \").concat(codeLensHeight, \"px; font-size: \").concat(fontSize, \"px; padding-right: \").concat(Math.round(fontSize * 0.5), \"px; font-feature-settings: \").concat(editorFontInfo.fontFeatureSettings, \" }\\n\\t\\t.monaco-editor .codelens-decoration.\").concat(this._styleClassName, \" span.codicon { line-height: \").concat(codeLensHeight, \"px; font-size: \").concat(fontSize, \"px; }\\n\\t\\t\");\n    if (fontFamily) {\n      newStyle += \".monaco-editor .codelens-decoration.\".concat(this._styleClassName, \" { font-family: var(\").concat(fontFamilyVar, \")}\");\n    }\n    this._styleElement.textContent = newStyle;\n    (_a = this._editor.getDomNode()) === null || _a === void 0 ? void 0 : _a.style.setProperty(fontFamilyVar, fontFamily !== null && fontFamily !== void 0 ? fontFamily : 'inherit');\n    //\n    this._editor.changeViewZones(accessor => {\n      for (let lens of this._lenses) {\n        lens.updateHeight(codeLensHeight, accessor);\n      }\n    });\n  }\n  _localDispose() {\n    var _a, _b, _c;\n    (_a = this._getCodeLensModelPromise) === null || _a === void 0 ? void 0 : _a.cancel();\n    this._getCodeLensModelPromise = undefined;\n    (_b = this._resolveCodeLensesPromise) === null || _b === void 0 ? void 0 : _b.cancel();\n    this._resolveCodeLensesPromise = undefined;\n    this._localToDispose.clear();\n    this._oldCodeLensModels.clear();\n    (_c = this._currentCodeLensModel) === null || _c === void 0 ? void 0 : _c.dispose();\n  }\n  _onModelChange() {\n    this._localDispose();\n    const model = this._editor.getModel();\n    if (!model) {\n      return;\n    }\n    if (!this._editor.getOption(11 /* codeLens */)) {\n      return;\n    }\n    const cachedLenses = this._codeLensCache.get(model);\n    if (cachedLenses) {\n      this._renderCodeLensSymbols(cachedLenses);\n    }\n    if (!CodeLensProviderRegistry.has(model)) {\n      // no provider -> return but check with\n      // cached lenses. they expire after 30 seconds\n      if (cachedLenses) {\n        this._localToDispose.add(disposableTimeout(() => {\n          const cachedLensesNow = this._codeLensCache.get(model);\n          if (cachedLenses === cachedLensesNow) {\n            this._codeLensCache.delete(model);\n            this._onModelChange();\n          }\n        }, 30 * 1000));\n      }\n      return;\n    }\n    for (const provider of CodeLensProviderRegistry.all(model)) {\n      if (typeof provider.onDidChange === 'function') {\n        let registration = provider.onDidChange(() => scheduler.schedule());\n        this._localToDispose.add(registration);\n      }\n    }\n    const scheduler = new RunOnceScheduler(() => {\n      var _a;\n      const t1 = Date.now();\n      (_a = this._getCodeLensModelPromise) === null || _a === void 0 ? void 0 : _a.cancel();\n      this._getCodeLensModelPromise = createCancelablePromise(token => getCodeLensModel(model, token));\n      this._getCodeLensModelPromise.then(result => {\n        if (this._currentCodeLensModel) {\n          this._oldCodeLensModels.add(this._currentCodeLensModel);\n        }\n        this._currentCodeLensModel = result;\n        // cache model to reduce flicker\n        this._codeLensCache.put(model, result);\n        // update moving average\n        const newDelay = this._getCodeLensModelDelays.update(model, Date.now() - t1);\n        scheduler.delay = newDelay;\n        // render lenses\n        this._renderCodeLensSymbols(result);\n        this._resolveCodeLensesInViewport();\n      }, onUnexpectedError);\n    }, this._getCodeLensModelDelays.get(model));\n    this._localToDispose.add(scheduler);\n    this._localToDispose.add(toDisposable(() => this._resolveCodeLensesScheduler.cancel()));\n    this._localToDispose.add(this._editor.onDidChangeModelContent(() => {\n      this._editor.changeDecorations(decorationsAccessor => {\n        this._editor.changeViewZones(viewZonesAccessor => {\n          let toDispose = [];\n          let lastLensLineNumber = -1;\n          this._lenses.forEach(lens => {\n            if (!lens.isValid() || lastLensLineNumber === lens.getLineNumber()) {\n              // invalid -> lens collapsed, attach range doesn't exist anymore\n              // line_number -> lenses should never be on the same line\n              toDispose.push(lens);\n            } else {\n              lens.update(viewZonesAccessor);\n              lastLensLineNumber = lens.getLineNumber();\n            }\n          });\n          let helper = new CodeLensHelper();\n          toDispose.forEach(l => {\n            l.dispose(helper, viewZonesAccessor);\n            this._lenses.splice(this._lenses.indexOf(l), 1);\n          });\n          helper.commit(decorationsAccessor);\n        });\n      });\n      // Ask for all references again\n      scheduler.schedule();\n    }));\n    this._localToDispose.add(this._editor.onDidFocusEditorWidget(() => {\n      scheduler.schedule();\n    }));\n    this._localToDispose.add(this._editor.onDidScrollChange(e => {\n      if (e.scrollTopChanged && this._lenses.length > 0) {\n        this._resolveCodeLensesInViewportSoon();\n      }\n    }));\n    this._localToDispose.add(this._editor.onDidLayoutChange(() => {\n      this._resolveCodeLensesInViewportSoon();\n    }));\n    this._localToDispose.add(toDisposable(() => {\n      if (this._editor.getModel()) {\n        const scrollState = StableEditorScrollState.capture(this._editor);\n        this._editor.changeDecorations(decorationsAccessor => {\n          this._editor.changeViewZones(viewZonesAccessor => {\n            this._disposeAllLenses(decorationsAccessor, viewZonesAccessor);\n          });\n        });\n        scrollState.restore(this._editor);\n      } else {\n        // No accessors available\n        this._disposeAllLenses(undefined, undefined);\n      }\n    }));\n    this._localToDispose.add(this._editor.onMouseDown(e => {\n      if (e.target.type !== 9 /* CONTENT_WIDGET */) {\n        return;\n      }\n      let target = e.target.element;\n      if ((target === null || target === void 0 ? void 0 : target.tagName) === 'SPAN') {\n        target = target.parentElement;\n      }\n      if ((target === null || target === void 0 ? void 0 : target.tagName) === 'A') {\n        for (const lens of this._lenses) {\n          let command = lens.getCommand(target);\n          if (command) {\n            this._commandService.executeCommand(command.id, ...(command.arguments || [])).catch(err => this._notificationService.error(err));\n            break;\n          }\n        }\n      }\n    }));\n    scheduler.schedule();\n  }\n  _disposeAllLenses(decChangeAccessor, viewZoneChangeAccessor) {\n    const helper = new CodeLensHelper();\n    for (const lens of this._lenses) {\n      lens.dispose(helper, viewZoneChangeAccessor);\n    }\n    if (decChangeAccessor) {\n      helper.commit(decChangeAccessor);\n    }\n    this._lenses.length = 0;\n  }\n  _renderCodeLensSymbols(symbols) {\n    if (!this._editor.hasModel()) {\n      return;\n    }\n    let maxLineNumber = this._editor.getModel().getLineCount();\n    let groups = [];\n    let lastGroup;\n    for (let symbol of symbols.lenses) {\n      let line = symbol.symbol.range.startLineNumber;\n      if (line < 1 || line > maxLineNumber) {\n        // invalid code lens\n        continue;\n      } else if (lastGroup && lastGroup[lastGroup.length - 1].symbol.range.startLineNumber === line) {\n        // on same line as previous\n        lastGroup.push(symbol);\n      } else {\n        // on later line as previous\n        lastGroup = [symbol];\n        groups.push(lastGroup);\n      }\n    }\n    const scrollState = StableEditorScrollState.capture(this._editor);\n    const layoutInfo = this._getLayoutInfo();\n    this._editor.changeDecorations(decorationsAccessor => {\n      this._editor.changeViewZones(viewZoneAccessor => {\n        const helper = new CodeLensHelper();\n        let codeLensIndex = 0;\n        let groupsIndex = 0;\n        while (groupsIndex < groups.length && codeLensIndex < this._lenses.length) {\n          let symbolsLineNumber = groups[groupsIndex][0].symbol.range.startLineNumber;\n          let codeLensLineNumber = this._lenses[codeLensIndex].getLineNumber();\n          if (codeLensLineNumber < symbolsLineNumber) {\n            this._lenses[codeLensIndex].dispose(helper, viewZoneAccessor);\n            this._lenses.splice(codeLensIndex, 1);\n          } else if (codeLensLineNumber === symbolsLineNumber) {\n            this._lenses[codeLensIndex].updateCodeLensSymbols(groups[groupsIndex], helper);\n            groupsIndex++;\n            codeLensIndex++;\n          } else {\n            this._lenses.splice(codeLensIndex, 0, new CodeLensWidget(groups[groupsIndex], this._editor, this._styleClassName, helper, viewZoneAccessor, layoutInfo.codeLensHeight, () => this._resolveCodeLensesInViewportSoon()));\n            codeLensIndex++;\n            groupsIndex++;\n          }\n        }\n        // Delete extra code lenses\n        while (codeLensIndex < this._lenses.length) {\n          this._lenses[codeLensIndex].dispose(helper, viewZoneAccessor);\n          this._lenses.splice(codeLensIndex, 1);\n        }\n        // Create extra symbols\n        while (groupsIndex < groups.length) {\n          this._lenses.push(new CodeLensWidget(groups[groupsIndex], this._editor, this._styleClassName, helper, viewZoneAccessor, layoutInfo.codeLensHeight, () => this._resolveCodeLensesInViewportSoon()));\n          groupsIndex++;\n        }\n        helper.commit(decorationsAccessor);\n      });\n    });\n    scrollState.restore(this._editor);\n  }\n  _resolveCodeLensesInViewportSoon() {\n    const model = this._editor.getModel();\n    if (model) {\n      this._resolveCodeLensesScheduler.schedule();\n    }\n  }\n  _resolveCodeLensesInViewport() {\n    var _a;\n    (_a = this._resolveCodeLensesPromise) === null || _a === void 0 ? void 0 : _a.cancel();\n    this._resolveCodeLensesPromise = undefined;\n    const model = this._editor.getModel();\n    if (!model) {\n      return;\n    }\n    const toResolve = [];\n    const lenses = [];\n    this._lenses.forEach(lens => {\n      const request = lens.computeIfNecessary(model);\n      if (request) {\n        toResolve.push(request);\n        lenses.push(lens);\n      }\n    });\n    if (toResolve.length === 0) {\n      return;\n    }\n    const t1 = Date.now();\n    const resolvePromise = createCancelablePromise(token => {\n      const promises = toResolve.map((request, i) => {\n        const resolvedSymbols = new Array(request.length);\n        const promises = request.map((request, i) => {\n          if (!request.symbol.command && typeof request.provider.resolveCodeLens === 'function') {\n            return Promise.resolve(request.provider.resolveCodeLens(model, request.symbol, token)).then(symbol => {\n              resolvedSymbols[i] = symbol;\n            }, onUnexpectedExternalError);\n          } else {\n            resolvedSymbols[i] = request.symbol;\n            return Promise.resolve(undefined);\n          }\n        });\n        return Promise.all(promises).then(() => {\n          if (!token.isCancellationRequested && !lenses[i].isDisposed()) {\n            lenses[i].updateCommands(resolvedSymbols);\n          }\n        });\n      });\n      return Promise.all(promises);\n    });\n    this._resolveCodeLensesPromise = resolvePromise;\n    this._resolveCodeLensesPromise.then(() => {\n      // update moving average\n      const newDelay = this._resolveCodeLensesDelays.update(model, Date.now() - t1);\n      this._resolveCodeLensesScheduler.delay = newDelay;\n      if (this._currentCodeLensModel) {\n        // update the cached state with new resolved items\n        this._codeLensCache.put(model, this._currentCodeLensModel);\n      }\n      this._oldCodeLensModels.clear(); // dispose old models once we have updated the UI with the current model\n      if (resolvePromise === this._resolveCodeLensesPromise) {\n        this._resolveCodeLensesPromise = undefined;\n      }\n    }, err => {\n      onUnexpectedError(err); // can also be cancellation!\n      if (resolvePromise === this._resolveCodeLensesPromise) {\n        this._resolveCodeLensesPromise = undefined;\n      }\n    });\n  }\n  getLenses() {\n    return this._lenses;\n  }\n};\nCodeLensContribution.ID = 'css.editor.codeLens';\nCodeLensContribution = __decorate([__param(1, ICommandService), __param(2, INotificationService), __param(3, ICodeLensCache)], CodeLensContribution);\nexport { CodeLensContribution };\nregisterEditorContribution(CodeLensContribution.ID, CodeLensContribution);\nregisterEditorAction(class ShowLensesInCurrentLine extends EditorAction {\n  constructor() {\n    super({\n      id: 'codelens.showLensesInCurrentLine',\n      precondition: EditorContextKeys.hasCodeLensProvider,\n      label: localize('showLensOnLine', \"Show CodeLens Commands For Current Line\"),\n      alias: 'Show CodeLens Commands For Current Line'\n    });\n  }\n  run(accessor, editor) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!editor.hasModel()) {\n        return;\n      }\n      const quickInputService = accessor.get(IQuickInputService);\n      const commandService = accessor.get(ICommandService);\n      const notificationService = accessor.get(INotificationService);\n      const lineNumber = editor.getSelection().positionLineNumber;\n      const codelensController = editor.getContribution(CodeLensContribution.ID);\n      const items = [];\n      for (let lens of codelensController.getLenses()) {\n        if (lens.getLineNumber() === lineNumber) {\n          for (let item of lens.getItems()) {\n            const {\n              command\n            } = item.symbol;\n            if (command) {\n              items.push({\n                label: command.title,\n                command: command\n              });\n            }\n          }\n        }\n      }\n      if (items.length === 0) {\n        // We dont want an empty picker\n        return;\n      }\n      const item = yield quickInputService.pick(items, {\n        canPickMany: false\n      });\n      if (!item) {\n        // Nothing picked\n        return;\n      }\n      try {\n        yield commandService.executeCommand(item.command.id, ...(item.command.arguments || []));\n      } catch (err) {\n        notificationService.error(err);\n      }\n    });\n  }\n});","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","RunOnceScheduler","createCancelablePromise","disposableTimeout","onUnexpectedError","onUnexpectedExternalError","toDisposable","DisposableStore","StableEditorScrollState","registerEditorContribution","registerEditorAction","EditorAction","CodeLensProviderRegistry","getCodeLensModel","CodeLensWidget","CodeLensHelper","ICommandService","INotificationService","ICodeLensCache","dom","hash","IQuickInputService","localize","EditorContextKeys","LanguageFeatureRequestDelays","CodeLensContribution","constructor","_editor","_commandService","_notificationService","_codeLensCache","_disposables","_localToDispose","_lenses","_getCodeLensModelDelays","_oldCodeLensModels","_resolveCodeLensesDelays","_resolveCodeLensesScheduler","_resolveCodeLensesInViewport","min","add","onDidChangeModel","_onModelChange","onDidChangeModelLanguage","onDidChangeConfiguration","hasChanged","_updateLensStyle","onDidChange","_styleClassName","getId","toString","_styleElement","createStyleSheet","isInShadowDOM","getContainerDomNode","undefined","dispose","_a","_localDispose","_currentCodeLensModel","remove","_getLayoutInfo","fontSize","getOption","codeLensHeight","Math","max","fontFamily","editorFontInfo","fontFamilyVar","concat","newStyle","round","fontFeatureSettings","textContent","getDomNode","style","setProperty","changeViewZones","accessor","lens","updateHeight","_b","_c","_getCodeLensModelPromise","cancel","_resolveCodeLensesPromise","clear","model","getModel","cachedLenses","get","_renderCodeLensSymbols","has","cachedLensesNow","delete","provider","all","registration","scheduler","schedule","t1","Date","now","token","put","newDelay","update","delay","onDidChangeModelContent","changeDecorations","decorationsAccessor","viewZonesAccessor","toDispose","lastLensLineNumber","forEach","isValid","getLineNumber","push","helper","l","splice","indexOf","commit","onDidFocusEditorWidget","onDidScrollChange","scrollTopChanged","_resolveCodeLensesInViewportSoon","onDidLayoutChange","scrollState","capture","_disposeAllLenses","restore","onMouseDown","type","element","tagName","parentElement","command","getCommand","executeCommand","id","catch","err","error","decChangeAccessor","viewZoneChangeAccessor","symbols","hasModel","maxLineNumber","getLineCount","groups","lastGroup","symbol","lenses","line","range","startLineNumber","layoutInfo","viewZoneAccessor","codeLensIndex","groupsIndex","symbolsLineNumber","codeLensLineNumber","updateCodeLensSymbols","toResolve","request","computeIfNecessary","resolvePromise","promises","map","resolvedSymbols","Array","resolveCodeLens","isCancellationRequested","isDisposed","updateCommands","getLenses","ID","ShowLensesInCurrentLine","precondition","hasCodeLensProvider","label","alias","run","editor","quickInputService","commandService","notificationService","lineNumber","getSelection","positionLineNumber","codelensController","getContribution","items","item","getItems","title","pick","canPickMany"],"sources":["C:/Users/Administrator/Desktop/sqllineage-master/sqllineagejs/node_modules/monaco-editor/esm/vs/editor/contrib/codelens/codelensController.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { RunOnceScheduler, createCancelablePromise, disposableTimeout } from '../../../base/common/async.js';\r\nimport { onUnexpectedError, onUnexpectedExternalError } from '../../../base/common/errors.js';\r\nimport { toDisposable, DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { StableEditorScrollState } from '../../browser/core/editorState.js';\r\nimport { registerEditorContribution, registerEditorAction, EditorAction } from '../../browser/editorExtensions.js';\r\nimport { CodeLensProviderRegistry } from '../../common/modes.js';\r\nimport { getCodeLensModel } from './codelens.js';\r\nimport { CodeLensWidget, CodeLensHelper } from './codelensWidget.js';\r\nimport { ICommandService } from '../../../platform/commands/common/commands.js';\r\nimport { INotificationService } from '../../../platform/notification/common/notification.js';\r\nimport { ICodeLensCache } from './codeLensCache.js';\r\nimport * as dom from '../../../base/browser/dom.js';\r\nimport { hash } from '../../../base/common/hash.js';\r\nimport { IQuickInputService } from '../../../platform/quickinput/common/quickInput.js';\r\nimport { localize } from '../../../nls.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { LanguageFeatureRequestDelays } from '../../common/modes/languageFeatureRegistry.js';\r\nlet CodeLensContribution = class CodeLensContribution {\r\n    constructor(_editor, _commandService, _notificationService, _codeLensCache) {\r\n        this._editor = _editor;\r\n        this._commandService = _commandService;\r\n        this._notificationService = _notificationService;\r\n        this._codeLensCache = _codeLensCache;\r\n        this._disposables = new DisposableStore();\r\n        this._localToDispose = new DisposableStore();\r\n        this._lenses = [];\r\n        this._getCodeLensModelDelays = new LanguageFeatureRequestDelays(CodeLensProviderRegistry, 250, 2500);\r\n        this._oldCodeLensModels = new DisposableStore();\r\n        this._resolveCodeLensesDelays = new LanguageFeatureRequestDelays(CodeLensProviderRegistry, 250, 2500);\r\n        this._resolveCodeLensesScheduler = new RunOnceScheduler(() => this._resolveCodeLensesInViewport(), this._resolveCodeLensesDelays.min);\r\n        this._disposables.add(this._editor.onDidChangeModel(() => this._onModelChange()));\r\n        this._disposables.add(this._editor.onDidChangeModelLanguage(() => this._onModelChange()));\r\n        this._disposables.add(this._editor.onDidChangeConfiguration((e) => {\r\n            if (e.hasChanged(38 /* fontInfo */) || e.hasChanged(13 /* codeLensFontSize */) || e.hasChanged(12 /* codeLensFontFamily */)) {\r\n                this._updateLensStyle();\r\n            }\r\n            if (e.hasChanged(11 /* codeLens */)) {\r\n                this._onModelChange();\r\n            }\r\n        }));\r\n        this._disposables.add(CodeLensProviderRegistry.onDidChange(this._onModelChange, this));\r\n        this._onModelChange();\r\n        this._styleClassName = '_' + hash(this._editor.getId()).toString(16);\r\n        this._styleElement = dom.createStyleSheet(dom.isInShadowDOM(this._editor.getContainerDomNode())\r\n            ? this._editor.getContainerDomNode()\r\n            : undefined);\r\n        this._updateLensStyle();\r\n    }\r\n    dispose() {\r\n        var _a;\r\n        this._localDispose();\r\n        this._disposables.dispose();\r\n        this._oldCodeLensModels.dispose();\r\n        (_a = this._currentCodeLensModel) === null || _a === void 0 ? void 0 : _a.dispose();\r\n        this._styleElement.remove();\r\n    }\r\n    _getLayoutInfo() {\r\n        let fontSize = this._editor.getOption(13 /* codeLensFontSize */);\r\n        let codeLensHeight;\r\n        if (!fontSize || fontSize < 5) {\r\n            fontSize = (this._editor.getOption(40 /* fontSize */) * .9) | 0;\r\n            codeLensHeight = this._editor.getOption(53 /* lineHeight */);\r\n        }\r\n        else {\r\n            codeLensHeight = (fontSize * Math.max(1.3, this._editor.getOption(53 /* lineHeight */) / this._editor.getOption(40 /* fontSize */))) | 0;\r\n        }\r\n        return { codeLensHeight, fontSize };\r\n    }\r\n    _updateLensStyle() {\r\n        var _a;\r\n        const { codeLensHeight, fontSize } = this._getLayoutInfo();\r\n        const fontFamily = this._editor.getOption(12 /* codeLensFontFamily */);\r\n        const editorFontInfo = this._editor.getOption(38 /* fontInfo */);\r\n        const fontFamilyVar = `--codelens-font-family${this._styleClassName}`;\r\n        let newStyle = `\n\t\t.monaco-editor .codelens-decoration.${this._styleClassName} { line-height: ${codeLensHeight}px; font-size: ${fontSize}px; padding-right: ${Math.round(fontSize * 0.5)}px; font-feature-settings: ${editorFontInfo.fontFeatureSettings} }\n\t\t.monaco-editor .codelens-decoration.${this._styleClassName} span.codicon { line-height: ${codeLensHeight}px; font-size: ${fontSize}px; }\n\t\t`;\r\n        if (fontFamily) {\r\n            newStyle += `.monaco-editor .codelens-decoration.${this._styleClassName} { font-family: var(${fontFamilyVar})}`;\r\n        }\r\n        this._styleElement.textContent = newStyle;\r\n        (_a = this._editor.getDomNode()) === null || _a === void 0 ? void 0 : _a.style.setProperty(fontFamilyVar, fontFamily !== null && fontFamily !== void 0 ? fontFamily : 'inherit');\r\n        //\r\n        this._editor.changeViewZones(accessor => {\r\n            for (let lens of this._lenses) {\r\n                lens.updateHeight(codeLensHeight, accessor);\r\n            }\r\n        });\r\n    }\r\n    _localDispose() {\r\n        var _a, _b, _c;\r\n        (_a = this._getCodeLensModelPromise) === null || _a === void 0 ? void 0 : _a.cancel();\r\n        this._getCodeLensModelPromise = undefined;\r\n        (_b = this._resolveCodeLensesPromise) === null || _b === void 0 ? void 0 : _b.cancel();\r\n        this._resolveCodeLensesPromise = undefined;\r\n        this._localToDispose.clear();\r\n        this._oldCodeLensModels.clear();\r\n        (_c = this._currentCodeLensModel) === null || _c === void 0 ? void 0 : _c.dispose();\r\n    }\r\n    _onModelChange() {\r\n        this._localDispose();\r\n        const model = this._editor.getModel();\r\n        if (!model) {\r\n            return;\r\n        }\r\n        if (!this._editor.getOption(11 /* codeLens */)) {\r\n            return;\r\n        }\r\n        const cachedLenses = this._codeLensCache.get(model);\r\n        if (cachedLenses) {\r\n            this._renderCodeLensSymbols(cachedLenses);\r\n        }\r\n        if (!CodeLensProviderRegistry.has(model)) {\r\n            // no provider -> return but check with\r\n            // cached lenses. they expire after 30 seconds\r\n            if (cachedLenses) {\r\n                this._localToDispose.add(disposableTimeout(() => {\r\n                    const cachedLensesNow = this._codeLensCache.get(model);\r\n                    if (cachedLenses === cachedLensesNow) {\r\n                        this._codeLensCache.delete(model);\r\n                        this._onModelChange();\r\n                    }\r\n                }, 30 * 1000));\r\n            }\r\n            return;\r\n        }\r\n        for (const provider of CodeLensProviderRegistry.all(model)) {\r\n            if (typeof provider.onDidChange === 'function') {\r\n                let registration = provider.onDidChange(() => scheduler.schedule());\r\n                this._localToDispose.add(registration);\r\n            }\r\n        }\r\n        const scheduler = new RunOnceScheduler(() => {\r\n            var _a;\r\n            const t1 = Date.now();\r\n            (_a = this._getCodeLensModelPromise) === null || _a === void 0 ? void 0 : _a.cancel();\r\n            this._getCodeLensModelPromise = createCancelablePromise(token => getCodeLensModel(model, token));\r\n            this._getCodeLensModelPromise.then(result => {\r\n                if (this._currentCodeLensModel) {\r\n                    this._oldCodeLensModels.add(this._currentCodeLensModel);\r\n                }\r\n                this._currentCodeLensModel = result;\r\n                // cache model to reduce flicker\r\n                this._codeLensCache.put(model, result);\r\n                // update moving average\r\n                const newDelay = this._getCodeLensModelDelays.update(model, Date.now() - t1);\r\n                scheduler.delay = newDelay;\r\n                // render lenses\r\n                this._renderCodeLensSymbols(result);\r\n                this._resolveCodeLensesInViewport();\r\n            }, onUnexpectedError);\r\n        }, this._getCodeLensModelDelays.get(model));\r\n        this._localToDispose.add(scheduler);\r\n        this._localToDispose.add(toDisposable(() => this._resolveCodeLensesScheduler.cancel()));\r\n        this._localToDispose.add(this._editor.onDidChangeModelContent(() => {\r\n            this._editor.changeDecorations(decorationsAccessor => {\r\n                this._editor.changeViewZones(viewZonesAccessor => {\r\n                    let toDispose = [];\r\n                    let lastLensLineNumber = -1;\r\n                    this._lenses.forEach((lens) => {\r\n                        if (!lens.isValid() || lastLensLineNumber === lens.getLineNumber()) {\r\n                            // invalid -> lens collapsed, attach range doesn't exist anymore\r\n                            // line_number -> lenses should never be on the same line\r\n                            toDispose.push(lens);\r\n                        }\r\n                        else {\r\n                            lens.update(viewZonesAccessor);\r\n                            lastLensLineNumber = lens.getLineNumber();\r\n                        }\r\n                    });\r\n                    let helper = new CodeLensHelper();\r\n                    toDispose.forEach((l) => {\r\n                        l.dispose(helper, viewZonesAccessor);\r\n                        this._lenses.splice(this._lenses.indexOf(l), 1);\r\n                    });\r\n                    helper.commit(decorationsAccessor);\r\n                });\r\n            });\r\n            // Ask for all references again\r\n            scheduler.schedule();\r\n        }));\r\n        this._localToDispose.add(this._editor.onDidFocusEditorWidget(() => {\r\n            scheduler.schedule();\r\n        }));\r\n        this._localToDispose.add(this._editor.onDidScrollChange(e => {\r\n            if (e.scrollTopChanged && this._lenses.length > 0) {\r\n                this._resolveCodeLensesInViewportSoon();\r\n            }\r\n        }));\r\n        this._localToDispose.add(this._editor.onDidLayoutChange(() => {\r\n            this._resolveCodeLensesInViewportSoon();\r\n        }));\r\n        this._localToDispose.add(toDisposable(() => {\r\n            if (this._editor.getModel()) {\r\n                const scrollState = StableEditorScrollState.capture(this._editor);\r\n                this._editor.changeDecorations(decorationsAccessor => {\r\n                    this._editor.changeViewZones(viewZonesAccessor => {\r\n                        this._disposeAllLenses(decorationsAccessor, viewZonesAccessor);\r\n                    });\r\n                });\r\n                scrollState.restore(this._editor);\r\n            }\r\n            else {\r\n                // No accessors available\r\n                this._disposeAllLenses(undefined, undefined);\r\n            }\r\n        }));\r\n        this._localToDispose.add(this._editor.onMouseDown(e => {\r\n            if (e.target.type !== 9 /* CONTENT_WIDGET */) {\r\n                return;\r\n            }\r\n            let target = e.target.element;\r\n            if ((target === null || target === void 0 ? void 0 : target.tagName) === 'SPAN') {\r\n                target = target.parentElement;\r\n            }\r\n            if ((target === null || target === void 0 ? void 0 : target.tagName) === 'A') {\r\n                for (const lens of this._lenses) {\r\n                    let command = lens.getCommand(target);\r\n                    if (command) {\r\n                        this._commandService.executeCommand(command.id, ...(command.arguments || [])).catch(err => this._notificationService.error(err));\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }));\r\n        scheduler.schedule();\r\n    }\r\n    _disposeAllLenses(decChangeAccessor, viewZoneChangeAccessor) {\r\n        const helper = new CodeLensHelper();\r\n        for (const lens of this._lenses) {\r\n            lens.dispose(helper, viewZoneChangeAccessor);\r\n        }\r\n        if (decChangeAccessor) {\r\n            helper.commit(decChangeAccessor);\r\n        }\r\n        this._lenses.length = 0;\r\n    }\r\n    _renderCodeLensSymbols(symbols) {\r\n        if (!this._editor.hasModel()) {\r\n            return;\r\n        }\r\n        let maxLineNumber = this._editor.getModel().getLineCount();\r\n        let groups = [];\r\n        let lastGroup;\r\n        for (let symbol of symbols.lenses) {\r\n            let line = symbol.symbol.range.startLineNumber;\r\n            if (line < 1 || line > maxLineNumber) {\r\n                // invalid code lens\r\n                continue;\r\n            }\r\n            else if (lastGroup && lastGroup[lastGroup.length - 1].symbol.range.startLineNumber === line) {\r\n                // on same line as previous\r\n                lastGroup.push(symbol);\r\n            }\r\n            else {\r\n                // on later line as previous\r\n                lastGroup = [symbol];\r\n                groups.push(lastGroup);\r\n            }\r\n        }\r\n        const scrollState = StableEditorScrollState.capture(this._editor);\r\n        const layoutInfo = this._getLayoutInfo();\r\n        this._editor.changeDecorations(decorationsAccessor => {\r\n            this._editor.changeViewZones(viewZoneAccessor => {\r\n                const helper = new CodeLensHelper();\r\n                let codeLensIndex = 0;\r\n                let groupsIndex = 0;\r\n                while (groupsIndex < groups.length && codeLensIndex < this._lenses.length) {\r\n                    let symbolsLineNumber = groups[groupsIndex][0].symbol.range.startLineNumber;\r\n                    let codeLensLineNumber = this._lenses[codeLensIndex].getLineNumber();\r\n                    if (codeLensLineNumber < symbolsLineNumber) {\r\n                        this._lenses[codeLensIndex].dispose(helper, viewZoneAccessor);\r\n                        this._lenses.splice(codeLensIndex, 1);\r\n                    }\r\n                    else if (codeLensLineNumber === symbolsLineNumber) {\r\n                        this._lenses[codeLensIndex].updateCodeLensSymbols(groups[groupsIndex], helper);\r\n                        groupsIndex++;\r\n                        codeLensIndex++;\r\n                    }\r\n                    else {\r\n                        this._lenses.splice(codeLensIndex, 0, new CodeLensWidget(groups[groupsIndex], this._editor, this._styleClassName, helper, viewZoneAccessor, layoutInfo.codeLensHeight, () => this._resolveCodeLensesInViewportSoon()));\r\n                        codeLensIndex++;\r\n                        groupsIndex++;\r\n                    }\r\n                }\r\n                // Delete extra code lenses\r\n                while (codeLensIndex < this._lenses.length) {\r\n                    this._lenses[codeLensIndex].dispose(helper, viewZoneAccessor);\r\n                    this._lenses.splice(codeLensIndex, 1);\r\n                }\r\n                // Create extra symbols\r\n                while (groupsIndex < groups.length) {\r\n                    this._lenses.push(new CodeLensWidget(groups[groupsIndex], this._editor, this._styleClassName, helper, viewZoneAccessor, layoutInfo.codeLensHeight, () => this._resolveCodeLensesInViewportSoon()));\r\n                    groupsIndex++;\r\n                }\r\n                helper.commit(decorationsAccessor);\r\n            });\r\n        });\r\n        scrollState.restore(this._editor);\r\n    }\r\n    _resolveCodeLensesInViewportSoon() {\r\n        const model = this._editor.getModel();\r\n        if (model) {\r\n            this._resolveCodeLensesScheduler.schedule();\r\n        }\r\n    }\r\n    _resolveCodeLensesInViewport() {\r\n        var _a;\r\n        (_a = this._resolveCodeLensesPromise) === null || _a === void 0 ? void 0 : _a.cancel();\r\n        this._resolveCodeLensesPromise = undefined;\r\n        const model = this._editor.getModel();\r\n        if (!model) {\r\n            return;\r\n        }\r\n        const toResolve = [];\r\n        const lenses = [];\r\n        this._lenses.forEach((lens) => {\r\n            const request = lens.computeIfNecessary(model);\r\n            if (request) {\r\n                toResolve.push(request);\r\n                lenses.push(lens);\r\n            }\r\n        });\r\n        if (toResolve.length === 0) {\r\n            return;\r\n        }\r\n        const t1 = Date.now();\r\n        const resolvePromise = createCancelablePromise(token => {\r\n            const promises = toResolve.map((request, i) => {\r\n                const resolvedSymbols = new Array(request.length);\r\n                const promises = request.map((request, i) => {\r\n                    if (!request.symbol.command && typeof request.provider.resolveCodeLens === 'function') {\r\n                        return Promise.resolve(request.provider.resolveCodeLens(model, request.symbol, token)).then(symbol => {\r\n                            resolvedSymbols[i] = symbol;\r\n                        }, onUnexpectedExternalError);\r\n                    }\r\n                    else {\r\n                        resolvedSymbols[i] = request.symbol;\r\n                        return Promise.resolve(undefined);\r\n                    }\r\n                });\r\n                return Promise.all(promises).then(() => {\r\n                    if (!token.isCancellationRequested && !lenses[i].isDisposed()) {\r\n                        lenses[i].updateCommands(resolvedSymbols);\r\n                    }\r\n                });\r\n            });\r\n            return Promise.all(promises);\r\n        });\r\n        this._resolveCodeLensesPromise = resolvePromise;\r\n        this._resolveCodeLensesPromise.then(() => {\r\n            // update moving average\r\n            const newDelay = this._resolveCodeLensesDelays.update(model, Date.now() - t1);\r\n            this._resolveCodeLensesScheduler.delay = newDelay;\r\n            if (this._currentCodeLensModel) { // update the cached state with new resolved items\r\n                this._codeLensCache.put(model, this._currentCodeLensModel);\r\n            }\r\n            this._oldCodeLensModels.clear(); // dispose old models once we have updated the UI with the current model\r\n            if (resolvePromise === this._resolveCodeLensesPromise) {\r\n                this._resolveCodeLensesPromise = undefined;\r\n            }\r\n        }, err => {\r\n            onUnexpectedError(err); // can also be cancellation!\r\n            if (resolvePromise === this._resolveCodeLensesPromise) {\r\n                this._resolveCodeLensesPromise = undefined;\r\n            }\r\n        });\r\n    }\r\n    getLenses() {\r\n        return this._lenses;\r\n    }\r\n};\r\nCodeLensContribution.ID = 'css.editor.codeLens';\r\nCodeLensContribution = __decorate([\r\n    __param(1, ICommandService),\r\n    __param(2, INotificationService),\r\n    __param(3, ICodeLensCache)\r\n], CodeLensContribution);\r\nexport { CodeLensContribution };\r\nregisterEditorContribution(CodeLensContribution.ID, CodeLensContribution);\r\nregisterEditorAction(class ShowLensesInCurrentLine extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'codelens.showLensesInCurrentLine',\r\n            precondition: EditorContextKeys.hasCodeLensProvider,\r\n            label: localize('showLensOnLine', \"Show CodeLens Commands For Current Line\"),\r\n            alias: 'Show CodeLens Commands For Current Line',\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!editor.hasModel()) {\r\n                return;\r\n            }\r\n            const quickInputService = accessor.get(IQuickInputService);\r\n            const commandService = accessor.get(ICommandService);\r\n            const notificationService = accessor.get(INotificationService);\r\n            const lineNumber = editor.getSelection().positionLineNumber;\r\n            const codelensController = editor.getContribution(CodeLensContribution.ID);\r\n            const items = [];\r\n            for (let lens of codelensController.getLenses()) {\r\n                if (lens.getLineNumber() === lineNumber) {\r\n                    for (let item of lens.getItems()) {\r\n                        const { command } = item.symbol;\r\n                        if (command) {\r\n                            items.push({\r\n                                label: command.title,\r\n                                command: command\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (items.length === 0) {\r\n                // We dont want an empty picker\r\n                return;\r\n            }\r\n            const item = yield quickInputService.pick(items, { canPickMany: false });\r\n            if (!item) {\r\n                // Nothing picked\r\n                return;\r\n            }\r\n            try {\r\n                yield commandService.executeCommand(item.command.id, ...(item.command.arguments || []));\r\n            }\r\n            catch (err) {\r\n                notificationService.error(err);\r\n            }\r\n        });\r\n    }\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}