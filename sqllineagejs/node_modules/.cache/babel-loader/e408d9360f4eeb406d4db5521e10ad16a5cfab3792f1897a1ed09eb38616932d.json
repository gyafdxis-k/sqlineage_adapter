{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport './selections.css';\nimport * as browser from '../../../../base/browser/browser.js';\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\nimport { editorInactiveSelection, editorSelectionBackground, editorSelectionForeground } from '../../../../platform/theme/common/colorRegistry.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nclass HorizontalRangeWithStyle {\n  constructor(other) {\n    this.left = other.left;\n    this.width = other.width;\n    this.startStyle = null;\n    this.endStyle = null;\n  }\n}\nclass LineVisibleRangesWithStyle {\n  constructor(lineNumber, ranges) {\n    this.lineNumber = lineNumber;\n    this.ranges = ranges;\n  }\n}\nfunction toStyledRange(item) {\n  return new HorizontalRangeWithStyle(item);\n}\nfunction toStyled(item) {\n  return new LineVisibleRangesWithStyle(item.lineNumber, item.ranges.map(toStyledRange));\n}\n// TODO@Alex: Remove this once IE11 fixes Bug #524217\n// The problem in IE11 is that it does some sort of auto-zooming to accomodate for displays with different pixel density.\n// Unfortunately, this auto-zooming is buggy around dealing with rounded borders\nconst isIEWithZoomingIssuesNearRoundedBorders = browser.isEdgeLegacy;\nexport class SelectionsOverlay extends DynamicViewOverlay {\n  constructor(context) {\n    super();\n    this._previousFrameVisibleRangesWithStyle = [];\n    this._context = context;\n    const options = this._context.configuration.options;\n    this._lineHeight = options.get(53 /* lineHeight */);\n    this._roundedSelection = options.get(85 /* roundedSelection */);\n    this._typicalHalfwidthCharacterWidth = options.get(38 /* fontInfo */).typicalHalfwidthCharacterWidth;\n    this._selections = [];\n    this._renderResult = null;\n    this._context.addEventHandler(this);\n  }\n  dispose() {\n    this._context.removeEventHandler(this);\n    this._renderResult = null;\n    super.dispose();\n  }\n  // --- begin event handlers\n  onConfigurationChanged(e) {\n    const options = this._context.configuration.options;\n    this._lineHeight = options.get(53 /* lineHeight */);\n    this._roundedSelection = options.get(85 /* roundedSelection */);\n    this._typicalHalfwidthCharacterWidth = options.get(38 /* fontInfo */).typicalHalfwidthCharacterWidth;\n    return true;\n  }\n  onCursorStateChanged(e) {\n    this._selections = e.selections.slice(0);\n    return true;\n  }\n  onDecorationsChanged(e) {\n    // true for inline decorations that can end up relayouting text\n    return true; //e.inlineDecorationsChanged;\n  }\n\n  onFlushed(e) {\n    return true;\n  }\n  onLinesChanged(e) {\n    return true;\n  }\n  onLinesDeleted(e) {\n    return true;\n  }\n  onLinesInserted(e) {\n    return true;\n  }\n  onScrollChanged(e) {\n    return e.scrollTopChanged;\n  }\n  onZonesChanged(e) {\n    return true;\n  }\n  // --- end event handlers\n  _visibleRangesHaveGaps(linesVisibleRanges) {\n    for (let i = 0, len = linesVisibleRanges.length; i < len; i++) {\n      const lineVisibleRanges = linesVisibleRanges[i];\n      if (lineVisibleRanges.ranges.length > 1) {\n        // There are two ranges on the same line\n        return true;\n      }\n    }\n    return false;\n  }\n  _enrichVisibleRangesWithStyle(viewport, linesVisibleRanges, previousFrame) {\n    const epsilon = this._typicalHalfwidthCharacterWidth / 4;\n    let previousFrameTop = null;\n    let previousFrameBottom = null;\n    if (previousFrame && previousFrame.length > 0 && linesVisibleRanges.length > 0) {\n      const topLineNumber = linesVisibleRanges[0].lineNumber;\n      if (topLineNumber === viewport.startLineNumber) {\n        for (let i = 0; !previousFrameTop && i < previousFrame.length; i++) {\n          if (previousFrame[i].lineNumber === topLineNumber) {\n            previousFrameTop = previousFrame[i].ranges[0];\n          }\n        }\n      }\n      const bottomLineNumber = linesVisibleRanges[linesVisibleRanges.length - 1].lineNumber;\n      if (bottomLineNumber === viewport.endLineNumber) {\n        for (let i = previousFrame.length - 1; !previousFrameBottom && i >= 0; i--) {\n          if (previousFrame[i].lineNumber === bottomLineNumber) {\n            previousFrameBottom = previousFrame[i].ranges[0];\n          }\n        }\n      }\n      if (previousFrameTop && !previousFrameTop.startStyle) {\n        previousFrameTop = null;\n      }\n      if (previousFrameBottom && !previousFrameBottom.startStyle) {\n        previousFrameBottom = null;\n      }\n    }\n    for (let i = 0, len = linesVisibleRanges.length; i < len; i++) {\n      // We know for a fact that there is precisely one range on each line\n      const curLineRange = linesVisibleRanges[i].ranges[0];\n      const curLeft = curLineRange.left;\n      const curRight = curLineRange.left + curLineRange.width;\n      const startStyle = {\n        top: 0 /* EXTERN */,\n        bottom: 0 /* EXTERN */\n      };\n\n      const endStyle = {\n        top: 0 /* EXTERN */,\n        bottom: 0 /* EXTERN */\n      };\n\n      if (i > 0) {\n        // Look above\n        const prevLeft = linesVisibleRanges[i - 1].ranges[0].left;\n        const prevRight = linesVisibleRanges[i - 1].ranges[0].left + linesVisibleRanges[i - 1].ranges[0].width;\n        if (abs(curLeft - prevLeft) < epsilon) {\n          startStyle.top = 2 /* FLAT */;\n        } else if (curLeft > prevLeft) {\n          startStyle.top = 1 /* INTERN */;\n        }\n\n        if (abs(curRight - prevRight) < epsilon) {\n          endStyle.top = 2 /* FLAT */;\n        } else if (prevLeft < curRight && curRight < prevRight) {\n          endStyle.top = 1 /* INTERN */;\n        }\n      } else if (previousFrameTop) {\n        // Accept some hiccups near the viewport edges to save on repaints\n        startStyle.top = previousFrameTop.startStyle.top;\n        endStyle.top = previousFrameTop.endStyle.top;\n      }\n      if (i + 1 < len) {\n        // Look below\n        const nextLeft = linesVisibleRanges[i + 1].ranges[0].left;\n        const nextRight = linesVisibleRanges[i + 1].ranges[0].left + linesVisibleRanges[i + 1].ranges[0].width;\n        if (abs(curLeft - nextLeft) < epsilon) {\n          startStyle.bottom = 2 /* FLAT */;\n        } else if (nextLeft < curLeft && curLeft < nextRight) {\n          startStyle.bottom = 1 /* INTERN */;\n        }\n\n        if (abs(curRight - nextRight) < epsilon) {\n          endStyle.bottom = 2 /* FLAT */;\n        } else if (curRight < nextRight) {\n          endStyle.bottom = 1 /* INTERN */;\n        }\n      } else if (previousFrameBottom) {\n        // Accept some hiccups near the viewport edges to save on repaints\n        startStyle.bottom = previousFrameBottom.startStyle.bottom;\n        endStyle.bottom = previousFrameBottom.endStyle.bottom;\n      }\n      curLineRange.startStyle = startStyle;\n      curLineRange.endStyle = endStyle;\n    }\n  }\n  _getVisibleRangesWithStyle(selection, ctx, previousFrame) {\n    const _linesVisibleRanges = ctx.linesVisibleRangesForRange(selection, true) || [];\n    const linesVisibleRanges = _linesVisibleRanges.map(toStyled);\n    const visibleRangesHaveGaps = this._visibleRangesHaveGaps(linesVisibleRanges);\n    if (!isIEWithZoomingIssuesNearRoundedBorders && !visibleRangesHaveGaps && this._roundedSelection) {\n      this._enrichVisibleRangesWithStyle(ctx.visibleRange, linesVisibleRanges, previousFrame);\n    }\n    // The visible ranges are sorted TOP-BOTTOM and LEFT-RIGHT\n    return linesVisibleRanges;\n  }\n  _createSelectionPiece(top, height, className, left, width) {\n    return '<div class=\"cslr ' + className + '\" style=\"top:' + top.toString() + 'px;left:' + left.toString() + 'px;width:' + width.toString() + 'px;height:' + height + 'px;\"></div>';\n  }\n  _actualRenderOneSelection(output2, visibleStartLineNumber, hasMultipleSelections, visibleRanges) {\n    if (visibleRanges.length === 0) {\n      return;\n    }\n    const visibleRangesHaveStyle = !!visibleRanges[0].ranges[0].startStyle;\n    const fullLineHeight = this._lineHeight.toString();\n    const reducedLineHeight = (this._lineHeight - 1).toString();\n    const firstLineNumber = visibleRanges[0].lineNumber;\n    const lastLineNumber = visibleRanges[visibleRanges.length - 1].lineNumber;\n    for (let i = 0, len = visibleRanges.length; i < len; i++) {\n      const lineVisibleRanges = visibleRanges[i];\n      const lineNumber = lineVisibleRanges.lineNumber;\n      const lineIndex = lineNumber - visibleStartLineNumber;\n      const lineHeight = hasMultipleSelections ? lineNumber === lastLineNumber || lineNumber === firstLineNumber ? reducedLineHeight : fullLineHeight : fullLineHeight;\n      const top = hasMultipleSelections ? lineNumber === firstLineNumber ? 1 : 0 : 0;\n      let innerCornerOutput = '';\n      let restOfSelectionOutput = '';\n      for (let j = 0, lenJ = lineVisibleRanges.ranges.length; j < lenJ; j++) {\n        const visibleRange = lineVisibleRanges.ranges[j];\n        if (visibleRangesHaveStyle) {\n          const startStyle = visibleRange.startStyle;\n          const endStyle = visibleRange.endStyle;\n          if (startStyle.top === 1 /* INTERN */ || startStyle.bottom === 1 /* INTERN */) {\n            // Reverse rounded corner to the left\n            // First comes the selection (blue layer)\n            innerCornerOutput += this._createSelectionPiece(top, lineHeight, SelectionsOverlay.SELECTION_CLASS_NAME, visibleRange.left - SelectionsOverlay.ROUNDED_PIECE_WIDTH, SelectionsOverlay.ROUNDED_PIECE_WIDTH);\n            // Second comes the background (white layer) with inverse border radius\n            let className = SelectionsOverlay.EDITOR_BACKGROUND_CLASS_NAME;\n            if (startStyle.top === 1 /* INTERN */) {\n              className += ' ' + SelectionsOverlay.SELECTION_TOP_RIGHT;\n            }\n            if (startStyle.bottom === 1 /* INTERN */) {\n              className += ' ' + SelectionsOverlay.SELECTION_BOTTOM_RIGHT;\n            }\n            innerCornerOutput += this._createSelectionPiece(top, lineHeight, className, visibleRange.left - SelectionsOverlay.ROUNDED_PIECE_WIDTH, SelectionsOverlay.ROUNDED_PIECE_WIDTH);\n          }\n          if (endStyle.top === 1 /* INTERN */ || endStyle.bottom === 1 /* INTERN */) {\n            // Reverse rounded corner to the right\n            // First comes the selection (blue layer)\n            innerCornerOutput += this._createSelectionPiece(top, lineHeight, SelectionsOverlay.SELECTION_CLASS_NAME, visibleRange.left + visibleRange.width, SelectionsOverlay.ROUNDED_PIECE_WIDTH);\n            // Second comes the background (white layer) with inverse border radius\n            let className = SelectionsOverlay.EDITOR_BACKGROUND_CLASS_NAME;\n            if (endStyle.top === 1 /* INTERN */) {\n              className += ' ' + SelectionsOverlay.SELECTION_TOP_LEFT;\n            }\n            if (endStyle.bottom === 1 /* INTERN */) {\n              className += ' ' + SelectionsOverlay.SELECTION_BOTTOM_LEFT;\n            }\n            innerCornerOutput += this._createSelectionPiece(top, lineHeight, className, visibleRange.left + visibleRange.width, SelectionsOverlay.ROUNDED_PIECE_WIDTH);\n          }\n        }\n        let className = SelectionsOverlay.SELECTION_CLASS_NAME;\n        if (visibleRangesHaveStyle) {\n          const startStyle = visibleRange.startStyle;\n          const endStyle = visibleRange.endStyle;\n          if (startStyle.top === 0 /* EXTERN */) {\n            className += ' ' + SelectionsOverlay.SELECTION_TOP_LEFT;\n          }\n          if (startStyle.bottom === 0 /* EXTERN */) {\n            className += ' ' + SelectionsOverlay.SELECTION_BOTTOM_LEFT;\n          }\n          if (endStyle.top === 0 /* EXTERN */) {\n            className += ' ' + SelectionsOverlay.SELECTION_TOP_RIGHT;\n          }\n          if (endStyle.bottom === 0 /* EXTERN */) {\n            className += ' ' + SelectionsOverlay.SELECTION_BOTTOM_RIGHT;\n          }\n        }\n        restOfSelectionOutput += this._createSelectionPiece(top, lineHeight, className, visibleRange.left, visibleRange.width);\n      }\n      output2[lineIndex][0] += innerCornerOutput;\n      output2[lineIndex][1] += restOfSelectionOutput;\n    }\n  }\n  prepareRender(ctx) {\n    // Build HTML for inner corners separate from HTML for the rest of selections,\n    // as the inner corner HTML can interfere with that of other selections.\n    // In final render, make sure to place the inner corner HTML before the rest of selection HTML. See issue #77777.\n    const output = [];\n    const visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n    const visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n    for (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n      const lineIndex = lineNumber - visibleStartLineNumber;\n      output[lineIndex] = ['', ''];\n    }\n    const thisFrameVisibleRangesWithStyle = [];\n    for (let i = 0, len = this._selections.length; i < len; i++) {\n      const selection = this._selections[i];\n      if (selection.isEmpty()) {\n        thisFrameVisibleRangesWithStyle[i] = null;\n        continue;\n      }\n      const visibleRangesWithStyle = this._getVisibleRangesWithStyle(selection, ctx, this._previousFrameVisibleRangesWithStyle[i]);\n      thisFrameVisibleRangesWithStyle[i] = visibleRangesWithStyle;\n      this._actualRenderOneSelection(output, visibleStartLineNumber, this._selections.length > 1, visibleRangesWithStyle);\n    }\n    this._previousFrameVisibleRangesWithStyle = thisFrameVisibleRangesWithStyle;\n    this._renderResult = output.map(_ref => {\n      let [internalCorners, restOfSelection] = _ref;\n      return internalCorners + restOfSelection;\n    });\n  }\n  render(startLineNumber, lineNumber) {\n    if (!this._renderResult) {\n      return '';\n    }\n    const lineIndex = lineNumber - startLineNumber;\n    if (lineIndex < 0 || lineIndex >= this._renderResult.length) {\n      return '';\n    }\n    return this._renderResult[lineIndex];\n  }\n}\nSelectionsOverlay.SELECTION_CLASS_NAME = 'selected-text';\nSelectionsOverlay.SELECTION_TOP_LEFT = 'top-left-radius';\nSelectionsOverlay.SELECTION_BOTTOM_LEFT = 'bottom-left-radius';\nSelectionsOverlay.SELECTION_TOP_RIGHT = 'top-right-radius';\nSelectionsOverlay.SELECTION_BOTTOM_RIGHT = 'bottom-right-radius';\nSelectionsOverlay.EDITOR_BACKGROUND_CLASS_NAME = 'monaco-editor-background';\nSelectionsOverlay.ROUNDED_PIECE_WIDTH = 10;\nregisterThemingParticipant((theme, collector) => {\n  const editorSelectionColor = theme.getColor(editorSelectionBackground);\n  if (editorSelectionColor) {\n    collector.addRule(\".monaco-editor .focused .selected-text { background-color: \".concat(editorSelectionColor, \"; }\"));\n  }\n  const editorInactiveSelectionColor = theme.getColor(editorInactiveSelection);\n  if (editorInactiveSelectionColor) {\n    collector.addRule(\".monaco-editor .selected-text { background-color: \".concat(editorInactiveSelectionColor, \"; }\"));\n  }\n  const editorSelectionForegroundColor = theme.getColor(editorSelectionForeground);\n  if (editorSelectionForegroundColor && !editorSelectionForegroundColor.isTransparent()) {\n    collector.addRule(\".monaco-editor .view-line span.inline-selected-text { color: \".concat(editorSelectionForegroundColor, \"; }\"));\n  }\n});\nfunction abs(n) {\n  return n < 0 ? -n : n;\n}","map":{"version":3,"names":["browser","DynamicViewOverlay","editorInactiveSelection","editorSelectionBackground","editorSelectionForeground","registerThemingParticipant","HorizontalRangeWithStyle","constructor","other","left","width","startStyle","endStyle","LineVisibleRangesWithStyle","lineNumber","ranges","toStyledRange","item","toStyled","map","isIEWithZoomingIssuesNearRoundedBorders","isEdgeLegacy","SelectionsOverlay","context","_previousFrameVisibleRangesWithStyle","_context","options","configuration","_lineHeight","get","_roundedSelection","_typicalHalfwidthCharacterWidth","typicalHalfwidthCharacterWidth","_selections","_renderResult","addEventHandler","dispose","removeEventHandler","onConfigurationChanged","e","onCursorStateChanged","selections","slice","onDecorationsChanged","onFlushed","onLinesChanged","onLinesDeleted","onLinesInserted","onScrollChanged","scrollTopChanged","onZonesChanged","_visibleRangesHaveGaps","linesVisibleRanges","i","len","length","lineVisibleRanges","_enrichVisibleRangesWithStyle","viewport","previousFrame","epsilon","previousFrameTop","previousFrameBottom","topLineNumber","startLineNumber","bottomLineNumber","endLineNumber","curLineRange","curLeft","curRight","top","bottom","prevLeft","prevRight","abs","nextLeft","nextRight","_getVisibleRangesWithStyle","selection","ctx","_linesVisibleRanges","linesVisibleRangesForRange","visibleRangesHaveGaps","visibleRange","_createSelectionPiece","height","className","toString","_actualRenderOneSelection","output2","visibleStartLineNumber","hasMultipleSelections","visibleRanges","visibleRangesHaveStyle","fullLineHeight","reducedLineHeight","firstLineNumber","lastLineNumber","lineIndex","lineHeight","innerCornerOutput","restOfSelectionOutput","j","lenJ","SELECTION_CLASS_NAME","ROUNDED_PIECE_WIDTH","EDITOR_BACKGROUND_CLASS_NAME","SELECTION_TOP_RIGHT","SELECTION_BOTTOM_RIGHT","SELECTION_TOP_LEFT","SELECTION_BOTTOM_LEFT","prepareRender","output","visibleEndLineNumber","thisFrameVisibleRangesWithStyle","isEmpty","visibleRangesWithStyle","_ref","internalCorners","restOfSelection","render","theme","collector","editorSelectionColor","getColor","addRule","concat","editorInactiveSelectionColor","editorSelectionForegroundColor","isTransparent","n"],"sources":["C:/Users/Administrator/Desktop/sqllineage-master/sqllineagejs/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/selections/selections.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport './selections.css';\r\nimport * as browser from '../../../../base/browser/browser.js';\r\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\r\nimport { editorInactiveSelection, editorSelectionBackground, editorSelectionForeground } from '../../../../platform/theme/common/colorRegistry.js';\r\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\r\nclass HorizontalRangeWithStyle {\r\n    constructor(other) {\r\n        this.left = other.left;\r\n        this.width = other.width;\r\n        this.startStyle = null;\r\n        this.endStyle = null;\r\n    }\r\n}\r\nclass LineVisibleRangesWithStyle {\r\n    constructor(lineNumber, ranges) {\r\n        this.lineNumber = lineNumber;\r\n        this.ranges = ranges;\r\n    }\r\n}\r\nfunction toStyledRange(item) {\r\n    return new HorizontalRangeWithStyle(item);\r\n}\r\nfunction toStyled(item) {\r\n    return new LineVisibleRangesWithStyle(item.lineNumber, item.ranges.map(toStyledRange));\r\n}\r\n// TODO@Alex: Remove this once IE11 fixes Bug #524217\r\n// The problem in IE11 is that it does some sort of auto-zooming to accomodate for displays with different pixel density.\r\n// Unfortunately, this auto-zooming is buggy around dealing with rounded borders\r\nconst isIEWithZoomingIssuesNearRoundedBorders = browser.isEdgeLegacy;\r\nexport class SelectionsOverlay extends DynamicViewOverlay {\r\n    constructor(context) {\r\n        super();\r\n        this._previousFrameVisibleRangesWithStyle = [];\r\n        this._context = context;\r\n        const options = this._context.configuration.options;\r\n        this._lineHeight = options.get(53 /* lineHeight */);\r\n        this._roundedSelection = options.get(85 /* roundedSelection */);\r\n        this._typicalHalfwidthCharacterWidth = options.get(38 /* fontInfo */).typicalHalfwidthCharacterWidth;\r\n        this._selections = [];\r\n        this._renderResult = null;\r\n        this._context.addEventHandler(this);\r\n    }\r\n    dispose() {\r\n        this._context.removeEventHandler(this);\r\n        this._renderResult = null;\r\n        super.dispose();\r\n    }\r\n    // --- begin event handlers\r\n    onConfigurationChanged(e) {\r\n        const options = this._context.configuration.options;\r\n        this._lineHeight = options.get(53 /* lineHeight */);\r\n        this._roundedSelection = options.get(85 /* roundedSelection */);\r\n        this._typicalHalfwidthCharacterWidth = options.get(38 /* fontInfo */).typicalHalfwidthCharacterWidth;\r\n        return true;\r\n    }\r\n    onCursorStateChanged(e) {\r\n        this._selections = e.selections.slice(0);\r\n        return true;\r\n    }\r\n    onDecorationsChanged(e) {\r\n        // true for inline decorations that can end up relayouting text\r\n        return true; //e.inlineDecorationsChanged;\r\n    }\r\n    onFlushed(e) {\r\n        return true;\r\n    }\r\n    onLinesChanged(e) {\r\n        return true;\r\n    }\r\n    onLinesDeleted(e) {\r\n        return true;\r\n    }\r\n    onLinesInserted(e) {\r\n        return true;\r\n    }\r\n    onScrollChanged(e) {\r\n        return e.scrollTopChanged;\r\n    }\r\n    onZonesChanged(e) {\r\n        return true;\r\n    }\r\n    // --- end event handlers\r\n    _visibleRangesHaveGaps(linesVisibleRanges) {\r\n        for (let i = 0, len = linesVisibleRanges.length; i < len; i++) {\r\n            const lineVisibleRanges = linesVisibleRanges[i];\r\n            if (lineVisibleRanges.ranges.length > 1) {\r\n                // There are two ranges on the same line\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    _enrichVisibleRangesWithStyle(viewport, linesVisibleRanges, previousFrame) {\r\n        const epsilon = this._typicalHalfwidthCharacterWidth / 4;\r\n        let previousFrameTop = null;\r\n        let previousFrameBottom = null;\r\n        if (previousFrame && previousFrame.length > 0 && linesVisibleRanges.length > 0) {\r\n            const topLineNumber = linesVisibleRanges[0].lineNumber;\r\n            if (topLineNumber === viewport.startLineNumber) {\r\n                for (let i = 0; !previousFrameTop && i < previousFrame.length; i++) {\r\n                    if (previousFrame[i].lineNumber === topLineNumber) {\r\n                        previousFrameTop = previousFrame[i].ranges[0];\r\n                    }\r\n                }\r\n            }\r\n            const bottomLineNumber = linesVisibleRanges[linesVisibleRanges.length - 1].lineNumber;\r\n            if (bottomLineNumber === viewport.endLineNumber) {\r\n                for (let i = previousFrame.length - 1; !previousFrameBottom && i >= 0; i--) {\r\n                    if (previousFrame[i].lineNumber === bottomLineNumber) {\r\n                        previousFrameBottom = previousFrame[i].ranges[0];\r\n                    }\r\n                }\r\n            }\r\n            if (previousFrameTop && !previousFrameTop.startStyle) {\r\n                previousFrameTop = null;\r\n            }\r\n            if (previousFrameBottom && !previousFrameBottom.startStyle) {\r\n                previousFrameBottom = null;\r\n            }\r\n        }\r\n        for (let i = 0, len = linesVisibleRanges.length; i < len; i++) {\r\n            // We know for a fact that there is precisely one range on each line\r\n            const curLineRange = linesVisibleRanges[i].ranges[0];\r\n            const curLeft = curLineRange.left;\r\n            const curRight = curLineRange.left + curLineRange.width;\r\n            const startStyle = {\r\n                top: 0 /* EXTERN */,\r\n                bottom: 0 /* EXTERN */\r\n            };\r\n            const endStyle = {\r\n                top: 0 /* EXTERN */,\r\n                bottom: 0 /* EXTERN */\r\n            };\r\n            if (i > 0) {\r\n                // Look above\r\n                const prevLeft = linesVisibleRanges[i - 1].ranges[0].left;\r\n                const prevRight = linesVisibleRanges[i - 1].ranges[0].left + linesVisibleRanges[i - 1].ranges[0].width;\r\n                if (abs(curLeft - prevLeft) < epsilon) {\r\n                    startStyle.top = 2 /* FLAT */;\r\n                }\r\n                else if (curLeft > prevLeft) {\r\n                    startStyle.top = 1 /* INTERN */;\r\n                }\r\n                if (abs(curRight - prevRight) < epsilon) {\r\n                    endStyle.top = 2 /* FLAT */;\r\n                }\r\n                else if (prevLeft < curRight && curRight < prevRight) {\r\n                    endStyle.top = 1 /* INTERN */;\r\n                }\r\n            }\r\n            else if (previousFrameTop) {\r\n                // Accept some hiccups near the viewport edges to save on repaints\r\n                startStyle.top = previousFrameTop.startStyle.top;\r\n                endStyle.top = previousFrameTop.endStyle.top;\r\n            }\r\n            if (i + 1 < len) {\r\n                // Look below\r\n                const nextLeft = linesVisibleRanges[i + 1].ranges[0].left;\r\n                const nextRight = linesVisibleRanges[i + 1].ranges[0].left + linesVisibleRanges[i + 1].ranges[0].width;\r\n                if (abs(curLeft - nextLeft) < epsilon) {\r\n                    startStyle.bottom = 2 /* FLAT */;\r\n                }\r\n                else if (nextLeft < curLeft && curLeft < nextRight) {\r\n                    startStyle.bottom = 1 /* INTERN */;\r\n                }\r\n                if (abs(curRight - nextRight) < epsilon) {\r\n                    endStyle.bottom = 2 /* FLAT */;\r\n                }\r\n                else if (curRight < nextRight) {\r\n                    endStyle.bottom = 1 /* INTERN */;\r\n                }\r\n            }\r\n            else if (previousFrameBottom) {\r\n                // Accept some hiccups near the viewport edges to save on repaints\r\n                startStyle.bottom = previousFrameBottom.startStyle.bottom;\r\n                endStyle.bottom = previousFrameBottom.endStyle.bottom;\r\n            }\r\n            curLineRange.startStyle = startStyle;\r\n            curLineRange.endStyle = endStyle;\r\n        }\r\n    }\r\n    _getVisibleRangesWithStyle(selection, ctx, previousFrame) {\r\n        const _linesVisibleRanges = ctx.linesVisibleRangesForRange(selection, true) || [];\r\n        const linesVisibleRanges = _linesVisibleRanges.map(toStyled);\r\n        const visibleRangesHaveGaps = this._visibleRangesHaveGaps(linesVisibleRanges);\r\n        if (!isIEWithZoomingIssuesNearRoundedBorders && !visibleRangesHaveGaps && this._roundedSelection) {\r\n            this._enrichVisibleRangesWithStyle(ctx.visibleRange, linesVisibleRanges, previousFrame);\r\n        }\r\n        // The visible ranges are sorted TOP-BOTTOM and LEFT-RIGHT\r\n        return linesVisibleRanges;\r\n    }\r\n    _createSelectionPiece(top, height, className, left, width) {\r\n        return ('<div class=\"cslr '\r\n            + className\r\n            + '\" style=\"top:'\r\n            + top.toString()\r\n            + 'px;left:'\r\n            + left.toString()\r\n            + 'px;width:'\r\n            + width.toString()\r\n            + 'px;height:'\r\n            + height\r\n            + 'px;\"></div>');\r\n    }\r\n    _actualRenderOneSelection(output2, visibleStartLineNumber, hasMultipleSelections, visibleRanges) {\r\n        if (visibleRanges.length === 0) {\r\n            return;\r\n        }\r\n        const visibleRangesHaveStyle = !!visibleRanges[0].ranges[0].startStyle;\r\n        const fullLineHeight = (this._lineHeight).toString();\r\n        const reducedLineHeight = (this._lineHeight - 1).toString();\r\n        const firstLineNumber = visibleRanges[0].lineNumber;\r\n        const lastLineNumber = visibleRanges[visibleRanges.length - 1].lineNumber;\r\n        for (let i = 0, len = visibleRanges.length; i < len; i++) {\r\n            const lineVisibleRanges = visibleRanges[i];\r\n            const lineNumber = lineVisibleRanges.lineNumber;\r\n            const lineIndex = lineNumber - visibleStartLineNumber;\r\n            const lineHeight = hasMultipleSelections ? (lineNumber === lastLineNumber || lineNumber === firstLineNumber ? reducedLineHeight : fullLineHeight) : fullLineHeight;\r\n            const top = hasMultipleSelections ? (lineNumber === firstLineNumber ? 1 : 0) : 0;\r\n            let innerCornerOutput = '';\r\n            let restOfSelectionOutput = '';\r\n            for (let j = 0, lenJ = lineVisibleRanges.ranges.length; j < lenJ; j++) {\r\n                const visibleRange = lineVisibleRanges.ranges[j];\r\n                if (visibleRangesHaveStyle) {\r\n                    const startStyle = visibleRange.startStyle;\r\n                    const endStyle = visibleRange.endStyle;\r\n                    if (startStyle.top === 1 /* INTERN */ || startStyle.bottom === 1 /* INTERN */) {\r\n                        // Reverse rounded corner to the left\r\n                        // First comes the selection (blue layer)\r\n                        innerCornerOutput += this._createSelectionPiece(top, lineHeight, SelectionsOverlay.SELECTION_CLASS_NAME, visibleRange.left - SelectionsOverlay.ROUNDED_PIECE_WIDTH, SelectionsOverlay.ROUNDED_PIECE_WIDTH);\r\n                        // Second comes the background (white layer) with inverse border radius\r\n                        let className = SelectionsOverlay.EDITOR_BACKGROUND_CLASS_NAME;\r\n                        if (startStyle.top === 1 /* INTERN */) {\r\n                            className += ' ' + SelectionsOverlay.SELECTION_TOP_RIGHT;\r\n                        }\r\n                        if (startStyle.bottom === 1 /* INTERN */) {\r\n                            className += ' ' + SelectionsOverlay.SELECTION_BOTTOM_RIGHT;\r\n                        }\r\n                        innerCornerOutput += this._createSelectionPiece(top, lineHeight, className, visibleRange.left - SelectionsOverlay.ROUNDED_PIECE_WIDTH, SelectionsOverlay.ROUNDED_PIECE_WIDTH);\r\n                    }\r\n                    if (endStyle.top === 1 /* INTERN */ || endStyle.bottom === 1 /* INTERN */) {\r\n                        // Reverse rounded corner to the right\r\n                        // First comes the selection (blue layer)\r\n                        innerCornerOutput += this._createSelectionPiece(top, lineHeight, SelectionsOverlay.SELECTION_CLASS_NAME, visibleRange.left + visibleRange.width, SelectionsOverlay.ROUNDED_PIECE_WIDTH);\r\n                        // Second comes the background (white layer) with inverse border radius\r\n                        let className = SelectionsOverlay.EDITOR_BACKGROUND_CLASS_NAME;\r\n                        if (endStyle.top === 1 /* INTERN */) {\r\n                            className += ' ' + SelectionsOverlay.SELECTION_TOP_LEFT;\r\n                        }\r\n                        if (endStyle.bottom === 1 /* INTERN */) {\r\n                            className += ' ' + SelectionsOverlay.SELECTION_BOTTOM_LEFT;\r\n                        }\r\n                        innerCornerOutput += this._createSelectionPiece(top, lineHeight, className, visibleRange.left + visibleRange.width, SelectionsOverlay.ROUNDED_PIECE_WIDTH);\r\n                    }\r\n                }\r\n                let className = SelectionsOverlay.SELECTION_CLASS_NAME;\r\n                if (visibleRangesHaveStyle) {\r\n                    const startStyle = visibleRange.startStyle;\r\n                    const endStyle = visibleRange.endStyle;\r\n                    if (startStyle.top === 0 /* EXTERN */) {\r\n                        className += ' ' + SelectionsOverlay.SELECTION_TOP_LEFT;\r\n                    }\r\n                    if (startStyle.bottom === 0 /* EXTERN */) {\r\n                        className += ' ' + SelectionsOverlay.SELECTION_BOTTOM_LEFT;\r\n                    }\r\n                    if (endStyle.top === 0 /* EXTERN */) {\r\n                        className += ' ' + SelectionsOverlay.SELECTION_TOP_RIGHT;\r\n                    }\r\n                    if (endStyle.bottom === 0 /* EXTERN */) {\r\n                        className += ' ' + SelectionsOverlay.SELECTION_BOTTOM_RIGHT;\r\n                    }\r\n                }\r\n                restOfSelectionOutput += this._createSelectionPiece(top, lineHeight, className, visibleRange.left, visibleRange.width);\r\n            }\r\n            output2[lineIndex][0] += innerCornerOutput;\r\n            output2[lineIndex][1] += restOfSelectionOutput;\r\n        }\r\n    }\r\n    prepareRender(ctx) {\r\n        // Build HTML for inner corners separate from HTML for the rest of selections,\r\n        // as the inner corner HTML can interfere with that of other selections.\r\n        // In final render, make sure to place the inner corner HTML before the rest of selection HTML. See issue #77777.\r\n        const output = [];\r\n        const visibleStartLineNumber = ctx.visibleRange.startLineNumber;\r\n        const visibleEndLineNumber = ctx.visibleRange.endLineNumber;\r\n        for (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\r\n            const lineIndex = lineNumber - visibleStartLineNumber;\r\n            output[lineIndex] = ['', ''];\r\n        }\r\n        const thisFrameVisibleRangesWithStyle = [];\r\n        for (let i = 0, len = this._selections.length; i < len; i++) {\r\n            const selection = this._selections[i];\r\n            if (selection.isEmpty()) {\r\n                thisFrameVisibleRangesWithStyle[i] = null;\r\n                continue;\r\n            }\r\n            const visibleRangesWithStyle = this._getVisibleRangesWithStyle(selection, ctx, this._previousFrameVisibleRangesWithStyle[i]);\r\n            thisFrameVisibleRangesWithStyle[i] = visibleRangesWithStyle;\r\n            this._actualRenderOneSelection(output, visibleStartLineNumber, this._selections.length > 1, visibleRangesWithStyle);\r\n        }\r\n        this._previousFrameVisibleRangesWithStyle = thisFrameVisibleRangesWithStyle;\r\n        this._renderResult = output.map(([internalCorners, restOfSelection]) => internalCorners + restOfSelection);\r\n    }\r\n    render(startLineNumber, lineNumber) {\r\n        if (!this._renderResult) {\r\n            return '';\r\n        }\r\n        const lineIndex = lineNumber - startLineNumber;\r\n        if (lineIndex < 0 || lineIndex >= this._renderResult.length) {\r\n            return '';\r\n        }\r\n        return this._renderResult[lineIndex];\r\n    }\r\n}\r\nSelectionsOverlay.SELECTION_CLASS_NAME = 'selected-text';\r\nSelectionsOverlay.SELECTION_TOP_LEFT = 'top-left-radius';\r\nSelectionsOverlay.SELECTION_BOTTOM_LEFT = 'bottom-left-radius';\r\nSelectionsOverlay.SELECTION_TOP_RIGHT = 'top-right-radius';\r\nSelectionsOverlay.SELECTION_BOTTOM_RIGHT = 'bottom-right-radius';\r\nSelectionsOverlay.EDITOR_BACKGROUND_CLASS_NAME = 'monaco-editor-background';\r\nSelectionsOverlay.ROUNDED_PIECE_WIDTH = 10;\r\nregisterThemingParticipant((theme, collector) => {\r\n    const editorSelectionColor = theme.getColor(editorSelectionBackground);\r\n    if (editorSelectionColor) {\r\n        collector.addRule(`.monaco-editor .focused .selected-text { background-color: ${editorSelectionColor}; }`);\r\n    }\r\n    const editorInactiveSelectionColor = theme.getColor(editorInactiveSelection);\r\n    if (editorInactiveSelectionColor) {\r\n        collector.addRule(`.monaco-editor .selected-text { background-color: ${editorInactiveSelectionColor}; }`);\r\n    }\r\n    const editorSelectionForegroundColor = theme.getColor(editorSelectionForeground);\r\n    if (editorSelectionForegroundColor && !editorSelectionForegroundColor.isTransparent()) {\r\n        collector.addRule(`.monaco-editor .view-line span.inline-selected-text { color: ${editorSelectionForegroundColor}; }`);\r\n    }\r\n});\r\nfunction abs(n) {\r\n    return n < 0 ? -n : n;\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}