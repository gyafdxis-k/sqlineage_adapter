{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport './currentLineHighlight.css';\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\nimport { editorLineHighlight, editorLineHighlightBorder } from '../../../common/view/editorColorRegistry.js';\nimport * as arrays from '../../../../base/common/arrays.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { Selection } from '../../../common/core/selection.js';\nlet isRenderedUsingBorder = true;\nexport class AbstractLineHighlightOverlay extends DynamicViewOverlay {\n  constructor(context) {\n    super();\n    this._context = context;\n    const options = this._context.configuration.options;\n    const layoutInfo = options.get(124 /* layoutInfo */);\n    this._lineHeight = options.get(53 /* lineHeight */);\n    this._renderLineHighlight = options.get(80 /* renderLineHighlight */);\n    this._renderLineHighlightOnlyWhenFocus = options.get(81 /* renderLineHighlightOnlyWhenFocus */);\n    this._contentLeft = layoutInfo.contentLeft;\n    this._contentWidth = layoutInfo.contentWidth;\n    this._selectionIsEmpty = true;\n    this._focused = false;\n    this._cursorLineNumbers = [1];\n    this._selections = [new Selection(1, 1, 1, 1)];\n    this._renderData = null;\n    this._context.addEventHandler(this);\n  }\n  dispose() {\n    this._context.removeEventHandler(this);\n    super.dispose();\n  }\n  _readFromSelections() {\n    let hasChanged = false;\n    // Only render the first selection when using border\n    const renderSelections = isRenderedUsingBorder ? this._selections.slice(0, 1) : this._selections;\n    const cursorsLineNumbers = renderSelections.map(s => s.positionLineNumber);\n    cursorsLineNumbers.sort((a, b) => a - b);\n    if (!arrays.equals(this._cursorLineNumbers, cursorsLineNumbers)) {\n      this._cursorLineNumbers = cursorsLineNumbers;\n      hasChanged = true;\n    }\n    const selectionIsEmpty = renderSelections.every(s => s.isEmpty());\n    if (this._selectionIsEmpty !== selectionIsEmpty) {\n      this._selectionIsEmpty = selectionIsEmpty;\n      hasChanged = true;\n    }\n    return hasChanged;\n  }\n  // --- begin event handlers\n  onThemeChanged(e) {\n    return this._readFromSelections();\n  }\n  onConfigurationChanged(e) {\n    const options = this._context.configuration.options;\n    const layoutInfo = options.get(124 /* layoutInfo */);\n    this._lineHeight = options.get(53 /* lineHeight */);\n    this._renderLineHighlight = options.get(80 /* renderLineHighlight */);\n    this._renderLineHighlightOnlyWhenFocus = options.get(81 /* renderLineHighlightOnlyWhenFocus */);\n    this._contentLeft = layoutInfo.contentLeft;\n    this._contentWidth = layoutInfo.contentWidth;\n    return true;\n  }\n  onCursorStateChanged(e) {\n    this._selections = e.selections;\n    return this._readFromSelections();\n  }\n  onFlushed(e) {\n    return true;\n  }\n  onLinesDeleted(e) {\n    return true;\n  }\n  onLinesInserted(e) {\n    return true;\n  }\n  onScrollChanged(e) {\n    return e.scrollWidthChanged || e.scrollTopChanged;\n  }\n  onZonesChanged(e) {\n    return true;\n  }\n  onFocusChanged(e) {\n    if (!this._renderLineHighlightOnlyWhenFocus) {\n      return false;\n    }\n    this._focused = e.isFocused;\n    return true;\n  }\n  // --- end event handlers\n  prepareRender(ctx) {\n    if (!this._shouldRenderThis()) {\n      this._renderData = null;\n      return;\n    }\n    const renderedLine = this._renderOne(ctx);\n    const visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n    const visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n    const len = this._cursorLineNumbers.length;\n    let index = 0;\n    const renderData = [];\n    for (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n      const lineIndex = lineNumber - visibleStartLineNumber;\n      while (index < len && this._cursorLineNumbers[index] < lineNumber) {\n        index++;\n      }\n      if (index < len && this._cursorLineNumbers[index] === lineNumber) {\n        renderData[lineIndex] = renderedLine;\n      } else {\n        renderData[lineIndex] = '';\n      }\n    }\n    this._renderData = renderData;\n  }\n  render(startLineNumber, lineNumber) {\n    if (!this._renderData) {\n      return '';\n    }\n    const lineIndex = lineNumber - startLineNumber;\n    if (lineIndex >= this._renderData.length) {\n      return '';\n    }\n    return this._renderData[lineIndex];\n  }\n}\nexport class CurrentLineHighlightOverlay extends AbstractLineHighlightOverlay {\n  _renderOne(ctx) {\n    const className = 'current-line' + (this._shouldRenderOther() ? ' current-line-both' : '');\n    return \"<div class=\\\"\".concat(className, \"\\\" style=\\\"width:\").concat(Math.max(ctx.scrollWidth, this._contentWidth), \"px; height:\").concat(this._lineHeight, \"px;\\\"></div>\");\n  }\n  _shouldRenderThis() {\n    return (this._renderLineHighlight === 'line' || this._renderLineHighlight === 'all') && this._selectionIsEmpty && (!this._renderLineHighlightOnlyWhenFocus || this._focused);\n  }\n  _shouldRenderOther() {\n    return (this._renderLineHighlight === 'gutter' || this._renderLineHighlight === 'all') && (!this._renderLineHighlightOnlyWhenFocus || this._focused);\n  }\n}\nexport class CurrentLineMarginHighlightOverlay extends AbstractLineHighlightOverlay {\n  _renderOne(ctx) {\n    const className = 'current-line' + (this._shouldRenderMargin() ? ' current-line-margin' : '') + (this._shouldRenderOther() ? ' current-line-margin-both' : '');\n    return \"<div class=\\\"\".concat(className, \"\\\" style=\\\"width:\").concat(this._contentLeft, \"px; height:\").concat(this._lineHeight, \"px;\\\"></div>\");\n  }\n  _shouldRenderMargin() {\n    return (this._renderLineHighlight === 'gutter' || this._renderLineHighlight === 'all') && (!this._renderLineHighlightOnlyWhenFocus || this._focused);\n  }\n  _shouldRenderThis() {\n    return true;\n  }\n  _shouldRenderOther() {\n    return (this._renderLineHighlight === 'line' || this._renderLineHighlight === 'all') && this._selectionIsEmpty && (!this._renderLineHighlightOnlyWhenFocus || this._focused);\n  }\n}\nregisterThemingParticipant((theme, collector) => {\n  isRenderedUsingBorder = false;\n  const lineHighlight = theme.getColor(editorLineHighlight);\n  if (lineHighlight) {\n    collector.addRule(\".monaco-editor .view-overlays .current-line { background-color: \".concat(lineHighlight, \"; }\"));\n    collector.addRule(\".monaco-editor .margin-view-overlays .current-line-margin { background-color: \".concat(lineHighlight, \"; border: none; }\"));\n  }\n  if (!lineHighlight || lineHighlight.isTransparent() || theme.defines(editorLineHighlightBorder)) {\n    const lineHighlightBorder = theme.getColor(editorLineHighlightBorder);\n    if (lineHighlightBorder) {\n      isRenderedUsingBorder = true;\n      collector.addRule(\".monaco-editor .view-overlays .current-line { border: 2px solid \".concat(lineHighlightBorder, \"; }\"));\n      collector.addRule(\".monaco-editor .margin-view-overlays .current-line-margin { border: 2px solid \".concat(lineHighlightBorder, \"; }\"));\n      if (theme.type === 'hc') {\n        collector.addRule(\".monaco-editor .view-overlays .current-line { border-width: 1px; }\");\n        collector.addRule(\".monaco-editor .margin-view-overlays .current-line-margin { border-width: 1px; }\");\n      }\n    }\n  }\n});","map":{"version":3,"names":["DynamicViewOverlay","editorLineHighlight","editorLineHighlightBorder","arrays","registerThemingParticipant","Selection","isRenderedUsingBorder","AbstractLineHighlightOverlay","constructor","context","_context","options","configuration","layoutInfo","get","_lineHeight","_renderLineHighlight","_renderLineHighlightOnlyWhenFocus","_contentLeft","contentLeft","_contentWidth","contentWidth","_selectionIsEmpty","_focused","_cursorLineNumbers","_selections","_renderData","addEventHandler","dispose","removeEventHandler","_readFromSelections","hasChanged","renderSelections","slice","cursorsLineNumbers","map","s","positionLineNumber","sort","a","b","equals","selectionIsEmpty","every","isEmpty","onThemeChanged","e","onConfigurationChanged","onCursorStateChanged","selections","onFlushed","onLinesDeleted","onLinesInserted","onScrollChanged","scrollWidthChanged","scrollTopChanged","onZonesChanged","onFocusChanged","isFocused","prepareRender","ctx","_shouldRenderThis","renderedLine","_renderOne","visibleStartLineNumber","visibleRange","startLineNumber","visibleEndLineNumber","endLineNumber","len","length","index","renderData","lineNumber","lineIndex","render","CurrentLineHighlightOverlay","className","_shouldRenderOther","concat","Math","max","scrollWidth","CurrentLineMarginHighlightOverlay","_shouldRenderMargin","theme","collector","lineHighlight","getColor","addRule","isTransparent","defines","lineHighlightBorder","type"],"sources":["C:/Users/Administrator/Desktop/sqllineage-master/sqllineagejs/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/currentLineHighlight/currentLineHighlight.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport './currentLineHighlight.css';\r\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\r\nimport { editorLineHighlight, editorLineHighlightBorder } from '../../../common/view/editorColorRegistry.js';\r\nimport * as arrays from '../../../../base/common/arrays.js';\r\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\r\nimport { Selection } from '../../../common/core/selection.js';\r\nlet isRenderedUsingBorder = true;\r\nexport class AbstractLineHighlightOverlay extends DynamicViewOverlay {\r\n    constructor(context) {\r\n        super();\r\n        this._context = context;\r\n        const options = this._context.configuration.options;\r\n        const layoutInfo = options.get(124 /* layoutInfo */);\r\n        this._lineHeight = options.get(53 /* lineHeight */);\r\n        this._renderLineHighlight = options.get(80 /* renderLineHighlight */);\r\n        this._renderLineHighlightOnlyWhenFocus = options.get(81 /* renderLineHighlightOnlyWhenFocus */);\r\n        this._contentLeft = layoutInfo.contentLeft;\r\n        this._contentWidth = layoutInfo.contentWidth;\r\n        this._selectionIsEmpty = true;\r\n        this._focused = false;\r\n        this._cursorLineNumbers = [1];\r\n        this._selections = [new Selection(1, 1, 1, 1)];\r\n        this._renderData = null;\r\n        this._context.addEventHandler(this);\r\n    }\r\n    dispose() {\r\n        this._context.removeEventHandler(this);\r\n        super.dispose();\r\n    }\r\n    _readFromSelections() {\r\n        let hasChanged = false;\r\n        // Only render the first selection when using border\r\n        const renderSelections = isRenderedUsingBorder ? this._selections.slice(0, 1) : this._selections;\r\n        const cursorsLineNumbers = renderSelections.map(s => s.positionLineNumber);\r\n        cursorsLineNumbers.sort((a, b) => a - b);\r\n        if (!arrays.equals(this._cursorLineNumbers, cursorsLineNumbers)) {\r\n            this._cursorLineNumbers = cursorsLineNumbers;\r\n            hasChanged = true;\r\n        }\r\n        const selectionIsEmpty = renderSelections.every(s => s.isEmpty());\r\n        if (this._selectionIsEmpty !== selectionIsEmpty) {\r\n            this._selectionIsEmpty = selectionIsEmpty;\r\n            hasChanged = true;\r\n        }\r\n        return hasChanged;\r\n    }\r\n    // --- begin event handlers\r\n    onThemeChanged(e) {\r\n        return this._readFromSelections();\r\n    }\r\n    onConfigurationChanged(e) {\r\n        const options = this._context.configuration.options;\r\n        const layoutInfo = options.get(124 /* layoutInfo */);\r\n        this._lineHeight = options.get(53 /* lineHeight */);\r\n        this._renderLineHighlight = options.get(80 /* renderLineHighlight */);\r\n        this._renderLineHighlightOnlyWhenFocus = options.get(81 /* renderLineHighlightOnlyWhenFocus */);\r\n        this._contentLeft = layoutInfo.contentLeft;\r\n        this._contentWidth = layoutInfo.contentWidth;\r\n        return true;\r\n    }\r\n    onCursorStateChanged(e) {\r\n        this._selections = e.selections;\r\n        return this._readFromSelections();\r\n    }\r\n    onFlushed(e) {\r\n        return true;\r\n    }\r\n    onLinesDeleted(e) {\r\n        return true;\r\n    }\r\n    onLinesInserted(e) {\r\n        return true;\r\n    }\r\n    onScrollChanged(e) {\r\n        return e.scrollWidthChanged || e.scrollTopChanged;\r\n    }\r\n    onZonesChanged(e) {\r\n        return true;\r\n    }\r\n    onFocusChanged(e) {\r\n        if (!this._renderLineHighlightOnlyWhenFocus) {\r\n            return false;\r\n        }\r\n        this._focused = e.isFocused;\r\n        return true;\r\n    }\r\n    // --- end event handlers\r\n    prepareRender(ctx) {\r\n        if (!this._shouldRenderThis()) {\r\n            this._renderData = null;\r\n            return;\r\n        }\r\n        const renderedLine = this._renderOne(ctx);\r\n        const visibleStartLineNumber = ctx.visibleRange.startLineNumber;\r\n        const visibleEndLineNumber = ctx.visibleRange.endLineNumber;\r\n        const len = this._cursorLineNumbers.length;\r\n        let index = 0;\r\n        const renderData = [];\r\n        for (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\r\n            const lineIndex = lineNumber - visibleStartLineNumber;\r\n            while (index < len && this._cursorLineNumbers[index] < lineNumber) {\r\n                index++;\r\n            }\r\n            if (index < len && this._cursorLineNumbers[index] === lineNumber) {\r\n                renderData[lineIndex] = renderedLine;\r\n            }\r\n            else {\r\n                renderData[lineIndex] = '';\r\n            }\r\n        }\r\n        this._renderData = renderData;\r\n    }\r\n    render(startLineNumber, lineNumber) {\r\n        if (!this._renderData) {\r\n            return '';\r\n        }\r\n        const lineIndex = lineNumber - startLineNumber;\r\n        if (lineIndex >= this._renderData.length) {\r\n            return '';\r\n        }\r\n        return this._renderData[lineIndex];\r\n    }\r\n}\r\nexport class CurrentLineHighlightOverlay extends AbstractLineHighlightOverlay {\r\n    _renderOne(ctx) {\r\n        const className = 'current-line' + (this._shouldRenderOther() ? ' current-line-both' : '');\r\n        return `<div class=\"${className}\" style=\"width:${Math.max(ctx.scrollWidth, this._contentWidth)}px; height:${this._lineHeight}px;\"></div>`;\r\n    }\r\n    _shouldRenderThis() {\r\n        return ((this._renderLineHighlight === 'line' || this._renderLineHighlight === 'all')\r\n            && this._selectionIsEmpty\r\n            && (!this._renderLineHighlightOnlyWhenFocus || this._focused));\r\n    }\r\n    _shouldRenderOther() {\r\n        return ((this._renderLineHighlight === 'gutter' || this._renderLineHighlight === 'all')\r\n            && (!this._renderLineHighlightOnlyWhenFocus || this._focused));\r\n    }\r\n}\r\nexport class CurrentLineMarginHighlightOverlay extends AbstractLineHighlightOverlay {\r\n    _renderOne(ctx) {\r\n        const className = 'current-line' + (this._shouldRenderMargin() ? ' current-line-margin' : '') + (this._shouldRenderOther() ? ' current-line-margin-both' : '');\r\n        return `<div class=\"${className}\" style=\"width:${this._contentLeft}px; height:${this._lineHeight}px;\"></div>`;\r\n    }\r\n    _shouldRenderMargin() {\r\n        return ((this._renderLineHighlight === 'gutter' || this._renderLineHighlight === 'all')\r\n            && (!this._renderLineHighlightOnlyWhenFocus || this._focused));\r\n    }\r\n    _shouldRenderThis() {\r\n        return true;\r\n    }\r\n    _shouldRenderOther() {\r\n        return ((this._renderLineHighlight === 'line' || this._renderLineHighlight === 'all')\r\n            && this._selectionIsEmpty\r\n            && (!this._renderLineHighlightOnlyWhenFocus || this._focused));\r\n    }\r\n}\r\nregisterThemingParticipant((theme, collector) => {\r\n    isRenderedUsingBorder = false;\r\n    const lineHighlight = theme.getColor(editorLineHighlight);\r\n    if (lineHighlight) {\r\n        collector.addRule(`.monaco-editor .view-overlays .current-line { background-color: ${lineHighlight}; }`);\r\n        collector.addRule(`.monaco-editor .margin-view-overlays .current-line-margin { background-color: ${lineHighlight}; border: none; }`);\r\n    }\r\n    if (!lineHighlight || lineHighlight.isTransparent() || theme.defines(editorLineHighlightBorder)) {\r\n        const lineHighlightBorder = theme.getColor(editorLineHighlightBorder);\r\n        if (lineHighlightBorder) {\r\n            isRenderedUsingBorder = true;\r\n            collector.addRule(`.monaco-editor .view-overlays .current-line { border: 2px solid ${lineHighlightBorder}; }`);\r\n            collector.addRule(`.monaco-editor .margin-view-overlays .current-line-margin { border: 2px solid ${lineHighlightBorder}; }`);\r\n            if (theme.type === 'hc') {\r\n                collector.addRule(`.monaco-editor .view-overlays .current-line { border-width: 1px; }`);\r\n                collector.addRule(`.monaco-editor .margin-view-overlays .current-line-margin { border-width: 1px; }`);\r\n            }\r\n        }\r\n    }\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}