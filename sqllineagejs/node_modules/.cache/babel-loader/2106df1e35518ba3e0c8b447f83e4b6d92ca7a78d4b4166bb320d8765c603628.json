{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport './media/tree.css';\nimport { dispose, Disposable, toDisposable, DisposableStore } from '../../../common/lifecycle.js';\nimport { List, MouseController, DefaultKeyboardNavigationDelegate, isInputElement, isMonacoEditor } from '../list/listWidget.js';\nimport { append, $, getDomNodePagePosition, hasParentWithClass, createStyleSheet, clearNode } from '../../dom.js';\nimport { Event, Relay, Emitter, EventBufferer } from '../../../common/event.js';\nimport { StandardKeyboardEvent } from '../../keyboardEvent.js';\nimport { TreeMouseEventTarget } from './tree.js';\nimport { StaticDND, DragAndDropData } from '../../dnd.js';\nimport { range, equals, distinctES6 } from '../../../common/arrays.js';\nimport { ElementsDragAndDropData } from '../list/listView.js';\nimport { domEvent } from '../../event.js';\nimport { fuzzyScore, FuzzyScore } from '../../../common/filters.js';\nimport { getVisibleState, isFilterResult } from './indexTreeModel.js';\nimport { localize } from '../../../../nls.js';\nimport { disposableTimeout } from '../../../common/async.js';\nimport { isMacintosh } from '../../../common/platform.js';\nimport { clamp } from '../../../common/numbers.js';\nimport { SetMap } from '../../../common/collections.js';\nimport { treeItemExpandedIcon, treeFilterOnTypeOnIcon, treeFilterOnTypeOffIcon, treeFilterClearIcon } from './treeIcons.js';\nclass TreeElementsDragAndDropData extends ElementsDragAndDropData {\n  constructor(data) {\n    super(data.elements.map(node => node.element));\n    this.data = data;\n  }\n}\nfunction asTreeDragAndDropData(data) {\n  if (data instanceof ElementsDragAndDropData) {\n    return new TreeElementsDragAndDropData(data);\n  }\n  return data;\n}\nclass TreeNodeListDragAndDrop {\n  constructor(modelProvider, dnd) {\n    this.modelProvider = modelProvider;\n    this.dnd = dnd;\n    this.autoExpandDisposable = Disposable.None;\n  }\n  getDragURI(node) {\n    return this.dnd.getDragURI(node.element);\n  }\n  getDragLabel(nodes, originalEvent) {\n    if (this.dnd.getDragLabel) {\n      return this.dnd.getDragLabel(nodes.map(node => node.element), originalEvent);\n    }\n    return undefined;\n  }\n  onDragStart(data, originalEvent) {\n    if (this.dnd.onDragStart) {\n      this.dnd.onDragStart(asTreeDragAndDropData(data), originalEvent);\n    }\n  }\n  onDragOver(data, targetNode, targetIndex, originalEvent) {\n    let raw = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;\n    const result = this.dnd.onDragOver(asTreeDragAndDropData(data), targetNode && targetNode.element, targetIndex, originalEvent);\n    const didChangeAutoExpandNode = this.autoExpandNode !== targetNode;\n    if (didChangeAutoExpandNode) {\n      this.autoExpandDisposable.dispose();\n      this.autoExpandNode = targetNode;\n    }\n    if (typeof targetNode === 'undefined') {\n      return result;\n    }\n    if (didChangeAutoExpandNode && typeof result !== 'boolean' && result.autoExpand) {\n      this.autoExpandDisposable = disposableTimeout(() => {\n        const model = this.modelProvider();\n        const ref = model.getNodeLocation(targetNode);\n        if (model.isCollapsed(ref)) {\n          model.setCollapsed(ref, false);\n        }\n        this.autoExpandNode = undefined;\n      }, 500);\n    }\n    if (typeof result === 'boolean' || !result.accept || typeof result.bubble === 'undefined' || result.feedback) {\n      if (!raw) {\n        const accept = typeof result === 'boolean' ? result : result.accept;\n        const effect = typeof result === 'boolean' ? undefined : result.effect;\n        return {\n          accept,\n          effect,\n          feedback: [targetIndex]\n        };\n      }\n      return result;\n    }\n    if (result.bubble === 1 /* Up */) {\n      const model = this.modelProvider();\n      const ref = model.getNodeLocation(targetNode);\n      const parentRef = model.getParentNodeLocation(ref);\n      const parentNode = model.getNode(parentRef);\n      const parentIndex = parentRef && model.getListIndex(parentRef);\n      return this.onDragOver(data, parentNode, parentIndex, originalEvent, false);\n    }\n    const model = this.modelProvider();\n    const ref = model.getNodeLocation(targetNode);\n    const start = model.getListIndex(ref);\n    const length = model.getListRenderCount(ref);\n    return Object.assign(Object.assign({}, result), {\n      feedback: range(start, start + length)\n    });\n  }\n  drop(data, targetNode, targetIndex, originalEvent) {\n    this.autoExpandDisposable.dispose();\n    this.autoExpandNode = undefined;\n    this.dnd.drop(asTreeDragAndDropData(data), targetNode && targetNode.element, targetIndex, originalEvent);\n  }\n  onDragEnd(originalEvent) {\n    if (this.dnd.onDragEnd) {\n      this.dnd.onDragEnd(originalEvent);\n    }\n  }\n}\nfunction asListOptions(modelProvider, options) {\n  return options && Object.assign(Object.assign({}, options), {\n    identityProvider: options.identityProvider && {\n      getId(el) {\n        return options.identityProvider.getId(el.element);\n      }\n    },\n    dnd: options.dnd && new TreeNodeListDragAndDrop(modelProvider, options.dnd),\n    multipleSelectionController: options.multipleSelectionController && {\n      isSelectionSingleChangeEvent(e) {\n        return options.multipleSelectionController.isSelectionSingleChangeEvent(Object.assign(Object.assign({}, e), {\n          element: e.element\n        }));\n      },\n      isSelectionRangeChangeEvent(e) {\n        return options.multipleSelectionController.isSelectionRangeChangeEvent(Object.assign(Object.assign({}, e), {\n          element: e.element\n        }));\n      }\n    },\n    accessibilityProvider: options.accessibilityProvider && Object.assign(Object.assign({}, options.accessibilityProvider), {\n      getSetSize(node) {\n        const model = modelProvider();\n        const ref = model.getNodeLocation(node);\n        const parentRef = model.getParentNodeLocation(ref);\n        const parentNode = model.getNode(parentRef);\n        return parentNode.visibleChildrenCount;\n      },\n      getPosInSet(node) {\n        return node.visibleChildIndex + 1;\n      },\n      isChecked: options.accessibilityProvider && options.accessibilityProvider.isChecked ? node => {\n        return options.accessibilityProvider.isChecked(node.element);\n      } : undefined,\n      getRole: options.accessibilityProvider && options.accessibilityProvider.getRole ? node => {\n        return options.accessibilityProvider.getRole(node.element);\n      } : () => 'treeitem',\n      getAriaLabel(e) {\n        return options.accessibilityProvider.getAriaLabel(e.element);\n      },\n      getWidgetAriaLabel() {\n        return options.accessibilityProvider.getWidgetAriaLabel();\n      },\n      getWidgetRole: options.accessibilityProvider && options.accessibilityProvider.getWidgetRole ? () => options.accessibilityProvider.getWidgetRole() : () => 'tree',\n      getAriaLevel: options.accessibilityProvider && options.accessibilityProvider.getAriaLevel ? node => options.accessibilityProvider.getAriaLevel(node.element) : node => {\n        return node.depth;\n      },\n      getActiveDescendantId: options.accessibilityProvider.getActiveDescendantId && (node => {\n        return options.accessibilityProvider.getActiveDescendantId(node.element);\n      })\n    }),\n    keyboardNavigationLabelProvider: options.keyboardNavigationLabelProvider && Object.assign(Object.assign({}, options.keyboardNavigationLabelProvider), {\n      getKeyboardNavigationLabel(node) {\n        return options.keyboardNavigationLabelProvider.getKeyboardNavigationLabel(node.element);\n      }\n    }),\n    enableKeyboardNavigation: options.simpleKeyboardNavigation\n  });\n}\nexport class ComposedTreeDelegate {\n  constructor(delegate) {\n    this.delegate = delegate;\n  }\n  getHeight(element) {\n    return this.delegate.getHeight(element.element);\n  }\n  getTemplateId(element) {\n    return this.delegate.getTemplateId(element.element);\n  }\n  hasDynamicHeight(element) {\n    return !!this.delegate.hasDynamicHeight && this.delegate.hasDynamicHeight(element.element);\n  }\n  setDynamicHeight(element, height) {\n    if (this.delegate.setDynamicHeight) {\n      this.delegate.setDynamicHeight(element.element, height);\n    }\n  }\n}\nexport var RenderIndentGuides;\n(function (RenderIndentGuides) {\n  RenderIndentGuides[\"None\"] = \"none\";\n  RenderIndentGuides[\"OnHover\"] = \"onHover\";\n  RenderIndentGuides[\"Always\"] = \"always\";\n})(RenderIndentGuides || (RenderIndentGuides = {}));\nclass EventCollection {\n  constructor(onDidChange) {\n    let _elements = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    this._elements = _elements;\n    this.onDidChange = Event.forEach(onDidChange, elements => this._elements = elements);\n  }\n  get elements() {\n    return this._elements;\n  }\n}\nclass TreeRenderer {\n  constructor(renderer, modelProvider, onDidChangeCollapseState, activeNodes) {\n    let options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n    this.renderer = renderer;\n    this.modelProvider = modelProvider;\n    this.activeNodes = activeNodes;\n    this.renderedElements = new Map();\n    this.renderedNodes = new Map();\n    this.indent = TreeRenderer.DefaultIndent;\n    this.hideTwistiesOfChildlessElements = false;\n    this.shouldRenderIndentGuides = false;\n    this.renderedIndentGuides = new SetMap();\n    this.activeIndentNodes = new Set();\n    this.indentGuidesDisposable = Disposable.None;\n    this.disposables = new DisposableStore();\n    this.templateId = renderer.templateId;\n    this.updateOptions(options);\n    Event.map(onDidChangeCollapseState, e => e.node)(this.onDidChangeNodeTwistieState, this, this.disposables);\n    if (renderer.onDidChangeTwistieState) {\n      renderer.onDidChangeTwistieState(this.onDidChangeTwistieState, this, this.disposables);\n    }\n  }\n  updateOptions() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (typeof options.indent !== 'undefined') {\n      this.indent = clamp(options.indent, 0, 40);\n    }\n    if (typeof options.renderIndentGuides !== 'undefined') {\n      const shouldRenderIndentGuides = options.renderIndentGuides !== RenderIndentGuides.None;\n      if (shouldRenderIndentGuides !== this.shouldRenderIndentGuides) {\n        this.shouldRenderIndentGuides = shouldRenderIndentGuides;\n        this.indentGuidesDisposable.dispose();\n        if (shouldRenderIndentGuides) {\n          const disposables = new DisposableStore();\n          this.activeNodes.onDidChange(this._onDidChangeActiveNodes, this, disposables);\n          this.indentGuidesDisposable = disposables;\n          this._onDidChangeActiveNodes(this.activeNodes.elements);\n        }\n      }\n    }\n    if (typeof options.hideTwistiesOfChildlessElements !== 'undefined') {\n      this.hideTwistiesOfChildlessElements = options.hideTwistiesOfChildlessElements;\n    }\n  }\n  renderTemplate(container) {\n    const el = append(container, $('.monaco-tl-row'));\n    const indent = append(el, $('.monaco-tl-indent'));\n    const twistie = append(el, $('.monaco-tl-twistie'));\n    const contents = append(el, $('.monaco-tl-contents'));\n    const templateData = this.renderer.renderTemplate(contents);\n    return {\n      container,\n      indent,\n      twistie,\n      indentGuidesDisposable: Disposable.None,\n      templateData\n    };\n  }\n  renderElement(node, index, templateData, height) {\n    if (typeof height === 'number') {\n      this.renderedNodes.set(node, {\n        templateData,\n        height\n      });\n      this.renderedElements.set(node.element, node);\n    }\n    const indent = TreeRenderer.DefaultIndent + (node.depth - 1) * this.indent;\n    templateData.twistie.style.paddingLeft = \"\".concat(indent, \"px\");\n    templateData.indent.style.width = \"\".concat(indent + this.indent - 16, \"px\");\n    this.renderTwistie(node, templateData);\n    if (typeof height === 'number') {\n      this.renderIndentGuides(node, templateData);\n    }\n    this.renderer.renderElement(node, index, templateData.templateData, height);\n  }\n  disposeElement(node, index, templateData, height) {\n    templateData.indentGuidesDisposable.dispose();\n    if (this.renderer.disposeElement) {\n      this.renderer.disposeElement(node, index, templateData.templateData, height);\n    }\n    if (typeof height === 'number') {\n      this.renderedNodes.delete(node);\n      this.renderedElements.delete(node.element);\n    }\n  }\n  disposeTemplate(templateData) {\n    this.renderer.disposeTemplate(templateData.templateData);\n  }\n  onDidChangeTwistieState(element) {\n    const node = this.renderedElements.get(element);\n    if (!node) {\n      return;\n    }\n    this.onDidChangeNodeTwistieState(node);\n  }\n  onDidChangeNodeTwistieState(node) {\n    const data = this.renderedNodes.get(node);\n    if (!data) {\n      return;\n    }\n    this.renderTwistie(node, data.templateData);\n    this._onDidChangeActiveNodes(this.activeNodes.elements);\n    this.renderIndentGuides(node, data.templateData);\n  }\n  renderTwistie(node, templateData) {\n    templateData.twistie.classList.remove(...treeItemExpandedIcon.classNamesArray);\n    let twistieRendered = false;\n    if (this.renderer.renderTwistie) {\n      twistieRendered = this.renderer.renderTwistie(node.element, templateData.twistie);\n    }\n    if (node.collapsible && (!this.hideTwistiesOfChildlessElements || node.visibleChildrenCount > 0)) {\n      if (!twistieRendered) {\n        templateData.twistie.classList.add(...treeItemExpandedIcon.classNamesArray);\n      }\n      templateData.twistie.classList.add('collapsible');\n      templateData.twistie.classList.toggle('collapsed', node.collapsed);\n    } else {\n      templateData.twistie.classList.remove('collapsible', 'collapsed');\n    }\n    if (node.collapsible) {\n      templateData.container.setAttribute('aria-expanded', String(!node.collapsed));\n    } else {\n      templateData.container.removeAttribute('aria-expanded');\n    }\n  }\n  renderIndentGuides(target, templateData) {\n    clearNode(templateData.indent);\n    templateData.indentGuidesDisposable.dispose();\n    if (!this.shouldRenderIndentGuides) {\n      return;\n    }\n    const disposableStore = new DisposableStore();\n    const model = this.modelProvider();\n    let node = target;\n    while (true) {\n      const ref = model.getNodeLocation(node);\n      const parentRef = model.getParentNodeLocation(ref);\n      if (!parentRef) {\n        break;\n      }\n      const parent = model.getNode(parentRef);\n      const guide = $('.indent-guide', {\n        style: \"width: \".concat(this.indent, \"px\")\n      });\n      if (this.activeIndentNodes.has(parent)) {\n        guide.classList.add('active');\n      }\n      if (templateData.indent.childElementCount === 0) {\n        templateData.indent.appendChild(guide);\n      } else {\n        templateData.indent.insertBefore(guide, templateData.indent.firstElementChild);\n      }\n      this.renderedIndentGuides.add(parent, guide);\n      disposableStore.add(toDisposable(() => this.renderedIndentGuides.delete(parent, guide)));\n      node = parent;\n    }\n    templateData.indentGuidesDisposable = disposableStore;\n  }\n  _onDidChangeActiveNodes(nodes) {\n    if (!this.shouldRenderIndentGuides) {\n      return;\n    }\n    const set = new Set();\n    const model = this.modelProvider();\n    nodes.forEach(node => {\n      const ref = model.getNodeLocation(node);\n      try {\n        const parentRef = model.getParentNodeLocation(ref);\n        if (node.collapsible && node.children.length > 0 && !node.collapsed) {\n          set.add(node);\n        } else if (parentRef) {\n          set.add(model.getNode(parentRef));\n        }\n      } catch (_a) {\n        // noop\n      }\n    });\n    this.activeIndentNodes.forEach(node => {\n      if (!set.has(node)) {\n        this.renderedIndentGuides.forEach(node, line => line.classList.remove('active'));\n      }\n    });\n    set.forEach(node => {\n      if (!this.activeIndentNodes.has(node)) {\n        this.renderedIndentGuides.forEach(node, line => line.classList.add('active'));\n      }\n    });\n    this.activeIndentNodes = set;\n  }\n  dispose() {\n    this.renderedNodes.clear();\n    this.renderedElements.clear();\n    this.indentGuidesDisposable.dispose();\n    dispose(this.disposables);\n  }\n}\nTreeRenderer.DefaultIndent = 8;\nclass TypeFilter {\n  constructor(tree, keyboardNavigationLabelProvider, _filter) {\n    this.tree = tree;\n    this.keyboardNavigationLabelProvider = keyboardNavigationLabelProvider;\n    this._filter = _filter;\n    this._totalCount = 0;\n    this._matchCount = 0;\n    this._pattern = '';\n    this._lowercasePattern = '';\n    this.disposables = new DisposableStore();\n    tree.onWillRefilter(this.reset, this, this.disposables);\n  }\n  get totalCount() {\n    return this._totalCount;\n  }\n  get matchCount() {\n    return this._matchCount;\n  }\n  set pattern(pattern) {\n    this._pattern = pattern;\n    this._lowercasePattern = pattern.toLowerCase();\n  }\n  filter(element, parentVisibility) {\n    if (this._filter) {\n      const result = this._filter.filter(element, parentVisibility);\n      if (this.tree.options.simpleKeyboardNavigation) {\n        return result;\n      }\n      let visibility;\n      if (typeof result === 'boolean') {\n        visibility = result ? 1 /* Visible */ : 0 /* Hidden */;\n      } else if (isFilterResult(result)) {\n        visibility = getVisibleState(result.visibility);\n      } else {\n        visibility = result;\n      }\n      if (visibility === 0 /* Hidden */) {\n        return false;\n      }\n    }\n    this._totalCount++;\n    if (this.tree.options.simpleKeyboardNavigation || !this._pattern) {\n      this._matchCount++;\n      return {\n        data: FuzzyScore.Default,\n        visibility: true\n      };\n    }\n    const label = this.keyboardNavigationLabelProvider.getKeyboardNavigationLabel(element);\n    const labels = Array.isArray(label) ? label : [label];\n    for (const l of labels) {\n      const labelStr = l && l.toString();\n      if (typeof labelStr === 'undefined') {\n        return {\n          data: FuzzyScore.Default,\n          visibility: true\n        };\n      }\n      const score = fuzzyScore(this._pattern, this._lowercasePattern, 0, labelStr, labelStr.toLowerCase(), 0, true);\n      if (score) {\n        this._matchCount++;\n        return labels.length === 1 ? {\n          data: score,\n          visibility: true\n        } : {\n          data: {\n            label: labelStr,\n            score: score\n          },\n          visibility: true\n        };\n      }\n    }\n    if (this.tree.options.filterOnType) {\n      return 2 /* Recurse */;\n    } else {\n      return {\n        data: FuzzyScore.Default,\n        visibility: true\n      };\n    }\n  }\n  reset() {\n    this._totalCount = 0;\n    this._matchCount = 0;\n  }\n  dispose() {\n    dispose(this.disposables);\n  }\n}\nclass TypeFilterController {\n  constructor(tree, model, view, filter, keyboardNavigationDelegate) {\n    this.tree = tree;\n    this.view = view;\n    this.filter = filter;\n    this.keyboardNavigationDelegate = keyboardNavigationDelegate;\n    this._enabled = false;\n    this._pattern = '';\n    this._empty = false;\n    this._onDidChangeEmptyState = new Emitter();\n    this.positionClassName = 'ne';\n    this.automaticKeyboardNavigation = true;\n    this.triggered = false;\n    this._onDidChangePattern = new Emitter();\n    this.enabledDisposables = new DisposableStore();\n    this.disposables = new DisposableStore();\n    this.domNode = $(\".monaco-list-type-filter.\".concat(this.positionClassName));\n    this.domNode.draggable = true;\n    domEvent(this.domNode, 'dragstart')(this.onDragStart, this, this.disposables);\n    this.messageDomNode = append(view.getHTMLElement(), $(\".monaco-list-type-filter-message\"));\n    this.labelDomNode = append(this.domNode, $('span.label'));\n    const controls = append(this.domNode, $('.controls'));\n    this._filterOnType = !!tree.options.filterOnType;\n    this.filterOnTypeDomNode = append(controls, $('input.filter'));\n    this.filterOnTypeDomNode.type = 'checkbox';\n    this.filterOnTypeDomNode.checked = this._filterOnType;\n    this.filterOnTypeDomNode.tabIndex = -1;\n    this.updateFilterOnTypeTitleAndIcon();\n    domEvent(this.filterOnTypeDomNode, 'input')(this.onDidChangeFilterOnType, this, this.disposables);\n    this.clearDomNode = append(controls, $('button.clear' + treeFilterClearIcon.cssSelector));\n    this.clearDomNode.tabIndex = -1;\n    this.clearDomNode.title = localize('clear', \"Clear\");\n    this.keyboardNavigationEventFilter = tree.options.keyboardNavigationEventFilter;\n    model.onDidSplice(this.onDidSpliceModel, this, this.disposables);\n    this.updateOptions(tree.options);\n  }\n  get enabled() {\n    return this._enabled;\n  }\n  get pattern() {\n    return this._pattern;\n  }\n  get filterOnType() {\n    return this._filterOnType;\n  }\n  updateOptions(options) {\n    if (options.simpleKeyboardNavigation) {\n      this.disable();\n    } else {\n      this.enable();\n    }\n    if (typeof options.filterOnType !== 'undefined') {\n      this._filterOnType = !!options.filterOnType;\n      this.filterOnTypeDomNode.checked = this._filterOnType;\n    }\n    if (typeof options.automaticKeyboardNavigation !== 'undefined') {\n      this.automaticKeyboardNavigation = options.automaticKeyboardNavigation;\n    }\n    this.tree.refilter();\n    this.render();\n    if (!this.automaticKeyboardNavigation) {\n      this.onEventOrInput('');\n    }\n  }\n  enable() {\n    if (this._enabled) {\n      return;\n    }\n    const onKeyDown = Event.chain(domEvent(this.view.getHTMLElement(), 'keydown')).filter(e => !isInputElement(e.target) || e.target === this.filterOnTypeDomNode).filter(e => e.key !== 'Dead' && !/^Media/.test(e.key)).map(e => new StandardKeyboardEvent(e)).filter(this.keyboardNavigationEventFilter || (() => true)).filter(() => this.automaticKeyboardNavigation || this.triggered).filter(e => this.keyboardNavigationDelegate.mightProducePrintableCharacter(e) && !(e.keyCode === 18 /* DownArrow */ || e.keyCode === 16 /* UpArrow */ || e.keyCode === 15 /* LeftArrow */ || e.keyCode === 17 /* RightArrow */) || (this.pattern.length > 0 || this.triggered) && (e.keyCode === 9 /* Escape */ || e.keyCode === 1 /* Backspace */) && !e.altKey && !e.ctrlKey && !e.metaKey || e.keyCode === 1 /* Backspace */ && (isMacintosh ? e.altKey && !e.metaKey : e.ctrlKey) && !e.shiftKey).forEach(e => {\n      e.stopPropagation();\n      e.preventDefault();\n    }).event;\n    const onClear = domEvent(this.clearDomNode, 'click');\n    Event.chain(Event.any(onKeyDown, onClear)).event(this.onEventOrInput, this, this.enabledDisposables);\n    this.filter.pattern = '';\n    this.tree.refilter();\n    this.render();\n    this._enabled = true;\n    this.triggered = false;\n  }\n  disable() {\n    if (!this._enabled) {\n      return;\n    }\n    this.domNode.remove();\n    this.enabledDisposables.clear();\n    this.tree.refilter();\n    this.render();\n    this._enabled = false;\n    this.triggered = false;\n  }\n  onEventOrInput(e) {\n    if (typeof e === 'string') {\n      this.onInput(e);\n    } else if (e instanceof MouseEvent || e.keyCode === 9 /* Escape */ || e.keyCode === 1 /* Backspace */ && (isMacintosh ? e.altKey : e.ctrlKey)) {\n      this.onInput('');\n    } else if (e.keyCode === 1 /* Backspace */) {\n      this.onInput(this.pattern.length === 0 ? '' : this.pattern.substr(0, this.pattern.length - 1));\n    } else {\n      this.onInput(this.pattern + e.browserEvent.key);\n    }\n  }\n  onInput(pattern) {\n    const container = this.view.getHTMLElement();\n    if (pattern && !this.domNode.parentElement) {\n      container.append(this.domNode);\n    } else if (!pattern && this.domNode.parentElement) {\n      this.domNode.remove();\n      this.tree.domFocus();\n    }\n    this._pattern = pattern;\n    this._onDidChangePattern.fire(pattern);\n    this.filter.pattern = pattern;\n    this.tree.refilter();\n    if (pattern) {\n      this.tree.focusNext(0, true, undefined, node => !FuzzyScore.isDefault(node.filterData));\n    }\n    const focus = this.tree.getFocus();\n    if (focus.length > 0) {\n      const element = focus[0];\n      if (this.tree.getRelativeTop(element) === null) {\n        this.tree.reveal(element, 0.5);\n      }\n    }\n    this.render();\n    if (!pattern) {\n      this.triggered = false;\n    }\n  }\n  onDragStart() {\n    const container = this.view.getHTMLElement();\n    const {\n      left\n    } = getDomNodePagePosition(container);\n    const containerWidth = container.clientWidth;\n    const midContainerWidth = containerWidth / 2;\n    const width = this.domNode.clientWidth;\n    const disposables = new DisposableStore();\n    let positionClassName = this.positionClassName;\n    const updatePosition = () => {\n      switch (positionClassName) {\n        case 'nw':\n          this.domNode.style.top = \"4px\";\n          this.domNode.style.left = \"4px\";\n          break;\n        case 'ne':\n          this.domNode.style.top = \"4px\";\n          this.domNode.style.left = \"\".concat(containerWidth - width - 6, \"px\");\n          break;\n      }\n    };\n    const onDragOver = event => {\n      event.preventDefault(); // needed so that the drop event fires (https://stackoverflow.com/questions/21339924/drop-event-not-firing-in-chrome)\n      const x = event.clientX - left;\n      if (event.dataTransfer) {\n        event.dataTransfer.dropEffect = 'none';\n      }\n      if (x < midContainerWidth) {\n        positionClassName = 'nw';\n      } else {\n        positionClassName = 'ne';\n      }\n      updatePosition();\n    };\n    const onDragEnd = () => {\n      this.positionClassName = positionClassName;\n      this.domNode.className = \"monaco-list-type-filter \".concat(this.positionClassName);\n      this.domNode.style.top = '';\n      this.domNode.style.left = '';\n      dispose(disposables);\n    };\n    updatePosition();\n    this.domNode.classList.remove(positionClassName);\n    this.domNode.classList.add('dragging');\n    disposables.add(toDisposable(() => this.domNode.classList.remove('dragging')));\n    domEvent(document, 'dragover')(onDragOver, null, disposables);\n    domEvent(this.domNode, 'dragend')(onDragEnd, null, disposables);\n    StaticDND.CurrentDragAndDropData = new DragAndDropData('vscode-ui');\n    disposables.add(toDisposable(() => StaticDND.CurrentDragAndDropData = undefined));\n  }\n  onDidSpliceModel() {\n    if (!this._enabled || this.pattern.length === 0) {\n      return;\n    }\n    this.tree.refilter();\n    this.render();\n  }\n  onDidChangeFilterOnType() {\n    this.tree.updateOptions({\n      filterOnType: this.filterOnTypeDomNode.checked\n    });\n    this.tree.refilter();\n    this.tree.domFocus();\n    this.render();\n    this.updateFilterOnTypeTitleAndIcon();\n  }\n  updateFilterOnTypeTitleAndIcon() {\n    if (this.filterOnType) {\n      this.filterOnTypeDomNode.classList.remove(...treeFilterOnTypeOffIcon.classNamesArray);\n      this.filterOnTypeDomNode.classList.add(...treeFilterOnTypeOnIcon.classNamesArray);\n      this.filterOnTypeDomNode.title = localize('disable filter on type', \"Disable Filter on Type\");\n    } else {\n      this.filterOnTypeDomNode.classList.remove(...treeFilterOnTypeOnIcon.classNamesArray);\n      this.filterOnTypeDomNode.classList.add(...treeFilterOnTypeOffIcon.classNamesArray);\n      this.filterOnTypeDomNode.title = localize('enable filter on type', \"Enable Filter on Type\");\n    }\n  }\n  render() {\n    const noMatches = this.filter.totalCount > 0 && this.filter.matchCount === 0;\n    if (this.pattern && this.tree.options.filterOnType && noMatches) {\n      this.messageDomNode.textContent = localize('empty', \"No elements found\");\n      this._empty = true;\n    } else {\n      this.messageDomNode.innerText = '';\n      this._empty = false;\n    }\n    this.domNode.classList.toggle('no-matches', noMatches);\n    this.domNode.title = localize('found', \"Matched {0} out of {1} elements\", this.filter.matchCount, this.filter.totalCount);\n    this.labelDomNode.textContent = this.pattern.length > 16 ? '…' + this.pattern.substr(this.pattern.length - 16) : this.pattern;\n    this._onDidChangeEmptyState.fire(this._empty);\n  }\n  shouldAllowFocus(node) {\n    if (!this.enabled || !this.pattern || this.filterOnType) {\n      return true;\n    }\n    if (this.filter.totalCount > 0 && this.filter.matchCount <= 1) {\n      return true;\n    }\n    return !FuzzyScore.isDefault(node.filterData);\n  }\n  dispose() {\n    if (this._enabled) {\n      this.domNode.remove();\n      this.enabledDisposables.dispose();\n      this._enabled = false;\n      this.triggered = false;\n    }\n    this._onDidChangePattern.dispose();\n    dispose(this.disposables);\n  }\n}\nfunction asTreeMouseEvent(event) {\n  let target = TreeMouseEventTarget.Unknown;\n  if (hasParentWithClass(event.browserEvent.target, 'monaco-tl-twistie', 'monaco-tl-row')) {\n    target = TreeMouseEventTarget.Twistie;\n  } else if (hasParentWithClass(event.browserEvent.target, 'monaco-tl-contents', 'monaco-tl-row')) {\n    target = TreeMouseEventTarget.Element;\n  }\n  return {\n    browserEvent: event.browserEvent,\n    element: event.element ? event.element.element : null,\n    target\n  };\n}\nfunction dfs(node, fn) {\n  fn(node);\n  node.children.forEach(child => dfs(child, fn));\n}\n/**\r\n * The trait concept needs to exist at the tree level, because collapsed\r\n * tree nodes will not be known by the list.\r\n */\nclass Trait {\n  constructor(identityProvider) {\n    this.identityProvider = identityProvider;\n    this.nodes = [];\n    this._onDidChange = new Emitter();\n    this.onDidChange = this._onDidChange.event;\n  }\n  get nodeSet() {\n    if (!this._nodeSet) {\n      this._nodeSet = this.createNodeSet();\n    }\n    return this._nodeSet;\n  }\n  set(nodes, browserEvent) {\n    var _a;\n    if (!((_a = browserEvent) === null || _a === void 0 ? void 0 : _a.__forceEvent) && equals(this.nodes, nodes)) {\n      return;\n    }\n    this._set(nodes, false, browserEvent);\n  }\n  _set(nodes, silent, browserEvent) {\n    this.nodes = [...nodes];\n    this.elements = undefined;\n    this._nodeSet = undefined;\n    if (!silent) {\n      const that = this;\n      this._onDidChange.fire({\n        get elements() {\n          return that.get();\n        },\n        browserEvent\n      });\n    }\n  }\n  get() {\n    if (!this.elements) {\n      this.elements = this.nodes.map(node => node.element);\n    }\n    return [...this.elements];\n  }\n  getNodes() {\n    return this.nodes;\n  }\n  has(node) {\n    return this.nodeSet.has(node);\n  }\n  onDidModelSplice(_ref) {\n    let {\n      insertedNodes,\n      deletedNodes\n    } = _ref;\n    if (!this.identityProvider) {\n      const set = this.createNodeSet();\n      const visit = node => set.delete(node);\n      deletedNodes.forEach(node => dfs(node, visit));\n      this.set([...set.values()]);\n      return;\n    }\n    const deletedNodesIdSet = new Set();\n    const deletedNodesVisitor = node => deletedNodesIdSet.add(this.identityProvider.getId(node.element).toString());\n    deletedNodes.forEach(node => dfs(node, deletedNodesVisitor));\n    const insertedNodesMap = new Map();\n    const insertedNodesVisitor = node => insertedNodesMap.set(this.identityProvider.getId(node.element).toString(), node);\n    insertedNodes.forEach(node => dfs(node, insertedNodesVisitor));\n    const nodes = [];\n    for (const node of this.nodes) {\n      const id = this.identityProvider.getId(node.element).toString();\n      const wasDeleted = deletedNodesIdSet.has(id);\n      if (!wasDeleted) {\n        nodes.push(node);\n      } else {\n        const insertedNode = insertedNodesMap.get(id);\n        if (insertedNode) {\n          nodes.push(insertedNode);\n        }\n      }\n    }\n    this._set(nodes, true);\n  }\n  createNodeSet() {\n    const set = new Set();\n    for (const node of this.nodes) {\n      set.add(node);\n    }\n    return set;\n  }\n}\nclass TreeNodeListMouseController extends MouseController {\n  constructor(list, tree) {\n    super(list);\n    this.tree = tree;\n  }\n  onViewPointer(e) {\n    if (isInputElement(e.browserEvent.target) || isMonacoEditor(e.browserEvent.target)) {\n      return;\n    }\n    const node = e.element;\n    if (!node) {\n      return super.onViewPointer(e);\n    }\n    if (this.isSelectionRangeChangeEvent(e) || this.isSelectionSingleChangeEvent(e)) {\n      return super.onViewPointer(e);\n    }\n    const target = e.browserEvent.target;\n    const onTwistie = target.classList.contains('monaco-tl-twistie') || target.classList.contains('monaco-icon-label') && target.classList.contains('folder-icon') && e.browserEvent.offsetX < 16;\n    let expandOnlyOnTwistieClick = false;\n    if (typeof this.tree.expandOnlyOnTwistieClick === 'function') {\n      expandOnlyOnTwistieClick = this.tree.expandOnlyOnTwistieClick(node.element);\n    } else {\n      expandOnlyOnTwistieClick = !!this.tree.expandOnlyOnTwistieClick;\n    }\n    if (expandOnlyOnTwistieClick && !onTwistie && e.browserEvent.detail !== 2) {\n      return super.onViewPointer(e);\n    }\n    if (this.tree.expandOnlyOnDoubleClick && e.browserEvent.detail !== 2 && !onTwistie) {\n      return super.onViewPointer(e);\n    }\n    if (node.collapsible) {\n      const model = this.tree.model; // internal\n      const location = model.getNodeLocation(node);\n      const recursive = e.browserEvent.altKey;\n      model.setCollapsed(location, undefined, recursive);\n      if (expandOnlyOnTwistieClick && onTwistie) {\n        return;\n      }\n    }\n    super.onViewPointer(e);\n  }\n  onDoubleClick(e) {\n    const onTwistie = e.browserEvent.target.classList.contains('monaco-tl-twistie');\n    if (onTwistie) {\n      return;\n    }\n    super.onDoubleClick(e);\n  }\n}\n/**\r\n * We use this List subclass to restore selection and focus as nodes\r\n * get rendered in the list, possibly due to a node expand() call.\r\n */\nclass TreeNodeList extends List {\n  constructor(user, container, virtualDelegate, renderers, focusTrait, selectionTrait, options) {\n    super(user, container, virtualDelegate, renderers, options);\n    this.focusTrait = focusTrait;\n    this.selectionTrait = selectionTrait;\n  }\n  createMouseController(options) {\n    return new TreeNodeListMouseController(this, options.tree);\n  }\n  splice(start, deleteCount) {\n    let elements = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    super.splice(start, deleteCount, elements);\n    if (elements.length === 0) {\n      return;\n    }\n    const additionalFocus = [];\n    const additionalSelection = [];\n    elements.forEach((node, index) => {\n      if (this.focusTrait.has(node)) {\n        additionalFocus.push(start + index);\n      }\n      if (this.selectionTrait.has(node)) {\n        additionalSelection.push(start + index);\n      }\n    });\n    if (additionalFocus.length > 0) {\n      super.setFocus(distinctES6([...super.getFocus(), ...additionalFocus]));\n    }\n    if (additionalSelection.length > 0) {\n      super.setSelection(distinctES6([...super.getSelection(), ...additionalSelection]));\n    }\n  }\n  setFocus(indexes, browserEvent) {\n    let fromAPI = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    super.setFocus(indexes, browserEvent);\n    if (!fromAPI) {\n      this.focusTrait.set(indexes.map(i => this.element(i)), browserEvent);\n    }\n  }\n  setSelection(indexes, browserEvent) {\n    let fromAPI = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    super.setSelection(indexes, browserEvent);\n    if (!fromAPI) {\n      this.selectionTrait.set(indexes.map(i => this.element(i)), browserEvent);\n    }\n  }\n}\nexport class AbstractTree {\n  constructor(user, container, delegate, renderers) {\n    let _options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n    this._options = _options;\n    this.eventBufferer = new EventBufferer();\n    this.disposables = new DisposableStore();\n    this._onWillRefilter = new Emitter();\n    this.onWillRefilter = this._onWillRefilter.event;\n    this._onDidUpdateOptions = new Emitter();\n    const treeDelegate = new ComposedTreeDelegate(delegate);\n    const onDidChangeCollapseStateRelay = new Relay();\n    const onDidChangeActiveNodes = new Relay();\n    const activeNodes = new EventCollection(onDidChangeActiveNodes.event);\n    this.renderers = renderers.map(r => new TreeRenderer(r, () => this.model, onDidChangeCollapseStateRelay.event, activeNodes, _options));\n    for (let r of this.renderers) {\n      this.disposables.add(r);\n    }\n    let filter;\n    if (_options.keyboardNavigationLabelProvider) {\n      filter = new TypeFilter(this, _options.keyboardNavigationLabelProvider, _options.filter);\n      _options = Object.assign(Object.assign({}, _options), {\n        filter: filter\n      }); // TODO need typescript help here\n      this.disposables.add(filter);\n    }\n    this.focus = new Trait(_options.identityProvider);\n    this.selection = new Trait(_options.identityProvider);\n    this.view = new TreeNodeList(user, container, treeDelegate, this.renderers, this.focus, this.selection, Object.assign(Object.assign({}, asListOptions(() => this.model, _options)), {\n      tree: this\n    }));\n    this.model = this.createModel(user, this.view, _options);\n    onDidChangeCollapseStateRelay.input = this.model.onDidChangeCollapseState;\n    const onDidModelSplice = Event.forEach(this.model.onDidSplice, e => {\n      this.eventBufferer.bufferEvents(() => {\n        this.focus.onDidModelSplice(e);\n        this.selection.onDidModelSplice(e);\n      });\n    });\n    // Make sure the `forEach` always runs\n    onDidModelSplice(() => null, null, this.disposables);\n    // Active nodes can change when the model changes or when focus or selection change.\n    // We debounce it with 0 delay since these events may fire in the same stack and we only\n    // want to run this once. It also doesn't matter if it runs on the next tick since it's only\n    // a nice to have UI feature.\n    onDidChangeActiveNodes.input = Event.chain(Event.any(onDidModelSplice, this.focus.onDidChange, this.selection.onDidChange)).debounce(() => null, 0).map(() => {\n      const set = new Set();\n      for (const node of this.focus.getNodes()) {\n        set.add(node);\n      }\n      for (const node of this.selection.getNodes()) {\n        set.add(node);\n      }\n      return [...set.values()];\n    }).event;\n    if (_options.keyboardSupport !== false) {\n      const onKeyDown = Event.chain(this.view.onKeyDown).filter(e => !isInputElement(e.target)).map(e => new StandardKeyboardEvent(e));\n      onKeyDown.filter(e => e.keyCode === 15 /* LeftArrow */).on(this.onLeftArrow, this, this.disposables);\n      onKeyDown.filter(e => e.keyCode === 17 /* RightArrow */).on(this.onRightArrow, this, this.disposables);\n      onKeyDown.filter(e => e.keyCode === 10 /* Space */).on(this.onSpace, this, this.disposables);\n    }\n    if (_options.keyboardNavigationLabelProvider) {\n      const delegate = _options.keyboardNavigationDelegate || DefaultKeyboardNavigationDelegate;\n      this.typeFilterController = new TypeFilterController(this, this.model, this.view, filter, delegate);\n      this.focusNavigationFilter = node => this.typeFilterController.shouldAllowFocus(node);\n      this.disposables.add(this.typeFilterController);\n    }\n    this.styleElement = createStyleSheet(this.view.getHTMLElement());\n    this.getHTMLElement().classList.toggle('always', this._options.renderIndentGuides === RenderIndentGuides.Always);\n  }\n  get onDidChangeFocus() {\n    return this.eventBufferer.wrapEvent(this.focus.onDidChange);\n  }\n  get onDidChangeSelection() {\n    return this.eventBufferer.wrapEvent(this.selection.onDidChange);\n  }\n  get onMouseDblClick() {\n    return Event.map(this.view.onMouseDblClick, asTreeMouseEvent);\n  }\n  get onPointer() {\n    return Event.map(this.view.onPointer, asTreeMouseEvent);\n  }\n  get onDidFocus() {\n    return this.view.onDidFocus;\n  }\n  get onDidChangeCollapseState() {\n    return this.model.onDidChangeCollapseState;\n  }\n  get expandOnlyOnDoubleClick() {\n    var _a;\n    return (_a = this._options.expandOnlyOnDoubleClick) !== null && _a !== void 0 ? _a : false;\n  }\n  get expandOnlyOnTwistieClick() {\n    return typeof this._options.expandOnlyOnTwistieClick === 'undefined' ? false : this._options.expandOnlyOnTwistieClick;\n  }\n  get onDidDispose() {\n    return this.view.onDidDispose;\n  }\n  updateOptions() {\n    let optionsUpdate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this._options = Object.assign(Object.assign({}, this._options), optionsUpdate);\n    for (const renderer of this.renderers) {\n      renderer.updateOptions(optionsUpdate);\n    }\n    this.view.updateOptions({\n      enableKeyboardNavigation: this._options.simpleKeyboardNavigation,\n      automaticKeyboardNavigation: this._options.automaticKeyboardNavigation,\n      smoothScrolling: this._options.smoothScrolling,\n      horizontalScrolling: this._options.horizontalScrolling\n    });\n    if (this.typeFilterController) {\n      this.typeFilterController.updateOptions(this._options);\n    }\n    this._onDidUpdateOptions.fire(this._options);\n    this.getHTMLElement().classList.toggle('always', this._options.renderIndentGuides === RenderIndentGuides.Always);\n  }\n  get options() {\n    return this._options;\n  }\n  // Widget\n  getHTMLElement() {\n    return this.view.getHTMLElement();\n  }\n  get scrollTop() {\n    return this.view.scrollTop;\n  }\n  set scrollTop(scrollTop) {\n    this.view.scrollTop = scrollTop;\n  }\n  domFocus() {\n    this.view.domFocus();\n  }\n  layout(height, width) {\n    this.view.layout(height, width);\n  }\n  style(styles) {\n    const suffix = \".\".concat(this.view.domId);\n    const content = [];\n    if (styles.treeIndentGuidesStroke) {\n      content.push(\".monaco-list\".concat(suffix, \":hover .monaco-tl-indent > .indent-guide, .monaco-list\").concat(suffix, \".always .monaco-tl-indent > .indent-guide  { border-color: \").concat(styles.treeIndentGuidesStroke.transparent(0.4), \"; }\"));\n      content.push(\".monaco-list\".concat(suffix, \" .monaco-tl-indent > .indent-guide.active { border-color: \").concat(styles.treeIndentGuidesStroke, \"; }\"));\n    }\n    this.styleElement.textContent = content.join('\\n');\n    this.view.style(styles);\n  }\n  collapse(location) {\n    let recursive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    return this.model.setCollapsed(location, true, recursive);\n  }\n  expand(location) {\n    let recursive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    return this.model.setCollapsed(location, false, recursive);\n  }\n  isCollapsible(location) {\n    return this.model.isCollapsible(location);\n  }\n  setCollapsible(location, collapsible) {\n    return this.model.setCollapsible(location, collapsible);\n  }\n  isCollapsed(location) {\n    return this.model.isCollapsed(location);\n  }\n  refilter() {\n    this._onWillRefilter.fire(undefined);\n    this.model.refilter();\n  }\n  setSelection(elements, browserEvent) {\n    const nodes = elements.map(e => this.model.getNode(e));\n    this.selection.set(nodes, browserEvent);\n    const indexes = elements.map(e => this.model.getListIndex(e)).filter(i => i > -1);\n    this.view.setSelection(indexes, browserEvent, true);\n  }\n  getSelection() {\n    return this.selection.get();\n  }\n  setFocus(elements, browserEvent) {\n    const nodes = elements.map(e => this.model.getNode(e));\n    this.focus.set(nodes, browserEvent);\n    const indexes = elements.map(e => this.model.getListIndex(e)).filter(i => i > -1);\n    this.view.setFocus(indexes, browserEvent, true);\n  }\n  focusNext() {\n    let n = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    let loop = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    let browserEvent = arguments.length > 2 ? arguments[2] : undefined;\n    let filter = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : this.focusNavigationFilter;\n    this.view.focusNext(n, loop, browserEvent, filter);\n  }\n  getFocus() {\n    return this.focus.get();\n  }\n  reveal(location, relativeTop) {\n    this.model.expandTo(location);\n    const index = this.model.getListIndex(location);\n    if (index === -1) {\n      return;\n    }\n    this.view.reveal(index, relativeTop);\n  }\n  /**\r\n   * Returns the relative position of an element rendered in the list.\r\n   * Returns `null` if the element isn't *entirely* in the visible viewport.\r\n   */\n  getRelativeTop(location) {\n    const index = this.model.getListIndex(location);\n    if (index === -1) {\n      return null;\n    }\n    return this.view.getRelativeTop(index);\n  }\n  // List\n  onLeftArrow(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const nodes = this.view.getFocusedElements();\n    if (nodes.length === 0) {\n      return;\n    }\n    const node = nodes[0];\n    const location = this.model.getNodeLocation(node);\n    const didChange = this.model.setCollapsed(location, true);\n    if (!didChange) {\n      const parentLocation = this.model.getParentNodeLocation(location);\n      if (!parentLocation) {\n        return;\n      }\n      const parentListIndex = this.model.getListIndex(parentLocation);\n      this.view.reveal(parentListIndex);\n      this.view.setFocus([parentListIndex]);\n    }\n  }\n  onRightArrow(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const nodes = this.view.getFocusedElements();\n    if (nodes.length === 0) {\n      return;\n    }\n    const node = nodes[0];\n    const location = this.model.getNodeLocation(node);\n    const didChange = this.model.setCollapsed(location, false);\n    if (!didChange) {\n      if (!node.children.some(child => child.visible)) {\n        return;\n      }\n      const [focusedIndex] = this.view.getFocus();\n      const firstChildIndex = focusedIndex + 1;\n      this.view.reveal(firstChildIndex);\n      this.view.setFocus([firstChildIndex]);\n    }\n  }\n  onSpace(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const nodes = this.view.getFocusedElements();\n    if (nodes.length === 0) {\n      return;\n    }\n    const node = nodes[0];\n    const location = this.model.getNodeLocation(node);\n    const recursive = e.browserEvent.altKey;\n    this.model.setCollapsed(location, undefined, recursive);\n  }\n  dispose() {\n    dispose(this.disposables);\n    this.view.dispose();\n  }\n}","map":{"version":3,"names":["dispose","Disposable","toDisposable","DisposableStore","List","MouseController","DefaultKeyboardNavigationDelegate","isInputElement","isMonacoEditor","append","$","getDomNodePagePosition","hasParentWithClass","createStyleSheet","clearNode","Event","Relay","Emitter","EventBufferer","StandardKeyboardEvent","TreeMouseEventTarget","StaticDND","DragAndDropData","range","equals","distinctES6","ElementsDragAndDropData","domEvent","fuzzyScore","FuzzyScore","getVisibleState","isFilterResult","localize","disposableTimeout","isMacintosh","clamp","SetMap","treeItemExpandedIcon","treeFilterOnTypeOnIcon","treeFilterOnTypeOffIcon","treeFilterClearIcon","TreeElementsDragAndDropData","constructor","data","elements","map","node","element","asTreeDragAndDropData","TreeNodeListDragAndDrop","modelProvider","dnd","autoExpandDisposable","None","getDragURI","getDragLabel","nodes","originalEvent","undefined","onDragStart","onDragOver","targetNode","targetIndex","raw","arguments","length","result","didChangeAutoExpandNode","autoExpandNode","autoExpand","model","ref","getNodeLocation","isCollapsed","setCollapsed","accept","bubble","feedback","effect","parentRef","getParentNodeLocation","parentNode","getNode","parentIndex","getListIndex","start","getListRenderCount","Object","assign","drop","onDragEnd","asListOptions","options","identityProvider","getId","el","multipleSelectionController","isSelectionSingleChangeEvent","e","isSelectionRangeChangeEvent","accessibilityProvider","getSetSize","visibleChildrenCount","getPosInSet","visibleChildIndex","isChecked","getRole","getAriaLabel","getWidgetAriaLabel","getWidgetRole","getAriaLevel","depth","getActiveDescendantId","keyboardNavigationLabelProvider","getKeyboardNavigationLabel","enableKeyboardNavigation","simpleKeyboardNavigation","ComposedTreeDelegate","delegate","getHeight","getTemplateId","hasDynamicHeight","setDynamicHeight","height","RenderIndentGuides","EventCollection","onDidChange","_elements","forEach","TreeRenderer","renderer","onDidChangeCollapseState","activeNodes","renderedElements","Map","renderedNodes","indent","DefaultIndent","hideTwistiesOfChildlessElements","shouldRenderIndentGuides","renderedIndentGuides","activeIndentNodes","Set","indentGuidesDisposable","disposables","templateId","updateOptions","onDidChangeNodeTwistieState","onDidChangeTwistieState","renderIndentGuides","_onDidChangeActiveNodes","renderTemplate","container","twistie","contents","templateData","renderElement","index","set","style","paddingLeft","concat","width","renderTwistie","disposeElement","delete","disposeTemplate","get","classList","remove","classNamesArray","twistieRendered","collapsible","add","toggle","collapsed","setAttribute","String","removeAttribute","target","disposableStore","parent","guide","has","childElementCount","appendChild","insertBefore","firstElementChild","children","_a","line","clear","TypeFilter","tree","_filter","_totalCount","_matchCount","_pattern","_lowercasePattern","onWillRefilter","reset","totalCount","matchCount","pattern","toLowerCase","filter","parentVisibility","visibility","Default","label","labels","Array","isArray","l","labelStr","toString","score","filterOnType","TypeFilterController","view","keyboardNavigationDelegate","_enabled","_empty","_onDidChangeEmptyState","positionClassName","automaticKeyboardNavigation","triggered","_onDidChangePattern","enabledDisposables","domNode","draggable","messageDomNode","getHTMLElement","labelDomNode","controls","_filterOnType","filterOnTypeDomNode","type","checked","tabIndex","updateFilterOnTypeTitleAndIcon","onDidChangeFilterOnType","clearDomNode","cssSelector","title","keyboardNavigationEventFilter","onDidSplice","onDidSpliceModel","enabled","disable","enable","refilter","render","onEventOrInput","onKeyDown","chain","key","test","mightProducePrintableCharacter","keyCode","altKey","ctrlKey","metaKey","shiftKey","stopPropagation","preventDefault","event","onClear","any","onInput","MouseEvent","substr","browserEvent","parentElement","domFocus","fire","focusNext","isDefault","filterData","focus","getFocus","getRelativeTop","reveal","left","containerWidth","clientWidth","midContainerWidth","updatePosition","top","x","clientX","dataTransfer","dropEffect","className","document","CurrentDragAndDropData","noMatches","textContent","innerText","shouldAllowFocus","asTreeMouseEvent","Unknown","Twistie","Element","dfs","fn","child","Trait","_onDidChange","nodeSet","_nodeSet","createNodeSet","__forceEvent","_set","silent","that","getNodes","onDidModelSplice","_ref","insertedNodes","deletedNodes","visit","values","deletedNodesIdSet","deletedNodesVisitor","insertedNodesMap","insertedNodesVisitor","id","wasDeleted","push","insertedNode","TreeNodeListMouseController","list","onViewPointer","onTwistie","contains","offsetX","expandOnlyOnTwistieClick","detail","expandOnlyOnDoubleClick","location","recursive","onDoubleClick","TreeNodeList","user","virtualDelegate","renderers","focusTrait","selectionTrait","createMouseController","splice","deleteCount","additionalFocus","additionalSelection","setFocus","setSelection","getSelection","indexes","fromAPI","i","AbstractTree","_options","eventBufferer","_onWillRefilter","_onDidUpdateOptions","treeDelegate","onDidChangeCollapseStateRelay","onDidChangeActiveNodes","r","selection","createModel","input","bufferEvents","debounce","keyboardSupport","on","onLeftArrow","onRightArrow","onSpace","typeFilterController","focusNavigationFilter","styleElement","Always","onDidChangeFocus","wrapEvent","onDidChangeSelection","onMouseDblClick","onPointer","onDidFocus","onDidDispose","optionsUpdate","smoothScrolling","horizontalScrolling","scrollTop","layout","styles","suffix","domId","content","treeIndentGuidesStroke","transparent","join","collapse","expand","isCollapsible","setCollapsible","n","loop","relativeTop","expandTo","getFocusedElements","didChange","parentLocation","parentListIndex","some","visible","focusedIndex","firstChildIndex"],"sources":["C:/Users/Administrator/Desktop/sqllineage-master/sqllineagejs/node_modules/monaco-editor/esm/vs/base/browser/ui/tree/abstractTree.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport './media/tree.css';\r\nimport { dispose, Disposable, toDisposable, DisposableStore } from '../../../common/lifecycle.js';\r\nimport { List, MouseController, DefaultKeyboardNavigationDelegate, isInputElement, isMonacoEditor } from '../list/listWidget.js';\r\nimport { append, $, getDomNodePagePosition, hasParentWithClass, createStyleSheet, clearNode } from '../../dom.js';\r\nimport { Event, Relay, Emitter, EventBufferer } from '../../../common/event.js';\r\nimport { StandardKeyboardEvent } from '../../keyboardEvent.js';\r\nimport { TreeMouseEventTarget } from './tree.js';\r\nimport { StaticDND, DragAndDropData } from '../../dnd.js';\r\nimport { range, equals, distinctES6 } from '../../../common/arrays.js';\r\nimport { ElementsDragAndDropData } from '../list/listView.js';\r\nimport { domEvent } from '../../event.js';\r\nimport { fuzzyScore, FuzzyScore } from '../../../common/filters.js';\r\nimport { getVisibleState, isFilterResult } from './indexTreeModel.js';\r\nimport { localize } from '../../../../nls.js';\r\nimport { disposableTimeout } from '../../../common/async.js';\r\nimport { isMacintosh } from '../../../common/platform.js';\r\nimport { clamp } from '../../../common/numbers.js';\r\nimport { SetMap } from '../../../common/collections.js';\r\nimport { treeItemExpandedIcon, treeFilterOnTypeOnIcon, treeFilterOnTypeOffIcon, treeFilterClearIcon } from './treeIcons.js';\r\nclass TreeElementsDragAndDropData extends ElementsDragAndDropData {\r\n    constructor(data) {\r\n        super(data.elements.map(node => node.element));\r\n        this.data = data;\r\n    }\r\n}\r\nfunction asTreeDragAndDropData(data) {\r\n    if (data instanceof ElementsDragAndDropData) {\r\n        return new TreeElementsDragAndDropData(data);\r\n    }\r\n    return data;\r\n}\r\nclass TreeNodeListDragAndDrop {\r\n    constructor(modelProvider, dnd) {\r\n        this.modelProvider = modelProvider;\r\n        this.dnd = dnd;\r\n        this.autoExpandDisposable = Disposable.None;\r\n    }\r\n    getDragURI(node) {\r\n        return this.dnd.getDragURI(node.element);\r\n    }\r\n    getDragLabel(nodes, originalEvent) {\r\n        if (this.dnd.getDragLabel) {\r\n            return this.dnd.getDragLabel(nodes.map(node => node.element), originalEvent);\r\n        }\r\n        return undefined;\r\n    }\r\n    onDragStart(data, originalEvent) {\r\n        if (this.dnd.onDragStart) {\r\n            this.dnd.onDragStart(asTreeDragAndDropData(data), originalEvent);\r\n        }\r\n    }\r\n    onDragOver(data, targetNode, targetIndex, originalEvent, raw = true) {\r\n        const result = this.dnd.onDragOver(asTreeDragAndDropData(data), targetNode && targetNode.element, targetIndex, originalEvent);\r\n        const didChangeAutoExpandNode = this.autoExpandNode !== targetNode;\r\n        if (didChangeAutoExpandNode) {\r\n            this.autoExpandDisposable.dispose();\r\n            this.autoExpandNode = targetNode;\r\n        }\r\n        if (typeof targetNode === 'undefined') {\r\n            return result;\r\n        }\r\n        if (didChangeAutoExpandNode && typeof result !== 'boolean' && result.autoExpand) {\r\n            this.autoExpandDisposable = disposableTimeout(() => {\r\n                const model = this.modelProvider();\r\n                const ref = model.getNodeLocation(targetNode);\r\n                if (model.isCollapsed(ref)) {\r\n                    model.setCollapsed(ref, false);\r\n                }\r\n                this.autoExpandNode = undefined;\r\n            }, 500);\r\n        }\r\n        if (typeof result === 'boolean' || !result.accept || typeof result.bubble === 'undefined' || result.feedback) {\r\n            if (!raw) {\r\n                const accept = typeof result === 'boolean' ? result : result.accept;\r\n                const effect = typeof result === 'boolean' ? undefined : result.effect;\r\n                return { accept, effect, feedback: [targetIndex] };\r\n            }\r\n            return result;\r\n        }\r\n        if (result.bubble === 1 /* Up */) {\r\n            const model = this.modelProvider();\r\n            const ref = model.getNodeLocation(targetNode);\r\n            const parentRef = model.getParentNodeLocation(ref);\r\n            const parentNode = model.getNode(parentRef);\r\n            const parentIndex = parentRef && model.getListIndex(parentRef);\r\n            return this.onDragOver(data, parentNode, parentIndex, originalEvent, false);\r\n        }\r\n        const model = this.modelProvider();\r\n        const ref = model.getNodeLocation(targetNode);\r\n        const start = model.getListIndex(ref);\r\n        const length = model.getListRenderCount(ref);\r\n        return Object.assign(Object.assign({}, result), { feedback: range(start, start + length) });\r\n    }\r\n    drop(data, targetNode, targetIndex, originalEvent) {\r\n        this.autoExpandDisposable.dispose();\r\n        this.autoExpandNode = undefined;\r\n        this.dnd.drop(asTreeDragAndDropData(data), targetNode && targetNode.element, targetIndex, originalEvent);\r\n    }\r\n    onDragEnd(originalEvent) {\r\n        if (this.dnd.onDragEnd) {\r\n            this.dnd.onDragEnd(originalEvent);\r\n        }\r\n    }\r\n}\r\nfunction asListOptions(modelProvider, options) {\r\n    return options && Object.assign(Object.assign({}, options), { identityProvider: options.identityProvider && {\r\n            getId(el) {\r\n                return options.identityProvider.getId(el.element);\r\n            }\r\n        }, dnd: options.dnd && new TreeNodeListDragAndDrop(modelProvider, options.dnd), multipleSelectionController: options.multipleSelectionController && {\r\n            isSelectionSingleChangeEvent(e) {\r\n                return options.multipleSelectionController.isSelectionSingleChangeEvent(Object.assign(Object.assign({}, e), { element: e.element }));\r\n            },\r\n            isSelectionRangeChangeEvent(e) {\r\n                return options.multipleSelectionController.isSelectionRangeChangeEvent(Object.assign(Object.assign({}, e), { element: e.element }));\r\n            }\r\n        }, accessibilityProvider: options.accessibilityProvider && Object.assign(Object.assign({}, options.accessibilityProvider), { getSetSize(node) {\r\n                const model = modelProvider();\r\n                const ref = model.getNodeLocation(node);\r\n                const parentRef = model.getParentNodeLocation(ref);\r\n                const parentNode = model.getNode(parentRef);\r\n                return parentNode.visibleChildrenCount;\r\n            },\r\n            getPosInSet(node) {\r\n                return node.visibleChildIndex + 1;\r\n            }, isChecked: options.accessibilityProvider && options.accessibilityProvider.isChecked ? (node) => {\r\n                return options.accessibilityProvider.isChecked(node.element);\r\n            } : undefined, getRole: options.accessibilityProvider && options.accessibilityProvider.getRole ? (node) => {\r\n                return options.accessibilityProvider.getRole(node.element);\r\n            } : () => 'treeitem', getAriaLabel(e) {\r\n                return options.accessibilityProvider.getAriaLabel(e.element);\r\n            },\r\n            getWidgetAriaLabel() {\r\n                return options.accessibilityProvider.getWidgetAriaLabel();\r\n            }, getWidgetRole: options.accessibilityProvider && options.accessibilityProvider.getWidgetRole ? () => options.accessibilityProvider.getWidgetRole() : () => 'tree', getAriaLevel: options.accessibilityProvider && options.accessibilityProvider.getAriaLevel ? (node) => options.accessibilityProvider.getAriaLevel(node.element) : (node) => {\r\n                return node.depth;\r\n            }, getActiveDescendantId: options.accessibilityProvider.getActiveDescendantId && (node => {\r\n                return options.accessibilityProvider.getActiveDescendantId(node.element);\r\n            }) }), keyboardNavigationLabelProvider: options.keyboardNavigationLabelProvider && Object.assign(Object.assign({}, options.keyboardNavigationLabelProvider), { getKeyboardNavigationLabel(node) {\r\n                return options.keyboardNavigationLabelProvider.getKeyboardNavigationLabel(node.element);\r\n            } }), enableKeyboardNavigation: options.simpleKeyboardNavigation });\r\n}\r\nexport class ComposedTreeDelegate {\r\n    constructor(delegate) {\r\n        this.delegate = delegate;\r\n    }\r\n    getHeight(element) {\r\n        return this.delegate.getHeight(element.element);\r\n    }\r\n    getTemplateId(element) {\r\n        return this.delegate.getTemplateId(element.element);\r\n    }\r\n    hasDynamicHeight(element) {\r\n        return !!this.delegate.hasDynamicHeight && this.delegate.hasDynamicHeight(element.element);\r\n    }\r\n    setDynamicHeight(element, height) {\r\n        if (this.delegate.setDynamicHeight) {\r\n            this.delegate.setDynamicHeight(element.element, height);\r\n        }\r\n    }\r\n}\r\nexport var RenderIndentGuides;\r\n(function (RenderIndentGuides) {\r\n    RenderIndentGuides[\"None\"] = \"none\";\r\n    RenderIndentGuides[\"OnHover\"] = \"onHover\";\r\n    RenderIndentGuides[\"Always\"] = \"always\";\r\n})(RenderIndentGuides || (RenderIndentGuides = {}));\r\nclass EventCollection {\r\n    constructor(onDidChange, _elements = []) {\r\n        this._elements = _elements;\r\n        this.onDidChange = Event.forEach(onDidChange, elements => this._elements = elements);\r\n    }\r\n    get elements() {\r\n        return this._elements;\r\n    }\r\n}\r\nclass TreeRenderer {\r\n    constructor(renderer, modelProvider, onDidChangeCollapseState, activeNodes, options = {}) {\r\n        this.renderer = renderer;\r\n        this.modelProvider = modelProvider;\r\n        this.activeNodes = activeNodes;\r\n        this.renderedElements = new Map();\r\n        this.renderedNodes = new Map();\r\n        this.indent = TreeRenderer.DefaultIndent;\r\n        this.hideTwistiesOfChildlessElements = false;\r\n        this.shouldRenderIndentGuides = false;\r\n        this.renderedIndentGuides = new SetMap();\r\n        this.activeIndentNodes = new Set();\r\n        this.indentGuidesDisposable = Disposable.None;\r\n        this.disposables = new DisposableStore();\r\n        this.templateId = renderer.templateId;\r\n        this.updateOptions(options);\r\n        Event.map(onDidChangeCollapseState, e => e.node)(this.onDidChangeNodeTwistieState, this, this.disposables);\r\n        if (renderer.onDidChangeTwistieState) {\r\n            renderer.onDidChangeTwistieState(this.onDidChangeTwistieState, this, this.disposables);\r\n        }\r\n    }\r\n    updateOptions(options = {}) {\r\n        if (typeof options.indent !== 'undefined') {\r\n            this.indent = clamp(options.indent, 0, 40);\r\n        }\r\n        if (typeof options.renderIndentGuides !== 'undefined') {\r\n            const shouldRenderIndentGuides = options.renderIndentGuides !== RenderIndentGuides.None;\r\n            if (shouldRenderIndentGuides !== this.shouldRenderIndentGuides) {\r\n                this.shouldRenderIndentGuides = shouldRenderIndentGuides;\r\n                this.indentGuidesDisposable.dispose();\r\n                if (shouldRenderIndentGuides) {\r\n                    const disposables = new DisposableStore();\r\n                    this.activeNodes.onDidChange(this._onDidChangeActiveNodes, this, disposables);\r\n                    this.indentGuidesDisposable = disposables;\r\n                    this._onDidChangeActiveNodes(this.activeNodes.elements);\r\n                }\r\n            }\r\n        }\r\n        if (typeof options.hideTwistiesOfChildlessElements !== 'undefined') {\r\n            this.hideTwistiesOfChildlessElements = options.hideTwistiesOfChildlessElements;\r\n        }\r\n    }\r\n    renderTemplate(container) {\r\n        const el = append(container, $('.monaco-tl-row'));\r\n        const indent = append(el, $('.monaco-tl-indent'));\r\n        const twistie = append(el, $('.monaco-tl-twistie'));\r\n        const contents = append(el, $('.monaco-tl-contents'));\r\n        const templateData = this.renderer.renderTemplate(contents);\r\n        return { container, indent, twistie, indentGuidesDisposable: Disposable.None, templateData };\r\n    }\r\n    renderElement(node, index, templateData, height) {\r\n        if (typeof height === 'number') {\r\n            this.renderedNodes.set(node, { templateData, height });\r\n            this.renderedElements.set(node.element, node);\r\n        }\r\n        const indent = TreeRenderer.DefaultIndent + (node.depth - 1) * this.indent;\r\n        templateData.twistie.style.paddingLeft = `${indent}px`;\r\n        templateData.indent.style.width = `${indent + this.indent - 16}px`;\r\n        this.renderTwistie(node, templateData);\r\n        if (typeof height === 'number') {\r\n            this.renderIndentGuides(node, templateData);\r\n        }\r\n        this.renderer.renderElement(node, index, templateData.templateData, height);\r\n    }\r\n    disposeElement(node, index, templateData, height) {\r\n        templateData.indentGuidesDisposable.dispose();\r\n        if (this.renderer.disposeElement) {\r\n            this.renderer.disposeElement(node, index, templateData.templateData, height);\r\n        }\r\n        if (typeof height === 'number') {\r\n            this.renderedNodes.delete(node);\r\n            this.renderedElements.delete(node.element);\r\n        }\r\n    }\r\n    disposeTemplate(templateData) {\r\n        this.renderer.disposeTemplate(templateData.templateData);\r\n    }\r\n    onDidChangeTwistieState(element) {\r\n        const node = this.renderedElements.get(element);\r\n        if (!node) {\r\n            return;\r\n        }\r\n        this.onDidChangeNodeTwistieState(node);\r\n    }\r\n    onDidChangeNodeTwistieState(node) {\r\n        const data = this.renderedNodes.get(node);\r\n        if (!data) {\r\n            return;\r\n        }\r\n        this.renderTwistie(node, data.templateData);\r\n        this._onDidChangeActiveNodes(this.activeNodes.elements);\r\n        this.renderIndentGuides(node, data.templateData);\r\n    }\r\n    renderTwistie(node, templateData) {\r\n        templateData.twistie.classList.remove(...treeItemExpandedIcon.classNamesArray);\r\n        let twistieRendered = false;\r\n        if (this.renderer.renderTwistie) {\r\n            twistieRendered = this.renderer.renderTwistie(node.element, templateData.twistie);\r\n        }\r\n        if (node.collapsible && (!this.hideTwistiesOfChildlessElements || node.visibleChildrenCount > 0)) {\r\n            if (!twistieRendered) {\r\n                templateData.twistie.classList.add(...treeItemExpandedIcon.classNamesArray);\r\n            }\r\n            templateData.twistie.classList.add('collapsible');\r\n            templateData.twistie.classList.toggle('collapsed', node.collapsed);\r\n        }\r\n        else {\r\n            templateData.twistie.classList.remove('collapsible', 'collapsed');\r\n        }\r\n        if (node.collapsible) {\r\n            templateData.container.setAttribute('aria-expanded', String(!node.collapsed));\r\n        }\r\n        else {\r\n            templateData.container.removeAttribute('aria-expanded');\r\n        }\r\n    }\r\n    renderIndentGuides(target, templateData) {\r\n        clearNode(templateData.indent);\r\n        templateData.indentGuidesDisposable.dispose();\r\n        if (!this.shouldRenderIndentGuides) {\r\n            return;\r\n        }\r\n        const disposableStore = new DisposableStore();\r\n        const model = this.modelProvider();\r\n        let node = target;\r\n        while (true) {\r\n            const ref = model.getNodeLocation(node);\r\n            const parentRef = model.getParentNodeLocation(ref);\r\n            if (!parentRef) {\r\n                break;\r\n            }\r\n            const parent = model.getNode(parentRef);\r\n            const guide = $('.indent-guide', { style: `width: ${this.indent}px` });\r\n            if (this.activeIndentNodes.has(parent)) {\r\n                guide.classList.add('active');\r\n            }\r\n            if (templateData.indent.childElementCount === 0) {\r\n                templateData.indent.appendChild(guide);\r\n            }\r\n            else {\r\n                templateData.indent.insertBefore(guide, templateData.indent.firstElementChild);\r\n            }\r\n            this.renderedIndentGuides.add(parent, guide);\r\n            disposableStore.add(toDisposable(() => this.renderedIndentGuides.delete(parent, guide)));\r\n            node = parent;\r\n        }\r\n        templateData.indentGuidesDisposable = disposableStore;\r\n    }\r\n    _onDidChangeActiveNodes(nodes) {\r\n        if (!this.shouldRenderIndentGuides) {\r\n            return;\r\n        }\r\n        const set = new Set();\r\n        const model = this.modelProvider();\r\n        nodes.forEach(node => {\r\n            const ref = model.getNodeLocation(node);\r\n            try {\r\n                const parentRef = model.getParentNodeLocation(ref);\r\n                if (node.collapsible && node.children.length > 0 && !node.collapsed) {\r\n                    set.add(node);\r\n                }\r\n                else if (parentRef) {\r\n                    set.add(model.getNode(parentRef));\r\n                }\r\n            }\r\n            catch (_a) {\r\n                // noop\r\n            }\r\n        });\r\n        this.activeIndentNodes.forEach(node => {\r\n            if (!set.has(node)) {\r\n                this.renderedIndentGuides.forEach(node, line => line.classList.remove('active'));\r\n            }\r\n        });\r\n        set.forEach(node => {\r\n            if (!this.activeIndentNodes.has(node)) {\r\n                this.renderedIndentGuides.forEach(node, line => line.classList.add('active'));\r\n            }\r\n        });\r\n        this.activeIndentNodes = set;\r\n    }\r\n    dispose() {\r\n        this.renderedNodes.clear();\r\n        this.renderedElements.clear();\r\n        this.indentGuidesDisposable.dispose();\r\n        dispose(this.disposables);\r\n    }\r\n}\r\nTreeRenderer.DefaultIndent = 8;\r\nclass TypeFilter {\r\n    constructor(tree, keyboardNavigationLabelProvider, _filter) {\r\n        this.tree = tree;\r\n        this.keyboardNavigationLabelProvider = keyboardNavigationLabelProvider;\r\n        this._filter = _filter;\r\n        this._totalCount = 0;\r\n        this._matchCount = 0;\r\n        this._pattern = '';\r\n        this._lowercasePattern = '';\r\n        this.disposables = new DisposableStore();\r\n        tree.onWillRefilter(this.reset, this, this.disposables);\r\n    }\r\n    get totalCount() { return this._totalCount; }\r\n    get matchCount() { return this._matchCount; }\r\n    set pattern(pattern) {\r\n        this._pattern = pattern;\r\n        this._lowercasePattern = pattern.toLowerCase();\r\n    }\r\n    filter(element, parentVisibility) {\r\n        if (this._filter) {\r\n            const result = this._filter.filter(element, parentVisibility);\r\n            if (this.tree.options.simpleKeyboardNavigation) {\r\n                return result;\r\n            }\r\n            let visibility;\r\n            if (typeof result === 'boolean') {\r\n                visibility = result ? 1 /* Visible */ : 0 /* Hidden */;\r\n            }\r\n            else if (isFilterResult(result)) {\r\n                visibility = getVisibleState(result.visibility);\r\n            }\r\n            else {\r\n                visibility = result;\r\n            }\r\n            if (visibility === 0 /* Hidden */) {\r\n                return false;\r\n            }\r\n        }\r\n        this._totalCount++;\r\n        if (this.tree.options.simpleKeyboardNavigation || !this._pattern) {\r\n            this._matchCount++;\r\n            return { data: FuzzyScore.Default, visibility: true };\r\n        }\r\n        const label = this.keyboardNavigationLabelProvider.getKeyboardNavigationLabel(element);\r\n        const labels = Array.isArray(label) ? label : [label];\r\n        for (const l of labels) {\r\n            const labelStr = l && l.toString();\r\n            if (typeof labelStr === 'undefined') {\r\n                return { data: FuzzyScore.Default, visibility: true };\r\n            }\r\n            const score = fuzzyScore(this._pattern, this._lowercasePattern, 0, labelStr, labelStr.toLowerCase(), 0, true);\r\n            if (score) {\r\n                this._matchCount++;\r\n                return labels.length === 1 ?\r\n                    { data: score, visibility: true } :\r\n                    { data: { label: labelStr, score: score }, visibility: true };\r\n            }\r\n        }\r\n        if (this.tree.options.filterOnType) {\r\n            return 2 /* Recurse */;\r\n        }\r\n        else {\r\n            return { data: FuzzyScore.Default, visibility: true };\r\n        }\r\n    }\r\n    reset() {\r\n        this._totalCount = 0;\r\n        this._matchCount = 0;\r\n    }\r\n    dispose() {\r\n        dispose(this.disposables);\r\n    }\r\n}\r\nclass TypeFilterController {\r\n    constructor(tree, model, view, filter, keyboardNavigationDelegate) {\r\n        this.tree = tree;\r\n        this.view = view;\r\n        this.filter = filter;\r\n        this.keyboardNavigationDelegate = keyboardNavigationDelegate;\r\n        this._enabled = false;\r\n        this._pattern = '';\r\n        this._empty = false;\r\n        this._onDidChangeEmptyState = new Emitter();\r\n        this.positionClassName = 'ne';\r\n        this.automaticKeyboardNavigation = true;\r\n        this.triggered = false;\r\n        this._onDidChangePattern = new Emitter();\r\n        this.enabledDisposables = new DisposableStore();\r\n        this.disposables = new DisposableStore();\r\n        this.domNode = $(`.monaco-list-type-filter.${this.positionClassName}`);\r\n        this.domNode.draggable = true;\r\n        domEvent(this.domNode, 'dragstart')(this.onDragStart, this, this.disposables);\r\n        this.messageDomNode = append(view.getHTMLElement(), $(`.monaco-list-type-filter-message`));\r\n        this.labelDomNode = append(this.domNode, $('span.label'));\r\n        const controls = append(this.domNode, $('.controls'));\r\n        this._filterOnType = !!tree.options.filterOnType;\r\n        this.filterOnTypeDomNode = append(controls, $('input.filter'));\r\n        this.filterOnTypeDomNode.type = 'checkbox';\r\n        this.filterOnTypeDomNode.checked = this._filterOnType;\r\n        this.filterOnTypeDomNode.tabIndex = -1;\r\n        this.updateFilterOnTypeTitleAndIcon();\r\n        domEvent(this.filterOnTypeDomNode, 'input')(this.onDidChangeFilterOnType, this, this.disposables);\r\n        this.clearDomNode = append(controls, $('button.clear' + treeFilterClearIcon.cssSelector));\r\n        this.clearDomNode.tabIndex = -1;\r\n        this.clearDomNode.title = localize('clear', \"Clear\");\r\n        this.keyboardNavigationEventFilter = tree.options.keyboardNavigationEventFilter;\r\n        model.onDidSplice(this.onDidSpliceModel, this, this.disposables);\r\n        this.updateOptions(tree.options);\r\n    }\r\n    get enabled() { return this._enabled; }\r\n    get pattern() { return this._pattern; }\r\n    get filterOnType() { return this._filterOnType; }\r\n    updateOptions(options) {\r\n        if (options.simpleKeyboardNavigation) {\r\n            this.disable();\r\n        }\r\n        else {\r\n            this.enable();\r\n        }\r\n        if (typeof options.filterOnType !== 'undefined') {\r\n            this._filterOnType = !!options.filterOnType;\r\n            this.filterOnTypeDomNode.checked = this._filterOnType;\r\n        }\r\n        if (typeof options.automaticKeyboardNavigation !== 'undefined') {\r\n            this.automaticKeyboardNavigation = options.automaticKeyboardNavigation;\r\n        }\r\n        this.tree.refilter();\r\n        this.render();\r\n        if (!this.automaticKeyboardNavigation) {\r\n            this.onEventOrInput('');\r\n        }\r\n    }\r\n    enable() {\r\n        if (this._enabled) {\r\n            return;\r\n        }\r\n        const onKeyDown = Event.chain(domEvent(this.view.getHTMLElement(), 'keydown'))\r\n            .filter(e => !isInputElement(e.target) || e.target === this.filterOnTypeDomNode)\r\n            .filter(e => e.key !== 'Dead' && !/^Media/.test(e.key))\r\n            .map(e => new StandardKeyboardEvent(e))\r\n            .filter(this.keyboardNavigationEventFilter || (() => true))\r\n            .filter(() => this.automaticKeyboardNavigation || this.triggered)\r\n            .filter(e => (this.keyboardNavigationDelegate.mightProducePrintableCharacter(e) && !(e.keyCode === 18 /* DownArrow */ || e.keyCode === 16 /* UpArrow */ || e.keyCode === 15 /* LeftArrow */ || e.keyCode === 17 /* RightArrow */)) || ((this.pattern.length > 0 || this.triggered) && ((e.keyCode === 9 /* Escape */ || e.keyCode === 1 /* Backspace */) && !e.altKey && !e.ctrlKey && !e.metaKey) || (e.keyCode === 1 /* Backspace */ && (isMacintosh ? (e.altKey && !e.metaKey) : e.ctrlKey) && !e.shiftKey)))\r\n            .forEach(e => { e.stopPropagation(); e.preventDefault(); })\r\n            .event;\r\n        const onClear = domEvent(this.clearDomNode, 'click');\r\n        Event.chain(Event.any(onKeyDown, onClear))\r\n            .event(this.onEventOrInput, this, this.enabledDisposables);\r\n        this.filter.pattern = '';\r\n        this.tree.refilter();\r\n        this.render();\r\n        this._enabled = true;\r\n        this.triggered = false;\r\n    }\r\n    disable() {\r\n        if (!this._enabled) {\r\n            return;\r\n        }\r\n        this.domNode.remove();\r\n        this.enabledDisposables.clear();\r\n        this.tree.refilter();\r\n        this.render();\r\n        this._enabled = false;\r\n        this.triggered = false;\r\n    }\r\n    onEventOrInput(e) {\r\n        if (typeof e === 'string') {\r\n            this.onInput(e);\r\n        }\r\n        else if (e instanceof MouseEvent || e.keyCode === 9 /* Escape */ || (e.keyCode === 1 /* Backspace */ && (isMacintosh ? e.altKey : e.ctrlKey))) {\r\n            this.onInput('');\r\n        }\r\n        else if (e.keyCode === 1 /* Backspace */) {\r\n            this.onInput(this.pattern.length === 0 ? '' : this.pattern.substr(0, this.pattern.length - 1));\r\n        }\r\n        else {\r\n            this.onInput(this.pattern + e.browserEvent.key);\r\n        }\r\n    }\r\n    onInput(pattern) {\r\n        const container = this.view.getHTMLElement();\r\n        if (pattern && !this.domNode.parentElement) {\r\n            container.append(this.domNode);\r\n        }\r\n        else if (!pattern && this.domNode.parentElement) {\r\n            this.domNode.remove();\r\n            this.tree.domFocus();\r\n        }\r\n        this._pattern = pattern;\r\n        this._onDidChangePattern.fire(pattern);\r\n        this.filter.pattern = pattern;\r\n        this.tree.refilter();\r\n        if (pattern) {\r\n            this.tree.focusNext(0, true, undefined, node => !FuzzyScore.isDefault(node.filterData));\r\n        }\r\n        const focus = this.tree.getFocus();\r\n        if (focus.length > 0) {\r\n            const element = focus[0];\r\n            if (this.tree.getRelativeTop(element) === null) {\r\n                this.tree.reveal(element, 0.5);\r\n            }\r\n        }\r\n        this.render();\r\n        if (!pattern) {\r\n            this.triggered = false;\r\n        }\r\n    }\r\n    onDragStart() {\r\n        const container = this.view.getHTMLElement();\r\n        const { left } = getDomNodePagePosition(container);\r\n        const containerWidth = container.clientWidth;\r\n        const midContainerWidth = containerWidth / 2;\r\n        const width = this.domNode.clientWidth;\r\n        const disposables = new DisposableStore();\r\n        let positionClassName = this.positionClassName;\r\n        const updatePosition = () => {\r\n            switch (positionClassName) {\r\n                case 'nw':\r\n                    this.domNode.style.top = `4px`;\r\n                    this.domNode.style.left = `4px`;\r\n                    break;\r\n                case 'ne':\r\n                    this.domNode.style.top = `4px`;\r\n                    this.domNode.style.left = `${containerWidth - width - 6}px`;\r\n                    break;\r\n            }\r\n        };\r\n        const onDragOver = (event) => {\r\n            event.preventDefault(); // needed so that the drop event fires (https://stackoverflow.com/questions/21339924/drop-event-not-firing-in-chrome)\r\n            const x = event.clientX - left;\r\n            if (event.dataTransfer) {\r\n                event.dataTransfer.dropEffect = 'none';\r\n            }\r\n            if (x < midContainerWidth) {\r\n                positionClassName = 'nw';\r\n            }\r\n            else {\r\n                positionClassName = 'ne';\r\n            }\r\n            updatePosition();\r\n        };\r\n        const onDragEnd = () => {\r\n            this.positionClassName = positionClassName;\r\n            this.domNode.className = `monaco-list-type-filter ${this.positionClassName}`;\r\n            this.domNode.style.top = '';\r\n            this.domNode.style.left = '';\r\n            dispose(disposables);\r\n        };\r\n        updatePosition();\r\n        this.domNode.classList.remove(positionClassName);\r\n        this.domNode.classList.add('dragging');\r\n        disposables.add(toDisposable(() => this.domNode.classList.remove('dragging')));\r\n        domEvent(document, 'dragover')(onDragOver, null, disposables);\r\n        domEvent(this.domNode, 'dragend')(onDragEnd, null, disposables);\r\n        StaticDND.CurrentDragAndDropData = new DragAndDropData('vscode-ui');\r\n        disposables.add(toDisposable(() => StaticDND.CurrentDragAndDropData = undefined));\r\n    }\r\n    onDidSpliceModel() {\r\n        if (!this._enabled || this.pattern.length === 0) {\r\n            return;\r\n        }\r\n        this.tree.refilter();\r\n        this.render();\r\n    }\r\n    onDidChangeFilterOnType() {\r\n        this.tree.updateOptions({ filterOnType: this.filterOnTypeDomNode.checked });\r\n        this.tree.refilter();\r\n        this.tree.domFocus();\r\n        this.render();\r\n        this.updateFilterOnTypeTitleAndIcon();\r\n    }\r\n    updateFilterOnTypeTitleAndIcon() {\r\n        if (this.filterOnType) {\r\n            this.filterOnTypeDomNode.classList.remove(...treeFilterOnTypeOffIcon.classNamesArray);\r\n            this.filterOnTypeDomNode.classList.add(...treeFilterOnTypeOnIcon.classNamesArray);\r\n            this.filterOnTypeDomNode.title = localize('disable filter on type', \"Disable Filter on Type\");\r\n        }\r\n        else {\r\n            this.filterOnTypeDomNode.classList.remove(...treeFilterOnTypeOnIcon.classNamesArray);\r\n            this.filterOnTypeDomNode.classList.add(...treeFilterOnTypeOffIcon.classNamesArray);\r\n            this.filterOnTypeDomNode.title = localize('enable filter on type', \"Enable Filter on Type\");\r\n        }\r\n    }\r\n    render() {\r\n        const noMatches = this.filter.totalCount > 0 && this.filter.matchCount === 0;\r\n        if (this.pattern && this.tree.options.filterOnType && noMatches) {\r\n            this.messageDomNode.textContent = localize('empty', \"No elements found\");\r\n            this._empty = true;\r\n        }\r\n        else {\r\n            this.messageDomNode.innerText = '';\r\n            this._empty = false;\r\n        }\r\n        this.domNode.classList.toggle('no-matches', noMatches);\r\n        this.domNode.title = localize('found', \"Matched {0} out of {1} elements\", this.filter.matchCount, this.filter.totalCount);\r\n        this.labelDomNode.textContent = this.pattern.length > 16 ? '…' + this.pattern.substr(this.pattern.length - 16) : this.pattern;\r\n        this._onDidChangeEmptyState.fire(this._empty);\r\n    }\r\n    shouldAllowFocus(node) {\r\n        if (!this.enabled || !this.pattern || this.filterOnType) {\r\n            return true;\r\n        }\r\n        if (this.filter.totalCount > 0 && this.filter.matchCount <= 1) {\r\n            return true;\r\n        }\r\n        return !FuzzyScore.isDefault(node.filterData);\r\n    }\r\n    dispose() {\r\n        if (this._enabled) {\r\n            this.domNode.remove();\r\n            this.enabledDisposables.dispose();\r\n            this._enabled = false;\r\n            this.triggered = false;\r\n        }\r\n        this._onDidChangePattern.dispose();\r\n        dispose(this.disposables);\r\n    }\r\n}\r\nfunction asTreeMouseEvent(event) {\r\n    let target = TreeMouseEventTarget.Unknown;\r\n    if (hasParentWithClass(event.browserEvent.target, 'monaco-tl-twistie', 'monaco-tl-row')) {\r\n        target = TreeMouseEventTarget.Twistie;\r\n    }\r\n    else if (hasParentWithClass(event.browserEvent.target, 'monaco-tl-contents', 'monaco-tl-row')) {\r\n        target = TreeMouseEventTarget.Element;\r\n    }\r\n    return {\r\n        browserEvent: event.browserEvent,\r\n        element: event.element ? event.element.element : null,\r\n        target\r\n    };\r\n}\r\nfunction dfs(node, fn) {\r\n    fn(node);\r\n    node.children.forEach(child => dfs(child, fn));\r\n}\r\n/**\r\n * The trait concept needs to exist at the tree level, because collapsed\r\n * tree nodes will not be known by the list.\r\n */\r\nclass Trait {\r\n    constructor(identityProvider) {\r\n        this.identityProvider = identityProvider;\r\n        this.nodes = [];\r\n        this._onDidChange = new Emitter();\r\n        this.onDidChange = this._onDidChange.event;\r\n    }\r\n    get nodeSet() {\r\n        if (!this._nodeSet) {\r\n            this._nodeSet = this.createNodeSet();\r\n        }\r\n        return this._nodeSet;\r\n    }\r\n    set(nodes, browserEvent) {\r\n        var _a;\r\n        if (!((_a = browserEvent) === null || _a === void 0 ? void 0 : _a.__forceEvent) && equals(this.nodes, nodes)) {\r\n            return;\r\n        }\r\n        this._set(nodes, false, browserEvent);\r\n    }\r\n    _set(nodes, silent, browserEvent) {\r\n        this.nodes = [...nodes];\r\n        this.elements = undefined;\r\n        this._nodeSet = undefined;\r\n        if (!silent) {\r\n            const that = this;\r\n            this._onDidChange.fire({ get elements() { return that.get(); }, browserEvent });\r\n        }\r\n    }\r\n    get() {\r\n        if (!this.elements) {\r\n            this.elements = this.nodes.map(node => node.element);\r\n        }\r\n        return [...this.elements];\r\n    }\r\n    getNodes() {\r\n        return this.nodes;\r\n    }\r\n    has(node) {\r\n        return this.nodeSet.has(node);\r\n    }\r\n    onDidModelSplice({ insertedNodes, deletedNodes }) {\r\n        if (!this.identityProvider) {\r\n            const set = this.createNodeSet();\r\n            const visit = (node) => set.delete(node);\r\n            deletedNodes.forEach(node => dfs(node, visit));\r\n            this.set([...set.values()]);\r\n            return;\r\n        }\r\n        const deletedNodesIdSet = new Set();\r\n        const deletedNodesVisitor = (node) => deletedNodesIdSet.add(this.identityProvider.getId(node.element).toString());\r\n        deletedNodes.forEach(node => dfs(node, deletedNodesVisitor));\r\n        const insertedNodesMap = new Map();\r\n        const insertedNodesVisitor = (node) => insertedNodesMap.set(this.identityProvider.getId(node.element).toString(), node);\r\n        insertedNodes.forEach(node => dfs(node, insertedNodesVisitor));\r\n        const nodes = [];\r\n        for (const node of this.nodes) {\r\n            const id = this.identityProvider.getId(node.element).toString();\r\n            const wasDeleted = deletedNodesIdSet.has(id);\r\n            if (!wasDeleted) {\r\n                nodes.push(node);\r\n            }\r\n            else {\r\n                const insertedNode = insertedNodesMap.get(id);\r\n                if (insertedNode) {\r\n                    nodes.push(insertedNode);\r\n                }\r\n            }\r\n        }\r\n        this._set(nodes, true);\r\n    }\r\n    createNodeSet() {\r\n        const set = new Set();\r\n        for (const node of this.nodes) {\r\n            set.add(node);\r\n        }\r\n        return set;\r\n    }\r\n}\r\nclass TreeNodeListMouseController extends MouseController {\r\n    constructor(list, tree) {\r\n        super(list);\r\n        this.tree = tree;\r\n    }\r\n    onViewPointer(e) {\r\n        if (isInputElement(e.browserEvent.target) || isMonacoEditor(e.browserEvent.target)) {\r\n            return;\r\n        }\r\n        const node = e.element;\r\n        if (!node) {\r\n            return super.onViewPointer(e);\r\n        }\r\n        if (this.isSelectionRangeChangeEvent(e) || this.isSelectionSingleChangeEvent(e)) {\r\n            return super.onViewPointer(e);\r\n        }\r\n        const target = e.browserEvent.target;\r\n        const onTwistie = target.classList.contains('monaco-tl-twistie')\r\n            || (target.classList.contains('monaco-icon-label') && target.classList.contains('folder-icon') && e.browserEvent.offsetX < 16);\r\n        let expandOnlyOnTwistieClick = false;\r\n        if (typeof this.tree.expandOnlyOnTwistieClick === 'function') {\r\n            expandOnlyOnTwistieClick = this.tree.expandOnlyOnTwistieClick(node.element);\r\n        }\r\n        else {\r\n            expandOnlyOnTwistieClick = !!this.tree.expandOnlyOnTwistieClick;\r\n        }\r\n        if (expandOnlyOnTwistieClick && !onTwistie && e.browserEvent.detail !== 2) {\r\n            return super.onViewPointer(e);\r\n        }\r\n        if (this.tree.expandOnlyOnDoubleClick && e.browserEvent.detail !== 2 && !onTwistie) {\r\n            return super.onViewPointer(e);\r\n        }\r\n        if (node.collapsible) {\r\n            const model = this.tree.model; // internal\r\n            const location = model.getNodeLocation(node);\r\n            const recursive = e.browserEvent.altKey;\r\n            model.setCollapsed(location, undefined, recursive);\r\n            if (expandOnlyOnTwistieClick && onTwistie) {\r\n                return;\r\n            }\r\n        }\r\n        super.onViewPointer(e);\r\n    }\r\n    onDoubleClick(e) {\r\n        const onTwistie = e.browserEvent.target.classList.contains('monaco-tl-twistie');\r\n        if (onTwistie) {\r\n            return;\r\n        }\r\n        super.onDoubleClick(e);\r\n    }\r\n}\r\n/**\r\n * We use this List subclass to restore selection and focus as nodes\r\n * get rendered in the list, possibly due to a node expand() call.\r\n */\r\nclass TreeNodeList extends List {\r\n    constructor(user, container, virtualDelegate, renderers, focusTrait, selectionTrait, options) {\r\n        super(user, container, virtualDelegate, renderers, options);\r\n        this.focusTrait = focusTrait;\r\n        this.selectionTrait = selectionTrait;\r\n    }\r\n    createMouseController(options) {\r\n        return new TreeNodeListMouseController(this, options.tree);\r\n    }\r\n    splice(start, deleteCount, elements = []) {\r\n        super.splice(start, deleteCount, elements);\r\n        if (elements.length === 0) {\r\n            return;\r\n        }\r\n        const additionalFocus = [];\r\n        const additionalSelection = [];\r\n        elements.forEach((node, index) => {\r\n            if (this.focusTrait.has(node)) {\r\n                additionalFocus.push(start + index);\r\n            }\r\n            if (this.selectionTrait.has(node)) {\r\n                additionalSelection.push(start + index);\r\n            }\r\n        });\r\n        if (additionalFocus.length > 0) {\r\n            super.setFocus(distinctES6([...super.getFocus(), ...additionalFocus]));\r\n        }\r\n        if (additionalSelection.length > 0) {\r\n            super.setSelection(distinctES6([...super.getSelection(), ...additionalSelection]));\r\n        }\r\n    }\r\n    setFocus(indexes, browserEvent, fromAPI = false) {\r\n        super.setFocus(indexes, browserEvent);\r\n        if (!fromAPI) {\r\n            this.focusTrait.set(indexes.map(i => this.element(i)), browserEvent);\r\n        }\r\n    }\r\n    setSelection(indexes, browserEvent, fromAPI = false) {\r\n        super.setSelection(indexes, browserEvent);\r\n        if (!fromAPI) {\r\n            this.selectionTrait.set(indexes.map(i => this.element(i)), browserEvent);\r\n        }\r\n    }\r\n}\r\nexport class AbstractTree {\r\n    constructor(user, container, delegate, renderers, _options = {}) {\r\n        this._options = _options;\r\n        this.eventBufferer = new EventBufferer();\r\n        this.disposables = new DisposableStore();\r\n        this._onWillRefilter = new Emitter();\r\n        this.onWillRefilter = this._onWillRefilter.event;\r\n        this._onDidUpdateOptions = new Emitter();\r\n        const treeDelegate = new ComposedTreeDelegate(delegate);\r\n        const onDidChangeCollapseStateRelay = new Relay();\r\n        const onDidChangeActiveNodes = new Relay();\r\n        const activeNodes = new EventCollection(onDidChangeActiveNodes.event);\r\n        this.renderers = renderers.map(r => new TreeRenderer(r, () => this.model, onDidChangeCollapseStateRelay.event, activeNodes, _options));\r\n        for (let r of this.renderers) {\r\n            this.disposables.add(r);\r\n        }\r\n        let filter;\r\n        if (_options.keyboardNavigationLabelProvider) {\r\n            filter = new TypeFilter(this, _options.keyboardNavigationLabelProvider, _options.filter);\r\n            _options = Object.assign(Object.assign({}, _options), { filter: filter }); // TODO need typescript help here\r\n            this.disposables.add(filter);\r\n        }\r\n        this.focus = new Trait(_options.identityProvider);\r\n        this.selection = new Trait(_options.identityProvider);\r\n        this.view = new TreeNodeList(user, container, treeDelegate, this.renderers, this.focus, this.selection, Object.assign(Object.assign({}, asListOptions(() => this.model, _options)), { tree: this }));\r\n        this.model = this.createModel(user, this.view, _options);\r\n        onDidChangeCollapseStateRelay.input = this.model.onDidChangeCollapseState;\r\n        const onDidModelSplice = Event.forEach(this.model.onDidSplice, e => {\r\n            this.eventBufferer.bufferEvents(() => {\r\n                this.focus.onDidModelSplice(e);\r\n                this.selection.onDidModelSplice(e);\r\n            });\r\n        });\r\n        // Make sure the `forEach` always runs\r\n        onDidModelSplice(() => null, null, this.disposables);\r\n        // Active nodes can change when the model changes or when focus or selection change.\r\n        // We debounce it with 0 delay since these events may fire in the same stack and we only\r\n        // want to run this once. It also doesn't matter if it runs on the next tick since it's only\r\n        // a nice to have UI feature.\r\n        onDidChangeActiveNodes.input = Event.chain(Event.any(onDidModelSplice, this.focus.onDidChange, this.selection.onDidChange))\r\n            .debounce(() => null, 0)\r\n            .map(() => {\r\n            const set = new Set();\r\n            for (const node of this.focus.getNodes()) {\r\n                set.add(node);\r\n            }\r\n            for (const node of this.selection.getNodes()) {\r\n                set.add(node);\r\n            }\r\n            return [...set.values()];\r\n        }).event;\r\n        if (_options.keyboardSupport !== false) {\r\n            const onKeyDown = Event.chain(this.view.onKeyDown)\r\n                .filter(e => !isInputElement(e.target))\r\n                .map(e => new StandardKeyboardEvent(e));\r\n            onKeyDown.filter(e => e.keyCode === 15 /* LeftArrow */).on(this.onLeftArrow, this, this.disposables);\r\n            onKeyDown.filter(e => e.keyCode === 17 /* RightArrow */).on(this.onRightArrow, this, this.disposables);\r\n            onKeyDown.filter(e => e.keyCode === 10 /* Space */).on(this.onSpace, this, this.disposables);\r\n        }\r\n        if (_options.keyboardNavigationLabelProvider) {\r\n            const delegate = _options.keyboardNavigationDelegate || DefaultKeyboardNavigationDelegate;\r\n            this.typeFilterController = new TypeFilterController(this, this.model, this.view, filter, delegate);\r\n            this.focusNavigationFilter = node => this.typeFilterController.shouldAllowFocus(node);\r\n            this.disposables.add(this.typeFilterController);\r\n        }\r\n        this.styleElement = createStyleSheet(this.view.getHTMLElement());\r\n        this.getHTMLElement().classList.toggle('always', this._options.renderIndentGuides === RenderIndentGuides.Always);\r\n    }\r\n    get onDidChangeFocus() { return this.eventBufferer.wrapEvent(this.focus.onDidChange); }\r\n    get onDidChangeSelection() { return this.eventBufferer.wrapEvent(this.selection.onDidChange); }\r\n    get onMouseDblClick() { return Event.map(this.view.onMouseDblClick, asTreeMouseEvent); }\r\n    get onPointer() { return Event.map(this.view.onPointer, asTreeMouseEvent); }\r\n    get onDidFocus() { return this.view.onDidFocus; }\r\n    get onDidChangeCollapseState() { return this.model.onDidChangeCollapseState; }\r\n    get expandOnlyOnDoubleClick() { var _a; return (_a = this._options.expandOnlyOnDoubleClick) !== null && _a !== void 0 ? _a : false; }\r\n    get expandOnlyOnTwistieClick() { return typeof this._options.expandOnlyOnTwistieClick === 'undefined' ? false : this._options.expandOnlyOnTwistieClick; }\r\n    get onDidDispose() { return this.view.onDidDispose; }\r\n    updateOptions(optionsUpdate = {}) {\r\n        this._options = Object.assign(Object.assign({}, this._options), optionsUpdate);\r\n        for (const renderer of this.renderers) {\r\n            renderer.updateOptions(optionsUpdate);\r\n        }\r\n        this.view.updateOptions({\r\n            enableKeyboardNavigation: this._options.simpleKeyboardNavigation,\r\n            automaticKeyboardNavigation: this._options.automaticKeyboardNavigation,\r\n            smoothScrolling: this._options.smoothScrolling,\r\n            horizontalScrolling: this._options.horizontalScrolling\r\n        });\r\n        if (this.typeFilterController) {\r\n            this.typeFilterController.updateOptions(this._options);\r\n        }\r\n        this._onDidUpdateOptions.fire(this._options);\r\n        this.getHTMLElement().classList.toggle('always', this._options.renderIndentGuides === RenderIndentGuides.Always);\r\n    }\r\n    get options() {\r\n        return this._options;\r\n    }\r\n    // Widget\r\n    getHTMLElement() {\r\n        return this.view.getHTMLElement();\r\n    }\r\n    get scrollTop() {\r\n        return this.view.scrollTop;\r\n    }\r\n    set scrollTop(scrollTop) {\r\n        this.view.scrollTop = scrollTop;\r\n    }\r\n    domFocus() {\r\n        this.view.domFocus();\r\n    }\r\n    layout(height, width) {\r\n        this.view.layout(height, width);\r\n    }\r\n    style(styles) {\r\n        const suffix = `.${this.view.domId}`;\r\n        const content = [];\r\n        if (styles.treeIndentGuidesStroke) {\r\n            content.push(`.monaco-list${suffix}:hover .monaco-tl-indent > .indent-guide, .monaco-list${suffix}.always .monaco-tl-indent > .indent-guide  { border-color: ${styles.treeIndentGuidesStroke.transparent(0.4)}; }`);\r\n            content.push(`.monaco-list${suffix} .monaco-tl-indent > .indent-guide.active { border-color: ${styles.treeIndentGuidesStroke}; }`);\r\n        }\r\n        this.styleElement.textContent = content.join('\\n');\r\n        this.view.style(styles);\r\n    }\r\n    collapse(location, recursive = false) {\r\n        return this.model.setCollapsed(location, true, recursive);\r\n    }\r\n    expand(location, recursive = false) {\r\n        return this.model.setCollapsed(location, false, recursive);\r\n    }\r\n    isCollapsible(location) {\r\n        return this.model.isCollapsible(location);\r\n    }\r\n    setCollapsible(location, collapsible) {\r\n        return this.model.setCollapsible(location, collapsible);\r\n    }\r\n    isCollapsed(location) {\r\n        return this.model.isCollapsed(location);\r\n    }\r\n    refilter() {\r\n        this._onWillRefilter.fire(undefined);\r\n        this.model.refilter();\r\n    }\r\n    setSelection(elements, browserEvent) {\r\n        const nodes = elements.map(e => this.model.getNode(e));\r\n        this.selection.set(nodes, browserEvent);\r\n        const indexes = elements.map(e => this.model.getListIndex(e)).filter(i => i > -1);\r\n        this.view.setSelection(indexes, browserEvent, true);\r\n    }\r\n    getSelection() {\r\n        return this.selection.get();\r\n    }\r\n    setFocus(elements, browserEvent) {\r\n        const nodes = elements.map(e => this.model.getNode(e));\r\n        this.focus.set(nodes, browserEvent);\r\n        const indexes = elements.map(e => this.model.getListIndex(e)).filter(i => i > -1);\r\n        this.view.setFocus(indexes, browserEvent, true);\r\n    }\r\n    focusNext(n = 1, loop = false, browserEvent, filter = this.focusNavigationFilter) {\r\n        this.view.focusNext(n, loop, browserEvent, filter);\r\n    }\r\n    getFocus() {\r\n        return this.focus.get();\r\n    }\r\n    reveal(location, relativeTop) {\r\n        this.model.expandTo(location);\r\n        const index = this.model.getListIndex(location);\r\n        if (index === -1) {\r\n            return;\r\n        }\r\n        this.view.reveal(index, relativeTop);\r\n    }\r\n    /**\r\n     * Returns the relative position of an element rendered in the list.\r\n     * Returns `null` if the element isn't *entirely* in the visible viewport.\r\n     */\r\n    getRelativeTop(location) {\r\n        const index = this.model.getListIndex(location);\r\n        if (index === -1) {\r\n            return null;\r\n        }\r\n        return this.view.getRelativeTop(index);\r\n    }\r\n    // List\r\n    onLeftArrow(e) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        const nodes = this.view.getFocusedElements();\r\n        if (nodes.length === 0) {\r\n            return;\r\n        }\r\n        const node = nodes[0];\r\n        const location = this.model.getNodeLocation(node);\r\n        const didChange = this.model.setCollapsed(location, true);\r\n        if (!didChange) {\r\n            const parentLocation = this.model.getParentNodeLocation(location);\r\n            if (!parentLocation) {\r\n                return;\r\n            }\r\n            const parentListIndex = this.model.getListIndex(parentLocation);\r\n            this.view.reveal(parentListIndex);\r\n            this.view.setFocus([parentListIndex]);\r\n        }\r\n    }\r\n    onRightArrow(e) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        const nodes = this.view.getFocusedElements();\r\n        if (nodes.length === 0) {\r\n            return;\r\n        }\r\n        const node = nodes[0];\r\n        const location = this.model.getNodeLocation(node);\r\n        const didChange = this.model.setCollapsed(location, false);\r\n        if (!didChange) {\r\n            if (!node.children.some(child => child.visible)) {\r\n                return;\r\n            }\r\n            const [focusedIndex] = this.view.getFocus();\r\n            const firstChildIndex = focusedIndex + 1;\r\n            this.view.reveal(firstChildIndex);\r\n            this.view.setFocus([firstChildIndex]);\r\n        }\r\n    }\r\n    onSpace(e) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        const nodes = this.view.getFocusedElements();\r\n        if (nodes.length === 0) {\r\n            return;\r\n        }\r\n        const node = nodes[0];\r\n        const location = this.model.getNodeLocation(node);\r\n        const recursive = e.browserEvent.altKey;\r\n        this.model.setCollapsed(location, undefined, recursive);\r\n    }\r\n    dispose() {\r\n        dispose(this.disposables);\r\n        this.view.dispose();\r\n    }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}