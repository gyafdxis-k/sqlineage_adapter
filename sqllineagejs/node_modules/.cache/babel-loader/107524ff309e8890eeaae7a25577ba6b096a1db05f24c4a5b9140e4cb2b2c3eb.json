{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { equals } from '../../../base/common/arrays.js';\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\nimport { onUnexpectedExternalError } from '../../../base/common/errors.js';\nimport { LRUCache } from '../../../base/common/map.js';\nimport { Range } from '../../common/core/range.js';\nimport { DocumentSymbolProviderRegistry } from '../../common/modes.js';\nimport { Iterable } from '../../../base/common/iterator.js';\nimport { LanguageFeatureRequestDelays } from '../../common/modes/languageFeatureRegistry.js';\nexport class TreeElement {\n  remove() {\n    if (this.parent) {\n      this.parent.children.delete(this.id);\n    }\n  }\n  static findId(candidate, container) {\n    // complex id-computation which contains the origin/extension,\n    // the parent path, and some dedupe logic when names collide\n    let candidateId;\n    if (typeof candidate === 'string') {\n      candidateId = \"\".concat(container.id, \"/\").concat(candidate);\n    } else {\n      candidateId = \"\".concat(container.id, \"/\").concat(candidate.name);\n      if (container.children.get(candidateId) !== undefined) {\n        candidateId = \"\".concat(container.id, \"/\").concat(candidate.name, \"_\").concat(candidate.range.startLineNumber, \"_\").concat(candidate.range.startColumn);\n      }\n    }\n    let id = candidateId;\n    for (let i = 0; container.children.get(id) !== undefined; i++) {\n      id = \"\".concat(candidateId, \"_\").concat(i);\n    }\n    return id;\n  }\n  static empty(element) {\n    return element.children.size === 0;\n  }\n}\nexport class OutlineElement extends TreeElement {\n  constructor(id, parent, symbol) {\n    super();\n    this.id = id;\n    this.parent = parent;\n    this.symbol = symbol;\n    this.children = new Map();\n  }\n}\nexport class OutlineGroup extends TreeElement {\n  constructor(id, parent, label, order) {\n    super();\n    this.id = id;\n    this.parent = parent;\n    this.label = label;\n    this.order = order;\n    this.children = new Map();\n  }\n}\nexport class OutlineModel extends TreeElement {\n  constructor(uri) {\n    super();\n    this.uri = uri;\n    this.id = 'root';\n    this.parent = undefined;\n    this._groups = new Map();\n    this.children = new Map();\n    this.id = 'root';\n    this.parent = undefined;\n  }\n  static create(textModel, token) {\n    let key = this._keys.for(textModel, true);\n    let data = OutlineModel._requests.get(key);\n    if (!data) {\n      let source = new CancellationTokenSource();\n      data = {\n        promiseCnt: 0,\n        source,\n        promise: OutlineModel._create(textModel, source.token),\n        model: undefined\n      };\n      OutlineModel._requests.set(key, data);\n      // keep moving average of request durations\n      const now = Date.now();\n      data.promise.then(() => {\n        this._requestDurations.update(textModel, Date.now() - now);\n      });\n    }\n    if (data.model) {\n      // resolved -> return data\n      return Promise.resolve(data.model);\n    }\n    // increase usage counter\n    data.promiseCnt += 1;\n    token.onCancellationRequested(() => {\n      // last -> cancel provider request, remove cached promise\n      if (--data.promiseCnt === 0) {\n        data.source.cancel();\n        OutlineModel._requests.delete(key);\n      }\n    });\n    return new Promise((resolve, reject) => {\n      data.promise.then(model => {\n        data.model = model;\n        resolve(model);\n      }, err => {\n        OutlineModel._requests.delete(key);\n        reject(err);\n      });\n    });\n  }\n  static _create(textModel, token) {\n    const cts = new CancellationTokenSource(token);\n    const result = new OutlineModel(textModel.uri);\n    const provider = DocumentSymbolProviderRegistry.ordered(textModel);\n    const promises = provider.map((provider, index) => {\n      var _a;\n      let id = TreeElement.findId(\"provider_\".concat(index), result);\n      let group = new OutlineGroup(id, result, (_a = provider.displayName) !== null && _a !== void 0 ? _a : 'Unknown Outline Provider', index);\n      return Promise.resolve(provider.provideDocumentSymbols(textModel, cts.token)).then(result => {\n        for (const info of result || []) {\n          OutlineModel._makeOutlineElement(info, group);\n        }\n        return group;\n      }, err => {\n        onUnexpectedExternalError(err);\n        return group;\n      }).then(group => {\n        if (!TreeElement.empty(group)) {\n          result._groups.set(id, group);\n        } else {\n          group.remove();\n        }\n      });\n    });\n    const listener = DocumentSymbolProviderRegistry.onDidChange(() => {\n      const newProvider = DocumentSymbolProviderRegistry.ordered(textModel);\n      if (!equals(newProvider, provider)) {\n        cts.cancel();\n      }\n    });\n    return Promise.all(promises).then(() => {\n      if (cts.token.isCancellationRequested && !token.isCancellationRequested) {\n        return OutlineModel._create(textModel, token);\n      } else {\n        return result._compact();\n      }\n    }).finally(() => {\n      listener.dispose();\n    });\n  }\n  static _makeOutlineElement(info, container) {\n    let id = TreeElement.findId(info, container);\n    let res = new OutlineElement(id, container, info);\n    if (info.children) {\n      for (const childInfo of info.children) {\n        OutlineModel._makeOutlineElement(childInfo, res);\n      }\n    }\n    container.children.set(res.id, res);\n  }\n  _compact() {\n    let count = 0;\n    for (const [key, group] of this._groups) {\n      if (group.children.size === 0) {\n        // empty\n        this._groups.delete(key);\n      } else {\n        count += 1;\n      }\n    }\n    if (count !== 1) {\n      //\n      this.children = this._groups;\n    } else {\n      // adopt all elements of the first group\n      let group = Iterable.first(this._groups.values());\n      for (let [, child] of group.children) {\n        child.parent = this;\n        this.children.set(child.id, child);\n      }\n    }\n    return this;\n  }\n  getTopLevelSymbols() {\n    const roots = [];\n    for (const child of this.children.values()) {\n      if (child instanceof OutlineElement) {\n        roots.push(child.symbol);\n      } else {\n        roots.push(...Iterable.map(child.children.values(), child => child.symbol));\n      }\n    }\n    return roots.sort((a, b) => Range.compareRangesUsingStarts(a.range, b.range));\n  }\n  asListOfDocumentSymbols() {\n    const roots = this.getTopLevelSymbols();\n    const bucket = [];\n    OutlineModel._flattenDocumentSymbols(bucket, roots, '');\n    return bucket.sort((a, b) => Range.compareRangesUsingStarts(a.range, b.range));\n  }\n  static _flattenDocumentSymbols(bucket, entries, overrideContainerLabel) {\n    for (const entry of entries) {\n      bucket.push({\n        kind: entry.kind,\n        tags: entry.tags,\n        name: entry.name,\n        detail: entry.detail,\n        containerName: entry.containerName || overrideContainerLabel,\n        range: entry.range,\n        selectionRange: entry.selectionRange,\n        children: undefined // we flatten it...\n      });\n      // Recurse over children\n      if (entry.children) {\n        OutlineModel._flattenDocumentSymbols(bucket, entry.children, entry.name);\n      }\n    }\n  }\n}\nOutlineModel._requestDurations = new LanguageFeatureRequestDelays(DocumentSymbolProviderRegistry, 350);\nOutlineModel._requests = new LRUCache(9, 0.75);\nOutlineModel._keys = new class {\n  constructor() {\n    this._counter = 1;\n    this._data = new WeakMap();\n  }\n  for(textModel, version) {\n    return \"\".concat(textModel.id, \"/\").concat(version ? textModel.getVersionId() : '', \"/\").concat(this._hash(DocumentSymbolProviderRegistry.all(textModel)));\n  }\n  _hash(providers) {\n    let result = '';\n    for (const provider of providers) {\n      let n = this._data.get(provider);\n      if (typeof n === 'undefined') {\n        n = this._counter++;\n        this._data.set(provider, n);\n      }\n      result += n;\n    }\n    return result;\n  }\n}();","map":{"version":3,"names":["equals","CancellationTokenSource","onUnexpectedExternalError","LRUCache","Range","DocumentSymbolProviderRegistry","Iterable","LanguageFeatureRequestDelays","TreeElement","remove","parent","children","delete","id","findId","candidate","container","candidateId","concat","name","get","undefined","range","startLineNumber","startColumn","i","empty","element","size","OutlineElement","constructor","symbol","Map","OutlineGroup","label","order","OutlineModel","uri","_groups","create","textModel","token","key","_keys","for","data","_requests","source","promiseCnt","promise","_create","model","set","now","Date","then","_requestDurations","update","Promise","resolve","onCancellationRequested","cancel","reject","err","cts","result","provider","ordered","promises","map","index","_a","group","displayName","provideDocumentSymbols","info","_makeOutlineElement","listener","onDidChange","newProvider","all","isCancellationRequested","_compact","finally","dispose","res","childInfo","count","first","values","child","getTopLevelSymbols","roots","push","sort","a","b","compareRangesUsingStarts","asListOfDocumentSymbols","bucket","_flattenDocumentSymbols","entries","overrideContainerLabel","entry","kind","tags","detail","containerName","selectionRange","_counter","_data","WeakMap","version","getVersionId","_hash","providers","n"],"sources":["C:/Users/Administrator/Desktop/sqllineage-master/sqllineagejs/node_modules/monaco-editor/esm/vs/editor/contrib/documentSymbols/outlineModel.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { equals } from '../../../base/common/arrays.js';\r\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\r\nimport { onUnexpectedExternalError } from '../../../base/common/errors.js';\r\nimport { LRUCache } from '../../../base/common/map.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { DocumentSymbolProviderRegistry } from '../../common/modes.js';\r\nimport { Iterable } from '../../../base/common/iterator.js';\r\nimport { LanguageFeatureRequestDelays } from '../../common/modes/languageFeatureRegistry.js';\r\nexport class TreeElement {\r\n    remove() {\r\n        if (this.parent) {\r\n            this.parent.children.delete(this.id);\r\n        }\r\n    }\r\n    static findId(candidate, container) {\r\n        // complex id-computation which contains the origin/extension,\r\n        // the parent path, and some dedupe logic when names collide\r\n        let candidateId;\r\n        if (typeof candidate === 'string') {\r\n            candidateId = `${container.id}/${candidate}`;\r\n        }\r\n        else {\r\n            candidateId = `${container.id}/${candidate.name}`;\r\n            if (container.children.get(candidateId) !== undefined) {\r\n                candidateId = `${container.id}/${candidate.name}_${candidate.range.startLineNumber}_${candidate.range.startColumn}`;\r\n            }\r\n        }\r\n        let id = candidateId;\r\n        for (let i = 0; container.children.get(id) !== undefined; i++) {\r\n            id = `${candidateId}_${i}`;\r\n        }\r\n        return id;\r\n    }\r\n    static empty(element) {\r\n        return element.children.size === 0;\r\n    }\r\n}\r\nexport class OutlineElement extends TreeElement {\r\n    constructor(id, parent, symbol) {\r\n        super();\r\n        this.id = id;\r\n        this.parent = parent;\r\n        this.symbol = symbol;\r\n        this.children = new Map();\r\n    }\r\n}\r\nexport class OutlineGroup extends TreeElement {\r\n    constructor(id, parent, label, order) {\r\n        super();\r\n        this.id = id;\r\n        this.parent = parent;\r\n        this.label = label;\r\n        this.order = order;\r\n        this.children = new Map();\r\n    }\r\n}\r\nexport class OutlineModel extends TreeElement {\r\n    constructor(uri) {\r\n        super();\r\n        this.uri = uri;\r\n        this.id = 'root';\r\n        this.parent = undefined;\r\n        this._groups = new Map();\r\n        this.children = new Map();\r\n        this.id = 'root';\r\n        this.parent = undefined;\r\n    }\r\n    static create(textModel, token) {\r\n        let key = this._keys.for(textModel, true);\r\n        let data = OutlineModel._requests.get(key);\r\n        if (!data) {\r\n            let source = new CancellationTokenSource();\r\n            data = {\r\n                promiseCnt: 0,\r\n                source,\r\n                promise: OutlineModel._create(textModel, source.token),\r\n                model: undefined,\r\n            };\r\n            OutlineModel._requests.set(key, data);\r\n            // keep moving average of request durations\r\n            const now = Date.now();\r\n            data.promise.then(() => {\r\n                this._requestDurations.update(textModel, Date.now() - now);\r\n            });\r\n        }\r\n        if (data.model) {\r\n            // resolved -> return data\r\n            return Promise.resolve(data.model);\r\n        }\r\n        // increase usage counter\r\n        data.promiseCnt += 1;\r\n        token.onCancellationRequested(() => {\r\n            // last -> cancel provider request, remove cached promise\r\n            if (--data.promiseCnt === 0) {\r\n                data.source.cancel();\r\n                OutlineModel._requests.delete(key);\r\n            }\r\n        });\r\n        return new Promise((resolve, reject) => {\r\n            data.promise.then(model => {\r\n                data.model = model;\r\n                resolve(model);\r\n            }, err => {\r\n                OutlineModel._requests.delete(key);\r\n                reject(err);\r\n            });\r\n        });\r\n    }\r\n    static _create(textModel, token) {\r\n        const cts = new CancellationTokenSource(token);\r\n        const result = new OutlineModel(textModel.uri);\r\n        const provider = DocumentSymbolProviderRegistry.ordered(textModel);\r\n        const promises = provider.map((provider, index) => {\r\n            var _a;\r\n            let id = TreeElement.findId(`provider_${index}`, result);\r\n            let group = new OutlineGroup(id, result, (_a = provider.displayName) !== null && _a !== void 0 ? _a : 'Unknown Outline Provider', index);\r\n            return Promise.resolve(provider.provideDocumentSymbols(textModel, cts.token)).then(result => {\r\n                for (const info of result || []) {\r\n                    OutlineModel._makeOutlineElement(info, group);\r\n                }\r\n                return group;\r\n            }, err => {\r\n                onUnexpectedExternalError(err);\r\n                return group;\r\n            }).then(group => {\r\n                if (!TreeElement.empty(group)) {\r\n                    result._groups.set(id, group);\r\n                }\r\n                else {\r\n                    group.remove();\r\n                }\r\n            });\r\n        });\r\n        const listener = DocumentSymbolProviderRegistry.onDidChange(() => {\r\n            const newProvider = DocumentSymbolProviderRegistry.ordered(textModel);\r\n            if (!equals(newProvider, provider)) {\r\n                cts.cancel();\r\n            }\r\n        });\r\n        return Promise.all(promises).then(() => {\r\n            if (cts.token.isCancellationRequested && !token.isCancellationRequested) {\r\n                return OutlineModel._create(textModel, token);\r\n            }\r\n            else {\r\n                return result._compact();\r\n            }\r\n        }).finally(() => {\r\n            listener.dispose();\r\n        });\r\n    }\r\n    static _makeOutlineElement(info, container) {\r\n        let id = TreeElement.findId(info, container);\r\n        let res = new OutlineElement(id, container, info);\r\n        if (info.children) {\r\n            for (const childInfo of info.children) {\r\n                OutlineModel._makeOutlineElement(childInfo, res);\r\n            }\r\n        }\r\n        container.children.set(res.id, res);\r\n    }\r\n    _compact() {\r\n        let count = 0;\r\n        for (const [key, group] of this._groups) {\r\n            if (group.children.size === 0) { // empty\r\n                this._groups.delete(key);\r\n            }\r\n            else {\r\n                count += 1;\r\n            }\r\n        }\r\n        if (count !== 1) {\r\n            //\r\n            this.children = this._groups;\r\n        }\r\n        else {\r\n            // adopt all elements of the first group\r\n            let group = Iterable.first(this._groups.values());\r\n            for (let [, child] of group.children) {\r\n                child.parent = this;\r\n                this.children.set(child.id, child);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    getTopLevelSymbols() {\r\n        const roots = [];\r\n        for (const child of this.children.values()) {\r\n            if (child instanceof OutlineElement) {\r\n                roots.push(child.symbol);\r\n            }\r\n            else {\r\n                roots.push(...Iterable.map(child.children.values(), child => child.symbol));\r\n            }\r\n        }\r\n        return roots.sort((a, b) => Range.compareRangesUsingStarts(a.range, b.range));\r\n    }\r\n    asListOfDocumentSymbols() {\r\n        const roots = this.getTopLevelSymbols();\r\n        const bucket = [];\r\n        OutlineModel._flattenDocumentSymbols(bucket, roots, '');\r\n        return bucket.sort((a, b) => Range.compareRangesUsingStarts(a.range, b.range));\r\n    }\r\n    static _flattenDocumentSymbols(bucket, entries, overrideContainerLabel) {\r\n        for (const entry of entries) {\r\n            bucket.push({\r\n                kind: entry.kind,\r\n                tags: entry.tags,\r\n                name: entry.name,\r\n                detail: entry.detail,\r\n                containerName: entry.containerName || overrideContainerLabel,\r\n                range: entry.range,\r\n                selectionRange: entry.selectionRange,\r\n                children: undefined, // we flatten it...\r\n            });\r\n            // Recurse over children\r\n            if (entry.children) {\r\n                OutlineModel._flattenDocumentSymbols(bucket, entry.children, entry.name);\r\n            }\r\n        }\r\n    }\r\n}\r\nOutlineModel._requestDurations = new LanguageFeatureRequestDelays(DocumentSymbolProviderRegistry, 350);\r\nOutlineModel._requests = new LRUCache(9, 0.75);\r\nOutlineModel._keys = new class {\r\n    constructor() {\r\n        this._counter = 1;\r\n        this._data = new WeakMap();\r\n    }\r\n    for(textModel, version) {\r\n        return `${textModel.id}/${version ? textModel.getVersionId() : ''}/${this._hash(DocumentSymbolProviderRegistry.all(textModel))}`;\r\n    }\r\n    _hash(providers) {\r\n        let result = '';\r\n        for (const provider of providers) {\r\n            let n = this._data.get(provider);\r\n            if (typeof n === 'undefined') {\r\n                n = this._counter++;\r\n                this._data.set(provider, n);\r\n            }\r\n            result += n;\r\n        }\r\n        return result;\r\n    }\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}