{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { Selection } from '../core/selection.js';\nexport class ReplaceCommand {\n  constructor(range, text) {\n    let insertsAutoWhitespace = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    this._range = range;\n    this._text = text;\n    this.insertsAutoWhitespace = insertsAutoWhitespace;\n  }\n  getEditOperations(model, builder) {\n    builder.addTrackedEditOperation(this._range, this._text);\n  }\n  computeCursorState(model, helper) {\n    let inverseEditOperations = helper.getInverseEditOperations();\n    let srcRange = inverseEditOperations[0].range;\n    return new Selection(srcRange.endLineNumber, srcRange.endColumn, srcRange.endLineNumber, srcRange.endColumn);\n  }\n}\nexport class ReplaceCommandThatSelectsText {\n  constructor(range, text) {\n    this._range = range;\n    this._text = text;\n  }\n  getEditOperations(model, builder) {\n    builder.addTrackedEditOperation(this._range, this._text);\n  }\n  computeCursorState(model, helper) {\n    const inverseEditOperations = helper.getInverseEditOperations();\n    const srcRange = inverseEditOperations[0].range;\n    return new Selection(srcRange.startLineNumber, srcRange.startColumn, srcRange.endLineNumber, srcRange.endColumn);\n  }\n}\nexport class ReplaceCommandWithoutChangingPosition {\n  constructor(range, text) {\n    let insertsAutoWhitespace = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    this._range = range;\n    this._text = text;\n    this.insertsAutoWhitespace = insertsAutoWhitespace;\n  }\n  getEditOperations(model, builder) {\n    builder.addTrackedEditOperation(this._range, this._text);\n  }\n  computeCursorState(model, helper) {\n    let inverseEditOperations = helper.getInverseEditOperations();\n    let srcRange = inverseEditOperations[0].range;\n    return new Selection(srcRange.startLineNumber, srcRange.startColumn, srcRange.startLineNumber, srcRange.startColumn);\n  }\n}\nexport class ReplaceCommandWithOffsetCursorState {\n  constructor(range, text, lineNumberDeltaOffset, columnDeltaOffset) {\n    let insertsAutoWhitespace = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n    this._range = range;\n    this._text = text;\n    this._columnDeltaOffset = columnDeltaOffset;\n    this._lineNumberDeltaOffset = lineNumberDeltaOffset;\n    this.insertsAutoWhitespace = insertsAutoWhitespace;\n  }\n  getEditOperations(model, builder) {\n    builder.addTrackedEditOperation(this._range, this._text);\n  }\n  computeCursorState(model, helper) {\n    let inverseEditOperations = helper.getInverseEditOperations();\n    let srcRange = inverseEditOperations[0].range;\n    return new Selection(srcRange.endLineNumber + this._lineNumberDeltaOffset, srcRange.endColumn + this._columnDeltaOffset, srcRange.endLineNumber + this._lineNumberDeltaOffset, srcRange.endColumn + this._columnDeltaOffset);\n  }\n}\nexport class ReplaceCommandThatPreservesSelection {\n  constructor(editRange, text, initialSelection) {\n    let forceMoveMarkers = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n    this._range = editRange;\n    this._text = text;\n    this._initialSelection = initialSelection;\n    this._forceMoveMarkers = forceMoveMarkers;\n    this._selectionId = null;\n  }\n  getEditOperations(model, builder) {\n    builder.addTrackedEditOperation(this._range, this._text, this._forceMoveMarkers);\n    this._selectionId = builder.trackSelection(this._initialSelection);\n  }\n  computeCursorState(model, helper) {\n    return helper.getTrackedSelection(this._selectionId);\n  }\n}","map":{"version":3,"names":["Selection","ReplaceCommand","constructor","range","text","insertsAutoWhitespace","arguments","length","undefined","_range","_text","getEditOperations","model","builder","addTrackedEditOperation","computeCursorState","helper","inverseEditOperations","getInverseEditOperations","srcRange","endLineNumber","endColumn","ReplaceCommandThatSelectsText","startLineNumber","startColumn","ReplaceCommandWithoutChangingPosition","ReplaceCommandWithOffsetCursorState","lineNumberDeltaOffset","columnDeltaOffset","_columnDeltaOffset","_lineNumberDeltaOffset","ReplaceCommandThatPreservesSelection","editRange","initialSelection","forceMoveMarkers","_initialSelection","_forceMoveMarkers","_selectionId","trackSelection","getTrackedSelection"],"sources":["C:/Users/Administrator/Desktop/sqllineage-master/sqllineagejs/node_modules/monaco-editor/esm/vs/editor/common/commands/replaceCommand.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Selection } from '../core/selection.js';\r\nexport class ReplaceCommand {\r\n    constructor(range, text, insertsAutoWhitespace = false) {\r\n        this._range = range;\r\n        this._text = text;\r\n        this.insertsAutoWhitespace = insertsAutoWhitespace;\r\n    }\r\n    getEditOperations(model, builder) {\r\n        builder.addTrackedEditOperation(this._range, this._text);\r\n    }\r\n    computeCursorState(model, helper) {\r\n        let inverseEditOperations = helper.getInverseEditOperations();\r\n        let srcRange = inverseEditOperations[0].range;\r\n        return new Selection(srcRange.endLineNumber, srcRange.endColumn, srcRange.endLineNumber, srcRange.endColumn);\r\n    }\r\n}\r\nexport class ReplaceCommandThatSelectsText {\r\n    constructor(range, text) {\r\n        this._range = range;\r\n        this._text = text;\r\n    }\r\n    getEditOperations(model, builder) {\r\n        builder.addTrackedEditOperation(this._range, this._text);\r\n    }\r\n    computeCursorState(model, helper) {\r\n        const inverseEditOperations = helper.getInverseEditOperations();\r\n        const srcRange = inverseEditOperations[0].range;\r\n        return new Selection(srcRange.startLineNumber, srcRange.startColumn, srcRange.endLineNumber, srcRange.endColumn);\r\n    }\r\n}\r\nexport class ReplaceCommandWithoutChangingPosition {\r\n    constructor(range, text, insertsAutoWhitespace = false) {\r\n        this._range = range;\r\n        this._text = text;\r\n        this.insertsAutoWhitespace = insertsAutoWhitespace;\r\n    }\r\n    getEditOperations(model, builder) {\r\n        builder.addTrackedEditOperation(this._range, this._text);\r\n    }\r\n    computeCursorState(model, helper) {\r\n        let inverseEditOperations = helper.getInverseEditOperations();\r\n        let srcRange = inverseEditOperations[0].range;\r\n        return new Selection(srcRange.startLineNumber, srcRange.startColumn, srcRange.startLineNumber, srcRange.startColumn);\r\n    }\r\n}\r\nexport class ReplaceCommandWithOffsetCursorState {\r\n    constructor(range, text, lineNumberDeltaOffset, columnDeltaOffset, insertsAutoWhitespace = false) {\r\n        this._range = range;\r\n        this._text = text;\r\n        this._columnDeltaOffset = columnDeltaOffset;\r\n        this._lineNumberDeltaOffset = lineNumberDeltaOffset;\r\n        this.insertsAutoWhitespace = insertsAutoWhitespace;\r\n    }\r\n    getEditOperations(model, builder) {\r\n        builder.addTrackedEditOperation(this._range, this._text);\r\n    }\r\n    computeCursorState(model, helper) {\r\n        let inverseEditOperations = helper.getInverseEditOperations();\r\n        let srcRange = inverseEditOperations[0].range;\r\n        return new Selection(srcRange.endLineNumber + this._lineNumberDeltaOffset, srcRange.endColumn + this._columnDeltaOffset, srcRange.endLineNumber + this._lineNumberDeltaOffset, srcRange.endColumn + this._columnDeltaOffset);\r\n    }\r\n}\r\nexport class ReplaceCommandThatPreservesSelection {\r\n    constructor(editRange, text, initialSelection, forceMoveMarkers = false) {\r\n        this._range = editRange;\r\n        this._text = text;\r\n        this._initialSelection = initialSelection;\r\n        this._forceMoveMarkers = forceMoveMarkers;\r\n        this._selectionId = null;\r\n    }\r\n    getEditOperations(model, builder) {\r\n        builder.addTrackedEditOperation(this._range, this._text, this._forceMoveMarkers);\r\n        this._selectionId = builder.trackSelection(this._initialSelection);\r\n    }\r\n    computeCursorState(model, helper) {\r\n        return helper.getTrackedSelection(this._selectionId);\r\n    }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}