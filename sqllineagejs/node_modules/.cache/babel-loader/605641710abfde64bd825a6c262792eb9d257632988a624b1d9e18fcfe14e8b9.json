{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport * as dom from '../../../base/browser/dom.js';\nimport { CancellationToken } from '../../../base/common/cancellation.js';\nimport { Color, RGBA } from '../../../base/common/color.js';\nimport { DisposableStore, combinedDisposable } from '../../../base/common/lifecycle.js';\nimport { Position } from '../../common/core/position.js';\nimport { Range } from '../../common/core/range.js';\nimport { ModelDecorationOptions } from '../../common/model/textModel.js';\nimport { TokenizationRegistry } from '../../common/modes.js';\nimport { getColorPresentations } from '../colorPicker/color.js';\nimport { ColorDetector } from '../colorPicker/colorDetector.js';\nimport { ColorPickerModel } from '../colorPicker/colorPickerModel.js';\nimport { ColorPickerWidget } from '../colorPicker/colorPickerWidget.js';\nimport { HoverOperation } from './hoverOperation.js';\nimport { registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\nimport { coalesce } from '../../../base/common/arrays.js';\nimport { textLinkForeground } from '../../../platform/theme/common/colorRegistry.js';\nimport { Widget } from '../../../base/browser/ui/widget.js';\nimport { HoverWidget } from '../../../base/browser/ui/hover/hoverWidget.js';\nimport { MarkerHover, MarkerHoverParticipant } from './markerHoverParticipant.js';\nimport { MarkdownHover, MarkdownHoverParticipant } from './markdownHoverParticipant.js';\nclass ColorHover {\n  constructor(range, color, provider) {\n    this.range = range;\n    this.color = color;\n    this.provider = provider;\n  }\n  equals(other) {\n    return false;\n  }\n}\nclass HoverPartInfo {\n  constructor(owner, data) {\n    this.owner = owner;\n    this.data = data;\n  }\n}\nclass ModesContentComputer {\n  constructor(editor, _markerHoverParticipant, _markdownHoverParticipant) {\n    this._markerHoverParticipant = _markerHoverParticipant;\n    this._markdownHoverParticipant = _markdownHoverParticipant;\n    this._editor = editor;\n    this._result = [];\n    this._range = null;\n  }\n  setRange(range) {\n    this._range = range;\n    this._result = [];\n  }\n  clearResult() {\n    this._result = [];\n  }\n  computeAsync(token) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!this._editor.hasModel() || !this._range) {\n        return Promise.resolve([]);\n      }\n      const markdownHovers = yield this._markdownHoverParticipant.computeAsync(this._range, token);\n      return markdownHovers.map(h => new HoverPartInfo(this._markdownHoverParticipant, h));\n    });\n  }\n  computeSync() {\n    if (!this._editor.hasModel() || !this._range) {\n      return [];\n    }\n    const model = this._editor.getModel();\n    const hoverRange = this._range;\n    const lineNumber = hoverRange.startLineNumber;\n    if (lineNumber > this._editor.getModel().getLineCount()) {\n      // Illegal line number => no results\n      return [];\n    }\n    const maxColumn = model.getLineMaxColumn(lineNumber);\n    const lineDecorations = this._editor.getLineDecorations(lineNumber).filter(d => {\n      const startColumn = d.range.startLineNumber === lineNumber ? d.range.startColumn : 1;\n      const endColumn = d.range.endLineNumber === lineNumber ? d.range.endColumn : maxColumn;\n      if (startColumn > hoverRange.startColumn || hoverRange.endColumn > endColumn) {\n        return false;\n      }\n      return true;\n    });\n    let result = [];\n    const colorDetector = ColorDetector.get(this._editor);\n    for (const d of lineDecorations) {\n      const colorData = colorDetector.getColorData(d.range.getStartPosition());\n      if (colorData) {\n        const {\n          color,\n          range\n        } = colorData.colorInfo;\n        result.push(new HoverPartInfo(null, new ColorHover(Range.lift(range), color, colorData.provider)));\n        break;\n      }\n    }\n    const markdownHovers = this._markdownHoverParticipant.computeSync(this._range, lineDecorations);\n    result = result.concat(markdownHovers.map(h => new HoverPartInfo(this._markdownHoverParticipant, h)));\n    const markerHovers = this._markerHoverParticipant.computeSync(this._range, lineDecorations);\n    result = result.concat(markerHovers.map(h => new HoverPartInfo(this._markerHoverParticipant, h)));\n    return coalesce(result);\n  }\n  onResult(result, isFromSynchronousComputation) {\n    // Always put synchronous messages before asynchronous ones\n    if (isFromSynchronousComputation) {\n      this._result = result.concat(this._result);\n    } else {\n      this._result = this._result.concat(result);\n    }\n  }\n  getResult() {\n    return this._result.slice(0);\n  }\n  getResultWithLoadingMessage() {\n    if (this._range) {\n      const loadingMessage = new HoverPartInfo(this._markdownHoverParticipant, this._markdownHoverParticipant.createLoadingMessage(this._range));\n      return this._result.slice(0).concat([loadingMessage]);\n    }\n    return this._result.slice(0);\n  }\n}\nexport class ModesContentHoverWidget extends Widget {\n  constructor(editor, _hoverVisibleKey, instantiationService, _themeService) {\n    super();\n    this._hoverVisibleKey = _hoverVisibleKey;\n    this._themeService = _themeService;\n    // IContentWidget.allowEditorOverflow\n    this.allowEditorOverflow = true;\n    this._markerHoverParticipant = instantiationService.createInstance(MarkerHoverParticipant, editor, this);\n    this._markdownHoverParticipant = instantiationService.createInstance(MarkdownHoverParticipant, editor, this);\n    this._hover = this._register(new HoverWidget());\n    this._id = ModesContentHoverWidget.ID;\n    this._editor = editor;\n    this._isVisible = false;\n    this._stoleFocus = false;\n    this._renderDisposable = null;\n    this.onkeydown(this._hover.containerDomNode, e => {\n      if (e.equals(9 /* Escape */)) {\n        this.hide();\n      }\n    });\n    this._register(this._editor.onDidChangeConfiguration(e => {\n      if (e.hasChanged(38 /* fontInfo */)) {\n        this._updateFont();\n      }\n    }));\n    this._editor.onDidLayoutChange(() => this.layout());\n    this.layout();\n    this._editor.addContentWidget(this);\n    this._showAtPosition = null;\n    this._showAtRange = null;\n    this._stoleFocus = false;\n    this._messages = [];\n    this._lastRange = null;\n    this._computer = new ModesContentComputer(this._editor, this._markerHoverParticipant, this._markdownHoverParticipant);\n    this._highlightDecorations = [];\n    this._isChangingDecorations = false;\n    this._shouldFocus = false;\n    this._colorPicker = null;\n    this._hoverOperation = new HoverOperation(this._computer, result => this._withResult(result, true), null, result => this._withResult(result, false), this._editor.getOption(48 /* hover */).delay);\n    this._register(dom.addStandardDisposableListener(this.getDomNode(), dom.EventType.FOCUS, () => {\n      if (this._colorPicker) {\n        this.getDomNode().classList.add('colorpicker-hover');\n      }\n    }));\n    this._register(dom.addStandardDisposableListener(this.getDomNode(), dom.EventType.BLUR, () => {\n      this.getDomNode().classList.remove('colorpicker-hover');\n    }));\n    this._register(editor.onDidChangeConfiguration(() => {\n      this._hoverOperation.setHoverTime(this._editor.getOption(48 /* hover */).delay);\n    }));\n    this._register(TokenizationRegistry.onDidChange(() => {\n      if (this._isVisible && this._lastRange && this._messages.length > 0) {\n        this._messages = this._messages.map(msg => {\n          var _a, _b;\n          // If a color hover is visible, we need to update the message that\n          // created it so that the color matches the last chosen color\n          if (msg.data instanceof ColorHover && !!((_a = this._lastRange) === null || _a === void 0 ? void 0 : _a.intersectRanges(msg.data.range)) && ((_b = this._colorPicker) === null || _b === void 0 ? void 0 : _b.model.color)) {\n            const color = this._colorPicker.model.color;\n            const newColor = {\n              red: color.rgba.r / 255,\n              green: color.rgba.g / 255,\n              blue: color.rgba.b / 255,\n              alpha: color.rgba.a\n            };\n            return new HoverPartInfo(msg.owner, new ColorHover(msg.data.range, newColor, msg.data.provider));\n          } else {\n            return msg;\n          }\n        });\n        this._hover.contentsDomNode.textContent = '';\n        this._renderMessages(this._lastRange, this._messages);\n      }\n    }));\n  }\n  dispose() {\n    this._hoverOperation.cancel();\n    this._editor.removeContentWidget(this);\n    super.dispose();\n  }\n  getId() {\n    return this._id;\n  }\n  getDomNode() {\n    return this._hover.containerDomNode;\n  }\n  showAt(position, range, focus) {\n    // Position has changed\n    this._showAtPosition = position;\n    this._showAtRange = range;\n    this._hoverVisibleKey.set(true);\n    this._isVisible = true;\n    this._hover.containerDomNode.classList.toggle('hidden', !this._isVisible);\n    this._editor.layoutContentWidget(this);\n    // Simply force a synchronous render on the editor\n    // such that the widget does not really render with left = '0px'\n    this._editor.render();\n    this._stoleFocus = focus;\n    if (focus) {\n      this._hover.containerDomNode.focus();\n    }\n  }\n  getPosition() {\n    if (this._isVisible) {\n      return {\n        position: this._showAtPosition,\n        range: this._showAtRange,\n        preference: [1 /* ABOVE */, 2 /* BELOW */]\n      };\n    }\n\n    return null;\n  }\n  _updateFont() {\n    const codeClasses = Array.prototype.slice.call(this._hover.contentsDomNode.getElementsByClassName('code'));\n    codeClasses.forEach(node => this._editor.applyFontInfo(node));\n  }\n  _updateContents(node) {\n    this._hover.contentsDomNode.textContent = '';\n    this._hover.contentsDomNode.appendChild(node);\n    this._updateFont();\n    this._editor.layoutContentWidget(this);\n    this._hover.onContentsChanged();\n  }\n  layout() {\n    const height = Math.max(this._editor.getLayoutInfo().height / 4, 250);\n    const {\n      fontSize,\n      lineHeight\n    } = this._editor.getOption(38 /* fontInfo */);\n    this._hover.contentsDomNode.style.fontSize = \"\".concat(fontSize, \"px\");\n    this._hover.contentsDomNode.style.lineHeight = \"\".concat(lineHeight, \"px\");\n    this._hover.contentsDomNode.style.maxHeight = \"\".concat(height, \"px\");\n    this._hover.contentsDomNode.style.maxWidth = \"\".concat(Math.max(this._editor.getLayoutInfo().width * 0.66, 500), \"px\");\n  }\n  onModelDecorationsChanged() {\n    if (this._isChangingDecorations) {\n      return;\n    }\n    if (this._isVisible) {\n      // The decorations have changed and the hover is visible,\n      // we need to recompute the displayed text\n      this._hoverOperation.cancel();\n      this._computer.clearResult();\n      if (!this._colorPicker) {\n        // TODO@Michel ensure that displayed text for other decorations is computed even if color picker is in place\n        this._hoverOperation.start(0 /* Delayed */);\n      }\n    }\n  }\n\n  startShowingAt(range, mode, focus) {\n    if (this._lastRange && this._lastRange.equalsRange(range)) {\n      // We have to show the widget at the exact same range as before, so no work is needed\n      return;\n    }\n    this._hoverOperation.cancel();\n    if (this._isVisible) {\n      // The range might have changed, but the hover is visible\n      // Instead of hiding it completely, filter out messages that are still in the new range and\n      // kick off a new computation\n      if (!this._showAtPosition || this._showAtPosition.lineNumber !== range.startLineNumber) {\n        this.hide();\n      } else {\n        let filteredMessages = [];\n        for (let i = 0, len = this._messages.length; i < len; i++) {\n          const msg = this._messages[i];\n          const rng = msg.data.range;\n          if (rng && rng.startColumn <= range.startColumn && rng.endColumn >= range.endColumn) {\n            filteredMessages.push(msg);\n          }\n        }\n        if (filteredMessages.length > 0) {\n          if (hoverContentsEquals(filteredMessages, this._messages)) {\n            return;\n          }\n          this._renderMessages(range, filteredMessages);\n        } else {\n          this.hide();\n        }\n      }\n    }\n    this._lastRange = range;\n    this._computer.setRange(range);\n    this._shouldFocus = focus;\n    this._hoverOperation.start(mode);\n  }\n  hide() {\n    this._lastRange = null;\n    this._hoverOperation.cancel();\n    if (this._isVisible) {\n      setTimeout(() => {\n        // Give commands a chance to see the key\n        if (!this._isVisible) {\n          this._hoverVisibleKey.set(false);\n        }\n      }, 0);\n      this._isVisible = false;\n      this._hover.containerDomNode.classList.toggle('hidden', !this._isVisible);\n      this._editor.layoutContentWidget(this);\n      if (this._stoleFocus) {\n        this._editor.focus();\n      }\n    }\n    this._isChangingDecorations = true;\n    this._highlightDecorations = this._editor.deltaDecorations(this._highlightDecorations, []);\n    this._isChangingDecorations = false;\n    if (this._renderDisposable) {\n      this._renderDisposable.dispose();\n      this._renderDisposable = null;\n    }\n    this._colorPicker = null;\n  }\n  isColorPickerVisible() {\n    return !!this._colorPicker;\n  }\n  onContentsChanged() {\n    this._hover.onContentsChanged();\n  }\n  _withResult(result, complete) {\n    this._messages = result;\n    if (this._lastRange && this._messages.length > 0) {\n      this._renderMessages(this._lastRange, this._messages);\n    } else if (complete) {\n      this.hide();\n    }\n  }\n  _renderMessages(renderRange, messages) {\n    if (this._renderDisposable) {\n      this._renderDisposable.dispose();\n      this._renderDisposable = null;\n    }\n    this._colorPicker = null;\n    // update column from which to show\n    let renderColumn = 1073741824 /* MAX_SAFE_SMALL_INTEGER */;\n    let highlightRange = messages[0].data.range ? Range.lift(messages[0].data.range) : null;\n    let fragment = document.createDocumentFragment();\n    let containColorPicker = false;\n    const disposables = new DisposableStore();\n    const markerMessages = [];\n    const markdownParts = [];\n    messages.forEach(_msg => {\n      const msg = _msg.data;\n      if (!msg.range) {\n        return;\n      }\n      renderColumn = Math.min(renderColumn, msg.range.startColumn);\n      highlightRange = highlightRange ? Range.plusRange(highlightRange, msg.range) : Range.lift(msg.range);\n      if (msg instanceof ColorHover) {\n        containColorPicker = true;\n        const {\n          red,\n          green,\n          blue,\n          alpha\n        } = msg.color;\n        const rgba = new RGBA(Math.round(red * 255), Math.round(green * 255), Math.round(blue * 255), alpha);\n        const color = new Color(rgba);\n        if (!this._editor.hasModel()) {\n          return;\n        }\n        const editorModel = this._editor.getModel();\n        let range = new Range(msg.range.startLineNumber, msg.range.startColumn, msg.range.endLineNumber, msg.range.endColumn);\n        let colorInfo = {\n          range: msg.range,\n          color: msg.color\n        };\n        // create blank olor picker model and widget first to ensure it's positioned correctly.\n        const model = new ColorPickerModel(color, [], 0);\n        const widget = new ColorPickerWidget(fragment, model, this._editor.getOption(122 /* pixelRatio */), this._themeService);\n        getColorPresentations(editorModel, colorInfo, msg.provider, CancellationToken.None).then(colorPresentations => {\n          model.colorPresentations = colorPresentations || [];\n          if (!this._editor.hasModel()) {\n            // gone...\n            return;\n          }\n          const originalText = this._editor.getModel().getValueInRange(msg.range);\n          model.guessColorPresentation(color, originalText);\n          const updateEditorModel = () => {\n            let textEdits;\n            let newRange;\n            if (model.presentation.textEdit) {\n              textEdits = [model.presentation.textEdit];\n              newRange = new Range(model.presentation.textEdit.range.startLineNumber, model.presentation.textEdit.range.startColumn, model.presentation.textEdit.range.endLineNumber, model.presentation.textEdit.range.endColumn);\n              const trackedRange = this._editor.getModel()._setTrackedRange(null, newRange, 3 /* GrowsOnlyWhenTypingAfter */);\n              this._editor.pushUndoStop();\n              this._editor.executeEdits('colorpicker', textEdits);\n              newRange = this._editor.getModel()._getTrackedRange(trackedRange) || newRange;\n            } else {\n              textEdits = [{\n                identifier: null,\n                range,\n                text: model.presentation.label,\n                forceMoveMarkers: false\n              }];\n              newRange = range.setEndPosition(range.endLineNumber, range.startColumn + model.presentation.label.length);\n              this._editor.pushUndoStop();\n              this._editor.executeEdits('colorpicker', textEdits);\n            }\n            if (model.presentation.additionalTextEdits) {\n              textEdits = [...model.presentation.additionalTextEdits];\n              this._editor.executeEdits('colorpicker', textEdits);\n              this.hide();\n            }\n            this._editor.pushUndoStop();\n            range = newRange;\n          };\n          const updateColorPresentations = color => {\n            return getColorPresentations(editorModel, {\n              range: range,\n              color: {\n                red: color.rgba.r / 255,\n                green: color.rgba.g / 255,\n                blue: color.rgba.b / 255,\n                alpha: color.rgba.a\n              }\n            }, msg.provider, CancellationToken.None).then(colorPresentations => {\n              model.colorPresentations = colorPresentations || [];\n            });\n          };\n          const colorListener = model.onColorFlushed(color => {\n            updateColorPresentations(color).then(updateEditorModel);\n          });\n          const colorChangeListener = model.onDidChangeColor(updateColorPresentations);\n          this._colorPicker = widget;\n          this.showAt(range.getStartPosition(), range, this._shouldFocus);\n          this._updateContents(fragment);\n          this._colorPicker.layout();\n          this._renderDisposable = combinedDisposable(colorListener, colorChangeListener, widget, disposables);\n        });\n      } else {\n        if (msg instanceof MarkerHover) {\n          markerMessages.push(msg);\n        } else {\n          if (msg instanceof MarkdownHover) {\n            markdownParts.push(msg);\n          }\n        }\n      }\n    });\n    if (markdownParts.length > 0) {\n      disposables.add(this._markdownHoverParticipant.renderHoverParts(markdownParts, fragment));\n    }\n    if (markerMessages.length) {\n      disposables.add(this._markerHoverParticipant.renderHoverParts(markerMessages, fragment));\n    }\n    this._renderDisposable = disposables;\n    // show\n    if (!containColorPicker && fragment.hasChildNodes()) {\n      this.showAt(new Position(renderRange.startLineNumber, renderColumn), highlightRange, this._shouldFocus);\n      this._updateContents(fragment);\n    }\n    this._isChangingDecorations = true;\n    this._highlightDecorations = this._editor.deltaDecorations(this._highlightDecorations, highlightRange ? [{\n      range: highlightRange,\n      options: ModesContentHoverWidget._DECORATION_OPTIONS\n    }] : []);\n    this._isChangingDecorations = false;\n  }\n}\nModesContentHoverWidget.ID = 'editor.contrib.modesContentHoverWidget';\nModesContentHoverWidget._DECORATION_OPTIONS = ModelDecorationOptions.register({\n  className: 'hoverHighlight'\n});\nfunction hoverContentsEquals(first, second) {\n  if (first.length !== second.length) {\n    return false;\n  }\n  for (let i = 0; i < first.length; i++) {\n    if (!first[i].data.equals(second[i].data)) {\n      return false;\n    }\n  }\n  return true;\n}\nregisterThemingParticipant((theme, collector) => {\n  const linkFg = theme.getColor(textLinkForeground);\n  if (linkFg) {\n    collector.addRule(\".monaco-hover .hover-contents a.code-link span:hover { color: \".concat(linkFg, \"; }\"));\n  }\n});","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","dom","CancellationToken","Color","RGBA","DisposableStore","combinedDisposable","Position","Range","ModelDecorationOptions","TokenizationRegistry","getColorPresentations","ColorDetector","ColorPickerModel","ColorPickerWidget","HoverOperation","registerThemingParticipant","coalesce","textLinkForeground","Widget","HoverWidget","MarkerHover","MarkerHoverParticipant","MarkdownHover","MarkdownHoverParticipant","ColorHover","constructor","range","color","provider","equals","other","HoverPartInfo","owner","data","ModesContentComputer","editor","_markerHoverParticipant","_markdownHoverParticipant","_editor","_result","_range","setRange","clearResult","computeAsync","token","hasModel","markdownHovers","map","h","computeSync","model","getModel","hoverRange","lineNumber","startLineNumber","getLineCount","maxColumn","getLineMaxColumn","lineDecorations","getLineDecorations","filter","d","startColumn","endColumn","endLineNumber","colorDetector","get","colorData","getColorData","getStartPosition","colorInfo","push","lift","concat","markerHovers","onResult","isFromSynchronousComputation","getResult","slice","getResultWithLoadingMessage","loadingMessage","createLoadingMessage","ModesContentHoverWidget","_hoverVisibleKey","instantiationService","_themeService","allowEditorOverflow","createInstance","_hover","_register","_id","ID","_isVisible","_stoleFocus","_renderDisposable","onkeydown","containerDomNode","hide","onDidChangeConfiguration","hasChanged","_updateFont","onDidLayoutChange","layout","addContentWidget","_showAtPosition","_showAtRange","_messages","_lastRange","_computer","_highlightDecorations","_isChangingDecorations","_shouldFocus","_colorPicker","_hoverOperation","_withResult","getOption","delay","addStandardDisposableListener","getDomNode","EventType","FOCUS","classList","add","BLUR","remove","setHoverTime","onDidChange","length","msg","_a","_b","intersectRanges","newColor","red","rgba","r","green","g","blue","b","alpha","a","contentsDomNode","textContent","_renderMessages","dispose","cancel","removeContentWidget","getId","showAt","position","focus","set","toggle","layoutContentWidget","render","getPosition","preference","codeClasses","Array","prototype","call","getElementsByClassName","forEach","node","applyFontInfo","_updateContents","appendChild","onContentsChanged","height","Math","max","getLayoutInfo","fontSize","lineHeight","style","maxHeight","maxWidth","width","onModelDecorationsChanged","start","startShowingAt","mode","equalsRange","filteredMessages","i","len","rng","hoverContentsEquals","setTimeout","deltaDecorations","isColorPickerVisible","complete","renderRange","messages","renderColumn","highlightRange","fragment","document","createDocumentFragment","containColorPicker","disposables","markerMessages","markdownParts","_msg","min","plusRange","round","editorModel","widget","None","colorPresentations","originalText","getValueInRange","guessColorPresentation","updateEditorModel","textEdits","newRange","presentation","textEdit","trackedRange","_setTrackedRange","pushUndoStop","executeEdits","_getTrackedRange","identifier","text","label","forceMoveMarkers","setEndPosition","additionalTextEdits","updateColorPresentations","colorListener","onColorFlushed","colorChangeListener","onDidChangeColor","renderHoverParts","hasChildNodes","options","_DECORATION_OPTIONS","register","className","first","second","theme","collector","linkFg","getColor","addRule"],"sources":["C:/Users/Administrator/Desktop/sqllineage-master/sqllineagejs/node_modules/monaco-editor/esm/vs/editor/contrib/hover/modesContentHover.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport * as dom from '../../../base/browser/dom.js';\r\nimport { CancellationToken } from '../../../base/common/cancellation.js';\r\nimport { Color, RGBA } from '../../../base/common/color.js';\r\nimport { DisposableStore, combinedDisposable } from '../../../base/common/lifecycle.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { ModelDecorationOptions } from '../../common/model/textModel.js';\r\nimport { TokenizationRegistry } from '../../common/modes.js';\r\nimport { getColorPresentations } from '../colorPicker/color.js';\r\nimport { ColorDetector } from '../colorPicker/colorDetector.js';\r\nimport { ColorPickerModel } from '../colorPicker/colorPickerModel.js';\r\nimport { ColorPickerWidget } from '../colorPicker/colorPickerWidget.js';\r\nimport { HoverOperation } from './hoverOperation.js';\r\nimport { registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\r\nimport { coalesce } from '../../../base/common/arrays.js';\r\nimport { textLinkForeground } from '../../../platform/theme/common/colorRegistry.js';\r\nimport { Widget } from '../../../base/browser/ui/widget.js';\r\nimport { HoverWidget } from '../../../base/browser/ui/hover/hoverWidget.js';\r\nimport { MarkerHover, MarkerHoverParticipant } from './markerHoverParticipant.js';\r\nimport { MarkdownHover, MarkdownHoverParticipant } from './markdownHoverParticipant.js';\r\nclass ColorHover {\r\n    constructor(range, color, provider) {\r\n        this.range = range;\r\n        this.color = color;\r\n        this.provider = provider;\r\n    }\r\n    equals(other) {\r\n        return false;\r\n    }\r\n}\r\nclass HoverPartInfo {\r\n    constructor(owner, data) {\r\n        this.owner = owner;\r\n        this.data = data;\r\n    }\r\n}\r\nclass ModesContentComputer {\r\n    constructor(editor, _markerHoverParticipant, _markdownHoverParticipant) {\r\n        this._markerHoverParticipant = _markerHoverParticipant;\r\n        this._markdownHoverParticipant = _markdownHoverParticipant;\r\n        this._editor = editor;\r\n        this._result = [];\r\n        this._range = null;\r\n    }\r\n    setRange(range) {\r\n        this._range = range;\r\n        this._result = [];\r\n    }\r\n    clearResult() {\r\n        this._result = [];\r\n    }\r\n    computeAsync(token) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!this._editor.hasModel() || !this._range) {\r\n                return Promise.resolve([]);\r\n            }\r\n            const markdownHovers = yield this._markdownHoverParticipant.computeAsync(this._range, token);\r\n            return markdownHovers.map(h => new HoverPartInfo(this._markdownHoverParticipant, h));\r\n        });\r\n    }\r\n    computeSync() {\r\n        if (!this._editor.hasModel() || !this._range) {\r\n            return [];\r\n        }\r\n        const model = this._editor.getModel();\r\n        const hoverRange = this._range;\r\n        const lineNumber = hoverRange.startLineNumber;\r\n        if (lineNumber > this._editor.getModel().getLineCount()) {\r\n            // Illegal line number => no results\r\n            return [];\r\n        }\r\n        const maxColumn = model.getLineMaxColumn(lineNumber);\r\n        const lineDecorations = this._editor.getLineDecorations(lineNumber).filter((d) => {\r\n            const startColumn = (d.range.startLineNumber === lineNumber) ? d.range.startColumn : 1;\r\n            const endColumn = (d.range.endLineNumber === lineNumber) ? d.range.endColumn : maxColumn;\r\n            if (startColumn > hoverRange.startColumn || hoverRange.endColumn > endColumn) {\r\n                return false;\r\n            }\r\n            return true;\r\n        });\r\n        let result = [];\r\n        const colorDetector = ColorDetector.get(this._editor);\r\n        for (const d of lineDecorations) {\r\n            const colorData = colorDetector.getColorData(d.range.getStartPosition());\r\n            if (colorData) {\r\n                const { color, range } = colorData.colorInfo;\r\n                result.push(new HoverPartInfo(null, new ColorHover(Range.lift(range), color, colorData.provider)));\r\n                break;\r\n            }\r\n        }\r\n        const markdownHovers = this._markdownHoverParticipant.computeSync(this._range, lineDecorations);\r\n        result = result.concat(markdownHovers.map(h => new HoverPartInfo(this._markdownHoverParticipant, h)));\r\n        const markerHovers = this._markerHoverParticipant.computeSync(this._range, lineDecorations);\r\n        result = result.concat(markerHovers.map(h => new HoverPartInfo(this._markerHoverParticipant, h)));\r\n        return coalesce(result);\r\n    }\r\n    onResult(result, isFromSynchronousComputation) {\r\n        // Always put synchronous messages before asynchronous ones\r\n        if (isFromSynchronousComputation) {\r\n            this._result = result.concat(this._result);\r\n        }\r\n        else {\r\n            this._result = this._result.concat(result);\r\n        }\r\n    }\r\n    getResult() {\r\n        return this._result.slice(0);\r\n    }\r\n    getResultWithLoadingMessage() {\r\n        if (this._range) {\r\n            const loadingMessage = new HoverPartInfo(this._markdownHoverParticipant, this._markdownHoverParticipant.createLoadingMessage(this._range));\r\n            return this._result.slice(0).concat([loadingMessage]);\r\n        }\r\n        return this._result.slice(0);\r\n    }\r\n}\r\nexport class ModesContentHoverWidget extends Widget {\r\n    constructor(editor, _hoverVisibleKey, instantiationService, _themeService) {\r\n        super();\r\n        this._hoverVisibleKey = _hoverVisibleKey;\r\n        this._themeService = _themeService;\r\n        // IContentWidget.allowEditorOverflow\r\n        this.allowEditorOverflow = true;\r\n        this._markerHoverParticipant = instantiationService.createInstance(MarkerHoverParticipant, editor, this);\r\n        this._markdownHoverParticipant = instantiationService.createInstance(MarkdownHoverParticipant, editor, this);\r\n        this._hover = this._register(new HoverWidget());\r\n        this._id = ModesContentHoverWidget.ID;\r\n        this._editor = editor;\r\n        this._isVisible = false;\r\n        this._stoleFocus = false;\r\n        this._renderDisposable = null;\r\n        this.onkeydown(this._hover.containerDomNode, (e) => {\r\n            if (e.equals(9 /* Escape */)) {\r\n                this.hide();\r\n            }\r\n        });\r\n        this._register(this._editor.onDidChangeConfiguration((e) => {\r\n            if (e.hasChanged(38 /* fontInfo */)) {\r\n                this._updateFont();\r\n            }\r\n        }));\r\n        this._editor.onDidLayoutChange(() => this.layout());\r\n        this.layout();\r\n        this._editor.addContentWidget(this);\r\n        this._showAtPosition = null;\r\n        this._showAtRange = null;\r\n        this._stoleFocus = false;\r\n        this._messages = [];\r\n        this._lastRange = null;\r\n        this._computer = new ModesContentComputer(this._editor, this._markerHoverParticipant, this._markdownHoverParticipant);\r\n        this._highlightDecorations = [];\r\n        this._isChangingDecorations = false;\r\n        this._shouldFocus = false;\r\n        this._colorPicker = null;\r\n        this._hoverOperation = new HoverOperation(this._computer, result => this._withResult(result, true), null, result => this._withResult(result, false), this._editor.getOption(48 /* hover */).delay);\r\n        this._register(dom.addStandardDisposableListener(this.getDomNode(), dom.EventType.FOCUS, () => {\r\n            if (this._colorPicker) {\r\n                this.getDomNode().classList.add('colorpicker-hover');\r\n            }\r\n        }));\r\n        this._register(dom.addStandardDisposableListener(this.getDomNode(), dom.EventType.BLUR, () => {\r\n            this.getDomNode().classList.remove('colorpicker-hover');\r\n        }));\r\n        this._register(editor.onDidChangeConfiguration(() => {\r\n            this._hoverOperation.setHoverTime(this._editor.getOption(48 /* hover */).delay);\r\n        }));\r\n        this._register(TokenizationRegistry.onDidChange(() => {\r\n            if (this._isVisible && this._lastRange && this._messages.length > 0) {\r\n                this._messages = this._messages.map(msg => {\r\n                    var _a, _b;\r\n                    // If a color hover is visible, we need to update the message that\r\n                    // created it so that the color matches the last chosen color\r\n                    if (msg.data instanceof ColorHover && !!((_a = this._lastRange) === null || _a === void 0 ? void 0 : _a.intersectRanges(msg.data.range)) && ((_b = this._colorPicker) === null || _b === void 0 ? void 0 : _b.model.color)) {\r\n                        const color = this._colorPicker.model.color;\r\n                        const newColor = {\r\n                            red: color.rgba.r / 255,\r\n                            green: color.rgba.g / 255,\r\n                            blue: color.rgba.b / 255,\r\n                            alpha: color.rgba.a\r\n                        };\r\n                        return new HoverPartInfo(msg.owner, new ColorHover(msg.data.range, newColor, msg.data.provider));\r\n                    }\r\n                    else {\r\n                        return msg;\r\n                    }\r\n                });\r\n                this._hover.contentsDomNode.textContent = '';\r\n                this._renderMessages(this._lastRange, this._messages);\r\n            }\r\n        }));\r\n    }\r\n    dispose() {\r\n        this._hoverOperation.cancel();\r\n        this._editor.removeContentWidget(this);\r\n        super.dispose();\r\n    }\r\n    getId() {\r\n        return this._id;\r\n    }\r\n    getDomNode() {\r\n        return this._hover.containerDomNode;\r\n    }\r\n    showAt(position, range, focus) {\r\n        // Position has changed\r\n        this._showAtPosition = position;\r\n        this._showAtRange = range;\r\n        this._hoverVisibleKey.set(true);\r\n        this._isVisible = true;\r\n        this._hover.containerDomNode.classList.toggle('hidden', !this._isVisible);\r\n        this._editor.layoutContentWidget(this);\r\n        // Simply force a synchronous render on the editor\r\n        // such that the widget does not really render with left = '0px'\r\n        this._editor.render();\r\n        this._stoleFocus = focus;\r\n        if (focus) {\r\n            this._hover.containerDomNode.focus();\r\n        }\r\n    }\r\n    getPosition() {\r\n        if (this._isVisible) {\r\n            return {\r\n                position: this._showAtPosition,\r\n                range: this._showAtRange,\r\n                preference: [\r\n                    1 /* ABOVE */,\r\n                    2 /* BELOW */\r\n                ]\r\n            };\r\n        }\r\n        return null;\r\n    }\r\n    _updateFont() {\r\n        const codeClasses = Array.prototype.slice.call(this._hover.contentsDomNode.getElementsByClassName('code'));\r\n        codeClasses.forEach(node => this._editor.applyFontInfo(node));\r\n    }\r\n    _updateContents(node) {\r\n        this._hover.contentsDomNode.textContent = '';\r\n        this._hover.contentsDomNode.appendChild(node);\r\n        this._updateFont();\r\n        this._editor.layoutContentWidget(this);\r\n        this._hover.onContentsChanged();\r\n    }\r\n    layout() {\r\n        const height = Math.max(this._editor.getLayoutInfo().height / 4, 250);\r\n        const { fontSize, lineHeight } = this._editor.getOption(38 /* fontInfo */);\r\n        this._hover.contentsDomNode.style.fontSize = `${fontSize}px`;\r\n        this._hover.contentsDomNode.style.lineHeight = `${lineHeight}px`;\r\n        this._hover.contentsDomNode.style.maxHeight = `${height}px`;\r\n        this._hover.contentsDomNode.style.maxWidth = `${Math.max(this._editor.getLayoutInfo().width * 0.66, 500)}px`;\r\n    }\r\n    onModelDecorationsChanged() {\r\n        if (this._isChangingDecorations) {\r\n            return;\r\n        }\r\n        if (this._isVisible) {\r\n            // The decorations have changed and the hover is visible,\r\n            // we need to recompute the displayed text\r\n            this._hoverOperation.cancel();\r\n            this._computer.clearResult();\r\n            if (!this._colorPicker) { // TODO@Michel ensure that displayed text for other decorations is computed even if color picker is in place\r\n                this._hoverOperation.start(0 /* Delayed */);\r\n            }\r\n        }\r\n    }\r\n    startShowingAt(range, mode, focus) {\r\n        if (this._lastRange && this._lastRange.equalsRange(range)) {\r\n            // We have to show the widget at the exact same range as before, so no work is needed\r\n            return;\r\n        }\r\n        this._hoverOperation.cancel();\r\n        if (this._isVisible) {\r\n            // The range might have changed, but the hover is visible\r\n            // Instead of hiding it completely, filter out messages that are still in the new range and\r\n            // kick off a new computation\r\n            if (!this._showAtPosition || this._showAtPosition.lineNumber !== range.startLineNumber) {\r\n                this.hide();\r\n            }\r\n            else {\r\n                let filteredMessages = [];\r\n                for (let i = 0, len = this._messages.length; i < len; i++) {\r\n                    const msg = this._messages[i];\r\n                    const rng = msg.data.range;\r\n                    if (rng && rng.startColumn <= range.startColumn && rng.endColumn >= range.endColumn) {\r\n                        filteredMessages.push(msg);\r\n                    }\r\n                }\r\n                if (filteredMessages.length > 0) {\r\n                    if (hoverContentsEquals(filteredMessages, this._messages)) {\r\n                        return;\r\n                    }\r\n                    this._renderMessages(range, filteredMessages);\r\n                }\r\n                else {\r\n                    this.hide();\r\n                }\r\n            }\r\n        }\r\n        this._lastRange = range;\r\n        this._computer.setRange(range);\r\n        this._shouldFocus = focus;\r\n        this._hoverOperation.start(mode);\r\n    }\r\n    hide() {\r\n        this._lastRange = null;\r\n        this._hoverOperation.cancel();\r\n        if (this._isVisible) {\r\n            setTimeout(() => {\r\n                // Give commands a chance to see the key\r\n                if (!this._isVisible) {\r\n                    this._hoverVisibleKey.set(false);\r\n                }\r\n            }, 0);\r\n            this._isVisible = false;\r\n            this._hover.containerDomNode.classList.toggle('hidden', !this._isVisible);\r\n            this._editor.layoutContentWidget(this);\r\n            if (this._stoleFocus) {\r\n                this._editor.focus();\r\n            }\r\n        }\r\n        this._isChangingDecorations = true;\r\n        this._highlightDecorations = this._editor.deltaDecorations(this._highlightDecorations, []);\r\n        this._isChangingDecorations = false;\r\n        if (this._renderDisposable) {\r\n            this._renderDisposable.dispose();\r\n            this._renderDisposable = null;\r\n        }\r\n        this._colorPicker = null;\r\n    }\r\n    isColorPickerVisible() {\r\n        return !!this._colorPicker;\r\n    }\r\n    onContentsChanged() {\r\n        this._hover.onContentsChanged();\r\n    }\r\n    _withResult(result, complete) {\r\n        this._messages = result;\r\n        if (this._lastRange && this._messages.length > 0) {\r\n            this._renderMessages(this._lastRange, this._messages);\r\n        }\r\n        else if (complete) {\r\n            this.hide();\r\n        }\r\n    }\r\n    _renderMessages(renderRange, messages) {\r\n        if (this._renderDisposable) {\r\n            this._renderDisposable.dispose();\r\n            this._renderDisposable = null;\r\n        }\r\n        this._colorPicker = null;\r\n        // update column from which to show\r\n        let renderColumn = 1073741824 /* MAX_SAFE_SMALL_INTEGER */;\r\n        let highlightRange = messages[0].data.range ? Range.lift(messages[0].data.range) : null;\r\n        let fragment = document.createDocumentFragment();\r\n        let containColorPicker = false;\r\n        const disposables = new DisposableStore();\r\n        const markerMessages = [];\r\n        const markdownParts = [];\r\n        messages.forEach((_msg) => {\r\n            const msg = _msg.data;\r\n            if (!msg.range) {\r\n                return;\r\n            }\r\n            renderColumn = Math.min(renderColumn, msg.range.startColumn);\r\n            highlightRange = highlightRange ? Range.plusRange(highlightRange, msg.range) : Range.lift(msg.range);\r\n            if (msg instanceof ColorHover) {\r\n                containColorPicker = true;\r\n                const { red, green, blue, alpha } = msg.color;\r\n                const rgba = new RGBA(Math.round(red * 255), Math.round(green * 255), Math.round(blue * 255), alpha);\r\n                const color = new Color(rgba);\r\n                if (!this._editor.hasModel()) {\r\n                    return;\r\n                }\r\n                const editorModel = this._editor.getModel();\r\n                let range = new Range(msg.range.startLineNumber, msg.range.startColumn, msg.range.endLineNumber, msg.range.endColumn);\r\n                let colorInfo = { range: msg.range, color: msg.color };\r\n                // create blank olor picker model and widget first to ensure it's positioned correctly.\r\n                const model = new ColorPickerModel(color, [], 0);\r\n                const widget = new ColorPickerWidget(fragment, model, this._editor.getOption(122 /* pixelRatio */), this._themeService);\r\n                getColorPresentations(editorModel, colorInfo, msg.provider, CancellationToken.None).then(colorPresentations => {\r\n                    model.colorPresentations = colorPresentations || [];\r\n                    if (!this._editor.hasModel()) {\r\n                        // gone...\r\n                        return;\r\n                    }\r\n                    const originalText = this._editor.getModel().getValueInRange(msg.range);\r\n                    model.guessColorPresentation(color, originalText);\r\n                    const updateEditorModel = () => {\r\n                        let textEdits;\r\n                        let newRange;\r\n                        if (model.presentation.textEdit) {\r\n                            textEdits = [model.presentation.textEdit];\r\n                            newRange = new Range(model.presentation.textEdit.range.startLineNumber, model.presentation.textEdit.range.startColumn, model.presentation.textEdit.range.endLineNumber, model.presentation.textEdit.range.endColumn);\r\n                            const trackedRange = this._editor.getModel()._setTrackedRange(null, newRange, 3 /* GrowsOnlyWhenTypingAfter */);\r\n                            this._editor.pushUndoStop();\r\n                            this._editor.executeEdits('colorpicker', textEdits);\r\n                            newRange = this._editor.getModel()._getTrackedRange(trackedRange) || newRange;\r\n                        }\r\n                        else {\r\n                            textEdits = [{ identifier: null, range, text: model.presentation.label, forceMoveMarkers: false }];\r\n                            newRange = range.setEndPosition(range.endLineNumber, range.startColumn + model.presentation.label.length);\r\n                            this._editor.pushUndoStop();\r\n                            this._editor.executeEdits('colorpicker', textEdits);\r\n                        }\r\n                        if (model.presentation.additionalTextEdits) {\r\n                            textEdits = [...model.presentation.additionalTextEdits];\r\n                            this._editor.executeEdits('colorpicker', textEdits);\r\n                            this.hide();\r\n                        }\r\n                        this._editor.pushUndoStop();\r\n                        range = newRange;\r\n                    };\r\n                    const updateColorPresentations = (color) => {\r\n                        return getColorPresentations(editorModel, {\r\n                            range: range,\r\n                            color: {\r\n                                red: color.rgba.r / 255,\r\n                                green: color.rgba.g / 255,\r\n                                blue: color.rgba.b / 255,\r\n                                alpha: color.rgba.a\r\n                            }\r\n                        }, msg.provider, CancellationToken.None).then((colorPresentations) => {\r\n                            model.colorPresentations = colorPresentations || [];\r\n                        });\r\n                    };\r\n                    const colorListener = model.onColorFlushed((color) => {\r\n                        updateColorPresentations(color).then(updateEditorModel);\r\n                    });\r\n                    const colorChangeListener = model.onDidChangeColor(updateColorPresentations);\r\n                    this._colorPicker = widget;\r\n                    this.showAt(range.getStartPosition(), range, this._shouldFocus);\r\n                    this._updateContents(fragment);\r\n                    this._colorPicker.layout();\r\n                    this._renderDisposable = combinedDisposable(colorListener, colorChangeListener, widget, disposables);\r\n                });\r\n            }\r\n            else {\r\n                if (msg instanceof MarkerHover) {\r\n                    markerMessages.push(msg);\r\n                }\r\n                else {\r\n                    if (msg instanceof MarkdownHover) {\r\n                        markdownParts.push(msg);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        if (markdownParts.length > 0) {\r\n            disposables.add(this._markdownHoverParticipant.renderHoverParts(markdownParts, fragment));\r\n        }\r\n        if (markerMessages.length) {\r\n            disposables.add(this._markerHoverParticipant.renderHoverParts(markerMessages, fragment));\r\n        }\r\n        this._renderDisposable = disposables;\r\n        // show\r\n        if (!containColorPicker && fragment.hasChildNodes()) {\r\n            this.showAt(new Position(renderRange.startLineNumber, renderColumn), highlightRange, this._shouldFocus);\r\n            this._updateContents(fragment);\r\n        }\r\n        this._isChangingDecorations = true;\r\n        this._highlightDecorations = this._editor.deltaDecorations(this._highlightDecorations, highlightRange ? [{\r\n                range: highlightRange,\r\n                options: ModesContentHoverWidget._DECORATION_OPTIONS\r\n            }] : []);\r\n        this._isChangingDecorations = false;\r\n    }\r\n}\r\nModesContentHoverWidget.ID = 'editor.contrib.modesContentHoverWidget';\r\nModesContentHoverWidget._DECORATION_OPTIONS = ModelDecorationOptions.register({\r\n    className: 'hoverHighlight'\r\n});\r\nfunction hoverContentsEquals(first, second) {\r\n    if (first.length !== second.length) {\r\n        return false;\r\n    }\r\n    for (let i = 0; i < first.length; i++) {\r\n        if (!first[i].data.equals(second[i].data)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nregisterThemingParticipant((theme, collector) => {\r\n    const linkFg = theme.getColor(textLinkForeground);\r\n    if (linkFg) {\r\n        collector.addRule(`.monaco-hover .hover-contents a.code-link span:hover { color: ${linkFg}; }`);\r\n    }\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}