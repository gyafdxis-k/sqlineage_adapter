{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar _a, _b, _c, _d, _e, _f, _g, _h;\nimport { alert } from '../../../base/browser/ui/aria/aria.js';\nimport { createCancelablePromise, raceCancellation } from '../../../base/common/async.js';\nimport { KeyChord } from '../../../base/common/keyCodes.js';\nimport { isWeb } from '../../../base/common/platform.js';\nimport { isCodeEditor } from '../../browser/editorBrowser.js';\nimport { EditorAction, registerEditorAction } from '../../browser/editorExtensions.js';\nimport { ICodeEditorService } from '../../browser/services/codeEditorService.js';\nimport * as corePosition from '../../common/core/position.js';\nimport { Range } from '../../common/core/range.js';\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\nimport { isLocationLink } from '../../common/modes.js';\nimport { MessageController } from '../message/messageController.js';\nimport { PeekContext } from '../peekView/peekView.js';\nimport { ReferencesController } from './peek/referencesController.js';\nimport { ReferencesModel } from './referencesModel.js';\nimport * as nls from '../../../nls.js';\nimport { MenuId, MenuRegistry } from '../../../platform/actions/common/actions.js';\nimport { ContextKeyExpr } from '../../../platform/contextkey/common/contextkey.js';\nimport { INotificationService } from '../../../platform/notification/common/notification.js';\nimport { IEditorProgressService } from '../../../platform/progress/common/progress.js';\nimport { getDefinitionsAtPosition, getImplementationsAtPosition, getTypeDefinitionsAtPosition, getDeclarationsAtPosition, getReferencesAtPosition } from './goToSymbol.js';\nimport { CommandsRegistry, ICommandService } from '../../../platform/commands/common/commands.js';\nimport { EditorStateCancellationTokenSource } from '../../browser/core/editorState.js';\nimport { ISymbolNavigationService } from './symbolNavigation.js';\nimport { isStandalone } from '../../../base/browser/browser.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\nimport { assertType } from '../../../base/common/types.js';\nimport { EmbeddedCodeEditorWidget } from '../../browser/widget/embeddedCodeEditorWidget.js';\nMenuRegistry.appendMenuItem(MenuId.EditorContext, {\n  submenu: MenuId.EditorContextPeek,\n  title: nls.localize('peek.submenu', \"Peek\"),\n  group: 'navigation',\n  order: 100\n});\nclass SymbolNavigationAction extends EditorAction {\n  constructor(configuration, opts) {\n    super(opts);\n    this._configuration = configuration;\n  }\n  run(accessor, editor) {\n    if (!editor.hasModel()) {\n      return Promise.resolve(undefined);\n    }\n    const notificationService = accessor.get(INotificationService);\n    const editorService = accessor.get(ICodeEditorService);\n    const progressService = accessor.get(IEditorProgressService);\n    const symbolNavService = accessor.get(ISymbolNavigationService);\n    const model = editor.getModel();\n    const pos = editor.getPosition();\n    const cts = new EditorStateCancellationTokenSource(editor, 1 /* Value */ | 4 /* Position */);\n    const promise = raceCancellation(this._getLocationModel(model, pos, cts.token), cts.token).then(references => __awaiter(this, void 0, void 0, function* () {\n      if (!references || cts.token.isCancellationRequested) {\n        return;\n      }\n      alert(references.ariaMessage);\n      let altAction;\n      if (references.referenceAt(model.uri, pos)) {\n        const altActionId = this._getAlternativeCommand(editor);\n        if (altActionId !== this.id) {\n          altAction = editor.getAction(altActionId);\n        }\n      }\n      const referenceCount = references.references.length;\n      if (referenceCount === 0) {\n        // no result -> show message\n        if (!this._configuration.muteMessage) {\n          const info = model.getWordAtPosition(pos);\n          MessageController.get(editor).showMessage(this._getNoResultFoundMessage(info), pos);\n        }\n      } else if (referenceCount === 1 && altAction) {\n        // already at the only result, run alternative\n        altAction.run();\n      } else {\n        // normal results handling\n        return this._onResult(editorService, symbolNavService, editor, references);\n      }\n    }), err => {\n      // report an error\n      notificationService.error(err);\n    }).finally(() => {\n      cts.dispose();\n    });\n    progressService.showWhile(promise, 250);\n    return promise;\n  }\n  _onResult(editorService, symbolNavService, editor, model) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const gotoLocation = this._getGoToPreference(editor);\n      if (!(editor instanceof EmbeddedCodeEditorWidget) && (this._configuration.openInPeek || gotoLocation === 'peek' && model.references.length > 1)) {\n        this._openInPeek(editor, model);\n      } else {\n        const next = model.firstReference();\n        const peek = model.references.length > 1 && gotoLocation === 'gotoAndPeek';\n        const targetEditor = yield this._openReference(editor, editorService, next, this._configuration.openToSide, !peek);\n        if (peek && targetEditor) {\n          this._openInPeek(targetEditor, model);\n        } else {\n          model.dispose();\n        }\n        // keep remaining locations around when using\n        // 'goto'-mode\n        if (gotoLocation === 'goto') {\n          symbolNavService.put(next);\n        }\n      }\n    });\n  }\n  _openReference(editor, editorService, reference, sideBySide, highlight) {\n    return __awaiter(this, void 0, void 0, function* () {\n      // range is the target-selection-range when we have one\n      // and the fallback is the 'full' range\n      let range = undefined;\n      if (isLocationLink(reference)) {\n        range = reference.targetSelectionRange;\n      }\n      if (!range) {\n        range = reference.range;\n      }\n      if (!range) {\n        return undefined;\n      }\n      const targetEditor = yield editorService.openCodeEditor({\n        resource: reference.uri,\n        options: {\n          selection: Range.collapseToStart(range),\n          selectionRevealType: 3 /* NearTopIfOutsideViewport */\n        }\n      }, editor, sideBySide);\n      if (!targetEditor) {\n        return undefined;\n      }\n      if (highlight) {\n        const modelNow = targetEditor.getModel();\n        const ids = targetEditor.deltaDecorations([], [{\n          range,\n          options: {\n            className: 'symbolHighlight'\n          }\n        }]);\n        setTimeout(() => {\n          if (targetEditor.getModel() === modelNow) {\n            targetEditor.deltaDecorations(ids, []);\n          }\n        }, 350);\n      }\n      return targetEditor;\n    });\n  }\n  _openInPeek(target, model) {\n    let controller = ReferencesController.get(target);\n    if (controller && target.hasModel()) {\n      controller.toggleWidget(target.getSelection(), createCancelablePromise(_ => Promise.resolve(model)), this._configuration.openInPeek);\n    } else {\n      model.dispose();\n    }\n  }\n}\n//#region --- DEFINITION\nexport class DefinitionAction extends SymbolNavigationAction {\n  _getLocationModel(model, position, token) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return new ReferencesModel(yield getDefinitionsAtPosition(model, position, token), nls.localize('def.title', 'Definitions'));\n    });\n  }\n  _getNoResultFoundMessage(info) {\n    return info && info.word ? nls.localize('noResultWord', \"No definition found for '{0}'\", info.word) : nls.localize('generic.noResults', \"No definition found\");\n  }\n  _getAlternativeCommand(editor) {\n    return editor.getOption(45 /* gotoLocation */).alternativeDefinitionCommand;\n  }\n  _getGoToPreference(editor) {\n    return editor.getOption(45 /* gotoLocation */).multipleDefinitions;\n  }\n}\nconst goToDefinitionKb = isWeb && !isStandalone ? 2048 /* CtrlCmd */ | 70 /* F12 */ : 70 /* F12 */;\nregisterEditorAction((_a = class GoToDefinitionAction extends DefinitionAction {\n  constructor() {\n    super({\n      openToSide: false,\n      openInPeek: false,\n      muteMessage: false\n    }, {\n      id: GoToDefinitionAction.id,\n      label: nls.localize('actions.goToDecl.label', \"Go to Definition\"),\n      alias: 'Go to Definition',\n      precondition: ContextKeyExpr.and(EditorContextKeys.hasDefinitionProvider, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: goToDefinitionKb,\n        weight: 100 /* EditorContrib */\n      },\n\n      contextMenuOpts: {\n        group: 'navigation',\n        order: 1.1\n      },\n      menuOpts: {\n        menuId: MenuId.MenubarGoMenu,\n        group: '4_symbol_nav',\n        order: 2,\n        title: nls.localize({\n          key: 'miGotoDefinition',\n          comment: ['&& denotes a mnemonic']\n        }, \"Go to &&Definition\")\n      }\n    });\n    CommandsRegistry.registerCommandAlias('editor.action.goToDeclaration', GoToDefinitionAction.id);\n  }\n}, _a.id = 'editor.action.revealDefinition', _a));\nregisterEditorAction((_b = class OpenDefinitionToSideAction extends DefinitionAction {\n  constructor() {\n    super({\n      openToSide: true,\n      openInPeek: false,\n      muteMessage: false\n    }, {\n      id: OpenDefinitionToSideAction.id,\n      label: nls.localize('actions.goToDeclToSide.label', \"Open Definition to the Side\"),\n      alias: 'Open Definition to the Side',\n      precondition: ContextKeyExpr.and(EditorContextKeys.hasDefinitionProvider, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, goToDefinitionKb),\n        weight: 100 /* EditorContrib */\n      }\n    });\n\n    CommandsRegistry.registerCommandAlias('editor.action.openDeclarationToTheSide', OpenDefinitionToSideAction.id);\n  }\n}, _b.id = 'editor.action.revealDefinitionAside', _b));\nregisterEditorAction((_c = class PeekDefinitionAction extends DefinitionAction {\n  constructor() {\n    super({\n      openToSide: false,\n      openInPeek: true,\n      muteMessage: false\n    }, {\n      id: PeekDefinitionAction.id,\n      label: nls.localize('actions.previewDecl.label', \"Peek Definition\"),\n      alias: 'Peek Definition',\n      precondition: ContextKeyExpr.and(EditorContextKeys.hasDefinitionProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: 512 /* Alt */ | 70 /* F12 */,\n        linux: {\n          primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 68 /* F10 */\n        },\n        weight: 100 /* EditorContrib */\n      },\n\n      contextMenuOpts: {\n        menuId: MenuId.EditorContextPeek,\n        group: 'peek',\n        order: 2\n      }\n    });\n    CommandsRegistry.registerCommandAlias('editor.action.previewDeclaration', PeekDefinitionAction.id);\n  }\n}, _c.id = 'editor.action.peekDefinition', _c));\n//#endregion\n//#region --- DECLARATION\nclass DeclarationAction extends SymbolNavigationAction {\n  _getLocationModel(model, position, token) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return new ReferencesModel(yield getDeclarationsAtPosition(model, position, token), nls.localize('decl.title', 'Declarations'));\n    });\n  }\n  _getNoResultFoundMessage(info) {\n    return info && info.word ? nls.localize('decl.noResultWord', \"No declaration found for '{0}'\", info.word) : nls.localize('decl.generic.noResults', \"No declaration found\");\n  }\n  _getAlternativeCommand(editor) {\n    return editor.getOption(45 /* gotoLocation */).alternativeDeclarationCommand;\n  }\n  _getGoToPreference(editor) {\n    return editor.getOption(45 /* gotoLocation */).multipleDeclarations;\n  }\n}\nregisterEditorAction((_d = class GoToDeclarationAction extends DeclarationAction {\n  constructor() {\n    super({\n      openToSide: false,\n      openInPeek: false,\n      muteMessage: false\n    }, {\n      id: GoToDeclarationAction.id,\n      label: nls.localize('actions.goToDeclaration.label', \"Go to Declaration\"),\n      alias: 'Go to Declaration',\n      precondition: ContextKeyExpr.and(EditorContextKeys.hasDeclarationProvider, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\n      contextMenuOpts: {\n        group: 'navigation',\n        order: 1.3\n      },\n      menuOpts: {\n        menuId: MenuId.MenubarGoMenu,\n        group: '4_symbol_nav',\n        order: 3,\n        title: nls.localize({\n          key: 'miGotoDeclaration',\n          comment: ['&& denotes a mnemonic']\n        }, \"Go to &&Declaration\")\n      }\n    });\n  }\n  _getNoResultFoundMessage(info) {\n    return info && info.word ? nls.localize('decl.noResultWord', \"No declaration found for '{0}'\", info.word) : nls.localize('decl.generic.noResults', \"No declaration found\");\n  }\n}, _d.id = 'editor.action.revealDeclaration', _d));\nregisterEditorAction(class PeekDeclarationAction extends DeclarationAction {\n  constructor() {\n    super({\n      openToSide: false,\n      openInPeek: true,\n      muteMessage: false\n    }, {\n      id: 'editor.action.peekDeclaration',\n      label: nls.localize('actions.peekDecl.label', \"Peek Declaration\"),\n      alias: 'Peek Declaration',\n      precondition: ContextKeyExpr.and(EditorContextKeys.hasDeclarationProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\n      contextMenuOpts: {\n        menuId: MenuId.EditorContextPeek,\n        group: 'peek',\n        order: 3\n      }\n    });\n  }\n});\n//#endregion\n//#region --- TYPE DEFINITION\nclass TypeDefinitionAction extends SymbolNavigationAction {\n  _getLocationModel(model, position, token) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return new ReferencesModel(yield getTypeDefinitionsAtPosition(model, position, token), nls.localize('typedef.title', 'Type Definitions'));\n    });\n  }\n  _getNoResultFoundMessage(info) {\n    return info && info.word ? nls.localize('goToTypeDefinition.noResultWord', \"No type definition found for '{0}'\", info.word) : nls.localize('goToTypeDefinition.generic.noResults', \"No type definition found\");\n  }\n  _getAlternativeCommand(editor) {\n    return editor.getOption(45 /* gotoLocation */).alternativeTypeDefinitionCommand;\n  }\n  _getGoToPreference(editor) {\n    return editor.getOption(45 /* gotoLocation */).multipleTypeDefinitions;\n  }\n}\nregisterEditorAction((_e = class GoToTypeDefinitionAction extends TypeDefinitionAction {\n  constructor() {\n    super({\n      openToSide: false,\n      openInPeek: false,\n      muteMessage: false\n    }, {\n      id: GoToTypeDefinitionAction.ID,\n      label: nls.localize('actions.goToTypeDefinition.label', \"Go to Type Definition\"),\n      alias: 'Go to Type Definition',\n      precondition: ContextKeyExpr.and(EditorContextKeys.hasTypeDefinitionProvider, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: 0,\n        weight: 100 /* EditorContrib */\n      },\n\n      contextMenuOpts: {\n        group: 'navigation',\n        order: 1.4\n      },\n      menuOpts: {\n        menuId: MenuId.MenubarGoMenu,\n        group: '4_symbol_nav',\n        order: 3,\n        title: nls.localize({\n          key: 'miGotoTypeDefinition',\n          comment: ['&& denotes a mnemonic']\n        }, \"Go to &&Type Definition\")\n      }\n    });\n  }\n}, _e.ID = 'editor.action.goToTypeDefinition', _e));\nregisterEditorAction((_f = class PeekTypeDefinitionAction extends TypeDefinitionAction {\n  constructor() {\n    super({\n      openToSide: false,\n      openInPeek: true,\n      muteMessage: false\n    }, {\n      id: PeekTypeDefinitionAction.ID,\n      label: nls.localize('actions.peekTypeDefinition.label', \"Peek Type Definition\"),\n      alias: 'Peek Type Definition',\n      precondition: ContextKeyExpr.and(EditorContextKeys.hasTypeDefinitionProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\n      contextMenuOpts: {\n        menuId: MenuId.EditorContextPeek,\n        group: 'peek',\n        order: 4\n      }\n    });\n  }\n}, _f.ID = 'editor.action.peekTypeDefinition', _f));\n//#endregion\n//#region --- IMPLEMENTATION\nclass ImplementationAction extends SymbolNavigationAction {\n  _getLocationModel(model, position, token) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return new ReferencesModel(yield getImplementationsAtPosition(model, position, token), nls.localize('impl.title', 'Implementations'));\n    });\n  }\n  _getNoResultFoundMessage(info) {\n    return info && info.word ? nls.localize('goToImplementation.noResultWord', \"No implementation found for '{0}'\", info.word) : nls.localize('goToImplementation.generic.noResults', \"No implementation found\");\n  }\n  _getAlternativeCommand(editor) {\n    return editor.getOption(45 /* gotoLocation */).alternativeImplementationCommand;\n  }\n  _getGoToPreference(editor) {\n    return editor.getOption(45 /* gotoLocation */).multipleImplementations;\n  }\n}\nregisterEditorAction((_g = class GoToImplementationAction extends ImplementationAction {\n  constructor() {\n    super({\n      openToSide: false,\n      openInPeek: false,\n      muteMessage: false\n    }, {\n      id: GoToImplementationAction.ID,\n      label: nls.localize('actions.goToImplementation.label', \"Go to Implementations\"),\n      alias: 'Go to Implementations',\n      precondition: ContextKeyExpr.and(EditorContextKeys.hasImplementationProvider, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: 2048 /* CtrlCmd */ | 70 /* F12 */,\n        weight: 100 /* EditorContrib */\n      },\n\n      menuOpts: {\n        menuId: MenuId.MenubarGoMenu,\n        group: '4_symbol_nav',\n        order: 4,\n        title: nls.localize({\n          key: 'miGotoImplementation',\n          comment: ['&& denotes a mnemonic']\n        }, \"Go to &&Implementations\")\n      },\n      contextMenuOpts: {\n        group: 'navigation',\n        order: 1.45\n      }\n    });\n  }\n}, _g.ID = 'editor.action.goToImplementation', _g));\nregisterEditorAction((_h = class PeekImplementationAction extends ImplementationAction {\n  constructor() {\n    super({\n      openToSide: false,\n      openInPeek: true,\n      muteMessage: false\n    }, {\n      id: PeekImplementationAction.ID,\n      label: nls.localize('actions.peekImplementation.label', \"Peek Implementations\"),\n      alias: 'Peek Implementations',\n      precondition: ContextKeyExpr.and(EditorContextKeys.hasImplementationProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 70 /* F12 */,\n        weight: 100 /* EditorContrib */\n      },\n\n      contextMenuOpts: {\n        menuId: MenuId.EditorContextPeek,\n        group: 'peek',\n        order: 5\n      }\n    });\n  }\n}, _h.ID = 'editor.action.peekImplementation', _h));\n//#endregion\n//#region --- REFERENCES\nclass ReferencesAction extends SymbolNavigationAction {\n  _getNoResultFoundMessage(info) {\n    return info ? nls.localize('references.no', \"No references found for '{0}'\", info.word) : nls.localize('references.noGeneric', \"No references found\");\n  }\n  _getAlternativeCommand(editor) {\n    return editor.getOption(45 /* gotoLocation */).alternativeReferenceCommand;\n  }\n  _getGoToPreference(editor) {\n    return editor.getOption(45 /* gotoLocation */).multipleReferences;\n  }\n}\nregisterEditorAction(class GoToReferencesAction extends ReferencesAction {\n  constructor() {\n    super({\n      openToSide: false,\n      openInPeek: false,\n      muteMessage: false\n    }, {\n      id: 'editor.action.goToReferences',\n      label: nls.localize('goToReferences.label', \"Go to References\"),\n      alias: 'Go to References',\n      precondition: ContextKeyExpr.and(EditorContextKeys.hasReferenceProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: 1024 /* Shift */ | 70 /* F12 */,\n        weight: 100 /* EditorContrib */\n      },\n\n      contextMenuOpts: {\n        group: 'navigation',\n        order: 1.45\n      },\n      menuOpts: {\n        menuId: MenuId.MenubarGoMenu,\n        group: '4_symbol_nav',\n        order: 5,\n        title: nls.localize({\n          key: 'miGotoReference',\n          comment: ['&& denotes a mnemonic']\n        }, \"Go to &&References\")\n      }\n    });\n  }\n  _getLocationModel(model, position, token) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return new ReferencesModel(yield getReferencesAtPosition(model, position, true, token), nls.localize('ref.title', 'References'));\n    });\n  }\n});\nregisterEditorAction(class PeekReferencesAction extends ReferencesAction {\n  constructor() {\n    super({\n      openToSide: false,\n      openInPeek: true,\n      muteMessage: false\n    }, {\n      id: 'editor.action.referenceSearch.trigger',\n      label: nls.localize('references.action.label', \"Peek References\"),\n      alias: 'Peek References',\n      precondition: ContextKeyExpr.and(EditorContextKeys.hasReferenceProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\n      contextMenuOpts: {\n        menuId: MenuId.EditorContextPeek,\n        group: 'peek',\n        order: 6\n      }\n    });\n  }\n  _getLocationModel(model, position, token) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return new ReferencesModel(yield getReferencesAtPosition(model, position, false, token), nls.localize('ref.title', 'References'));\n    });\n  }\n});\n//#endregion\n//#region --- GENERIC goto symbols command\nclass GenericGoToLocationAction extends SymbolNavigationAction {\n  constructor(config, _references, _gotoMultipleBehaviour) {\n    super(config, {\n      id: 'editor.action.goToLocation',\n      label: nls.localize('label.generic', \"Go To Any Symbol\"),\n      alias: 'Go To Any Symbol',\n      precondition: ContextKeyExpr.and(PeekContext.notInPeekEditor, EditorContextKeys.isInWalkThroughSnippet.toNegated())\n    });\n    this._references = _references;\n    this._gotoMultipleBehaviour = _gotoMultipleBehaviour;\n  }\n  _getLocationModel(_model, _position, _token) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return new ReferencesModel(this._references, nls.localize('generic.title', 'Locations'));\n    });\n  }\n  _getNoResultFoundMessage(info) {\n    return info && nls.localize('generic.noResult', \"No results for '{0}'\", info.word) || '';\n  }\n  _getGoToPreference(editor) {\n    var _a;\n    return (_a = this._gotoMultipleBehaviour) !== null && _a !== void 0 ? _a : editor.getOption(45 /* gotoLocation */).multipleReferences;\n  }\n  _getAlternativeCommand() {\n    return '';\n  }\n}\nCommandsRegistry.registerCommand({\n  id: 'editor.action.goToLocations',\n  description: {\n    description: 'Go to locations from a position in a file',\n    args: [{\n      name: 'uri',\n      description: 'The text document in which to start',\n      constraint: URI\n    }, {\n      name: 'position',\n      description: 'The position at which to start',\n      constraint: corePosition.Position.isIPosition\n    }, {\n      name: 'locations',\n      description: 'An array of locations.',\n      constraint: Array\n    }, {\n      name: 'multiple',\n      description: 'Define what to do when having multiple results, either `peek`, `gotoAndPeek`, or `goto'\n    }, {\n      name: 'noResultsMessage',\n      description: 'Human readable message that shows when locations is empty.'\n    }]\n  },\n  handler: (accessor, resource, position, references, multiple, noResultsMessage, openInPeek) => __awaiter(void 0, void 0, void 0, function* () {\n    assertType(URI.isUri(resource));\n    assertType(corePosition.Position.isIPosition(position));\n    assertType(Array.isArray(references));\n    assertType(typeof multiple === 'undefined' || typeof multiple === 'string');\n    assertType(typeof openInPeek === 'undefined' || typeof openInPeek === 'boolean');\n    const editorService = accessor.get(ICodeEditorService);\n    const editor = yield editorService.openCodeEditor({\n      resource\n    }, editorService.getFocusedCodeEditor());\n    if (isCodeEditor(editor)) {\n      editor.setPosition(position);\n      editor.revealPositionInCenterIfOutsideViewport(position, 0 /* Smooth */);\n      return editor.invokeWithinContext(accessor => {\n        const command = new class extends GenericGoToLocationAction {\n          _getNoResultFoundMessage(info) {\n            return noResultsMessage || super._getNoResultFoundMessage(info);\n          }\n        }({\n          muteMessage: !Boolean(noResultsMessage),\n          openInPeek: Boolean(openInPeek),\n          openToSide: false\n        }, references, multiple);\n        accessor.get(IInstantiationService).invokeFunction(command.run.bind(command), editor);\n      });\n    }\n  })\n});\nCommandsRegistry.registerCommand({\n  id: 'editor.action.peekLocations',\n  description: {\n    description: 'Peek locations from a position in a file',\n    args: [{\n      name: 'uri',\n      description: 'The text document in which to start',\n      constraint: URI\n    }, {\n      name: 'position',\n      description: 'The position at which to start',\n      constraint: corePosition.Position.isIPosition\n    }, {\n      name: 'locations',\n      description: 'An array of locations.',\n      constraint: Array\n    }, {\n      name: 'multiple',\n      description: 'Define what to do when having multiple results, either `peek`, `gotoAndPeek`, or `goto'\n    }]\n  },\n  handler: (accessor, resource, position, references, multiple) => __awaiter(void 0, void 0, void 0, function* () {\n    accessor.get(ICommandService).executeCommand('editor.action.goToLocations', resource, position, references, multiple, undefined, true);\n  })\n});\n//#endregion\n//#region --- REFERENCE search special commands\nCommandsRegistry.registerCommand({\n  id: 'editor.action.findReferences',\n  handler: (accessor, resource, position) => {\n    assertType(URI.isUri(resource));\n    assertType(corePosition.Position.isIPosition(position));\n    const codeEditorService = accessor.get(ICodeEditorService);\n    return codeEditorService.openCodeEditor({\n      resource\n    }, codeEditorService.getFocusedCodeEditor()).then(control => {\n      if (!isCodeEditor(control) || !control.hasModel()) {\n        return undefined;\n      }\n      const controller = ReferencesController.get(control);\n      if (!controller) {\n        return undefined;\n      }\n      const references = createCancelablePromise(token => getReferencesAtPosition(control.getModel(), corePosition.Position.lift(position), false, token).then(references => new ReferencesModel(references, nls.localize('ref.title', 'References'))));\n      const range = new Range(position.lineNumber, position.column, position.lineNumber, position.column);\n      return Promise.resolve(controller.toggleWidget(range, references, false));\n    });\n  }\n});\n// use NEW command\nCommandsRegistry.registerCommandAlias('editor.action.showReferences', 'editor.action.peekLocations');\n//#endregion","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","_a","_b","_c","_d","_e","_f","_g","_h","alert","createCancelablePromise","raceCancellation","KeyChord","isWeb","isCodeEditor","EditorAction","registerEditorAction","ICodeEditorService","corePosition","Range","EditorContextKeys","isLocationLink","MessageController","PeekContext","ReferencesController","ReferencesModel","nls","MenuId","MenuRegistry","ContextKeyExpr","INotificationService","IEditorProgressService","getDefinitionsAtPosition","getImplementationsAtPosition","getTypeDefinitionsAtPosition","getDeclarationsAtPosition","getReferencesAtPosition","CommandsRegistry","ICommandService","EditorStateCancellationTokenSource","ISymbolNavigationService","isStandalone","URI","IInstantiationService","assertType","EmbeddedCodeEditorWidget","appendMenuItem","EditorContext","submenu","EditorContextPeek","title","localize","group","order","SymbolNavigationAction","constructor","configuration","opts","_configuration","run","accessor","editor","hasModel","undefined","notificationService","get","editorService","progressService","symbolNavService","model","getModel","pos","getPosition","cts","promise","_getLocationModel","token","references","isCancellationRequested","ariaMessage","altAction","referenceAt","uri","altActionId","_getAlternativeCommand","id","getAction","referenceCount","length","muteMessage","info","getWordAtPosition","showMessage","_getNoResultFoundMessage","_onResult","err","error","finally","dispose","showWhile","gotoLocation","_getGoToPreference","openInPeek","_openInPeek","firstReference","peek","targetEditor","_openReference","openToSide","put","reference","sideBySide","highlight","range","targetSelectionRange","openCodeEditor","resource","options","selection","collapseToStart","selectionRevealType","modelNow","ids","deltaDecorations","className","setTimeout","target","controller","toggleWidget","getSelection","_","DefinitionAction","position","word","getOption","alternativeDefinitionCommand","multipleDefinitions","goToDefinitionKb","GoToDefinitionAction","label","alias","precondition","and","hasDefinitionProvider","isInWalkThroughSnippet","toNegated","kbOpts","kbExpr","editorTextFocus","primary","weight","contextMenuOpts","menuOpts","menuId","MenubarGoMenu","key","comment","registerCommandAlias","OpenDefinitionToSideAction","PeekDefinitionAction","notInPeekEditor","linux","DeclarationAction","alternativeDeclarationCommand","multipleDeclarations","GoToDeclarationAction","hasDeclarationProvider","PeekDeclarationAction","TypeDefinitionAction","alternativeTypeDefinitionCommand","multipleTypeDefinitions","GoToTypeDefinitionAction","ID","hasTypeDefinitionProvider","PeekTypeDefinitionAction","ImplementationAction","alternativeImplementationCommand","multipleImplementations","GoToImplementationAction","hasImplementationProvider","PeekImplementationAction","ReferencesAction","alternativeReferenceCommand","multipleReferences","GoToReferencesAction","hasReferenceProvider","PeekReferencesAction","GenericGoToLocationAction","config","_references","_gotoMultipleBehaviour","_model","_position","_token","registerCommand","description","args","name","constraint","Position","isIPosition","Array","handler","multiple","noResultsMessage","isUri","isArray","getFocusedCodeEditor","setPosition","revealPositionInCenterIfOutsideViewport","invokeWithinContext","command","Boolean","invokeFunction","bind","executeCommand","codeEditorService","control","lift","lineNumber","column"],"sources":["C:/Users/Administrator/Desktop/sqllineage-master/sqllineagejs/node_modules/monaco-editor/esm/vs/editor/contrib/gotoSymbol/goToCommands.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar _a, _b, _c, _d, _e, _f, _g, _h;\r\nimport { alert } from '../../../base/browser/ui/aria/aria.js';\r\nimport { createCancelablePromise, raceCancellation } from '../../../base/common/async.js';\r\nimport { KeyChord } from '../../../base/common/keyCodes.js';\r\nimport { isWeb } from '../../../base/common/platform.js';\r\nimport { isCodeEditor } from '../../browser/editorBrowser.js';\r\nimport { EditorAction, registerEditorAction } from '../../browser/editorExtensions.js';\r\nimport { ICodeEditorService } from '../../browser/services/codeEditorService.js';\r\nimport * as corePosition from '../../common/core/position.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { isLocationLink } from '../../common/modes.js';\r\nimport { MessageController } from '../message/messageController.js';\r\nimport { PeekContext } from '../peekView/peekView.js';\r\nimport { ReferencesController } from './peek/referencesController.js';\r\nimport { ReferencesModel } from './referencesModel.js';\r\nimport * as nls from '../../../nls.js';\r\nimport { MenuId, MenuRegistry } from '../../../platform/actions/common/actions.js';\r\nimport { ContextKeyExpr } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { INotificationService } from '../../../platform/notification/common/notification.js';\r\nimport { IEditorProgressService } from '../../../platform/progress/common/progress.js';\r\nimport { getDefinitionsAtPosition, getImplementationsAtPosition, getTypeDefinitionsAtPosition, getDeclarationsAtPosition, getReferencesAtPosition } from './goToSymbol.js';\r\nimport { CommandsRegistry, ICommandService } from '../../../platform/commands/common/commands.js';\r\nimport { EditorStateCancellationTokenSource } from '../../browser/core/editorState.js';\r\nimport { ISymbolNavigationService } from './symbolNavigation.js';\r\nimport { isStandalone } from '../../../base/browser/browser.js';\r\nimport { URI } from '../../../base/common/uri.js';\r\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\r\nimport { assertType } from '../../../base/common/types.js';\r\nimport { EmbeddedCodeEditorWidget } from '../../browser/widget/embeddedCodeEditorWidget.js';\r\nMenuRegistry.appendMenuItem(MenuId.EditorContext, {\r\n    submenu: MenuId.EditorContextPeek,\r\n    title: nls.localize('peek.submenu', \"Peek\"),\r\n    group: 'navigation',\r\n    order: 100\r\n});\r\nclass SymbolNavigationAction extends EditorAction {\r\n    constructor(configuration, opts) {\r\n        super(opts);\r\n        this._configuration = configuration;\r\n    }\r\n    run(accessor, editor) {\r\n        if (!editor.hasModel()) {\r\n            return Promise.resolve(undefined);\r\n        }\r\n        const notificationService = accessor.get(INotificationService);\r\n        const editorService = accessor.get(ICodeEditorService);\r\n        const progressService = accessor.get(IEditorProgressService);\r\n        const symbolNavService = accessor.get(ISymbolNavigationService);\r\n        const model = editor.getModel();\r\n        const pos = editor.getPosition();\r\n        const cts = new EditorStateCancellationTokenSource(editor, 1 /* Value */ | 4 /* Position */);\r\n        const promise = raceCancellation(this._getLocationModel(model, pos, cts.token), cts.token).then((references) => __awaiter(this, void 0, void 0, function* () {\r\n            if (!references || cts.token.isCancellationRequested) {\r\n                return;\r\n            }\r\n            alert(references.ariaMessage);\r\n            let altAction;\r\n            if (references.referenceAt(model.uri, pos)) {\r\n                const altActionId = this._getAlternativeCommand(editor);\r\n                if (altActionId !== this.id) {\r\n                    altAction = editor.getAction(altActionId);\r\n                }\r\n            }\r\n            const referenceCount = references.references.length;\r\n            if (referenceCount === 0) {\r\n                // no result -> show message\r\n                if (!this._configuration.muteMessage) {\r\n                    const info = model.getWordAtPosition(pos);\r\n                    MessageController.get(editor).showMessage(this._getNoResultFoundMessage(info), pos);\r\n                }\r\n            }\r\n            else if (referenceCount === 1 && altAction) {\r\n                // already at the only result, run alternative\r\n                altAction.run();\r\n            }\r\n            else {\r\n                // normal results handling\r\n                return this._onResult(editorService, symbolNavService, editor, references);\r\n            }\r\n        }), (err) => {\r\n            // report an error\r\n            notificationService.error(err);\r\n        }).finally(() => {\r\n            cts.dispose();\r\n        });\r\n        progressService.showWhile(promise, 250);\r\n        return promise;\r\n    }\r\n    _onResult(editorService, symbolNavService, editor, model) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const gotoLocation = this._getGoToPreference(editor);\r\n            if (!(editor instanceof EmbeddedCodeEditorWidget) && (this._configuration.openInPeek || (gotoLocation === 'peek' && model.references.length > 1))) {\r\n                this._openInPeek(editor, model);\r\n            }\r\n            else {\r\n                const next = model.firstReference();\r\n                const peek = model.references.length > 1 && gotoLocation === 'gotoAndPeek';\r\n                const targetEditor = yield this._openReference(editor, editorService, next, this._configuration.openToSide, !peek);\r\n                if (peek && targetEditor) {\r\n                    this._openInPeek(targetEditor, model);\r\n                }\r\n                else {\r\n                    model.dispose();\r\n                }\r\n                // keep remaining locations around when using\r\n                // 'goto'-mode\r\n                if (gotoLocation === 'goto') {\r\n                    symbolNavService.put(next);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    _openReference(editor, editorService, reference, sideBySide, highlight) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            // range is the target-selection-range when we have one\r\n            // and the fallback is the 'full' range\r\n            let range = undefined;\r\n            if (isLocationLink(reference)) {\r\n                range = reference.targetSelectionRange;\r\n            }\r\n            if (!range) {\r\n                range = reference.range;\r\n            }\r\n            if (!range) {\r\n                return undefined;\r\n            }\r\n            const targetEditor = yield editorService.openCodeEditor({\r\n                resource: reference.uri,\r\n                options: {\r\n                    selection: Range.collapseToStart(range),\r\n                    selectionRevealType: 3 /* NearTopIfOutsideViewport */\r\n                }\r\n            }, editor, sideBySide);\r\n            if (!targetEditor) {\r\n                return undefined;\r\n            }\r\n            if (highlight) {\r\n                const modelNow = targetEditor.getModel();\r\n                const ids = targetEditor.deltaDecorations([], [{ range, options: { className: 'symbolHighlight' } }]);\r\n                setTimeout(() => {\r\n                    if (targetEditor.getModel() === modelNow) {\r\n                        targetEditor.deltaDecorations(ids, []);\r\n                    }\r\n                }, 350);\r\n            }\r\n            return targetEditor;\r\n        });\r\n    }\r\n    _openInPeek(target, model) {\r\n        let controller = ReferencesController.get(target);\r\n        if (controller && target.hasModel()) {\r\n            controller.toggleWidget(target.getSelection(), createCancelablePromise(_ => Promise.resolve(model)), this._configuration.openInPeek);\r\n        }\r\n        else {\r\n            model.dispose();\r\n        }\r\n    }\r\n}\r\n//#region --- DEFINITION\r\nexport class DefinitionAction extends SymbolNavigationAction {\r\n    _getLocationModel(model, position, token) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return new ReferencesModel(yield getDefinitionsAtPosition(model, position, token), nls.localize('def.title', 'Definitions'));\r\n        });\r\n    }\r\n    _getNoResultFoundMessage(info) {\r\n        return info && info.word\r\n            ? nls.localize('noResultWord', \"No definition found for '{0}'\", info.word)\r\n            : nls.localize('generic.noResults', \"No definition found\");\r\n    }\r\n    _getAlternativeCommand(editor) {\r\n        return editor.getOption(45 /* gotoLocation */).alternativeDefinitionCommand;\r\n    }\r\n    _getGoToPreference(editor) {\r\n        return editor.getOption(45 /* gotoLocation */).multipleDefinitions;\r\n    }\r\n}\r\nconst goToDefinitionKb = isWeb && !isStandalone\r\n    ? 2048 /* CtrlCmd */ | 70 /* F12 */\r\n    : 70 /* F12 */;\r\nregisterEditorAction((_a = class GoToDefinitionAction extends DefinitionAction {\r\n        constructor() {\r\n            super({\r\n                openToSide: false,\r\n                openInPeek: false,\r\n                muteMessage: false\r\n            }, {\r\n                id: GoToDefinitionAction.id,\r\n                label: nls.localize('actions.goToDecl.label', \"Go to Definition\"),\r\n                alias: 'Go to Definition',\r\n                precondition: ContextKeyExpr.and(EditorContextKeys.hasDefinitionProvider, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\r\n                kbOpts: {\r\n                    kbExpr: EditorContextKeys.editorTextFocus,\r\n                    primary: goToDefinitionKb,\r\n                    weight: 100 /* EditorContrib */\r\n                },\r\n                contextMenuOpts: {\r\n                    group: 'navigation',\r\n                    order: 1.1\r\n                },\r\n                menuOpts: {\r\n                    menuId: MenuId.MenubarGoMenu,\r\n                    group: '4_symbol_nav',\r\n                    order: 2,\r\n                    title: nls.localize({ key: 'miGotoDefinition', comment: ['&& denotes a mnemonic'] }, \"Go to &&Definition\")\r\n                }\r\n            });\r\n            CommandsRegistry.registerCommandAlias('editor.action.goToDeclaration', GoToDefinitionAction.id);\r\n        }\r\n    },\r\n    _a.id = 'editor.action.revealDefinition',\r\n    _a));\r\nregisterEditorAction((_b = class OpenDefinitionToSideAction extends DefinitionAction {\r\n        constructor() {\r\n            super({\r\n                openToSide: true,\r\n                openInPeek: false,\r\n                muteMessage: false\r\n            }, {\r\n                id: OpenDefinitionToSideAction.id,\r\n                label: nls.localize('actions.goToDeclToSide.label', \"Open Definition to the Side\"),\r\n                alias: 'Open Definition to the Side',\r\n                precondition: ContextKeyExpr.and(EditorContextKeys.hasDefinitionProvider, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\r\n                kbOpts: {\r\n                    kbExpr: EditorContextKeys.editorTextFocus,\r\n                    primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, goToDefinitionKb),\r\n                    weight: 100 /* EditorContrib */\r\n                }\r\n            });\r\n            CommandsRegistry.registerCommandAlias('editor.action.openDeclarationToTheSide', OpenDefinitionToSideAction.id);\r\n        }\r\n    },\r\n    _b.id = 'editor.action.revealDefinitionAside',\r\n    _b));\r\nregisterEditorAction((_c = class PeekDefinitionAction extends DefinitionAction {\r\n        constructor() {\r\n            super({\r\n                openToSide: false,\r\n                openInPeek: true,\r\n                muteMessage: false\r\n            }, {\r\n                id: PeekDefinitionAction.id,\r\n                label: nls.localize('actions.previewDecl.label', \"Peek Definition\"),\r\n                alias: 'Peek Definition',\r\n                precondition: ContextKeyExpr.and(EditorContextKeys.hasDefinitionProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\r\n                kbOpts: {\r\n                    kbExpr: EditorContextKeys.editorTextFocus,\r\n                    primary: 512 /* Alt */ | 70 /* F12 */,\r\n                    linux: { primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 68 /* F10 */ },\r\n                    weight: 100 /* EditorContrib */\r\n                },\r\n                contextMenuOpts: {\r\n                    menuId: MenuId.EditorContextPeek,\r\n                    group: 'peek',\r\n                    order: 2\r\n                }\r\n            });\r\n            CommandsRegistry.registerCommandAlias('editor.action.previewDeclaration', PeekDefinitionAction.id);\r\n        }\r\n    },\r\n    _c.id = 'editor.action.peekDefinition',\r\n    _c));\r\n//#endregion\r\n//#region --- DECLARATION\r\nclass DeclarationAction extends SymbolNavigationAction {\r\n    _getLocationModel(model, position, token) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return new ReferencesModel(yield getDeclarationsAtPosition(model, position, token), nls.localize('decl.title', 'Declarations'));\r\n        });\r\n    }\r\n    _getNoResultFoundMessage(info) {\r\n        return info && info.word\r\n            ? nls.localize('decl.noResultWord', \"No declaration found for '{0}'\", info.word)\r\n            : nls.localize('decl.generic.noResults', \"No declaration found\");\r\n    }\r\n    _getAlternativeCommand(editor) {\r\n        return editor.getOption(45 /* gotoLocation */).alternativeDeclarationCommand;\r\n    }\r\n    _getGoToPreference(editor) {\r\n        return editor.getOption(45 /* gotoLocation */).multipleDeclarations;\r\n    }\r\n}\r\nregisterEditorAction((_d = class GoToDeclarationAction extends DeclarationAction {\r\n        constructor() {\r\n            super({\r\n                openToSide: false,\r\n                openInPeek: false,\r\n                muteMessage: false\r\n            }, {\r\n                id: GoToDeclarationAction.id,\r\n                label: nls.localize('actions.goToDeclaration.label', \"Go to Declaration\"),\r\n                alias: 'Go to Declaration',\r\n                precondition: ContextKeyExpr.and(EditorContextKeys.hasDeclarationProvider, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\r\n                contextMenuOpts: {\r\n                    group: 'navigation',\r\n                    order: 1.3\r\n                },\r\n                menuOpts: {\r\n                    menuId: MenuId.MenubarGoMenu,\r\n                    group: '4_symbol_nav',\r\n                    order: 3,\r\n                    title: nls.localize({ key: 'miGotoDeclaration', comment: ['&& denotes a mnemonic'] }, \"Go to &&Declaration\")\r\n                },\r\n            });\r\n        }\r\n        _getNoResultFoundMessage(info) {\r\n            return info && info.word\r\n                ? nls.localize('decl.noResultWord', \"No declaration found for '{0}'\", info.word)\r\n                : nls.localize('decl.generic.noResults', \"No declaration found\");\r\n        }\r\n    },\r\n    _d.id = 'editor.action.revealDeclaration',\r\n    _d));\r\nregisterEditorAction(class PeekDeclarationAction extends DeclarationAction {\r\n    constructor() {\r\n        super({\r\n            openToSide: false,\r\n            openInPeek: true,\r\n            muteMessage: false\r\n        }, {\r\n            id: 'editor.action.peekDeclaration',\r\n            label: nls.localize('actions.peekDecl.label', \"Peek Declaration\"),\r\n            alias: 'Peek Declaration',\r\n            precondition: ContextKeyExpr.and(EditorContextKeys.hasDeclarationProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\r\n            contextMenuOpts: {\r\n                menuId: MenuId.EditorContextPeek,\r\n                group: 'peek',\r\n                order: 3\r\n            }\r\n        });\r\n    }\r\n});\r\n//#endregion\r\n//#region --- TYPE DEFINITION\r\nclass TypeDefinitionAction extends SymbolNavigationAction {\r\n    _getLocationModel(model, position, token) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return new ReferencesModel(yield getTypeDefinitionsAtPosition(model, position, token), nls.localize('typedef.title', 'Type Definitions'));\r\n        });\r\n    }\r\n    _getNoResultFoundMessage(info) {\r\n        return info && info.word\r\n            ? nls.localize('goToTypeDefinition.noResultWord', \"No type definition found for '{0}'\", info.word)\r\n            : nls.localize('goToTypeDefinition.generic.noResults', \"No type definition found\");\r\n    }\r\n    _getAlternativeCommand(editor) {\r\n        return editor.getOption(45 /* gotoLocation */).alternativeTypeDefinitionCommand;\r\n    }\r\n    _getGoToPreference(editor) {\r\n        return editor.getOption(45 /* gotoLocation */).multipleTypeDefinitions;\r\n    }\r\n}\r\nregisterEditorAction((_e = class GoToTypeDefinitionAction extends TypeDefinitionAction {\r\n        constructor() {\r\n            super({\r\n                openToSide: false,\r\n                openInPeek: false,\r\n                muteMessage: false\r\n            }, {\r\n                id: GoToTypeDefinitionAction.ID,\r\n                label: nls.localize('actions.goToTypeDefinition.label', \"Go to Type Definition\"),\r\n                alias: 'Go to Type Definition',\r\n                precondition: ContextKeyExpr.and(EditorContextKeys.hasTypeDefinitionProvider, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\r\n                kbOpts: {\r\n                    kbExpr: EditorContextKeys.editorTextFocus,\r\n                    primary: 0,\r\n                    weight: 100 /* EditorContrib */\r\n                },\r\n                contextMenuOpts: {\r\n                    group: 'navigation',\r\n                    order: 1.4\r\n                },\r\n                menuOpts: {\r\n                    menuId: MenuId.MenubarGoMenu,\r\n                    group: '4_symbol_nav',\r\n                    order: 3,\r\n                    title: nls.localize({ key: 'miGotoTypeDefinition', comment: ['&& denotes a mnemonic'] }, \"Go to &&Type Definition\")\r\n                }\r\n            });\r\n        }\r\n    },\r\n    _e.ID = 'editor.action.goToTypeDefinition',\r\n    _e));\r\nregisterEditorAction((_f = class PeekTypeDefinitionAction extends TypeDefinitionAction {\r\n        constructor() {\r\n            super({\r\n                openToSide: false,\r\n                openInPeek: true,\r\n                muteMessage: false\r\n            }, {\r\n                id: PeekTypeDefinitionAction.ID,\r\n                label: nls.localize('actions.peekTypeDefinition.label', \"Peek Type Definition\"),\r\n                alias: 'Peek Type Definition',\r\n                precondition: ContextKeyExpr.and(EditorContextKeys.hasTypeDefinitionProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\r\n                contextMenuOpts: {\r\n                    menuId: MenuId.EditorContextPeek,\r\n                    group: 'peek',\r\n                    order: 4\r\n                }\r\n            });\r\n        }\r\n    },\r\n    _f.ID = 'editor.action.peekTypeDefinition',\r\n    _f));\r\n//#endregion\r\n//#region --- IMPLEMENTATION\r\nclass ImplementationAction extends SymbolNavigationAction {\r\n    _getLocationModel(model, position, token) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return new ReferencesModel(yield getImplementationsAtPosition(model, position, token), nls.localize('impl.title', 'Implementations'));\r\n        });\r\n    }\r\n    _getNoResultFoundMessage(info) {\r\n        return info && info.word\r\n            ? nls.localize('goToImplementation.noResultWord', \"No implementation found for '{0}'\", info.word)\r\n            : nls.localize('goToImplementation.generic.noResults', \"No implementation found\");\r\n    }\r\n    _getAlternativeCommand(editor) {\r\n        return editor.getOption(45 /* gotoLocation */).alternativeImplementationCommand;\r\n    }\r\n    _getGoToPreference(editor) {\r\n        return editor.getOption(45 /* gotoLocation */).multipleImplementations;\r\n    }\r\n}\r\nregisterEditorAction((_g = class GoToImplementationAction extends ImplementationAction {\r\n        constructor() {\r\n            super({\r\n                openToSide: false,\r\n                openInPeek: false,\r\n                muteMessage: false\r\n            }, {\r\n                id: GoToImplementationAction.ID,\r\n                label: nls.localize('actions.goToImplementation.label', \"Go to Implementations\"),\r\n                alias: 'Go to Implementations',\r\n                precondition: ContextKeyExpr.and(EditorContextKeys.hasImplementationProvider, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\r\n                kbOpts: {\r\n                    kbExpr: EditorContextKeys.editorTextFocus,\r\n                    primary: 2048 /* CtrlCmd */ | 70 /* F12 */,\r\n                    weight: 100 /* EditorContrib */\r\n                },\r\n                menuOpts: {\r\n                    menuId: MenuId.MenubarGoMenu,\r\n                    group: '4_symbol_nav',\r\n                    order: 4,\r\n                    title: nls.localize({ key: 'miGotoImplementation', comment: ['&& denotes a mnemonic'] }, \"Go to &&Implementations\")\r\n                },\r\n                contextMenuOpts: {\r\n                    group: 'navigation',\r\n                    order: 1.45\r\n                }\r\n            });\r\n        }\r\n    },\r\n    _g.ID = 'editor.action.goToImplementation',\r\n    _g));\r\nregisterEditorAction((_h = class PeekImplementationAction extends ImplementationAction {\r\n        constructor() {\r\n            super({\r\n                openToSide: false,\r\n                openInPeek: true,\r\n                muteMessage: false\r\n            }, {\r\n                id: PeekImplementationAction.ID,\r\n                label: nls.localize('actions.peekImplementation.label', \"Peek Implementations\"),\r\n                alias: 'Peek Implementations',\r\n                precondition: ContextKeyExpr.and(EditorContextKeys.hasImplementationProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\r\n                kbOpts: {\r\n                    kbExpr: EditorContextKeys.editorTextFocus,\r\n                    primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 70 /* F12 */,\r\n                    weight: 100 /* EditorContrib */\r\n                },\r\n                contextMenuOpts: {\r\n                    menuId: MenuId.EditorContextPeek,\r\n                    group: 'peek',\r\n                    order: 5\r\n                }\r\n            });\r\n        }\r\n    },\r\n    _h.ID = 'editor.action.peekImplementation',\r\n    _h));\r\n//#endregion\r\n//#region --- REFERENCES\r\nclass ReferencesAction extends SymbolNavigationAction {\r\n    _getNoResultFoundMessage(info) {\r\n        return info\r\n            ? nls.localize('references.no', \"No references found for '{0}'\", info.word)\r\n            : nls.localize('references.noGeneric', \"No references found\");\r\n    }\r\n    _getAlternativeCommand(editor) {\r\n        return editor.getOption(45 /* gotoLocation */).alternativeReferenceCommand;\r\n    }\r\n    _getGoToPreference(editor) {\r\n        return editor.getOption(45 /* gotoLocation */).multipleReferences;\r\n    }\r\n}\r\nregisterEditorAction(class GoToReferencesAction extends ReferencesAction {\r\n    constructor() {\r\n        super({\r\n            openToSide: false,\r\n            openInPeek: false,\r\n            muteMessage: false\r\n        }, {\r\n            id: 'editor.action.goToReferences',\r\n            label: nls.localize('goToReferences.label', \"Go to References\"),\r\n            alias: 'Go to References',\r\n            precondition: ContextKeyExpr.and(EditorContextKeys.hasReferenceProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 1024 /* Shift */ | 70 /* F12 */,\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            contextMenuOpts: {\r\n                group: 'navigation',\r\n                order: 1.45\r\n            },\r\n            menuOpts: {\r\n                menuId: MenuId.MenubarGoMenu,\r\n                group: '4_symbol_nav',\r\n                order: 5,\r\n                title: nls.localize({ key: 'miGotoReference', comment: ['&& denotes a mnemonic'] }, \"Go to &&References\")\r\n            },\r\n        });\r\n    }\r\n    _getLocationModel(model, position, token) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return new ReferencesModel(yield getReferencesAtPosition(model, position, true, token), nls.localize('ref.title', 'References'));\r\n        });\r\n    }\r\n});\r\nregisterEditorAction(class PeekReferencesAction extends ReferencesAction {\r\n    constructor() {\r\n        super({\r\n            openToSide: false,\r\n            openInPeek: true,\r\n            muteMessage: false\r\n        }, {\r\n            id: 'editor.action.referenceSearch.trigger',\r\n            label: nls.localize('references.action.label', \"Peek References\"),\r\n            alias: 'Peek References',\r\n            precondition: ContextKeyExpr.and(EditorContextKeys.hasReferenceProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\r\n            contextMenuOpts: {\r\n                menuId: MenuId.EditorContextPeek,\r\n                group: 'peek',\r\n                order: 6\r\n            }\r\n        });\r\n    }\r\n    _getLocationModel(model, position, token) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return new ReferencesModel(yield getReferencesAtPosition(model, position, false, token), nls.localize('ref.title', 'References'));\r\n        });\r\n    }\r\n});\r\n//#endregion\r\n//#region --- GENERIC goto symbols command\r\nclass GenericGoToLocationAction extends SymbolNavigationAction {\r\n    constructor(config, _references, _gotoMultipleBehaviour) {\r\n        super(config, {\r\n            id: 'editor.action.goToLocation',\r\n            label: nls.localize('label.generic', \"Go To Any Symbol\"),\r\n            alias: 'Go To Any Symbol',\r\n            precondition: ContextKeyExpr.and(PeekContext.notInPeekEditor, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\r\n        });\r\n        this._references = _references;\r\n        this._gotoMultipleBehaviour = _gotoMultipleBehaviour;\r\n    }\r\n    _getLocationModel(_model, _position, _token) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return new ReferencesModel(this._references, nls.localize('generic.title', 'Locations'));\r\n        });\r\n    }\r\n    _getNoResultFoundMessage(info) {\r\n        return info && nls.localize('generic.noResult', \"No results for '{0}'\", info.word) || '';\r\n    }\r\n    _getGoToPreference(editor) {\r\n        var _a;\r\n        return (_a = this._gotoMultipleBehaviour) !== null && _a !== void 0 ? _a : editor.getOption(45 /* gotoLocation */).multipleReferences;\r\n    }\r\n    _getAlternativeCommand() { return ''; }\r\n}\r\nCommandsRegistry.registerCommand({\r\n    id: 'editor.action.goToLocations',\r\n    description: {\r\n        description: 'Go to locations from a position in a file',\r\n        args: [\r\n            { name: 'uri', description: 'The text document in which to start', constraint: URI },\r\n            { name: 'position', description: 'The position at which to start', constraint: corePosition.Position.isIPosition },\r\n            { name: 'locations', description: 'An array of locations.', constraint: Array },\r\n            { name: 'multiple', description: 'Define what to do when having multiple results, either `peek`, `gotoAndPeek`, or `goto' },\r\n            { name: 'noResultsMessage', description: 'Human readable message that shows when locations is empty.' },\r\n        ]\r\n    },\r\n    handler: (accessor, resource, position, references, multiple, noResultsMessage, openInPeek) => __awaiter(void 0, void 0, void 0, function* () {\r\n        assertType(URI.isUri(resource));\r\n        assertType(corePosition.Position.isIPosition(position));\r\n        assertType(Array.isArray(references));\r\n        assertType(typeof multiple === 'undefined' || typeof multiple === 'string');\r\n        assertType(typeof openInPeek === 'undefined' || typeof openInPeek === 'boolean');\r\n        const editorService = accessor.get(ICodeEditorService);\r\n        const editor = yield editorService.openCodeEditor({ resource }, editorService.getFocusedCodeEditor());\r\n        if (isCodeEditor(editor)) {\r\n            editor.setPosition(position);\r\n            editor.revealPositionInCenterIfOutsideViewport(position, 0 /* Smooth */);\r\n            return editor.invokeWithinContext(accessor => {\r\n                const command = new class extends GenericGoToLocationAction {\r\n                    _getNoResultFoundMessage(info) {\r\n                        return noResultsMessage || super._getNoResultFoundMessage(info);\r\n                    }\r\n                }({\r\n                    muteMessage: !Boolean(noResultsMessage),\r\n                    openInPeek: Boolean(openInPeek),\r\n                    openToSide: false\r\n                }, references, multiple);\r\n                accessor.get(IInstantiationService).invokeFunction(command.run.bind(command), editor);\r\n            });\r\n        }\r\n    })\r\n});\r\nCommandsRegistry.registerCommand({\r\n    id: 'editor.action.peekLocations',\r\n    description: {\r\n        description: 'Peek locations from a position in a file',\r\n        args: [\r\n            { name: 'uri', description: 'The text document in which to start', constraint: URI },\r\n            { name: 'position', description: 'The position at which to start', constraint: corePosition.Position.isIPosition },\r\n            { name: 'locations', description: 'An array of locations.', constraint: Array },\r\n            { name: 'multiple', description: 'Define what to do when having multiple results, either `peek`, `gotoAndPeek`, or `goto' },\r\n        ]\r\n    },\r\n    handler: (accessor, resource, position, references, multiple) => __awaiter(void 0, void 0, void 0, function* () {\r\n        accessor.get(ICommandService).executeCommand('editor.action.goToLocations', resource, position, references, multiple, undefined, true);\r\n    })\r\n});\r\n//#endregion\r\n//#region --- REFERENCE search special commands\r\nCommandsRegistry.registerCommand({\r\n    id: 'editor.action.findReferences',\r\n    handler: (accessor, resource, position) => {\r\n        assertType(URI.isUri(resource));\r\n        assertType(corePosition.Position.isIPosition(position));\r\n        const codeEditorService = accessor.get(ICodeEditorService);\r\n        return codeEditorService.openCodeEditor({ resource }, codeEditorService.getFocusedCodeEditor()).then(control => {\r\n            if (!isCodeEditor(control) || !control.hasModel()) {\r\n                return undefined;\r\n            }\r\n            const controller = ReferencesController.get(control);\r\n            if (!controller) {\r\n                return undefined;\r\n            }\r\n            const references = createCancelablePromise(token => getReferencesAtPosition(control.getModel(), corePosition.Position.lift(position), false, token).then(references => new ReferencesModel(references, nls.localize('ref.title', 'References'))));\r\n            const range = new Range(position.lineNumber, position.column, position.lineNumber, position.column);\r\n            return Promise.resolve(controller.toggleWidget(range, references, false));\r\n        });\r\n    }\r\n});\r\n// use NEW command\r\nCommandsRegistry.registerCommandAlias('editor.action.showReferences', 'editor.action.peekLocations');\r\n//#endregion\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}