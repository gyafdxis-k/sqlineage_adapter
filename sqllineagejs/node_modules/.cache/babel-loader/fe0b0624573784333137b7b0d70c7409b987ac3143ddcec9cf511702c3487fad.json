{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nexport class RestrictedRenderingContext {\n  constructor(viewLayout, viewportData) {\n    this._viewLayout = viewLayout;\n    this.viewportData = viewportData;\n    this.scrollWidth = this._viewLayout.getScrollWidth();\n    this.scrollHeight = this._viewLayout.getScrollHeight();\n    this.visibleRange = this.viewportData.visibleRange;\n    this.bigNumbersDelta = this.viewportData.bigNumbersDelta;\n    const vInfo = this._viewLayout.getCurrentViewport();\n    this.scrollTop = vInfo.top;\n    this.scrollLeft = vInfo.left;\n    this.viewportWidth = vInfo.width;\n    this.viewportHeight = vInfo.height;\n  }\n  getScrolledTopFromAbsoluteTop(absoluteTop) {\n    return absoluteTop - this.scrollTop;\n  }\n  getVerticalOffsetForLineNumber(lineNumber) {\n    return this._viewLayout.getVerticalOffsetForLineNumber(lineNumber);\n  }\n  getDecorationsInViewport() {\n    return this.viewportData.getDecorationsInViewport();\n  }\n}\nexport class RenderingContext extends RestrictedRenderingContext {\n  constructor(viewLayout, viewportData, viewLines) {\n    super(viewLayout, viewportData);\n    this._viewLines = viewLines;\n  }\n  linesVisibleRangesForRange(range, includeNewLines) {\n    return this._viewLines.linesVisibleRangesForRange(range, includeNewLines);\n  }\n  visibleRangeForPosition(position) {\n    return this._viewLines.visibleRangeForPosition(position);\n  }\n}\nexport class LineVisibleRanges {\n  constructor(outsideRenderedLine, lineNumber, ranges) {\n    this.outsideRenderedLine = outsideRenderedLine;\n    this.lineNumber = lineNumber;\n    this.ranges = ranges;\n  }\n}\nexport class HorizontalRange {\n  constructor(left, width) {\n    this.left = Math.round(left);\n    this.width = Math.round(width);\n  }\n  toString() {\n    return \"[\".concat(this.left, \",\").concat(this.width, \"]\");\n  }\n}\nexport class HorizontalPosition {\n  constructor(outsideRenderedLine, left) {\n    this.outsideRenderedLine = outsideRenderedLine;\n    this.left = Math.round(left);\n  }\n}\nexport class VisibleRanges {\n  constructor(outsideRenderedLine, ranges) {\n    this.outsideRenderedLine = outsideRenderedLine;\n    this.ranges = ranges;\n  }\n}","map":{"version":3,"names":["RestrictedRenderingContext","constructor","viewLayout","viewportData","_viewLayout","scrollWidth","getScrollWidth","scrollHeight","getScrollHeight","visibleRange","bigNumbersDelta","vInfo","getCurrentViewport","scrollTop","top","scrollLeft","left","viewportWidth","width","viewportHeight","height","getScrolledTopFromAbsoluteTop","absoluteTop","getVerticalOffsetForLineNumber","lineNumber","getDecorationsInViewport","RenderingContext","viewLines","_viewLines","linesVisibleRangesForRange","range","includeNewLines","visibleRangeForPosition","position","LineVisibleRanges","outsideRenderedLine","ranges","HorizontalRange","Math","round","toString","concat","HorizontalPosition","VisibleRanges"],"sources":["C:/Users/Administrator/Desktop/sqllineage-master/sqllineagejs/node_modules/monaco-editor/esm/vs/editor/common/view/renderingContext.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport class RestrictedRenderingContext {\r\n    constructor(viewLayout, viewportData) {\r\n        this._viewLayout = viewLayout;\r\n        this.viewportData = viewportData;\r\n        this.scrollWidth = this._viewLayout.getScrollWidth();\r\n        this.scrollHeight = this._viewLayout.getScrollHeight();\r\n        this.visibleRange = this.viewportData.visibleRange;\r\n        this.bigNumbersDelta = this.viewportData.bigNumbersDelta;\r\n        const vInfo = this._viewLayout.getCurrentViewport();\r\n        this.scrollTop = vInfo.top;\r\n        this.scrollLeft = vInfo.left;\r\n        this.viewportWidth = vInfo.width;\r\n        this.viewportHeight = vInfo.height;\r\n    }\r\n    getScrolledTopFromAbsoluteTop(absoluteTop) {\r\n        return absoluteTop - this.scrollTop;\r\n    }\r\n    getVerticalOffsetForLineNumber(lineNumber) {\r\n        return this._viewLayout.getVerticalOffsetForLineNumber(lineNumber);\r\n    }\r\n    getDecorationsInViewport() {\r\n        return this.viewportData.getDecorationsInViewport();\r\n    }\r\n}\r\nexport class RenderingContext extends RestrictedRenderingContext {\r\n    constructor(viewLayout, viewportData, viewLines) {\r\n        super(viewLayout, viewportData);\r\n        this._viewLines = viewLines;\r\n    }\r\n    linesVisibleRangesForRange(range, includeNewLines) {\r\n        return this._viewLines.linesVisibleRangesForRange(range, includeNewLines);\r\n    }\r\n    visibleRangeForPosition(position) {\r\n        return this._viewLines.visibleRangeForPosition(position);\r\n    }\r\n}\r\nexport class LineVisibleRanges {\r\n    constructor(outsideRenderedLine, lineNumber, ranges) {\r\n        this.outsideRenderedLine = outsideRenderedLine;\r\n        this.lineNumber = lineNumber;\r\n        this.ranges = ranges;\r\n    }\r\n}\r\nexport class HorizontalRange {\r\n    constructor(left, width) {\r\n        this.left = Math.round(left);\r\n        this.width = Math.round(width);\r\n    }\r\n    toString() {\r\n        return `[${this.left},${this.width}]`;\r\n    }\r\n}\r\nexport class HorizontalPosition {\r\n    constructor(outsideRenderedLine, left) {\r\n        this.outsideRenderedLine = outsideRenderedLine;\r\n        this.left = Math.round(left);\r\n    }\r\n}\r\nexport class VisibleRanges {\r\n    constructor(outsideRenderedLine, ranges) {\r\n        this.outsideRenderedLine = outsideRenderedLine;\r\n        this.ranges = ranges;\r\n    }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}