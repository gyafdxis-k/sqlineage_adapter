{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { registerEditorCommand } from '../../browser/editorExtensions.js';\nimport { WordPartOperations } from '../../common/controller/cursorWordOperations.js';\nimport { Range } from '../../common/core/range.js';\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\nimport { DeleteWordCommand, MoveWordCommand } from '../wordOperations/wordOperations.js';\nimport { CommandsRegistry } from '../../../platform/commands/common/commands.js';\nexport class DeleteWordPartLeft extends DeleteWordCommand {\n  constructor() {\n    super({\n      whitespaceHeuristics: true,\n      wordNavigationType: 0 /* WordStart */,\n      id: 'deleteWordPartLeft',\n      precondition: EditorContextKeys.writable,\n      kbOpts: {\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 0,\n        mac: {\n          primary: 256 /* WinCtrl */ | 512 /* Alt */ | 1 /* Backspace */\n        },\n        weight: 100 /* EditorContrib */\n      }\n    });\n  }\n\n  _delete(ctx, wordNavigationType) {\n    let r = WordPartOperations.deleteWordPartLeft(ctx);\n    if (r) {\n      return r;\n    }\n    return new Range(1, 1, 1, 1);\n  }\n}\nexport class DeleteWordPartRight extends DeleteWordCommand {\n  constructor() {\n    super({\n      whitespaceHeuristics: true,\n      wordNavigationType: 2 /* WordEnd */,\n      id: 'deleteWordPartRight',\n      precondition: EditorContextKeys.writable,\n      kbOpts: {\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 0,\n        mac: {\n          primary: 256 /* WinCtrl */ | 512 /* Alt */ | 20 /* Delete */\n        },\n        weight: 100 /* EditorContrib */\n      }\n    });\n  }\n\n  _delete(ctx, wordNavigationType) {\n    let r = WordPartOperations.deleteWordPartRight(ctx);\n    if (r) {\n      return r;\n    }\n    const lineCount = ctx.model.getLineCount();\n    const maxColumn = ctx.model.getLineMaxColumn(lineCount);\n    return new Range(lineCount, maxColumn, lineCount, maxColumn);\n  }\n}\nexport class WordPartLeftCommand extends MoveWordCommand {\n  _move(wordSeparators, model, position, wordNavigationType) {\n    return WordPartOperations.moveWordPartLeft(wordSeparators, model, position);\n  }\n}\nexport class CursorWordPartLeft extends WordPartLeftCommand {\n  constructor() {\n    super({\n      inSelectionMode: false,\n      wordNavigationType: 0 /* WordStart */,\n      id: 'cursorWordPartLeft',\n      precondition: undefined,\n      kbOpts: {\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 0,\n        mac: {\n          primary: 256 /* WinCtrl */ | 512 /* Alt */ | 15 /* LeftArrow */\n        },\n        weight: 100 /* EditorContrib */\n      }\n    });\n  }\n}\n// Register previous id for compatibility purposes\nCommandsRegistry.registerCommandAlias('cursorWordPartStartLeft', 'cursorWordPartLeft');\nexport class CursorWordPartLeftSelect extends WordPartLeftCommand {\n  constructor() {\n    super({\n      inSelectionMode: true,\n      wordNavigationType: 0 /* WordStart */,\n      id: 'cursorWordPartLeftSelect',\n      precondition: undefined,\n      kbOpts: {\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 0,\n        mac: {\n          primary: 256 /* WinCtrl */ | 512 /* Alt */ | 1024 /* Shift */ | 15 /* LeftArrow */\n        },\n        weight: 100 /* EditorContrib */\n      }\n    });\n  }\n}\n// Register previous id for compatibility purposes\nCommandsRegistry.registerCommandAlias('cursorWordPartStartLeftSelect', 'cursorWordPartLeftSelect');\nexport class WordPartRightCommand extends MoveWordCommand {\n  _move(wordSeparators, model, position, wordNavigationType) {\n    return WordPartOperations.moveWordPartRight(wordSeparators, model, position);\n  }\n}\nexport class CursorWordPartRight extends WordPartRightCommand {\n  constructor() {\n    super({\n      inSelectionMode: false,\n      wordNavigationType: 2 /* WordEnd */,\n      id: 'cursorWordPartRight',\n      precondition: undefined,\n      kbOpts: {\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 0,\n        mac: {\n          primary: 256 /* WinCtrl */ | 512 /* Alt */ | 17 /* RightArrow */\n        },\n        weight: 100 /* EditorContrib */\n      }\n    });\n  }\n}\n\nexport class CursorWordPartRightSelect extends WordPartRightCommand {\n  constructor() {\n    super({\n      inSelectionMode: true,\n      wordNavigationType: 2 /* WordEnd */,\n      id: 'cursorWordPartRightSelect',\n      precondition: undefined,\n      kbOpts: {\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 0,\n        mac: {\n          primary: 256 /* WinCtrl */ | 512 /* Alt */ | 1024 /* Shift */ | 17 /* RightArrow */\n        },\n        weight: 100 /* EditorContrib */\n      }\n    });\n  }\n}\n\nregisterEditorCommand(new DeleteWordPartLeft());\nregisterEditorCommand(new DeleteWordPartRight());\nregisterEditorCommand(new CursorWordPartLeft());\nregisterEditorCommand(new CursorWordPartLeftSelect());\nregisterEditorCommand(new CursorWordPartRight());\nregisterEditorCommand(new CursorWordPartRightSelect());","map":{"version":3,"names":["registerEditorCommand","WordPartOperations","Range","EditorContextKeys","DeleteWordCommand","MoveWordCommand","CommandsRegistry","DeleteWordPartLeft","constructor","whitespaceHeuristics","wordNavigationType","id","precondition","writable","kbOpts","kbExpr","textInputFocus","primary","mac","weight","_delete","ctx","r","deleteWordPartLeft","DeleteWordPartRight","deleteWordPartRight","lineCount","model","getLineCount","maxColumn","getLineMaxColumn","WordPartLeftCommand","_move","wordSeparators","position","moveWordPartLeft","CursorWordPartLeft","inSelectionMode","undefined","registerCommandAlias","CursorWordPartLeftSelect","WordPartRightCommand","moveWordPartRight","CursorWordPartRight","CursorWordPartRightSelect"],"sources":["C:/Users/Administrator/Desktop/sqllineage-master/sqllineagejs/node_modules/monaco-editor/esm/vs/editor/contrib/wordPartOperations/wordPartOperations.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerEditorCommand } from '../../browser/editorExtensions.js';\r\nimport { WordPartOperations } from '../../common/controller/cursorWordOperations.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { DeleteWordCommand, MoveWordCommand } from '../wordOperations/wordOperations.js';\r\nimport { CommandsRegistry } from '../../../platform/commands/common/commands.js';\r\nexport class DeleteWordPartLeft extends DeleteWordCommand {\r\n    constructor() {\r\n        super({\r\n            whitespaceHeuristics: true,\r\n            wordNavigationType: 0 /* WordStart */,\r\n            id: 'deleteWordPartLeft',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.textInputFocus,\r\n                primary: 0,\r\n                mac: { primary: 256 /* WinCtrl */ | 512 /* Alt */ | 1 /* Backspace */ },\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    _delete(ctx, wordNavigationType) {\r\n        let r = WordPartOperations.deleteWordPartLeft(ctx);\r\n        if (r) {\r\n            return r;\r\n        }\r\n        return new Range(1, 1, 1, 1);\r\n    }\r\n}\r\nexport class DeleteWordPartRight extends DeleteWordCommand {\r\n    constructor() {\r\n        super({\r\n            whitespaceHeuristics: true,\r\n            wordNavigationType: 2 /* WordEnd */,\r\n            id: 'deleteWordPartRight',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.textInputFocus,\r\n                primary: 0,\r\n                mac: { primary: 256 /* WinCtrl */ | 512 /* Alt */ | 20 /* Delete */ },\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    _delete(ctx, wordNavigationType) {\r\n        let r = WordPartOperations.deleteWordPartRight(ctx);\r\n        if (r) {\r\n            return r;\r\n        }\r\n        const lineCount = ctx.model.getLineCount();\r\n        const maxColumn = ctx.model.getLineMaxColumn(lineCount);\r\n        return new Range(lineCount, maxColumn, lineCount, maxColumn);\r\n    }\r\n}\r\nexport class WordPartLeftCommand extends MoveWordCommand {\r\n    _move(wordSeparators, model, position, wordNavigationType) {\r\n        return WordPartOperations.moveWordPartLeft(wordSeparators, model, position);\r\n    }\r\n}\r\nexport class CursorWordPartLeft extends WordPartLeftCommand {\r\n    constructor() {\r\n        super({\r\n            inSelectionMode: false,\r\n            wordNavigationType: 0 /* WordStart */,\r\n            id: 'cursorWordPartLeft',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.textInputFocus,\r\n                primary: 0,\r\n                mac: { primary: 256 /* WinCtrl */ | 512 /* Alt */ | 15 /* LeftArrow */ },\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n}\r\n// Register previous id for compatibility purposes\r\nCommandsRegistry.registerCommandAlias('cursorWordPartStartLeft', 'cursorWordPartLeft');\r\nexport class CursorWordPartLeftSelect extends WordPartLeftCommand {\r\n    constructor() {\r\n        super({\r\n            inSelectionMode: true,\r\n            wordNavigationType: 0 /* WordStart */,\r\n            id: 'cursorWordPartLeftSelect',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.textInputFocus,\r\n                primary: 0,\r\n                mac: { primary: 256 /* WinCtrl */ | 512 /* Alt */ | 1024 /* Shift */ | 15 /* LeftArrow */ },\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n}\r\n// Register previous id for compatibility purposes\r\nCommandsRegistry.registerCommandAlias('cursorWordPartStartLeftSelect', 'cursorWordPartLeftSelect');\r\nexport class WordPartRightCommand extends MoveWordCommand {\r\n    _move(wordSeparators, model, position, wordNavigationType) {\r\n        return WordPartOperations.moveWordPartRight(wordSeparators, model, position);\r\n    }\r\n}\r\nexport class CursorWordPartRight extends WordPartRightCommand {\r\n    constructor() {\r\n        super({\r\n            inSelectionMode: false,\r\n            wordNavigationType: 2 /* WordEnd */,\r\n            id: 'cursorWordPartRight',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.textInputFocus,\r\n                primary: 0,\r\n                mac: { primary: 256 /* WinCtrl */ | 512 /* Alt */ | 17 /* RightArrow */ },\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n}\r\nexport class CursorWordPartRightSelect extends WordPartRightCommand {\r\n    constructor() {\r\n        super({\r\n            inSelectionMode: true,\r\n            wordNavigationType: 2 /* WordEnd */,\r\n            id: 'cursorWordPartRightSelect',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.textInputFocus,\r\n                primary: 0,\r\n                mac: { primary: 256 /* WinCtrl */ | 512 /* Alt */ | 1024 /* Shift */ | 17 /* RightArrow */ },\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n}\r\nregisterEditorCommand(new DeleteWordPartLeft());\r\nregisterEditorCommand(new DeleteWordPartRight());\r\nregisterEditorCommand(new CursorWordPartLeft());\r\nregisterEditorCommand(new CursorWordPartLeftSelect());\r\nregisterEditorCommand(new CursorWordPartRight());\r\nregisterEditorCommand(new CursorWordPartRightSelect());\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}