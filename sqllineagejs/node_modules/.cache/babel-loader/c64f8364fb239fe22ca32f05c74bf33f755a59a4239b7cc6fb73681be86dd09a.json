{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { illegalArgument } from './errors.js';\nclass KeyCodeStrMap {\n  constructor() {\n    this._keyCodeToStr = [];\n    this._strToKeyCode = Object.create(null);\n  }\n  define(keyCode, str) {\n    this._keyCodeToStr[keyCode] = str;\n    this._strToKeyCode[str.toLowerCase()] = keyCode;\n  }\n  keyCodeToStr(keyCode) {\n    return this._keyCodeToStr[keyCode];\n  }\n  strToKeyCode(str) {\n    return this._strToKeyCode[str.toLowerCase()] || 0 /* Unknown */;\n  }\n}\n\nconst uiMap = new KeyCodeStrMap();\nconst userSettingsUSMap = new KeyCodeStrMap();\nconst userSettingsGeneralMap = new KeyCodeStrMap();\n(function () {\n  function define(keyCode, uiLabel) {\n    let usUserSettingsLabel = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : uiLabel;\n    let generalUserSettingsLabel = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : usUserSettingsLabel;\n    uiMap.define(keyCode, uiLabel);\n    userSettingsUSMap.define(keyCode, usUserSettingsLabel);\n    userSettingsGeneralMap.define(keyCode, generalUserSettingsLabel);\n  }\n  define(0 /* Unknown */, 'unknown');\n  define(1 /* Backspace */, 'Backspace');\n  define(2 /* Tab */, 'Tab');\n  define(3 /* Enter */, 'Enter');\n  define(4 /* Shift */, 'Shift');\n  define(5 /* Ctrl */, 'Ctrl');\n  define(6 /* Alt */, 'Alt');\n  define(7 /* PauseBreak */, 'PauseBreak');\n  define(8 /* CapsLock */, 'CapsLock');\n  define(9 /* Escape */, 'Escape');\n  define(10 /* Space */, 'Space');\n  define(11 /* PageUp */, 'PageUp');\n  define(12 /* PageDown */, 'PageDown');\n  define(13 /* End */, 'End');\n  define(14 /* Home */, 'Home');\n  define(15 /* LeftArrow */, 'LeftArrow', 'Left');\n  define(16 /* UpArrow */, 'UpArrow', 'Up');\n  define(17 /* RightArrow */, 'RightArrow', 'Right');\n  define(18 /* DownArrow */, 'DownArrow', 'Down');\n  define(19 /* Insert */, 'Insert');\n  define(20 /* Delete */, 'Delete');\n  define(21 /* KEY_0 */, '0');\n  define(22 /* KEY_1 */, '1');\n  define(23 /* KEY_2 */, '2');\n  define(24 /* KEY_3 */, '3');\n  define(25 /* KEY_4 */, '4');\n  define(26 /* KEY_5 */, '5');\n  define(27 /* KEY_6 */, '6');\n  define(28 /* KEY_7 */, '7');\n  define(29 /* KEY_8 */, '8');\n  define(30 /* KEY_9 */, '9');\n  define(31 /* KEY_A */, 'A');\n  define(32 /* KEY_B */, 'B');\n  define(33 /* KEY_C */, 'C');\n  define(34 /* KEY_D */, 'D');\n  define(35 /* KEY_E */, 'E');\n  define(36 /* KEY_F */, 'F');\n  define(37 /* KEY_G */, 'G');\n  define(38 /* KEY_H */, 'H');\n  define(39 /* KEY_I */, 'I');\n  define(40 /* KEY_J */, 'J');\n  define(41 /* KEY_K */, 'K');\n  define(42 /* KEY_L */, 'L');\n  define(43 /* KEY_M */, 'M');\n  define(44 /* KEY_N */, 'N');\n  define(45 /* KEY_O */, 'O');\n  define(46 /* KEY_P */, 'P');\n  define(47 /* KEY_Q */, 'Q');\n  define(48 /* KEY_R */, 'R');\n  define(49 /* KEY_S */, 'S');\n  define(50 /* KEY_T */, 'T');\n  define(51 /* KEY_U */, 'U');\n  define(52 /* KEY_V */, 'V');\n  define(53 /* KEY_W */, 'W');\n  define(54 /* KEY_X */, 'X');\n  define(55 /* KEY_Y */, 'Y');\n  define(56 /* KEY_Z */, 'Z');\n  define(57 /* Meta */, 'Meta');\n  define(58 /* ContextMenu */, 'ContextMenu');\n  define(59 /* F1 */, 'F1');\n  define(60 /* F2 */, 'F2');\n  define(61 /* F3 */, 'F3');\n  define(62 /* F4 */, 'F4');\n  define(63 /* F5 */, 'F5');\n  define(64 /* F6 */, 'F6');\n  define(65 /* F7 */, 'F7');\n  define(66 /* F8 */, 'F8');\n  define(67 /* F9 */, 'F9');\n  define(68 /* F10 */, 'F10');\n  define(69 /* F11 */, 'F11');\n  define(70 /* F12 */, 'F12');\n  define(71 /* F13 */, 'F13');\n  define(72 /* F14 */, 'F14');\n  define(73 /* F15 */, 'F15');\n  define(74 /* F16 */, 'F16');\n  define(75 /* F17 */, 'F17');\n  define(76 /* F18 */, 'F18');\n  define(77 /* F19 */, 'F19');\n  define(78 /* NumLock */, 'NumLock');\n  define(79 /* ScrollLock */, 'ScrollLock');\n  define(80 /* US_SEMICOLON */, ';', ';', 'OEM_1');\n  define(81 /* US_EQUAL */, '=', '=', 'OEM_PLUS');\n  define(82 /* US_COMMA */, ',', ',', 'OEM_COMMA');\n  define(83 /* US_MINUS */, '-', '-', 'OEM_MINUS');\n  define(84 /* US_DOT */, '.', '.', 'OEM_PERIOD');\n  define(85 /* US_SLASH */, '/', '/', 'OEM_2');\n  define(86 /* US_BACKTICK */, '`', '`', 'OEM_3');\n  define(110 /* ABNT_C1 */, 'ABNT_C1');\n  define(111 /* ABNT_C2 */, 'ABNT_C2');\n  define(87 /* US_OPEN_SQUARE_BRACKET */, '[', '[', 'OEM_4');\n  define(88 /* US_BACKSLASH */, '\\\\', '\\\\', 'OEM_5');\n  define(89 /* US_CLOSE_SQUARE_BRACKET */, ']', ']', 'OEM_6');\n  define(90 /* US_QUOTE */, '\\'', '\\'', 'OEM_7');\n  define(91 /* OEM_8 */, 'OEM_8');\n  define(92 /* OEM_102 */, 'OEM_102');\n  define(93 /* NUMPAD_0 */, 'NumPad0');\n  define(94 /* NUMPAD_1 */, 'NumPad1');\n  define(95 /* NUMPAD_2 */, 'NumPad2');\n  define(96 /* NUMPAD_3 */, 'NumPad3');\n  define(97 /* NUMPAD_4 */, 'NumPad4');\n  define(98 /* NUMPAD_5 */, 'NumPad5');\n  define(99 /* NUMPAD_6 */, 'NumPad6');\n  define(100 /* NUMPAD_7 */, 'NumPad7');\n  define(101 /* NUMPAD_8 */, 'NumPad8');\n  define(102 /* NUMPAD_9 */, 'NumPad9');\n  define(103 /* NUMPAD_MULTIPLY */, 'NumPad_Multiply');\n  define(104 /* NUMPAD_ADD */, 'NumPad_Add');\n  define(105 /* NUMPAD_SEPARATOR */, 'NumPad_Separator');\n  define(106 /* NUMPAD_SUBTRACT */, 'NumPad_Subtract');\n  define(107 /* NUMPAD_DECIMAL */, 'NumPad_Decimal');\n  define(108 /* NUMPAD_DIVIDE */, 'NumPad_Divide');\n})();\nexport var KeyCodeUtils;\n(function (KeyCodeUtils) {\n  function toString(keyCode) {\n    return uiMap.keyCodeToStr(keyCode);\n  }\n  KeyCodeUtils.toString = toString;\n  function fromString(key) {\n    return uiMap.strToKeyCode(key);\n  }\n  KeyCodeUtils.fromString = fromString;\n  function toUserSettingsUS(keyCode) {\n    return userSettingsUSMap.keyCodeToStr(keyCode);\n  }\n  KeyCodeUtils.toUserSettingsUS = toUserSettingsUS;\n  function toUserSettingsGeneral(keyCode) {\n    return userSettingsGeneralMap.keyCodeToStr(keyCode);\n  }\n  KeyCodeUtils.toUserSettingsGeneral = toUserSettingsGeneral;\n  function fromUserSettings(key) {\n    return userSettingsUSMap.strToKeyCode(key) || userSettingsGeneralMap.strToKeyCode(key);\n  }\n  KeyCodeUtils.fromUserSettings = fromUserSettings;\n})(KeyCodeUtils || (KeyCodeUtils = {}));\nexport function KeyChord(firstPart, secondPart) {\n  const chordPart = (secondPart & 0x0000FFFF) << 16 >>> 0;\n  return (firstPart | chordPart) >>> 0;\n}\nexport function createKeybinding(keybinding, OS) {\n  if (keybinding === 0) {\n    return null;\n  }\n  const firstPart = (keybinding & 0x0000FFFF) >>> 0;\n  const chordPart = (keybinding & 0xFFFF0000) >>> 16;\n  if (chordPart !== 0) {\n    return new ChordKeybinding([createSimpleKeybinding(firstPart, OS), createSimpleKeybinding(chordPart, OS)]);\n  }\n  return new ChordKeybinding([createSimpleKeybinding(firstPart, OS)]);\n}\nexport function createSimpleKeybinding(keybinding, OS) {\n  const ctrlCmd = keybinding & 2048 /* CtrlCmd */ ? true : false;\n  const winCtrl = keybinding & 256 /* WinCtrl */ ? true : false;\n  const ctrlKey = OS === 2 /* Macintosh */ ? winCtrl : ctrlCmd;\n  const shiftKey = keybinding & 1024 /* Shift */ ? true : false;\n  const altKey = keybinding & 512 /* Alt */ ? true : false;\n  const metaKey = OS === 2 /* Macintosh */ ? ctrlCmd : winCtrl;\n  const keyCode = keybinding & 255 /* KeyCode */;\n  return new SimpleKeybinding(ctrlKey, shiftKey, altKey, metaKey, keyCode);\n}\nexport class SimpleKeybinding {\n  constructor(ctrlKey, shiftKey, altKey, metaKey, keyCode) {\n    this.ctrlKey = ctrlKey;\n    this.shiftKey = shiftKey;\n    this.altKey = altKey;\n    this.metaKey = metaKey;\n    this.keyCode = keyCode;\n  }\n  equals(other) {\n    return this.ctrlKey === other.ctrlKey && this.shiftKey === other.shiftKey && this.altKey === other.altKey && this.metaKey === other.metaKey && this.keyCode === other.keyCode;\n  }\n  isModifierKey() {\n    return this.keyCode === 0 /* Unknown */ || this.keyCode === 5 /* Ctrl */ || this.keyCode === 57 /* Meta */ || this.keyCode === 6 /* Alt */ || this.keyCode === 4 /* Shift */;\n  }\n\n  toChord() {\n    return new ChordKeybinding([this]);\n  }\n  /**\r\n   * Does this keybinding refer to the key code of a modifier and it also has the modifier flag?\r\n   */\n  isDuplicateModifierCase() {\n    return this.ctrlKey && this.keyCode === 5 /* Ctrl */ || this.shiftKey && this.keyCode === 4 /* Shift */ || this.altKey && this.keyCode === 6 /* Alt */ || this.metaKey && this.keyCode === 57 /* Meta */;\n  }\n}\n\nexport class ChordKeybinding {\n  constructor(parts) {\n    if (parts.length === 0) {\n      throw illegalArgument(\"parts\");\n    }\n    this.parts = parts;\n  }\n}\nexport class ResolvedKeybindingPart {\n  constructor(ctrlKey, shiftKey, altKey, metaKey, kbLabel, kbAriaLabel) {\n    this.ctrlKey = ctrlKey;\n    this.shiftKey = shiftKey;\n    this.altKey = altKey;\n    this.metaKey = metaKey;\n    this.keyLabel = kbLabel;\n    this.keyAriaLabel = kbAriaLabel;\n  }\n}\n/**\r\n * A resolved keybinding. Can be a simple keybinding or a chord keybinding.\r\n */\nexport class ResolvedKeybinding {}","map":{"version":3,"names":["illegalArgument","KeyCodeStrMap","constructor","_keyCodeToStr","_strToKeyCode","Object","create","define","keyCode","str","toLowerCase","keyCodeToStr","strToKeyCode","uiMap","userSettingsUSMap","userSettingsGeneralMap","uiLabel","usUserSettingsLabel","arguments","length","undefined","generalUserSettingsLabel","KeyCodeUtils","toString","fromString","key","toUserSettingsUS","toUserSettingsGeneral","fromUserSettings","KeyChord","firstPart","secondPart","chordPart","createKeybinding","keybinding","OS","ChordKeybinding","createSimpleKeybinding","ctrlCmd","winCtrl","ctrlKey","shiftKey","altKey","metaKey","SimpleKeybinding","equals","other","isModifierKey","toChord","isDuplicateModifierCase","parts","ResolvedKeybindingPart","kbLabel","kbAriaLabel","keyLabel","keyAriaLabel","ResolvedKeybinding"],"sources":["C:/Users/Administrator/Desktop/sqllineage-master/sqllineagejs/node_modules/monaco-editor/esm/vs/base/common/keyCodes.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { illegalArgument } from './errors.js';\r\nclass KeyCodeStrMap {\r\n    constructor() {\r\n        this._keyCodeToStr = [];\r\n        this._strToKeyCode = Object.create(null);\r\n    }\r\n    define(keyCode, str) {\r\n        this._keyCodeToStr[keyCode] = str;\r\n        this._strToKeyCode[str.toLowerCase()] = keyCode;\r\n    }\r\n    keyCodeToStr(keyCode) {\r\n        return this._keyCodeToStr[keyCode];\r\n    }\r\n    strToKeyCode(str) {\r\n        return this._strToKeyCode[str.toLowerCase()] || 0 /* Unknown */;\r\n    }\r\n}\r\nconst uiMap = new KeyCodeStrMap();\r\nconst userSettingsUSMap = new KeyCodeStrMap();\r\nconst userSettingsGeneralMap = new KeyCodeStrMap();\r\n(function () {\r\n    function define(keyCode, uiLabel, usUserSettingsLabel = uiLabel, generalUserSettingsLabel = usUserSettingsLabel) {\r\n        uiMap.define(keyCode, uiLabel);\r\n        userSettingsUSMap.define(keyCode, usUserSettingsLabel);\r\n        userSettingsGeneralMap.define(keyCode, generalUserSettingsLabel);\r\n    }\r\n    define(0 /* Unknown */, 'unknown');\r\n    define(1 /* Backspace */, 'Backspace');\r\n    define(2 /* Tab */, 'Tab');\r\n    define(3 /* Enter */, 'Enter');\r\n    define(4 /* Shift */, 'Shift');\r\n    define(5 /* Ctrl */, 'Ctrl');\r\n    define(6 /* Alt */, 'Alt');\r\n    define(7 /* PauseBreak */, 'PauseBreak');\r\n    define(8 /* CapsLock */, 'CapsLock');\r\n    define(9 /* Escape */, 'Escape');\r\n    define(10 /* Space */, 'Space');\r\n    define(11 /* PageUp */, 'PageUp');\r\n    define(12 /* PageDown */, 'PageDown');\r\n    define(13 /* End */, 'End');\r\n    define(14 /* Home */, 'Home');\r\n    define(15 /* LeftArrow */, 'LeftArrow', 'Left');\r\n    define(16 /* UpArrow */, 'UpArrow', 'Up');\r\n    define(17 /* RightArrow */, 'RightArrow', 'Right');\r\n    define(18 /* DownArrow */, 'DownArrow', 'Down');\r\n    define(19 /* Insert */, 'Insert');\r\n    define(20 /* Delete */, 'Delete');\r\n    define(21 /* KEY_0 */, '0');\r\n    define(22 /* KEY_1 */, '1');\r\n    define(23 /* KEY_2 */, '2');\r\n    define(24 /* KEY_3 */, '3');\r\n    define(25 /* KEY_4 */, '4');\r\n    define(26 /* KEY_5 */, '5');\r\n    define(27 /* KEY_6 */, '6');\r\n    define(28 /* KEY_7 */, '7');\r\n    define(29 /* KEY_8 */, '8');\r\n    define(30 /* KEY_9 */, '9');\r\n    define(31 /* KEY_A */, 'A');\r\n    define(32 /* KEY_B */, 'B');\r\n    define(33 /* KEY_C */, 'C');\r\n    define(34 /* KEY_D */, 'D');\r\n    define(35 /* KEY_E */, 'E');\r\n    define(36 /* KEY_F */, 'F');\r\n    define(37 /* KEY_G */, 'G');\r\n    define(38 /* KEY_H */, 'H');\r\n    define(39 /* KEY_I */, 'I');\r\n    define(40 /* KEY_J */, 'J');\r\n    define(41 /* KEY_K */, 'K');\r\n    define(42 /* KEY_L */, 'L');\r\n    define(43 /* KEY_M */, 'M');\r\n    define(44 /* KEY_N */, 'N');\r\n    define(45 /* KEY_O */, 'O');\r\n    define(46 /* KEY_P */, 'P');\r\n    define(47 /* KEY_Q */, 'Q');\r\n    define(48 /* KEY_R */, 'R');\r\n    define(49 /* KEY_S */, 'S');\r\n    define(50 /* KEY_T */, 'T');\r\n    define(51 /* KEY_U */, 'U');\r\n    define(52 /* KEY_V */, 'V');\r\n    define(53 /* KEY_W */, 'W');\r\n    define(54 /* KEY_X */, 'X');\r\n    define(55 /* KEY_Y */, 'Y');\r\n    define(56 /* KEY_Z */, 'Z');\r\n    define(57 /* Meta */, 'Meta');\r\n    define(58 /* ContextMenu */, 'ContextMenu');\r\n    define(59 /* F1 */, 'F1');\r\n    define(60 /* F2 */, 'F2');\r\n    define(61 /* F3 */, 'F3');\r\n    define(62 /* F4 */, 'F4');\r\n    define(63 /* F5 */, 'F5');\r\n    define(64 /* F6 */, 'F6');\r\n    define(65 /* F7 */, 'F7');\r\n    define(66 /* F8 */, 'F8');\r\n    define(67 /* F9 */, 'F9');\r\n    define(68 /* F10 */, 'F10');\r\n    define(69 /* F11 */, 'F11');\r\n    define(70 /* F12 */, 'F12');\r\n    define(71 /* F13 */, 'F13');\r\n    define(72 /* F14 */, 'F14');\r\n    define(73 /* F15 */, 'F15');\r\n    define(74 /* F16 */, 'F16');\r\n    define(75 /* F17 */, 'F17');\r\n    define(76 /* F18 */, 'F18');\r\n    define(77 /* F19 */, 'F19');\r\n    define(78 /* NumLock */, 'NumLock');\r\n    define(79 /* ScrollLock */, 'ScrollLock');\r\n    define(80 /* US_SEMICOLON */, ';', ';', 'OEM_1');\r\n    define(81 /* US_EQUAL */, '=', '=', 'OEM_PLUS');\r\n    define(82 /* US_COMMA */, ',', ',', 'OEM_COMMA');\r\n    define(83 /* US_MINUS */, '-', '-', 'OEM_MINUS');\r\n    define(84 /* US_DOT */, '.', '.', 'OEM_PERIOD');\r\n    define(85 /* US_SLASH */, '/', '/', 'OEM_2');\r\n    define(86 /* US_BACKTICK */, '`', '`', 'OEM_3');\r\n    define(110 /* ABNT_C1 */, 'ABNT_C1');\r\n    define(111 /* ABNT_C2 */, 'ABNT_C2');\r\n    define(87 /* US_OPEN_SQUARE_BRACKET */, '[', '[', 'OEM_4');\r\n    define(88 /* US_BACKSLASH */, '\\\\', '\\\\', 'OEM_5');\r\n    define(89 /* US_CLOSE_SQUARE_BRACKET */, ']', ']', 'OEM_6');\r\n    define(90 /* US_QUOTE */, '\\'', '\\'', 'OEM_7');\r\n    define(91 /* OEM_8 */, 'OEM_8');\r\n    define(92 /* OEM_102 */, 'OEM_102');\r\n    define(93 /* NUMPAD_0 */, 'NumPad0');\r\n    define(94 /* NUMPAD_1 */, 'NumPad1');\r\n    define(95 /* NUMPAD_2 */, 'NumPad2');\r\n    define(96 /* NUMPAD_3 */, 'NumPad3');\r\n    define(97 /* NUMPAD_4 */, 'NumPad4');\r\n    define(98 /* NUMPAD_5 */, 'NumPad5');\r\n    define(99 /* NUMPAD_6 */, 'NumPad6');\r\n    define(100 /* NUMPAD_7 */, 'NumPad7');\r\n    define(101 /* NUMPAD_8 */, 'NumPad8');\r\n    define(102 /* NUMPAD_9 */, 'NumPad9');\r\n    define(103 /* NUMPAD_MULTIPLY */, 'NumPad_Multiply');\r\n    define(104 /* NUMPAD_ADD */, 'NumPad_Add');\r\n    define(105 /* NUMPAD_SEPARATOR */, 'NumPad_Separator');\r\n    define(106 /* NUMPAD_SUBTRACT */, 'NumPad_Subtract');\r\n    define(107 /* NUMPAD_DECIMAL */, 'NumPad_Decimal');\r\n    define(108 /* NUMPAD_DIVIDE */, 'NumPad_Divide');\r\n})();\r\nexport var KeyCodeUtils;\r\n(function (KeyCodeUtils) {\r\n    function toString(keyCode) {\r\n        return uiMap.keyCodeToStr(keyCode);\r\n    }\r\n    KeyCodeUtils.toString = toString;\r\n    function fromString(key) {\r\n        return uiMap.strToKeyCode(key);\r\n    }\r\n    KeyCodeUtils.fromString = fromString;\r\n    function toUserSettingsUS(keyCode) {\r\n        return userSettingsUSMap.keyCodeToStr(keyCode);\r\n    }\r\n    KeyCodeUtils.toUserSettingsUS = toUserSettingsUS;\r\n    function toUserSettingsGeneral(keyCode) {\r\n        return userSettingsGeneralMap.keyCodeToStr(keyCode);\r\n    }\r\n    KeyCodeUtils.toUserSettingsGeneral = toUserSettingsGeneral;\r\n    function fromUserSettings(key) {\r\n        return userSettingsUSMap.strToKeyCode(key) || userSettingsGeneralMap.strToKeyCode(key);\r\n    }\r\n    KeyCodeUtils.fromUserSettings = fromUserSettings;\r\n})(KeyCodeUtils || (KeyCodeUtils = {}));\r\nexport function KeyChord(firstPart, secondPart) {\r\n    const chordPart = ((secondPart & 0x0000FFFF) << 16) >>> 0;\r\n    return (firstPart | chordPart) >>> 0;\r\n}\r\nexport function createKeybinding(keybinding, OS) {\r\n    if (keybinding === 0) {\r\n        return null;\r\n    }\r\n    const firstPart = (keybinding & 0x0000FFFF) >>> 0;\r\n    const chordPart = (keybinding & 0xFFFF0000) >>> 16;\r\n    if (chordPart !== 0) {\r\n        return new ChordKeybinding([\r\n            createSimpleKeybinding(firstPart, OS),\r\n            createSimpleKeybinding(chordPart, OS)\r\n        ]);\r\n    }\r\n    return new ChordKeybinding([createSimpleKeybinding(firstPart, OS)]);\r\n}\r\nexport function createSimpleKeybinding(keybinding, OS) {\r\n    const ctrlCmd = (keybinding & 2048 /* CtrlCmd */ ? true : false);\r\n    const winCtrl = (keybinding & 256 /* WinCtrl */ ? true : false);\r\n    const ctrlKey = (OS === 2 /* Macintosh */ ? winCtrl : ctrlCmd);\r\n    const shiftKey = (keybinding & 1024 /* Shift */ ? true : false);\r\n    const altKey = (keybinding & 512 /* Alt */ ? true : false);\r\n    const metaKey = (OS === 2 /* Macintosh */ ? ctrlCmd : winCtrl);\r\n    const keyCode = (keybinding & 255 /* KeyCode */);\r\n    return new SimpleKeybinding(ctrlKey, shiftKey, altKey, metaKey, keyCode);\r\n}\r\nexport class SimpleKeybinding {\r\n    constructor(ctrlKey, shiftKey, altKey, metaKey, keyCode) {\r\n        this.ctrlKey = ctrlKey;\r\n        this.shiftKey = shiftKey;\r\n        this.altKey = altKey;\r\n        this.metaKey = metaKey;\r\n        this.keyCode = keyCode;\r\n    }\r\n    equals(other) {\r\n        return (this.ctrlKey === other.ctrlKey\r\n            && this.shiftKey === other.shiftKey\r\n            && this.altKey === other.altKey\r\n            && this.metaKey === other.metaKey\r\n            && this.keyCode === other.keyCode);\r\n    }\r\n    isModifierKey() {\r\n        return (this.keyCode === 0 /* Unknown */\r\n            || this.keyCode === 5 /* Ctrl */\r\n            || this.keyCode === 57 /* Meta */\r\n            || this.keyCode === 6 /* Alt */\r\n            || this.keyCode === 4 /* Shift */);\r\n    }\r\n    toChord() {\r\n        return new ChordKeybinding([this]);\r\n    }\r\n    /**\r\n     * Does this keybinding refer to the key code of a modifier and it also has the modifier flag?\r\n     */\r\n    isDuplicateModifierCase() {\r\n        return ((this.ctrlKey && this.keyCode === 5 /* Ctrl */)\r\n            || (this.shiftKey && this.keyCode === 4 /* Shift */)\r\n            || (this.altKey && this.keyCode === 6 /* Alt */)\r\n            || (this.metaKey && this.keyCode === 57 /* Meta */));\r\n    }\r\n}\r\nexport class ChordKeybinding {\r\n    constructor(parts) {\r\n        if (parts.length === 0) {\r\n            throw illegalArgument(`parts`);\r\n        }\r\n        this.parts = parts;\r\n    }\r\n}\r\nexport class ResolvedKeybindingPart {\r\n    constructor(ctrlKey, shiftKey, altKey, metaKey, kbLabel, kbAriaLabel) {\r\n        this.ctrlKey = ctrlKey;\r\n        this.shiftKey = shiftKey;\r\n        this.altKey = altKey;\r\n        this.metaKey = metaKey;\r\n        this.keyLabel = kbLabel;\r\n        this.keyAriaLabel = kbAriaLabel;\r\n    }\r\n}\r\n/**\r\n * A resolved keybinding. Can be a simple keybinding or a chord keybinding.\r\n */\r\nexport class ResolvedKeybinding {\r\n}\r\n"],"mappings":"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AAC,EAAE,CAAC,aAAa,GAAG,CAAC;EAC3BA,MAAM,CAAC,EAAE,CAAC,aAAa,GAAG,CAAC;EAC3BA,MAAM,CAAC,EAAE,CAAC,aAAa,GAAG,CAAC;EAC3BA,MAAM,CAAC,EAAE,CAAC,aAAa,GAAG,CAAC;EAC3BA,MAAM,CAAC,EAAE,CAAC,aAAa,GAAG,CAAC;EAC3BA,MAAM,CAAC,EAAE,CAAC,aAAa,GAAG,CAAC;EAC3BA,MAAM,CAAC,EAAE,CAAC,aAAa,GAAG,CAAC;EAC3BA,MAAM,CAAC,EAAE,CAAC,aAAa,GAAG,CAAC;EAC3BA,MAAM,CAAC,EAAE,CAAC,aAAa,GAAG,CAAC;EAC3BA,MAAM,CAAC,EAAE,CAAC,aAAa,GAAG,CAAC;EAC3BA,MAAM,CAAC,EAAE,CAAC,aAAa,GAAG,CAAC;EAC3BA,MAAM,CAAC,EAAE,CAAC,aAAa,GAAG,CAAC;EAC3BA,MAAM,CAAC,EAAE,CAAC,aAAa,GAAG,CAAC;EAC3BA,MAAM,CAAC,EAAE,CAAC,aAAa,GAAG,CAAC;EAC3BA,MAAM,CAAC,EAAE,CAAC,aAAa,GAAG,CAAC;EAC3BA,MAAM,CAAC,EAAE,CAAC,aAAa,GAAG,CAAC;EAC3BA,MAAM,CAAC,EAAE,CAAC,aAAa,GAAG,CAAC;EAC3BA,MAAM,CAAC,EAAE,CAAC,aAAa,GAAG,CAAC;EAC3BA,MAAM,CAAC,EAAE,CAAC,aAAa,GAAG,CAAC;EAC3BA,MAAM,CAAC,EAAE,CAAC,aAAa,GAAG,CAAC;EAC3BA,MAAM,CAAC,EAAE,CAAC,aAAa,GAAG,CAAC;EAC3BA,MAAM,CAAC,EAAE,CAAC,aAAa,GAAG,CAAC;EAC3BA,MAAM,CAAC,EAAE,CAAC,aAAa,GAAG,CAAC;EAC3BA,MAAM,CAAC,EAAE,CAAC,aAAa,GAAG,CAAC;EAC3BA,MAAM,CAAC,EAAE,CAAC,aAAa,GAAG,CAAC;EAC3BA,MAAM,CAAC,EAAE,CAAC,aAAa,GAAG,CAAC;EAC3BA,MAAM,CAAC,EAAE,CAAC,aAAa,GAAG,CAAC;EAC3BA,MAAM,CAAC,EAAE,CAAC,YAAY,MAAM,CAAC;EAC7BA,MAAM,CAAC,EAAE,CAAC,mBAAmB,aAA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"},"metadata":{},"sourceType":"module","externalDependencies":[]}