{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar _a;\nimport * as DOM from './dom.js';\nimport { createElement } from './formattedTextRenderer.js';\nimport { onUnexpectedError } from '../common/errors.js';\nimport { parseHrefAndDimensions, removeMarkdownEscapes } from '../common/htmlContent.js';\nimport { defaultGenerator } from '../common/idGenerator.js';\nimport * as marked from '../common/marked/marked.js';\nimport { insane } from '../common/insane/insane.js';\nimport { parse } from '../common/marshalling.js';\nimport { cloneAndChange } from '../common/objects.js';\nimport { escape } from '../common/strings.js';\nimport { URI } from '../common/uri.js';\nimport { FileAccess, Schemas } from '../common/network.js';\nimport { markdownEscapeEscapedIcons } from '../common/iconLabels.js';\nimport { resolvePath } from '../common/resources.js';\nimport { StandardMouseEvent } from './mouseEvent.js';\nimport { renderLabelWithIcons } from './ui/iconLabel/iconLabels.js';\nimport { Event } from '../common/event.js';\nimport { domEvent } from './event.js';\nconst _ttpInsane = (_a = window.trustedTypes) === null || _a === void 0 ? void 0 : _a.createPolicy('insane', {\n  createHTML(value, options) {\n    return insane(value, options);\n  }\n});\n/**\r\n * Low-level way create a html element from a markdown string.\r\n *\r\n * **Note** that for most cases you should be using [`MarkdownRenderer`](./src/vs/editor/browser/core/markdownRenderer.ts)\r\n * which comes with support for pretty code block rendering and which uses the default way of handling links.\r\n */\nexport function renderMarkdown(markdown) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let markedOptions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var _a;\n  const element = createElement(options);\n  const _uriMassage = function (part) {\n    let data;\n    try {\n      data = parse(decodeURIComponent(part));\n    } catch (e) {\n      // ignore\n    }\n    if (!data) {\n      return part;\n    }\n    data = cloneAndChange(data, value => {\n      if (markdown.uris && markdown.uris[value]) {\n        return URI.revive(markdown.uris[value]);\n      } else {\n        return undefined;\n      }\n    });\n    return encodeURIComponent(JSON.stringify(data));\n  };\n  const _href = function (href, isDomUri) {\n    const data = markdown.uris && markdown.uris[href];\n    if (!data) {\n      return href; // no uri exists\n    }\n\n    let uri = URI.revive(data);\n    if (URI.parse(href).toString() === uri.toString()) {\n      return href; // no tranformation performed\n    }\n\n    if (isDomUri) {\n      // this URI will end up as \"src\"-attribute of a dom node\n      // and because of that special rewriting needs to be done\n      // so that the URI uses a protocol that's understood by\n      // browsers (like http or https)\n      return FileAccess.asBrowserUri(uri).toString(true);\n    }\n    if (uri.query) {\n      uri = uri.with({\n        query: _uriMassage(uri.query)\n      });\n    }\n    return uri.toString();\n  };\n  // signal to code-block render that the\n  // element has been created\n  let signalInnerHTML;\n  const withInnerHTML = new Promise(c => signalInnerHTML = c);\n  const renderer = new marked.Renderer();\n  renderer.image = (href, title, text) => {\n    let dimensions = [];\n    let attributes = [];\n    if (href) {\n      ({\n        href,\n        dimensions\n      } = parseHrefAndDimensions(href));\n      href = _href(href, true);\n      try {\n        const hrefAsUri = URI.parse(href);\n        if (options.baseUrl && hrefAsUri.scheme === Schemas.file) {\n          // absolute or relative local path, or file: uri\n          href = resolvePath(options.baseUrl, href).toString();\n        }\n      } catch (err) {}\n      attributes.push(\"src=\\\"\".concat(href, \"\\\"\"));\n    }\n    if (text) {\n      attributes.push(\"alt=\\\"\".concat(text, \"\\\"\"));\n    }\n    if (title) {\n      attributes.push(\"title=\\\"\".concat(title, \"\\\"\"));\n    }\n    if (dimensions.length) {\n      attributes = attributes.concat(dimensions);\n    }\n    return '<img ' + attributes.join(' ') + '>';\n  };\n  renderer.link = (href, title, text) => {\n    // Remove markdown escapes. Workaround for https://github.com/chjj/marked/issues/829\n    if (href === text) {\n      // raw link case\n      text = removeMarkdownEscapes(text);\n    }\n    href = _href(href, false);\n    if (options.baseUrl) {\n      const hasScheme = /^\\w[\\w\\d+.-]*:/.test(href);\n      if (!hasScheme) {\n        href = resolvePath(options.baseUrl, href).toString();\n      }\n    }\n    title = removeMarkdownEscapes(title);\n    href = removeMarkdownEscapes(href);\n    if (!href || href.match(/^data:|javascript:/i) || href.match(/^command:/i) && !markdown.isTrusted || href.match(/^command:(\\/\\/\\/)?_workbench\\.downloadResource/i)) {\n      // drop the link\n      return text;\n    } else {\n      // HTML Encode href\n      href = href.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;').replace(/'/g, '&#39;');\n      return \"<a href=\\\"#\\\" data-href=\\\"\".concat(href, \"\\\" title=\\\"\").concat(title || href, \"\\\">\").concat(text, \"</a>\");\n    }\n  };\n  renderer.paragraph = text => {\n    if (markdown.supportThemeIcons) {\n      const elements = renderLabelWithIcons(text);\n      text = elements.map(e => typeof e === 'string' ? e : e.outerHTML).join('');\n    }\n    return \"<p>\".concat(text, \"</p>\");\n  };\n  if (options.codeBlockRenderer) {\n    renderer.code = (code, lang) => {\n      const value = options.codeBlockRenderer(lang, code);\n      // when code-block rendering is async we return sync\n      // but update the node with the real result later.\n      const id = defaultGenerator.nextId();\n      const promise = Promise.all([value, withInnerHTML]).then(values => {\n        const span = element.querySelector(\"div[data-code=\\\"\".concat(id, \"\\\"]\"));\n        if (span) {\n          DOM.reset(span, values[0]);\n        }\n      }).catch(_err => {\n        // ignore\n      });\n      if (options.asyncRenderCallback) {\n        promise.then(options.asyncRenderCallback);\n      }\n      return \"<div class=\\\"code\\\" data-code=\\\"\".concat(id, \"\\\">\").concat(escape(code), \"</div>\");\n    };\n  }\n  if (options.actionHandler) {\n    options.actionHandler.disposeables.add(Event.any(domEvent(element, 'click'), domEvent(element, 'auxclick'))(e => {\n      const mouseEvent = new StandardMouseEvent(e);\n      if (!mouseEvent.leftButton && !mouseEvent.middleButton) {\n        return;\n      }\n      let target = mouseEvent.target;\n      if (target.tagName !== 'A') {\n        target = target.parentElement;\n        if (!target || target.tagName !== 'A') {\n          return;\n        }\n      }\n      try {\n        const href = target.dataset['href'];\n        if (href) {\n          options.actionHandler.callback(href, mouseEvent);\n        }\n      } catch (err) {\n        onUnexpectedError(err);\n      } finally {\n        mouseEvent.preventDefault();\n      }\n    }));\n  }\n  // Use our own sanitizer so that we can let through only spans.\n  // Otherwise, we'd be letting all html be rendered.\n  // If we want to allow markdown permitted tags, then we can delete sanitizer and sanitize.\n  // We always pass the output through insane after this so that we don't rely on\n  // marked for sanitization.\n  markedOptions.sanitizer = html => {\n    const match = markdown.isTrusted ? html.match(/^(<span[^>]+>)|(<\\/\\s*span>)$/) : undefined;\n    return match ? html : '';\n  };\n  markedOptions.sanitize = true;\n  markedOptions.silent = true;\n  markedOptions.renderer = renderer;\n  // values that are too long will freeze the UI\n  let value = (_a = markdown.value) !== null && _a !== void 0 ? _a : '';\n  if (value.length > 100000) {\n    value = \"\".concat(value.substr(0, 100000), \"\\u2026\");\n  }\n  // escape theme icons\n  if (markdown.supportThemeIcons) {\n    value = markdownEscapeEscapedIcons(value);\n  }\n  const renderedMarkdown = marked.parse(value, markedOptions);\n  // sanitize with insane\n  element.innerHTML = sanitizeRenderedMarkdown(markdown, renderedMarkdown);\n  // signal that async code blocks can be now be inserted\n  signalInnerHTML();\n  // signal size changes for image tags\n  if (options.asyncRenderCallback) {\n    for (const img of element.getElementsByTagName('img')) {\n      const listener = DOM.addDisposableListener(img, 'load', () => {\n        listener.dispose();\n        options.asyncRenderCallback();\n      });\n    }\n  }\n  return element;\n}\nfunction sanitizeRenderedMarkdown(options, renderedMarkdown) {\n  var _a;\n  const insaneOptions = getInsaneOptions(options);\n  return (_a = _ttpInsane === null || _ttpInsane === void 0 ? void 0 : _ttpInsane.createHTML(renderedMarkdown, insaneOptions)) !== null && _a !== void 0 ? _a : insane(renderedMarkdown, insaneOptions);\n}\nfunction getInsaneOptions(options) {\n  const allowedSchemes = [Schemas.http, Schemas.https, Schemas.mailto, Schemas.data, Schemas.file, Schemas.vscodeRemote, Schemas.vscodeRemoteResource];\n  if (options.isTrusted) {\n    allowedSchemes.push(Schemas.command);\n  }\n  return {\n    allowedSchemes,\n    // allowedTags should included everything that markdown renders to.\n    // Since we have our own sanitize function for marked, it's possible we missed some tag so let insane make sure.\n    // HTML tags that can result from markdown are from reading https://spec.commonmark.org/0.29/\n    // HTML table tags that can result from markdown are from https://github.github.com/gfm/#tables-extension-\n    allowedTags: ['ul', 'li', 'p', 'code', 'blockquote', 'ol', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'hr', 'em', 'pre', 'table', 'thead', 'tbody', 'tr', 'th', 'td', 'div', 'del', 'a', 'strong', 'br', 'img', 'span'],\n    allowedAttributes: {\n      'a': ['href', 'name', 'target', 'data-href'],\n      'img': ['src', 'title', 'alt', 'width', 'height'],\n      'div': ['class', 'data-code'],\n      'span': ['class', 'style'],\n      // https://github.com/microsoft/vscode/issues/95937\n      'th': ['align'],\n      'td': ['align']\n    },\n    filter(token) {\n      if (token.tag === 'span' && options.isTrusted) {\n        if (token.attrs['style'] && Object.keys(token.attrs).length === 1) {\n          return !!token.attrs['style'].match(/^(color\\:#[0-9a-fA-F]+;)?(background-color\\:#[0-9a-fA-F]+;)?$/);\n        } else if (token.attrs['class']) {\n          // The class should match codicon rendering in src\\vs\\base\\common\\codicons.ts\n          return !!token.attrs['class'].match(/^codicon codicon-[a-z\\-]+( codicon-modifier-[a-z\\-]+)?$/);\n        }\n        return false;\n      }\n      return true;\n    }\n  };\n}","map":{"version":3,"names":["_a","DOM","createElement","onUnexpectedError","parseHrefAndDimensions","removeMarkdownEscapes","defaultGenerator","marked","insane","parse","cloneAndChange","escape","URI","FileAccess","Schemas","markdownEscapeEscapedIcons","resolvePath","StandardMouseEvent","renderLabelWithIcons","Event","domEvent","_ttpInsane","window","trustedTypes","createPolicy","createHTML","value","options","renderMarkdown","markdown","arguments","length","undefined","markedOptions","element","_uriMassage","part","data","decodeURIComponent","e","uris","revive","encodeURIComponent","JSON","stringify","_href","href","isDomUri","uri","toString","asBrowserUri","query","with","signalInnerHTML","withInnerHTML","Promise","c","renderer","Renderer","image","title","text","dimensions","attributes","hrefAsUri","baseUrl","scheme","file","err","push","concat","join","link","hasScheme","test","match","isTrusted","replace","paragraph","supportThemeIcons","elements","map","outerHTML","codeBlockRenderer","code","lang","id","nextId","promise","all","then","values","span","querySelector","reset","catch","_err","asyncRenderCallback","actionHandler","disposeables","add","any","mouseEvent","leftButton","middleButton","target","tagName","parentElement","dataset","callback","preventDefault","sanitizer","html","sanitize","silent","substr","renderedMarkdown","innerHTML","sanitizeRenderedMarkdown","img","getElementsByTagName","listener","addDisposableListener","dispose","insaneOptions","getInsaneOptions","allowedSchemes","http","https","mailto","vscodeRemote","vscodeRemoteResource","command","allowedTags","allowedAttributes","filter","token","tag","attrs","Object","keys"],"sources":["C:/Users/Administrator/Desktop/sqllineage-master/sqllineagejs/node_modules/monaco-editor/esm/vs/base/browser/markdownRenderer.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar _a;\r\nimport * as DOM from './dom.js';\r\nimport { createElement } from './formattedTextRenderer.js';\r\nimport { onUnexpectedError } from '../common/errors.js';\r\nimport { parseHrefAndDimensions, removeMarkdownEscapes } from '../common/htmlContent.js';\r\nimport { defaultGenerator } from '../common/idGenerator.js';\r\nimport * as marked from '../common/marked/marked.js';\r\nimport { insane } from '../common/insane/insane.js';\r\nimport { parse } from '../common/marshalling.js';\r\nimport { cloneAndChange } from '../common/objects.js';\r\nimport { escape } from '../common/strings.js';\r\nimport { URI } from '../common/uri.js';\r\nimport { FileAccess, Schemas } from '../common/network.js';\r\nimport { markdownEscapeEscapedIcons } from '../common/iconLabels.js';\r\nimport { resolvePath } from '../common/resources.js';\r\nimport { StandardMouseEvent } from './mouseEvent.js';\r\nimport { renderLabelWithIcons } from './ui/iconLabel/iconLabels.js';\r\nimport { Event } from '../common/event.js';\r\nimport { domEvent } from './event.js';\r\nconst _ttpInsane = (_a = window.trustedTypes) === null || _a === void 0 ? void 0 : _a.createPolicy('insane', {\r\n    createHTML(value, options) {\r\n        return insane(value, options);\r\n    }\r\n});\r\n/**\r\n * Low-level way create a html element from a markdown string.\r\n *\r\n * **Note** that for most cases you should be using [`MarkdownRenderer`](./src/vs/editor/browser/core/markdownRenderer.ts)\r\n * which comes with support for pretty code block rendering and which uses the default way of handling links.\r\n */\r\nexport function renderMarkdown(markdown, options = {}, markedOptions = {}) {\r\n    var _a;\r\n    const element = createElement(options);\r\n    const _uriMassage = function (part) {\r\n        let data;\r\n        try {\r\n            data = parse(decodeURIComponent(part));\r\n        }\r\n        catch (e) {\r\n            // ignore\r\n        }\r\n        if (!data) {\r\n            return part;\r\n        }\r\n        data = cloneAndChange(data, value => {\r\n            if (markdown.uris && markdown.uris[value]) {\r\n                return URI.revive(markdown.uris[value]);\r\n            }\r\n            else {\r\n                return undefined;\r\n            }\r\n        });\r\n        return encodeURIComponent(JSON.stringify(data));\r\n    };\r\n    const _href = function (href, isDomUri) {\r\n        const data = markdown.uris && markdown.uris[href];\r\n        if (!data) {\r\n            return href; // no uri exists\r\n        }\r\n        let uri = URI.revive(data);\r\n        if (URI.parse(href).toString() === uri.toString()) {\r\n            return href; // no tranformation performed\r\n        }\r\n        if (isDomUri) {\r\n            // this URI will end up as \"src\"-attribute of a dom node\r\n            // and because of that special rewriting needs to be done\r\n            // so that the URI uses a protocol that's understood by\r\n            // browsers (like http or https)\r\n            return FileAccess.asBrowserUri(uri).toString(true);\r\n        }\r\n        if (uri.query) {\r\n            uri = uri.with({ query: _uriMassage(uri.query) });\r\n        }\r\n        return uri.toString();\r\n    };\r\n    // signal to code-block render that the\r\n    // element has been created\r\n    let signalInnerHTML;\r\n    const withInnerHTML = new Promise(c => signalInnerHTML = c);\r\n    const renderer = new marked.Renderer();\r\n    renderer.image = (href, title, text) => {\r\n        let dimensions = [];\r\n        let attributes = [];\r\n        if (href) {\r\n            ({ href, dimensions } = parseHrefAndDimensions(href));\r\n            href = _href(href, true);\r\n            try {\r\n                const hrefAsUri = URI.parse(href);\r\n                if (options.baseUrl && hrefAsUri.scheme === Schemas.file) { // absolute or relative local path, or file: uri\r\n                    href = resolvePath(options.baseUrl, href).toString();\r\n                }\r\n            }\r\n            catch (err) { }\r\n            attributes.push(`src=\"${href}\"`);\r\n        }\r\n        if (text) {\r\n            attributes.push(`alt=\"${text}\"`);\r\n        }\r\n        if (title) {\r\n            attributes.push(`title=\"${title}\"`);\r\n        }\r\n        if (dimensions.length) {\r\n            attributes = attributes.concat(dimensions);\r\n        }\r\n        return '<img ' + attributes.join(' ') + '>';\r\n    };\r\n    renderer.link = (href, title, text) => {\r\n        // Remove markdown escapes. Workaround for https://github.com/chjj/marked/issues/829\r\n        if (href === text) { // raw link case\r\n            text = removeMarkdownEscapes(text);\r\n        }\r\n        href = _href(href, false);\r\n        if (options.baseUrl) {\r\n            const hasScheme = /^\\w[\\w\\d+.-]*:/.test(href);\r\n            if (!hasScheme) {\r\n                href = resolvePath(options.baseUrl, href).toString();\r\n            }\r\n        }\r\n        title = removeMarkdownEscapes(title);\r\n        href = removeMarkdownEscapes(href);\r\n        if (!href\r\n            || href.match(/^data:|javascript:/i)\r\n            || (href.match(/^command:/i) && !markdown.isTrusted)\r\n            || href.match(/^command:(\\/\\/\\/)?_workbench\\.downloadResource/i)) {\r\n            // drop the link\r\n            return text;\r\n        }\r\n        else {\r\n            // HTML Encode href\r\n            href = href.replace(/&/g, '&amp;')\r\n                .replace(/</g, '&lt;')\r\n                .replace(/>/g, '&gt;')\r\n                .replace(/\"/g, '&quot;')\r\n                .replace(/'/g, '&#39;');\r\n            return `<a href=\"#\" data-href=\"${href}\" title=\"${title || href}\">${text}</a>`;\r\n        }\r\n    };\r\n    renderer.paragraph = (text) => {\r\n        if (markdown.supportThemeIcons) {\r\n            const elements = renderLabelWithIcons(text);\r\n            text = elements.map(e => typeof e === 'string' ? e : e.outerHTML).join('');\r\n        }\r\n        return `<p>${text}</p>`;\r\n    };\r\n    if (options.codeBlockRenderer) {\r\n        renderer.code = (code, lang) => {\r\n            const value = options.codeBlockRenderer(lang, code);\r\n            // when code-block rendering is async we return sync\r\n            // but update the node with the real result later.\r\n            const id = defaultGenerator.nextId();\r\n            const promise = Promise.all([value, withInnerHTML]).then(values => {\r\n                const span = element.querySelector(`div[data-code=\"${id}\"]`);\r\n                if (span) {\r\n                    DOM.reset(span, values[0]);\r\n                }\r\n            }).catch(_err => {\r\n                // ignore\r\n            });\r\n            if (options.asyncRenderCallback) {\r\n                promise.then(options.asyncRenderCallback);\r\n            }\r\n            return `<div class=\"code\" data-code=\"${id}\">${escape(code)}</div>`;\r\n        };\r\n    }\r\n    if (options.actionHandler) {\r\n        options.actionHandler.disposeables.add(Event.any(domEvent(element, 'click'), domEvent(element, 'auxclick'))(e => {\r\n            const mouseEvent = new StandardMouseEvent(e);\r\n            if (!mouseEvent.leftButton && !mouseEvent.middleButton) {\r\n                return;\r\n            }\r\n            let target = mouseEvent.target;\r\n            if (target.tagName !== 'A') {\r\n                target = target.parentElement;\r\n                if (!target || target.tagName !== 'A') {\r\n                    return;\r\n                }\r\n            }\r\n            try {\r\n                const href = target.dataset['href'];\r\n                if (href) {\r\n                    options.actionHandler.callback(href, mouseEvent);\r\n                }\r\n            }\r\n            catch (err) {\r\n                onUnexpectedError(err);\r\n            }\r\n            finally {\r\n                mouseEvent.preventDefault();\r\n            }\r\n        }));\r\n    }\r\n    // Use our own sanitizer so that we can let through only spans.\r\n    // Otherwise, we'd be letting all html be rendered.\r\n    // If we want to allow markdown permitted tags, then we can delete sanitizer and sanitize.\r\n    // We always pass the output through insane after this so that we don't rely on\r\n    // marked for sanitization.\r\n    markedOptions.sanitizer = (html) => {\r\n        const match = markdown.isTrusted ? html.match(/^(<span[^>]+>)|(<\\/\\s*span>)$/) : undefined;\r\n        return match ? html : '';\r\n    };\r\n    markedOptions.sanitize = true;\r\n    markedOptions.silent = true;\r\n    markedOptions.renderer = renderer;\r\n    // values that are too long will freeze the UI\r\n    let value = (_a = markdown.value) !== null && _a !== void 0 ? _a : '';\r\n    if (value.length > 100000) {\r\n        value = `${value.substr(0, 100000)}…`;\r\n    }\r\n    // escape theme icons\r\n    if (markdown.supportThemeIcons) {\r\n        value = markdownEscapeEscapedIcons(value);\r\n    }\r\n    const renderedMarkdown = marked.parse(value, markedOptions);\r\n    // sanitize with insane\r\n    element.innerHTML = sanitizeRenderedMarkdown(markdown, renderedMarkdown);\r\n    // signal that async code blocks can be now be inserted\r\n    signalInnerHTML();\r\n    // signal size changes for image tags\r\n    if (options.asyncRenderCallback) {\r\n        for (const img of element.getElementsByTagName('img')) {\r\n            const listener = DOM.addDisposableListener(img, 'load', () => {\r\n                listener.dispose();\r\n                options.asyncRenderCallback();\r\n            });\r\n        }\r\n    }\r\n    return element;\r\n}\r\nfunction sanitizeRenderedMarkdown(options, renderedMarkdown) {\r\n    var _a;\r\n    const insaneOptions = getInsaneOptions(options);\r\n    return (_a = _ttpInsane === null || _ttpInsane === void 0 ? void 0 : _ttpInsane.createHTML(renderedMarkdown, insaneOptions)) !== null && _a !== void 0 ? _a : insane(renderedMarkdown, insaneOptions);\r\n}\r\nfunction getInsaneOptions(options) {\r\n    const allowedSchemes = [\r\n        Schemas.http,\r\n        Schemas.https,\r\n        Schemas.mailto,\r\n        Schemas.data,\r\n        Schemas.file,\r\n        Schemas.vscodeRemote,\r\n        Schemas.vscodeRemoteResource,\r\n    ];\r\n    if (options.isTrusted) {\r\n        allowedSchemes.push(Schemas.command);\r\n    }\r\n    return {\r\n        allowedSchemes,\r\n        // allowedTags should included everything that markdown renders to.\r\n        // Since we have our own sanitize function for marked, it's possible we missed some tag so let insane make sure.\r\n        // HTML tags that can result from markdown are from reading https://spec.commonmark.org/0.29/\r\n        // HTML table tags that can result from markdown are from https://github.github.com/gfm/#tables-extension-\r\n        allowedTags: ['ul', 'li', 'p', 'code', 'blockquote', 'ol', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'hr', 'em', 'pre', 'table', 'thead', 'tbody', 'tr', 'th', 'td', 'div', 'del', 'a', 'strong', 'br', 'img', 'span'],\r\n        allowedAttributes: {\r\n            'a': ['href', 'name', 'target', 'data-href'],\r\n            'img': ['src', 'title', 'alt', 'width', 'height'],\r\n            'div': ['class', 'data-code'],\r\n            'span': ['class', 'style'],\r\n            // https://github.com/microsoft/vscode/issues/95937\r\n            'th': ['align'],\r\n            'td': ['align']\r\n        },\r\n        filter(token) {\r\n            if (token.tag === 'span' && options.isTrusted) {\r\n                if (token.attrs['style'] && (Object.keys(token.attrs).length === 1)) {\r\n                    return !!token.attrs['style'].match(/^(color\\:#[0-9a-fA-F]+;)?(background-color\\:#[0-9a-fA-F]+;)?$/);\r\n                }\r\n                else if (token.attrs['class']) {\r\n                    // The class should match codicon rendering in src\\vs\\base\\common\\codicons.ts\r\n                    return !!token.attrs['class'].match(/^codicon codicon-[a-z\\-]+( codicon-modifier-[a-z\\-]+)?$/);\r\n                }\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n    };\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}