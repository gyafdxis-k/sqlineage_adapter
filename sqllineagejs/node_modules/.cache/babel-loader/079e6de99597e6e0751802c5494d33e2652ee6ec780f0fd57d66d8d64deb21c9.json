{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport { CancellationToken } from '../../../base/common/cancellation.js';\nimport { Lazy } from '../../../base/common/lazy.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { escapeRegExpCharacters } from '../../../base/common/strings.js';\nimport { EditorAction, EditorCommand } from '../../browser/editorExtensions.js';\nimport { IBulkEditService, ResourceEdit } from '../../browser/services/bulkEditService.js';\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\nimport { codeActionCommandId, fixAllCommandId, organizeImportsCommandId, refactorCommandId, sourceActionCommandId } from './codeAction.js';\nimport { CodeActionUi } from './codeActionUi.js';\nimport { MessageController } from '../message/messageController.js';\nimport * as nls from '../../../nls.js';\nimport { ICommandService } from '../../../platform/commands/common/commands.js';\nimport { ContextKeyExpr, IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\nimport { IMarkerService } from '../../../platform/markers/common/markers.js';\nimport { INotificationService } from '../../../platform/notification/common/notification.js';\nimport { IEditorProgressService } from '../../../platform/progress/common/progress.js';\nimport { ITelemetryService } from '../../../platform/telemetry/common/telemetry.js';\nimport { CodeActionModel, SUPPORTED_CODE_ACTIONS } from './codeActionModel.js';\nimport { CodeActionCommandArgs, CodeActionKind } from './types.js';\nfunction contextKeyForSupportedActions(kind) {\n  return ContextKeyExpr.regex(SUPPORTED_CODE_ACTIONS.keys()[0], new RegExp('(\\\\s|^)' + escapeRegExpCharacters(kind.value) + '\\\\b'));\n}\nconst argsSchema = {\n  type: 'object',\n  defaultSnippets: [{\n    body: {\n      kind: ''\n    }\n  }],\n  properties: {\n    'kind': {\n      type: 'string',\n      description: nls.localize('args.schema.kind', \"Kind of the code action to run.\")\n    },\n    'apply': {\n      type: 'string',\n      description: nls.localize('args.schema.apply', \"Controls when the returned actions are applied.\"),\n      default: \"ifSingle\" /* IfSingle */,\n      enum: [\"first\" /* First */, \"ifSingle\" /* IfSingle */, \"never\" /* Never */],\n      enumDescriptions: [nls.localize('args.schema.apply.first', \"Always apply the first returned code action.\"), nls.localize('args.schema.apply.ifSingle', \"Apply the first returned code action if it is the only one.\"), nls.localize('args.schema.apply.never', \"Do not apply the returned code actions.\")]\n    },\n    'preferred': {\n      type: 'boolean',\n      default: false,\n      description: nls.localize('args.schema.preferred', \"Controls if only preferred code actions should be returned.\")\n    }\n  }\n};\nlet QuickFixController = class QuickFixController extends Disposable {\n  constructor(editor, markerService, contextKeyService, progressService, _instantiationService) {\n    super();\n    this._instantiationService = _instantiationService;\n    this._editor = editor;\n    this._model = this._register(new CodeActionModel(this._editor, markerService, contextKeyService, progressService));\n    this._register(this._model.onDidChangeState(newState => this.update(newState)));\n    this._ui = new Lazy(() => this._register(new CodeActionUi(editor, QuickFixAction.Id, AutoFixAction.Id, {\n      applyCodeAction: (action, retrigger) => __awaiter(this, void 0, void 0, function* () {\n        try {\n          yield this._applyCodeAction(action);\n        } finally {\n          if (retrigger) {\n            this._trigger({\n              type: 1 /* Auto */,\n              filter: {}\n            });\n          }\n        }\n      })\n    }, this._instantiationService)));\n  }\n  static get(editor) {\n    return editor.getContribution(QuickFixController.ID);\n  }\n  update(newState) {\n    this._ui.getValue().update(newState);\n  }\n  showCodeActions(trigger, actions, at) {\n    return this._ui.getValue().showCodeActionList(trigger, actions, at, {\n      includeDisabledActions: false\n    });\n  }\n  manualTriggerAtCurrentPosition(notAvailableMessage, filter, autoApply) {\n    if (!this._editor.hasModel()) {\n      return;\n    }\n    MessageController.get(this._editor).closeMessage();\n    const triggerPosition = this._editor.getPosition();\n    this._trigger({\n      type: 2 /* Manual */,\n      filter,\n      autoApply,\n      context: {\n        notAvailableMessage,\n        position: triggerPosition\n      }\n    });\n  }\n  _trigger(trigger) {\n    return this._model.trigger(trigger);\n  }\n  _applyCodeAction(action) {\n    return this._instantiationService.invokeFunction(applyCodeAction, action, this._editor);\n  }\n};\nQuickFixController.ID = 'editor.contrib.quickFixController';\nQuickFixController = __decorate([__param(1, IMarkerService), __param(2, IContextKeyService), __param(3, IEditorProgressService), __param(4, IInstantiationService)], QuickFixController);\nexport { QuickFixController };\nexport function applyCodeAction(accessor, item, editor) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const bulkEditService = accessor.get(IBulkEditService);\n    const commandService = accessor.get(ICommandService);\n    const telemetryService = accessor.get(ITelemetryService);\n    const notificationService = accessor.get(INotificationService);\n    telemetryService.publicLog2('codeAction.applyCodeAction', {\n      codeActionTitle: item.action.title,\n      codeActionKind: item.action.kind,\n      codeActionIsPreferred: !!item.action.isPreferred\n    });\n    yield item.resolve(CancellationToken.None);\n    if (item.action.edit) {\n      yield bulkEditService.apply(ResourceEdit.convert(item.action.edit), {\n        editor,\n        label: item.action.title\n      });\n    }\n    if (item.action.command) {\n      try {\n        yield commandService.executeCommand(item.action.command.id, ...(item.action.command.arguments || []));\n      } catch (err) {\n        const message = asMessage(err);\n        notificationService.error(typeof message === 'string' ? message : nls.localize('applyCodeActionFailed', \"An unknown error occurred while applying the code action\"));\n      }\n    }\n  });\n}\nfunction asMessage(err) {\n  if (typeof err === 'string') {\n    return err;\n  } else if (err instanceof Error && typeof err.message === 'string') {\n    return err.message;\n  } else {\n    return undefined;\n  }\n}\nfunction triggerCodeActionsForEditorSelection(editor, notAvailableMessage, filter, autoApply) {\n  if (editor.hasModel()) {\n    const controller = QuickFixController.get(editor);\n    if (controller) {\n      controller.manualTriggerAtCurrentPosition(notAvailableMessage, filter, autoApply);\n    }\n  }\n}\nexport class QuickFixAction extends EditorAction {\n  constructor() {\n    super({\n      id: QuickFixAction.Id,\n      label: nls.localize('quickfix.trigger.label', \"Quick Fix...\"),\n      alias: 'Quick Fix...',\n      precondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasCodeActionsProvider),\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: 2048 /* CtrlCmd */ | 84 /* US_DOT */,\n        weight: 100 /* EditorContrib */\n      }\n    });\n  }\n\n  run(_accessor, editor) {\n    return triggerCodeActionsForEditorSelection(editor, nls.localize('editor.action.quickFix.noneMessage', \"No code actions available\"), undefined, undefined);\n  }\n}\nQuickFixAction.Id = 'editor.action.quickFix';\nexport class CodeActionCommand extends EditorCommand {\n  constructor() {\n    super({\n      id: codeActionCommandId,\n      precondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasCodeActionsProvider),\n      description: {\n        description: 'Trigger a code action',\n        args: [{\n          name: 'args',\n          schema: argsSchema\n        }]\n      }\n    });\n  }\n  runEditorCommand(_accessor, editor, userArgs) {\n    const args = CodeActionCommandArgs.fromUser(userArgs, {\n      kind: CodeActionKind.Empty,\n      apply: \"ifSingle\" /* IfSingle */\n    });\n\n    return triggerCodeActionsForEditorSelection(editor, typeof (userArgs === null || userArgs === void 0 ? void 0 : userArgs.kind) === 'string' ? args.preferred ? nls.localize('editor.action.codeAction.noneMessage.preferred.kind', \"No preferred code actions for '{0}' available\", userArgs.kind) : nls.localize('editor.action.codeAction.noneMessage.kind', \"No code actions for '{0}' available\", userArgs.kind) : args.preferred ? nls.localize('editor.action.codeAction.noneMessage.preferred', \"No preferred code actions available\") : nls.localize('editor.action.codeAction.noneMessage', \"No code actions available\"), {\n      include: args.kind,\n      includeSourceActions: true,\n      onlyIncludePreferredActions: args.preferred\n    }, args.apply);\n  }\n}\nexport class RefactorAction extends EditorAction {\n  constructor() {\n    super({\n      id: refactorCommandId,\n      label: nls.localize('refactor.label', \"Refactor...\"),\n      alias: 'Refactor...',\n      precondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasCodeActionsProvider),\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 48 /* KEY_R */,\n        mac: {\n          primary: 256 /* WinCtrl */ | 1024 /* Shift */ | 48 /* KEY_R */\n        },\n\n        weight: 100 /* EditorContrib */\n      },\n\n      contextMenuOpts: {\n        group: '1_modification',\n        order: 2,\n        when: ContextKeyExpr.and(EditorContextKeys.writable, contextKeyForSupportedActions(CodeActionKind.Refactor))\n      },\n      description: {\n        description: 'Refactor...',\n        args: [{\n          name: 'args',\n          schema: argsSchema\n        }]\n      }\n    });\n  }\n  run(_accessor, editor, userArgs) {\n    const args = CodeActionCommandArgs.fromUser(userArgs, {\n      kind: CodeActionKind.Refactor,\n      apply: \"never\" /* Never */\n    });\n\n    return triggerCodeActionsForEditorSelection(editor, typeof (userArgs === null || userArgs === void 0 ? void 0 : userArgs.kind) === 'string' ? args.preferred ? nls.localize('editor.action.refactor.noneMessage.preferred.kind', \"No preferred refactorings for '{0}' available\", userArgs.kind) : nls.localize('editor.action.refactor.noneMessage.kind', \"No refactorings for '{0}' available\", userArgs.kind) : args.preferred ? nls.localize('editor.action.refactor.noneMessage.preferred', \"No preferred refactorings available\") : nls.localize('editor.action.refactor.noneMessage', \"No refactorings available\"), {\n      include: CodeActionKind.Refactor.contains(args.kind) ? args.kind : CodeActionKind.None,\n      onlyIncludePreferredActions: args.preferred\n    }, args.apply);\n  }\n}\nexport class SourceAction extends EditorAction {\n  constructor() {\n    super({\n      id: sourceActionCommandId,\n      label: nls.localize('source.label', \"Source Action...\"),\n      alias: 'Source Action...',\n      precondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasCodeActionsProvider),\n      contextMenuOpts: {\n        group: '1_modification',\n        order: 2.1,\n        when: ContextKeyExpr.and(EditorContextKeys.writable, contextKeyForSupportedActions(CodeActionKind.Source))\n      },\n      description: {\n        description: 'Source Action...',\n        args: [{\n          name: 'args',\n          schema: argsSchema\n        }]\n      }\n    });\n  }\n  run(_accessor, editor, userArgs) {\n    const args = CodeActionCommandArgs.fromUser(userArgs, {\n      kind: CodeActionKind.Source,\n      apply: \"never\" /* Never */\n    });\n\n    return triggerCodeActionsForEditorSelection(editor, typeof (userArgs === null || userArgs === void 0 ? void 0 : userArgs.kind) === 'string' ? args.preferred ? nls.localize('editor.action.source.noneMessage.preferred.kind', \"No preferred source actions for '{0}' available\", userArgs.kind) : nls.localize('editor.action.source.noneMessage.kind', \"No source actions for '{0}' available\", userArgs.kind) : args.preferred ? nls.localize('editor.action.source.noneMessage.preferred', \"No preferred source actions available\") : nls.localize('editor.action.source.noneMessage', \"No source actions available\"), {\n      include: CodeActionKind.Source.contains(args.kind) ? args.kind : CodeActionKind.None,\n      includeSourceActions: true,\n      onlyIncludePreferredActions: args.preferred\n    }, args.apply);\n  }\n}\nexport class OrganizeImportsAction extends EditorAction {\n  constructor() {\n    super({\n      id: organizeImportsCommandId,\n      label: nls.localize('organizeImports.label', \"Organize Imports\"),\n      alias: 'Organize Imports',\n      precondition: ContextKeyExpr.and(EditorContextKeys.writable, contextKeyForSupportedActions(CodeActionKind.SourceOrganizeImports)),\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: 1024 /* Shift */ | 512 /* Alt */ | 45 /* KEY_O */,\n        weight: 100 /* EditorContrib */\n      }\n    });\n  }\n\n  run(_accessor, editor) {\n    return triggerCodeActionsForEditorSelection(editor, nls.localize('editor.action.organize.noneMessage', \"No organize imports action available\"), {\n      include: CodeActionKind.SourceOrganizeImports,\n      includeSourceActions: true\n    }, \"ifSingle\" /* IfSingle */);\n  }\n}\n\nexport class FixAllAction extends EditorAction {\n  constructor() {\n    super({\n      id: fixAllCommandId,\n      label: nls.localize('fixAll.label', \"Fix All\"),\n      alias: 'Fix All',\n      precondition: ContextKeyExpr.and(EditorContextKeys.writable, contextKeyForSupportedActions(CodeActionKind.SourceFixAll))\n    });\n  }\n  run(_accessor, editor) {\n    return triggerCodeActionsForEditorSelection(editor, nls.localize('fixAll.noneMessage', \"No fix all action available\"), {\n      include: CodeActionKind.SourceFixAll,\n      includeSourceActions: true\n    }, \"ifSingle\" /* IfSingle */);\n  }\n}\n\nexport class AutoFixAction extends EditorAction {\n  constructor() {\n    super({\n      id: AutoFixAction.Id,\n      label: nls.localize('autoFix.label', \"Auto Fix...\"),\n      alias: 'Auto Fix...',\n      precondition: ContextKeyExpr.and(EditorContextKeys.writable, contextKeyForSupportedActions(CodeActionKind.QuickFix)),\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: 512 /* Alt */ | 1024 /* Shift */ | 84 /* US_DOT */,\n        mac: {\n          primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 84 /* US_DOT */\n        },\n\n        weight: 100 /* EditorContrib */\n      }\n    });\n  }\n\n  run(_accessor, editor) {\n    return triggerCodeActionsForEditorSelection(editor, nls.localize('editor.action.autoFix.noneMessage', \"No auto fixes available\"), {\n      include: CodeActionKind.QuickFix,\n      onlyIncludePreferredActions: true\n    }, \"ifSingle\" /* IfSingle */);\n  }\n}\n\nAutoFixAction.Id = 'editor.action.autoFix';","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","CancellationToken","Lazy","Disposable","escapeRegExpCharacters","EditorAction","EditorCommand","IBulkEditService","ResourceEdit","EditorContextKeys","codeActionCommandId","fixAllCommandId","organizeImportsCommandId","refactorCommandId","sourceActionCommandId","CodeActionUi","MessageController","nls","ICommandService","ContextKeyExpr","IContextKeyService","IInstantiationService","IMarkerService","INotificationService","IEditorProgressService","ITelemetryService","CodeActionModel","SUPPORTED_CODE_ACTIONS","CodeActionCommandArgs","CodeActionKind","contextKeyForSupportedActions","kind","regex","keys","RegExp","argsSchema","type","defaultSnippets","body","properties","description","localize","default","enum","enumDescriptions","QuickFixController","constructor","editor","markerService","contextKeyService","progressService","_instantiationService","_editor","_model","_register","onDidChangeState","newState","update","_ui","QuickFixAction","Id","AutoFixAction","applyCodeAction","action","retrigger","_applyCodeAction","_trigger","filter","get","getContribution","ID","getValue","showCodeActions","trigger","actions","at","showCodeActionList","includeDisabledActions","manualTriggerAtCurrentPosition","notAvailableMessage","autoApply","hasModel","closeMessage","triggerPosition","getPosition","context","position","invokeFunction","accessor","item","bulkEditService","commandService","telemetryService","notificationService","publicLog2","codeActionTitle","title","codeActionKind","codeActionIsPreferred","isPreferred","None","edit","convert","label","command","executeCommand","id","err","message","asMessage","error","Error","undefined","triggerCodeActionsForEditorSelection","controller","alias","precondition","and","writable","hasCodeActionsProvider","kbOpts","kbExpr","editorTextFocus","primary","weight","run","_accessor","CodeActionCommand","args","name","schema","runEditorCommand","userArgs","fromUser","Empty","preferred","include","includeSourceActions","onlyIncludePreferredActions","RefactorAction","mac","contextMenuOpts","group","order","when","Refactor","contains","SourceAction","Source","OrganizeImportsAction","SourceOrganizeImports","FixAllAction","SourceFixAll","QuickFix"],"sources":["C:/Users/Administrator/Desktop/sqllineage-master/sqllineagejs/node_modules/monaco-editor/esm/vs/editor/contrib/codeAction/codeActionCommands.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { CancellationToken } from '../../../base/common/cancellation.js';\r\nimport { Lazy } from '../../../base/common/lazy.js';\r\nimport { Disposable } from '../../../base/common/lifecycle.js';\r\nimport { escapeRegExpCharacters } from '../../../base/common/strings.js';\r\nimport { EditorAction, EditorCommand } from '../../browser/editorExtensions.js';\r\nimport { IBulkEditService, ResourceEdit } from '../../browser/services/bulkEditService.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { codeActionCommandId, fixAllCommandId, organizeImportsCommandId, refactorCommandId, sourceActionCommandId } from './codeAction.js';\r\nimport { CodeActionUi } from './codeActionUi.js';\r\nimport { MessageController } from '../message/messageController.js';\r\nimport * as nls from '../../../nls.js';\r\nimport { ICommandService } from '../../../platform/commands/common/commands.js';\r\nimport { ContextKeyExpr, IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\r\nimport { IMarkerService } from '../../../platform/markers/common/markers.js';\r\nimport { INotificationService } from '../../../platform/notification/common/notification.js';\r\nimport { IEditorProgressService } from '../../../platform/progress/common/progress.js';\r\nimport { ITelemetryService } from '../../../platform/telemetry/common/telemetry.js';\r\nimport { CodeActionModel, SUPPORTED_CODE_ACTIONS } from './codeActionModel.js';\r\nimport { CodeActionCommandArgs, CodeActionKind } from './types.js';\r\nfunction contextKeyForSupportedActions(kind) {\r\n    return ContextKeyExpr.regex(SUPPORTED_CODE_ACTIONS.keys()[0], new RegExp('(\\\\s|^)' + escapeRegExpCharacters(kind.value) + '\\\\b'));\r\n}\r\nconst argsSchema = {\r\n    type: 'object',\r\n    defaultSnippets: [{ body: { kind: '' } }],\r\n    properties: {\r\n        'kind': {\r\n            type: 'string',\r\n            description: nls.localize('args.schema.kind', \"Kind of the code action to run.\"),\r\n        },\r\n        'apply': {\r\n            type: 'string',\r\n            description: nls.localize('args.schema.apply', \"Controls when the returned actions are applied.\"),\r\n            default: \"ifSingle\" /* IfSingle */,\r\n            enum: [\"first\" /* First */, \"ifSingle\" /* IfSingle */, \"never\" /* Never */],\r\n            enumDescriptions: [\r\n                nls.localize('args.schema.apply.first', \"Always apply the first returned code action.\"),\r\n                nls.localize('args.schema.apply.ifSingle', \"Apply the first returned code action if it is the only one.\"),\r\n                nls.localize('args.schema.apply.never', \"Do not apply the returned code actions.\"),\r\n            ]\r\n        },\r\n        'preferred': {\r\n            type: 'boolean',\r\n            default: false,\r\n            description: nls.localize('args.schema.preferred', \"Controls if only preferred code actions should be returned.\"),\r\n        }\r\n    }\r\n};\r\nlet QuickFixController = class QuickFixController extends Disposable {\r\n    constructor(editor, markerService, contextKeyService, progressService, _instantiationService) {\r\n        super();\r\n        this._instantiationService = _instantiationService;\r\n        this._editor = editor;\r\n        this._model = this._register(new CodeActionModel(this._editor, markerService, contextKeyService, progressService));\r\n        this._register(this._model.onDidChangeState(newState => this.update(newState)));\r\n        this._ui = new Lazy(() => this._register(new CodeActionUi(editor, QuickFixAction.Id, AutoFixAction.Id, {\r\n            applyCodeAction: (action, retrigger) => __awaiter(this, void 0, void 0, function* () {\r\n                try {\r\n                    yield this._applyCodeAction(action);\r\n                }\r\n                finally {\r\n                    if (retrigger) {\r\n                        this._trigger({ type: 1 /* Auto */, filter: {} });\r\n                    }\r\n                }\r\n            })\r\n        }, this._instantiationService)));\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(QuickFixController.ID);\r\n    }\r\n    update(newState) {\r\n        this._ui.getValue().update(newState);\r\n    }\r\n    showCodeActions(trigger, actions, at) {\r\n        return this._ui.getValue().showCodeActionList(trigger, actions, at, { includeDisabledActions: false });\r\n    }\r\n    manualTriggerAtCurrentPosition(notAvailableMessage, filter, autoApply) {\r\n        if (!this._editor.hasModel()) {\r\n            return;\r\n        }\r\n        MessageController.get(this._editor).closeMessage();\r\n        const triggerPosition = this._editor.getPosition();\r\n        this._trigger({ type: 2 /* Manual */, filter, autoApply, context: { notAvailableMessage, position: triggerPosition } });\r\n    }\r\n    _trigger(trigger) {\r\n        return this._model.trigger(trigger);\r\n    }\r\n    _applyCodeAction(action) {\r\n        return this._instantiationService.invokeFunction(applyCodeAction, action, this._editor);\r\n    }\r\n};\r\nQuickFixController.ID = 'editor.contrib.quickFixController';\r\nQuickFixController = __decorate([\r\n    __param(1, IMarkerService),\r\n    __param(2, IContextKeyService),\r\n    __param(3, IEditorProgressService),\r\n    __param(4, IInstantiationService)\r\n], QuickFixController);\r\nexport { QuickFixController };\r\nexport function applyCodeAction(accessor, item, editor) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const bulkEditService = accessor.get(IBulkEditService);\r\n        const commandService = accessor.get(ICommandService);\r\n        const telemetryService = accessor.get(ITelemetryService);\r\n        const notificationService = accessor.get(INotificationService);\r\n        telemetryService.publicLog2('codeAction.applyCodeAction', {\r\n            codeActionTitle: item.action.title,\r\n            codeActionKind: item.action.kind,\r\n            codeActionIsPreferred: !!item.action.isPreferred,\r\n        });\r\n        yield item.resolve(CancellationToken.None);\r\n        if (item.action.edit) {\r\n            yield bulkEditService.apply(ResourceEdit.convert(item.action.edit), { editor, label: item.action.title });\r\n        }\r\n        if (item.action.command) {\r\n            try {\r\n                yield commandService.executeCommand(item.action.command.id, ...(item.action.command.arguments || []));\r\n            }\r\n            catch (err) {\r\n                const message = asMessage(err);\r\n                notificationService.error(typeof message === 'string'\r\n                    ? message\r\n                    : nls.localize('applyCodeActionFailed', \"An unknown error occurred while applying the code action\"));\r\n            }\r\n        }\r\n    });\r\n}\r\nfunction asMessage(err) {\r\n    if (typeof err === 'string') {\r\n        return err;\r\n    }\r\n    else if (err instanceof Error && typeof err.message === 'string') {\r\n        return err.message;\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n}\r\nfunction triggerCodeActionsForEditorSelection(editor, notAvailableMessage, filter, autoApply) {\r\n    if (editor.hasModel()) {\r\n        const controller = QuickFixController.get(editor);\r\n        if (controller) {\r\n            controller.manualTriggerAtCurrentPosition(notAvailableMessage, filter, autoApply);\r\n        }\r\n    }\r\n}\r\nexport class QuickFixAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: QuickFixAction.Id,\r\n            label: nls.localize('quickfix.trigger.label', \"Quick Fix...\"),\r\n            alias: 'Quick Fix...',\r\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasCodeActionsProvider),\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 2048 /* CtrlCmd */ | 84 /* US_DOT */,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(_accessor, editor) {\r\n        return triggerCodeActionsForEditorSelection(editor, nls.localize('editor.action.quickFix.noneMessage', \"No code actions available\"), undefined, undefined);\r\n    }\r\n}\r\nQuickFixAction.Id = 'editor.action.quickFix';\r\nexport class CodeActionCommand extends EditorCommand {\r\n    constructor() {\r\n        super({\r\n            id: codeActionCommandId,\r\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasCodeActionsProvider),\r\n            description: {\r\n                description: 'Trigger a code action',\r\n                args: [{ name: 'args', schema: argsSchema, }]\r\n            }\r\n        });\r\n    }\r\n    runEditorCommand(_accessor, editor, userArgs) {\r\n        const args = CodeActionCommandArgs.fromUser(userArgs, {\r\n            kind: CodeActionKind.Empty,\r\n            apply: \"ifSingle\" /* IfSingle */,\r\n        });\r\n        return triggerCodeActionsForEditorSelection(editor, typeof (userArgs === null || userArgs === void 0 ? void 0 : userArgs.kind) === 'string'\r\n            ? args.preferred\r\n                ? nls.localize('editor.action.codeAction.noneMessage.preferred.kind', \"No preferred code actions for '{0}' available\", userArgs.kind)\r\n                : nls.localize('editor.action.codeAction.noneMessage.kind', \"No code actions for '{0}' available\", userArgs.kind)\r\n            : args.preferred\r\n                ? nls.localize('editor.action.codeAction.noneMessage.preferred', \"No preferred code actions available\")\r\n                : nls.localize('editor.action.codeAction.noneMessage', \"No code actions available\"), {\r\n            include: args.kind,\r\n            includeSourceActions: true,\r\n            onlyIncludePreferredActions: args.preferred,\r\n        }, args.apply);\r\n    }\r\n}\r\nexport class RefactorAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: refactorCommandId,\r\n            label: nls.localize('refactor.label', \"Refactor...\"),\r\n            alias: 'Refactor...',\r\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasCodeActionsProvider),\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 48 /* KEY_R */,\r\n                mac: {\r\n                    primary: 256 /* WinCtrl */ | 1024 /* Shift */ | 48 /* KEY_R */\r\n                },\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            contextMenuOpts: {\r\n                group: '1_modification',\r\n                order: 2,\r\n                when: ContextKeyExpr.and(EditorContextKeys.writable, contextKeyForSupportedActions(CodeActionKind.Refactor)),\r\n            },\r\n            description: {\r\n                description: 'Refactor...',\r\n                args: [{ name: 'args', schema: argsSchema }]\r\n            }\r\n        });\r\n    }\r\n    run(_accessor, editor, userArgs) {\r\n        const args = CodeActionCommandArgs.fromUser(userArgs, {\r\n            kind: CodeActionKind.Refactor,\r\n            apply: \"never\" /* Never */\r\n        });\r\n        return triggerCodeActionsForEditorSelection(editor, typeof (userArgs === null || userArgs === void 0 ? void 0 : userArgs.kind) === 'string'\r\n            ? args.preferred\r\n                ? nls.localize('editor.action.refactor.noneMessage.preferred.kind', \"No preferred refactorings for '{0}' available\", userArgs.kind)\r\n                : nls.localize('editor.action.refactor.noneMessage.kind', \"No refactorings for '{0}' available\", userArgs.kind)\r\n            : args.preferred\r\n                ? nls.localize('editor.action.refactor.noneMessage.preferred', \"No preferred refactorings available\")\r\n                : nls.localize('editor.action.refactor.noneMessage', \"No refactorings available\"), {\r\n            include: CodeActionKind.Refactor.contains(args.kind) ? args.kind : CodeActionKind.None,\r\n            onlyIncludePreferredActions: args.preferred,\r\n        }, args.apply);\r\n    }\r\n}\r\nexport class SourceAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: sourceActionCommandId,\r\n            label: nls.localize('source.label', \"Source Action...\"),\r\n            alias: 'Source Action...',\r\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasCodeActionsProvider),\r\n            contextMenuOpts: {\r\n                group: '1_modification',\r\n                order: 2.1,\r\n                when: ContextKeyExpr.and(EditorContextKeys.writable, contextKeyForSupportedActions(CodeActionKind.Source)),\r\n            },\r\n            description: {\r\n                description: 'Source Action...',\r\n                args: [{ name: 'args', schema: argsSchema }]\r\n            }\r\n        });\r\n    }\r\n    run(_accessor, editor, userArgs) {\r\n        const args = CodeActionCommandArgs.fromUser(userArgs, {\r\n            kind: CodeActionKind.Source,\r\n            apply: \"never\" /* Never */\r\n        });\r\n        return triggerCodeActionsForEditorSelection(editor, typeof (userArgs === null || userArgs === void 0 ? void 0 : userArgs.kind) === 'string'\r\n            ? args.preferred\r\n                ? nls.localize('editor.action.source.noneMessage.preferred.kind', \"No preferred source actions for '{0}' available\", userArgs.kind)\r\n                : nls.localize('editor.action.source.noneMessage.kind', \"No source actions for '{0}' available\", userArgs.kind)\r\n            : args.preferred\r\n                ? nls.localize('editor.action.source.noneMessage.preferred', \"No preferred source actions available\")\r\n                : nls.localize('editor.action.source.noneMessage', \"No source actions available\"), {\r\n            include: CodeActionKind.Source.contains(args.kind) ? args.kind : CodeActionKind.None,\r\n            includeSourceActions: true,\r\n            onlyIncludePreferredActions: args.preferred,\r\n        }, args.apply);\r\n    }\r\n}\r\nexport class OrganizeImportsAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: organizeImportsCommandId,\r\n            label: nls.localize('organizeImports.label', \"Organize Imports\"),\r\n            alias: 'Organize Imports',\r\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, contextKeyForSupportedActions(CodeActionKind.SourceOrganizeImports)),\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 1024 /* Shift */ | 512 /* Alt */ | 45 /* KEY_O */,\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n        });\r\n    }\r\n    run(_accessor, editor) {\r\n        return triggerCodeActionsForEditorSelection(editor, nls.localize('editor.action.organize.noneMessage', \"No organize imports action available\"), { include: CodeActionKind.SourceOrganizeImports, includeSourceActions: true }, \"ifSingle\" /* IfSingle */);\r\n    }\r\n}\r\nexport class FixAllAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: fixAllCommandId,\r\n            label: nls.localize('fixAll.label', \"Fix All\"),\r\n            alias: 'Fix All',\r\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, contextKeyForSupportedActions(CodeActionKind.SourceFixAll))\r\n        });\r\n    }\r\n    run(_accessor, editor) {\r\n        return triggerCodeActionsForEditorSelection(editor, nls.localize('fixAll.noneMessage', \"No fix all action available\"), { include: CodeActionKind.SourceFixAll, includeSourceActions: true }, \"ifSingle\" /* IfSingle */);\r\n    }\r\n}\r\nexport class AutoFixAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: AutoFixAction.Id,\r\n            label: nls.localize('autoFix.label', \"Auto Fix...\"),\r\n            alias: 'Auto Fix...',\r\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, contextKeyForSupportedActions(CodeActionKind.QuickFix)),\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 512 /* Alt */ | 1024 /* Shift */ | 84 /* US_DOT */,\r\n                mac: {\r\n                    primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 84 /* US_DOT */\r\n                },\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(_accessor, editor) {\r\n        return triggerCodeActionsForEditorSelection(editor, nls.localize('editor.action.autoFix.noneMessage', \"No auto fixes available\"), {\r\n            include: CodeActionKind.QuickFix,\r\n            onlyIncludePreferredActions: true\r\n        }, \"ifSingle\" /* IfSingle */);\r\n    }\r\n}\r\nAutoFixAction.Id = 'editor.action.autoFix';\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}