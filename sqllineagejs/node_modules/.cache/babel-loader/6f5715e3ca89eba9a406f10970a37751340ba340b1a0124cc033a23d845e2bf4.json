{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport * as nls from '../../../nls.js';\nimport { onUnexpectedError } from '../../../base/common/errors.js';\nimport { ContextKeyExpr } from '../../../platform/contextkey/common/contextkey.js';\nimport { IEditorProgressService } from '../../../platform/progress/common/progress.js';\nimport { registerEditorAction, registerEditorContribution, EditorAction, EditorCommand, registerEditorCommand, registerModelAndPositionCommand } from '../../browser/editorExtensions.js';\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\nimport { RenameInputField, CONTEXT_RENAME_INPUT_VISIBLE } from './renameInputField.js';\nimport { RenameProviderRegistry } from '../../common/modes.js';\nimport { Position } from '../../common/core/position.js';\nimport { alert } from '../../../base/browser/ui/aria/aria.js';\nimport { Range } from '../../common/core/range.js';\nimport { MessageController } from '../message/messageController.js';\nimport { EditorStateCancellationTokenSource } from '../../browser/core/editorState.js';\nimport { INotificationService } from '../../../platform/notification/common/notification.js';\nimport { IBulkEditService, ResourceEdit } from '../../browser/services/bulkEditService.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { ICodeEditorService } from '../../browser/services/codeEditorService.js';\nimport { CancellationToken, CancellationTokenSource } from '../../../base/common/cancellation.js';\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\nimport { IdleValue, raceCancellation } from '../../../base/common/async.js';\nimport { ILogService } from '../../../platform/log/common/log.js';\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\nimport { Registry } from '../../../platform/registry/common/platform.js';\nimport { Extensions } from '../../../platform/configuration/common/configurationRegistry.js';\nimport { ITextResourceConfigurationService } from '../../common/services/textResourceConfigurationService.js';\nimport { assertType } from '../../../base/common/types.js';\nclass RenameSkeleton {\n  constructor(model, position) {\n    this.model = model;\n    this.position = position;\n    this._providerRenameIdx = 0;\n    this._providers = RenameProviderRegistry.ordered(model);\n  }\n  hasProvider() {\n    return this._providers.length > 0;\n  }\n  resolveRenameLocation(token) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const rejects = [];\n      for (this._providerRenameIdx = 0; this._providerRenameIdx < this._providers.length; this._providerRenameIdx++) {\n        const provider = this._providers[this._providerRenameIdx];\n        if (!provider.resolveRenameLocation) {\n          break;\n        }\n        let res = yield provider.resolveRenameLocation(this.model, this.position, token);\n        if (!res) {\n          continue;\n        }\n        if (res.rejectReason) {\n          rejects.push(res.rejectReason);\n          continue;\n        }\n        return res;\n      }\n      const word = this.model.getWordAtPosition(this.position);\n      if (!word) {\n        return {\n          range: Range.fromPositions(this.position),\n          text: '',\n          rejectReason: rejects.length > 0 ? rejects.join('\\n') : undefined\n        };\n      }\n      return {\n        range: new Range(this.position.lineNumber, word.startColumn, this.position.lineNumber, word.endColumn),\n        text: word.word,\n        rejectReason: rejects.length > 0 ? rejects.join('\\n') : undefined\n      };\n    });\n  }\n  provideRenameEdits(newName, token) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this._provideRenameEdits(newName, this._providerRenameIdx, [], token);\n    });\n  }\n  _provideRenameEdits(newName, i, rejects, token) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const provider = this._providers[i];\n      if (!provider) {\n        return {\n          edits: [],\n          rejectReason: rejects.join('\\n')\n        };\n      }\n      const result = yield provider.provideRenameEdits(this.model, this.position, newName, token);\n      if (!result) {\n        return this._provideRenameEdits(newName, i + 1, rejects.concat(nls.localize('no result', \"No result.\")), token);\n      } else if (result.rejectReason) {\n        return this._provideRenameEdits(newName, i + 1, rejects.concat(result.rejectReason), token);\n      }\n      return result;\n    });\n  }\n}\nexport function rename(model, position, newName) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const skeleton = new RenameSkeleton(model, position);\n    const loc = yield skeleton.resolveRenameLocation(CancellationToken.None);\n    if (loc === null || loc === void 0 ? void 0 : loc.rejectReason) {\n      return {\n        edits: [],\n        rejectReason: loc.rejectReason\n      };\n    }\n    return skeleton.provideRenameEdits(newName, CancellationToken.None);\n  });\n}\n// ---  register actions and commands\nlet RenameController = class RenameController {\n  constructor(editor, _instaService, _notificationService, _bulkEditService, _progressService, _logService, _configService) {\n    this.editor = editor;\n    this._instaService = _instaService;\n    this._notificationService = _notificationService;\n    this._bulkEditService = _bulkEditService;\n    this._progressService = _progressService;\n    this._logService = _logService;\n    this._configService = _configService;\n    this._dispoableStore = new DisposableStore();\n    this._cts = new CancellationTokenSource();\n    this._renameInputField = this._dispoableStore.add(new IdleValue(() => this._dispoableStore.add(this._instaService.createInstance(RenameInputField, this.editor, ['acceptRenameInput', 'acceptRenameInputWithPreview']))));\n  }\n  static get(editor) {\n    return editor.getContribution(RenameController.ID);\n  }\n  dispose() {\n    this._dispoableStore.dispose();\n    this._cts.dispose(true);\n  }\n  run() {\n    return __awaiter(this, void 0, void 0, function* () {\n      this._cts.dispose(true);\n      if (!this.editor.hasModel()) {\n        return undefined;\n      }\n      const position = this.editor.getPosition();\n      const skeleton = new RenameSkeleton(this.editor.getModel(), position);\n      if (!skeleton.hasProvider()) {\n        return undefined;\n      }\n      this._cts = new EditorStateCancellationTokenSource(this.editor, 4 /* Position */ | 1 /* Value */);\n      // resolve rename location\n      let loc;\n      try {\n        const resolveLocationOperation = skeleton.resolveRenameLocation(this._cts.token);\n        this._progressService.showWhile(resolveLocationOperation, 250);\n        loc = yield resolveLocationOperation;\n      } catch (e) {\n        MessageController.get(this.editor).showMessage(e || nls.localize('resolveRenameLocationFailed', \"An unknown error occurred while resolving rename location\"), position);\n        return undefined;\n      }\n      if (!loc) {\n        return undefined;\n      }\n      if (loc.rejectReason) {\n        MessageController.get(this.editor).showMessage(loc.rejectReason, position);\n        return undefined;\n      }\n      if (this._cts.token.isCancellationRequested) {\n        return undefined;\n      }\n      this._cts.dispose();\n      this._cts = new EditorStateCancellationTokenSource(this.editor, 4 /* Position */ | 1 /* Value */, loc.range);\n      // do rename at location\n      let selection = this.editor.getSelection();\n      let selectionStart = 0;\n      let selectionEnd = loc.text.length;\n      if (!Range.isEmpty(selection) && !Range.spansMultipleLines(selection) && Range.containsRange(loc.range, selection)) {\n        selectionStart = Math.max(0, selection.startColumn - loc.range.startColumn);\n        selectionEnd = Math.min(loc.range.endColumn, selection.endColumn) - loc.range.startColumn;\n      }\n      const supportPreview = this._bulkEditService.hasPreviewHandler() && this._configService.getValue(this.editor.getModel().uri, 'editor.rename.enablePreview');\n      const inputFieldResult = yield this._renameInputField.value.getInput(loc.range, loc.text, selectionStart, selectionEnd, supportPreview, this._cts.token);\n      // no result, only hint to focus the editor or not\n      if (typeof inputFieldResult === 'boolean') {\n        if (inputFieldResult) {\n          this.editor.focus();\n        }\n        return undefined;\n      }\n      this.editor.focus();\n      const renameOperation = raceCancellation(skeleton.provideRenameEdits(inputFieldResult.newName, this._cts.token), this._cts.token).then(renameResult => __awaiter(this, void 0, void 0, function* () {\n        if (!renameResult || !this.editor.hasModel()) {\n          return;\n        }\n        if (renameResult.rejectReason) {\n          this._notificationService.info(renameResult.rejectReason);\n          return;\n        }\n        this._bulkEditService.apply(ResourceEdit.convert(renameResult), {\n          editor: this.editor,\n          showPreview: inputFieldResult.wantsPreview,\n          label: nls.localize('label', \"Renaming '{0}'\", loc === null || loc === void 0 ? void 0 : loc.text),\n          quotableLabel: nls.localize('quotableLabel', \"Renaming {0}\", loc === null || loc === void 0 ? void 0 : loc.text)\n        }).then(result => {\n          if (result.ariaSummary) {\n            alert(nls.localize('aria', \"Successfully renamed '{0}' to '{1}'. Summary: {2}\", loc.text, inputFieldResult.newName, result.ariaSummary));\n          }\n        }).catch(err => {\n          this._notificationService.error(nls.localize('rename.failedApply', \"Rename failed to apply edits\"));\n          this._logService.error(err);\n        });\n      }), err => {\n        this._notificationService.error(nls.localize('rename.failed', \"Rename failed to compute edits\"));\n        this._logService.error(err);\n      });\n      this._progressService.showWhile(renameOperation, 250);\n      return renameOperation;\n    });\n  }\n  acceptRenameInput(wantsPreview) {\n    this._renameInputField.value.acceptInput(wantsPreview);\n  }\n  cancelRenameInput() {\n    this._renameInputField.value.cancelInput(true);\n  }\n};\nRenameController.ID = 'editor.contrib.renameController';\nRenameController = __decorate([__param(1, IInstantiationService), __param(2, INotificationService), __param(3, IBulkEditService), __param(4, IEditorProgressService), __param(5, ILogService), __param(6, ITextResourceConfigurationService)], RenameController);\n// ---- action implementation\nexport class RenameAction extends EditorAction {\n  constructor() {\n    super({\n      id: 'editor.action.rename',\n      label: nls.localize('rename.label', \"Rename Symbol\"),\n      alias: 'Rename Symbol',\n      precondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasRenameProvider),\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: 60 /* F2 */,\n        weight: 100 /* EditorContrib */\n      },\n\n      contextMenuOpts: {\n        group: '1_modification',\n        order: 1.1\n      }\n    });\n  }\n  runCommand(accessor, args) {\n    const editorService = accessor.get(ICodeEditorService);\n    const [uri, pos] = Array.isArray(args) && args || [undefined, undefined];\n    if (URI.isUri(uri) && Position.isIPosition(pos)) {\n      return editorService.openCodeEditor({\n        resource: uri\n      }, editorService.getActiveCodeEditor()).then(editor => {\n        if (!editor) {\n          return;\n        }\n        editor.setPosition(pos);\n        editor.invokeWithinContext(accessor => {\n          this.reportTelemetry(accessor, editor);\n          return this.run(accessor, editor);\n        });\n      }, onUnexpectedError);\n    }\n    return super.runCommand(accessor, args);\n  }\n  run(accessor, editor) {\n    const controller = RenameController.get(editor);\n    if (controller) {\n      return controller.run();\n    }\n    return Promise.resolve();\n  }\n}\nregisterEditorContribution(RenameController.ID, RenameController);\nregisterEditorAction(RenameAction);\nconst RenameCommand = EditorCommand.bindToContribution(RenameController.get);\nregisterEditorCommand(new RenameCommand({\n  id: 'acceptRenameInput',\n  precondition: CONTEXT_RENAME_INPUT_VISIBLE,\n  handler: x => x.acceptRenameInput(false),\n  kbOpts: {\n    weight: 100 /* EditorContrib */ + 99,\n    kbExpr: EditorContextKeys.focus,\n    primary: 3 /* Enter */\n  }\n}));\n\nregisterEditorCommand(new RenameCommand({\n  id: 'acceptRenameInputWithPreview',\n  precondition: ContextKeyExpr.and(CONTEXT_RENAME_INPUT_VISIBLE, ContextKeyExpr.has('config.editor.rename.enablePreview')),\n  handler: x => x.acceptRenameInput(true),\n  kbOpts: {\n    weight: 100 /* EditorContrib */ + 99,\n    kbExpr: EditorContextKeys.focus,\n    primary: 1024 /* Shift */ + 3 /* Enter */\n  }\n}));\n\nregisterEditorCommand(new RenameCommand({\n  id: 'cancelRenameInput',\n  precondition: CONTEXT_RENAME_INPUT_VISIBLE,\n  handler: x => x.cancelRenameInput(),\n  kbOpts: {\n    weight: 100 /* EditorContrib */ + 99,\n    kbExpr: EditorContextKeys.focus,\n    primary: 9 /* Escape */,\n    secondary: [1024 /* Shift */ | 9 /* Escape */]\n  }\n}));\n// ---- api bridge command\nregisterModelAndPositionCommand('_executeDocumentRenameProvider', function (model, position) {\n  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    args[_key - 2] = arguments[_key];\n  }\n  const [newName] = args;\n  assertType(typeof newName === 'string');\n  return rename(model, position, newName);\n});\n//todo@jrieken use editor options world\nRegistry.as(Extensions.Configuration).registerConfiguration({\n  id: 'editor',\n  properties: {\n    'editor.rename.enablePreview': {\n      scope: 5 /* LANGUAGE_OVERRIDABLE */,\n      description: nls.localize('enablePreview', \"Enable/disable the ability to preview changes before renaming\"),\n      default: true,\n      type: 'boolean'\n    }\n  }\n});","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","nls","onUnexpectedError","ContextKeyExpr","IEditorProgressService","registerEditorAction","registerEditorContribution","EditorAction","EditorCommand","registerEditorCommand","registerModelAndPositionCommand","EditorContextKeys","RenameInputField","CONTEXT_RENAME_INPUT_VISIBLE","RenameProviderRegistry","Position","alert","Range","MessageController","EditorStateCancellationTokenSource","INotificationService","IBulkEditService","ResourceEdit","URI","ICodeEditorService","CancellationToken","CancellationTokenSource","DisposableStore","IdleValue","raceCancellation","ILogService","IInstantiationService","Registry","Extensions","ITextResourceConfigurationService","assertType","RenameSkeleton","constructor","model","position","_providerRenameIdx","_providers","ordered","hasProvider","resolveRenameLocation","token","rejects","provider","res","rejectReason","push","word","getWordAtPosition","range","fromPositions","text","join","undefined","lineNumber","startColumn","endColumn","provideRenameEdits","newName","_provideRenameEdits","edits","concat","localize","rename","skeleton","loc","None","RenameController","editor","_instaService","_notificationService","_bulkEditService","_progressService","_logService","_configService","_dispoableStore","_cts","_renameInputField","add","createInstance","get","getContribution","ID","dispose","run","hasModel","getPosition","getModel","resolveLocationOperation","showWhile","showMessage","isCancellationRequested","selection","getSelection","selectionStart","selectionEnd","isEmpty","spansMultipleLines","containsRange","Math","max","min","supportPreview","hasPreviewHandler","getValue","uri","inputFieldResult","getInput","focus","renameOperation","renameResult","info","convert","showPreview","wantsPreview","label","quotableLabel","ariaSummary","catch","err","error","acceptRenameInput","acceptInput","cancelRenameInput","cancelInput","RenameAction","id","alias","precondition","and","writable","hasRenameProvider","kbOpts","kbExpr","editorTextFocus","primary","weight","contextMenuOpts","group","order","runCommand","accessor","args","editorService","pos","Array","isArray","isUri","isIPosition","openCodeEditor","resource","getActiveCodeEditor","setPosition","invokeWithinContext","reportTelemetry","controller","RenameCommand","bindToContribution","handler","x","has","secondary","_len","_key","as","Configuration","registerConfiguration","properties","scope","description","default","type"],"sources":["C:/Users/Administrator/Desktop/sqllineage-master/sqllineagejs/node_modules/monaco-editor/esm/vs/editor/contrib/rename/rename.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport * as nls from '../../../nls.js';\r\nimport { onUnexpectedError } from '../../../base/common/errors.js';\r\nimport { ContextKeyExpr } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { IEditorProgressService } from '../../../platform/progress/common/progress.js';\r\nimport { registerEditorAction, registerEditorContribution, EditorAction, EditorCommand, registerEditorCommand, registerModelAndPositionCommand } from '../../browser/editorExtensions.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { RenameInputField, CONTEXT_RENAME_INPUT_VISIBLE } from './renameInputField.js';\r\nimport { RenameProviderRegistry } from '../../common/modes.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport { alert } from '../../../base/browser/ui/aria/aria.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { MessageController } from '../message/messageController.js';\r\nimport { EditorStateCancellationTokenSource } from '../../browser/core/editorState.js';\r\nimport { INotificationService } from '../../../platform/notification/common/notification.js';\r\nimport { IBulkEditService, ResourceEdit } from '../../browser/services/bulkEditService.js';\r\nimport { URI } from '../../../base/common/uri.js';\r\nimport { ICodeEditorService } from '../../browser/services/codeEditorService.js';\r\nimport { CancellationToken, CancellationTokenSource } from '../../../base/common/cancellation.js';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { IdleValue, raceCancellation } from '../../../base/common/async.js';\r\nimport { ILogService } from '../../../platform/log/common/log.js';\r\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\r\nimport { Registry } from '../../../platform/registry/common/platform.js';\r\nimport { Extensions } from '../../../platform/configuration/common/configurationRegistry.js';\r\nimport { ITextResourceConfigurationService } from '../../common/services/textResourceConfigurationService.js';\r\nimport { assertType } from '../../../base/common/types.js';\r\nclass RenameSkeleton {\r\n    constructor(model, position) {\r\n        this.model = model;\r\n        this.position = position;\r\n        this._providerRenameIdx = 0;\r\n        this._providers = RenameProviderRegistry.ordered(model);\r\n    }\r\n    hasProvider() {\r\n        return this._providers.length > 0;\r\n    }\r\n    resolveRenameLocation(token) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const rejects = [];\r\n            for (this._providerRenameIdx = 0; this._providerRenameIdx < this._providers.length; this._providerRenameIdx++) {\r\n                const provider = this._providers[this._providerRenameIdx];\r\n                if (!provider.resolveRenameLocation) {\r\n                    break;\r\n                }\r\n                let res = yield provider.resolveRenameLocation(this.model, this.position, token);\r\n                if (!res) {\r\n                    continue;\r\n                }\r\n                if (res.rejectReason) {\r\n                    rejects.push(res.rejectReason);\r\n                    continue;\r\n                }\r\n                return res;\r\n            }\r\n            const word = this.model.getWordAtPosition(this.position);\r\n            if (!word) {\r\n                return {\r\n                    range: Range.fromPositions(this.position),\r\n                    text: '',\r\n                    rejectReason: rejects.length > 0 ? rejects.join('\\n') : undefined\r\n                };\r\n            }\r\n            return {\r\n                range: new Range(this.position.lineNumber, word.startColumn, this.position.lineNumber, word.endColumn),\r\n                text: word.word,\r\n                rejectReason: rejects.length > 0 ? rejects.join('\\n') : undefined\r\n            };\r\n        });\r\n    }\r\n    provideRenameEdits(newName, token) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return this._provideRenameEdits(newName, this._providerRenameIdx, [], token);\r\n        });\r\n    }\r\n    _provideRenameEdits(newName, i, rejects, token) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const provider = this._providers[i];\r\n            if (!provider) {\r\n                return {\r\n                    edits: [],\r\n                    rejectReason: rejects.join('\\n')\r\n                };\r\n            }\r\n            const result = yield provider.provideRenameEdits(this.model, this.position, newName, token);\r\n            if (!result) {\r\n                return this._provideRenameEdits(newName, i + 1, rejects.concat(nls.localize('no result', \"No result.\")), token);\r\n            }\r\n            else if (result.rejectReason) {\r\n                return this._provideRenameEdits(newName, i + 1, rejects.concat(result.rejectReason), token);\r\n            }\r\n            return result;\r\n        });\r\n    }\r\n}\r\nexport function rename(model, position, newName) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const skeleton = new RenameSkeleton(model, position);\r\n        const loc = yield skeleton.resolveRenameLocation(CancellationToken.None);\r\n        if (loc === null || loc === void 0 ? void 0 : loc.rejectReason) {\r\n            return { edits: [], rejectReason: loc.rejectReason };\r\n        }\r\n        return skeleton.provideRenameEdits(newName, CancellationToken.None);\r\n    });\r\n}\r\n// ---  register actions and commands\r\nlet RenameController = class RenameController {\r\n    constructor(editor, _instaService, _notificationService, _bulkEditService, _progressService, _logService, _configService) {\r\n        this.editor = editor;\r\n        this._instaService = _instaService;\r\n        this._notificationService = _notificationService;\r\n        this._bulkEditService = _bulkEditService;\r\n        this._progressService = _progressService;\r\n        this._logService = _logService;\r\n        this._configService = _configService;\r\n        this._dispoableStore = new DisposableStore();\r\n        this._cts = new CancellationTokenSource();\r\n        this._renameInputField = this._dispoableStore.add(new IdleValue(() => this._dispoableStore.add(this._instaService.createInstance(RenameInputField, this.editor, ['acceptRenameInput', 'acceptRenameInputWithPreview']))));\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(RenameController.ID);\r\n    }\r\n    dispose() {\r\n        this._dispoableStore.dispose();\r\n        this._cts.dispose(true);\r\n    }\r\n    run() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this._cts.dispose(true);\r\n            if (!this.editor.hasModel()) {\r\n                return undefined;\r\n            }\r\n            const position = this.editor.getPosition();\r\n            const skeleton = new RenameSkeleton(this.editor.getModel(), position);\r\n            if (!skeleton.hasProvider()) {\r\n                return undefined;\r\n            }\r\n            this._cts = new EditorStateCancellationTokenSource(this.editor, 4 /* Position */ | 1 /* Value */);\r\n            // resolve rename location\r\n            let loc;\r\n            try {\r\n                const resolveLocationOperation = skeleton.resolveRenameLocation(this._cts.token);\r\n                this._progressService.showWhile(resolveLocationOperation, 250);\r\n                loc = yield resolveLocationOperation;\r\n            }\r\n            catch (e) {\r\n                MessageController.get(this.editor).showMessage(e || nls.localize('resolveRenameLocationFailed', \"An unknown error occurred while resolving rename location\"), position);\r\n                return undefined;\r\n            }\r\n            if (!loc) {\r\n                return undefined;\r\n            }\r\n            if (loc.rejectReason) {\r\n                MessageController.get(this.editor).showMessage(loc.rejectReason, position);\r\n                return undefined;\r\n            }\r\n            if (this._cts.token.isCancellationRequested) {\r\n                return undefined;\r\n            }\r\n            this._cts.dispose();\r\n            this._cts = new EditorStateCancellationTokenSource(this.editor, 4 /* Position */ | 1 /* Value */, loc.range);\r\n            // do rename at location\r\n            let selection = this.editor.getSelection();\r\n            let selectionStart = 0;\r\n            let selectionEnd = loc.text.length;\r\n            if (!Range.isEmpty(selection) && !Range.spansMultipleLines(selection) && Range.containsRange(loc.range, selection)) {\r\n                selectionStart = Math.max(0, selection.startColumn - loc.range.startColumn);\r\n                selectionEnd = Math.min(loc.range.endColumn, selection.endColumn) - loc.range.startColumn;\r\n            }\r\n            const supportPreview = this._bulkEditService.hasPreviewHandler() && this._configService.getValue(this.editor.getModel().uri, 'editor.rename.enablePreview');\r\n            const inputFieldResult = yield this._renameInputField.value.getInput(loc.range, loc.text, selectionStart, selectionEnd, supportPreview, this._cts.token);\r\n            // no result, only hint to focus the editor or not\r\n            if (typeof inputFieldResult === 'boolean') {\r\n                if (inputFieldResult) {\r\n                    this.editor.focus();\r\n                }\r\n                return undefined;\r\n            }\r\n            this.editor.focus();\r\n            const renameOperation = raceCancellation(skeleton.provideRenameEdits(inputFieldResult.newName, this._cts.token), this._cts.token).then((renameResult) => __awaiter(this, void 0, void 0, function* () {\r\n                if (!renameResult || !this.editor.hasModel()) {\r\n                    return;\r\n                }\r\n                if (renameResult.rejectReason) {\r\n                    this._notificationService.info(renameResult.rejectReason);\r\n                    return;\r\n                }\r\n                this._bulkEditService.apply(ResourceEdit.convert(renameResult), {\r\n                    editor: this.editor,\r\n                    showPreview: inputFieldResult.wantsPreview,\r\n                    label: nls.localize('label', \"Renaming '{0}'\", loc === null || loc === void 0 ? void 0 : loc.text),\r\n                    quotableLabel: nls.localize('quotableLabel', \"Renaming {0}\", loc === null || loc === void 0 ? void 0 : loc.text),\r\n                }).then(result => {\r\n                    if (result.ariaSummary) {\r\n                        alert(nls.localize('aria', \"Successfully renamed '{0}' to '{1}'. Summary: {2}\", loc.text, inputFieldResult.newName, result.ariaSummary));\r\n                    }\r\n                }).catch(err => {\r\n                    this._notificationService.error(nls.localize('rename.failedApply', \"Rename failed to apply edits\"));\r\n                    this._logService.error(err);\r\n                });\r\n            }), err => {\r\n                this._notificationService.error(nls.localize('rename.failed', \"Rename failed to compute edits\"));\r\n                this._logService.error(err);\r\n            });\r\n            this._progressService.showWhile(renameOperation, 250);\r\n            return renameOperation;\r\n        });\r\n    }\r\n    acceptRenameInput(wantsPreview) {\r\n        this._renameInputField.value.acceptInput(wantsPreview);\r\n    }\r\n    cancelRenameInput() {\r\n        this._renameInputField.value.cancelInput(true);\r\n    }\r\n};\r\nRenameController.ID = 'editor.contrib.renameController';\r\nRenameController = __decorate([\r\n    __param(1, IInstantiationService),\r\n    __param(2, INotificationService),\r\n    __param(3, IBulkEditService),\r\n    __param(4, IEditorProgressService),\r\n    __param(5, ILogService),\r\n    __param(6, ITextResourceConfigurationService)\r\n], RenameController);\r\n// ---- action implementation\r\nexport class RenameAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.rename',\r\n            label: nls.localize('rename.label', \"Rename Symbol\"),\r\n            alias: 'Rename Symbol',\r\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasRenameProvider),\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 60 /* F2 */,\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            contextMenuOpts: {\r\n                group: '1_modification',\r\n                order: 1.1\r\n            }\r\n        });\r\n    }\r\n    runCommand(accessor, args) {\r\n        const editorService = accessor.get(ICodeEditorService);\r\n        const [uri, pos] = Array.isArray(args) && args || [undefined, undefined];\r\n        if (URI.isUri(uri) && Position.isIPosition(pos)) {\r\n            return editorService.openCodeEditor({ resource: uri }, editorService.getActiveCodeEditor()).then(editor => {\r\n                if (!editor) {\r\n                    return;\r\n                }\r\n                editor.setPosition(pos);\r\n                editor.invokeWithinContext(accessor => {\r\n                    this.reportTelemetry(accessor, editor);\r\n                    return this.run(accessor, editor);\r\n                });\r\n            }, onUnexpectedError);\r\n        }\r\n        return super.runCommand(accessor, args);\r\n    }\r\n    run(accessor, editor) {\r\n        const controller = RenameController.get(editor);\r\n        if (controller) {\r\n            return controller.run();\r\n        }\r\n        return Promise.resolve();\r\n    }\r\n}\r\nregisterEditorContribution(RenameController.ID, RenameController);\r\nregisterEditorAction(RenameAction);\r\nconst RenameCommand = EditorCommand.bindToContribution(RenameController.get);\r\nregisterEditorCommand(new RenameCommand({\r\n    id: 'acceptRenameInput',\r\n    precondition: CONTEXT_RENAME_INPUT_VISIBLE,\r\n    handler: x => x.acceptRenameInput(false),\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 99,\r\n        kbExpr: EditorContextKeys.focus,\r\n        primary: 3 /* Enter */\r\n    }\r\n}));\r\nregisterEditorCommand(new RenameCommand({\r\n    id: 'acceptRenameInputWithPreview',\r\n    precondition: ContextKeyExpr.and(CONTEXT_RENAME_INPUT_VISIBLE, ContextKeyExpr.has('config.editor.rename.enablePreview')),\r\n    handler: x => x.acceptRenameInput(true),\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 99,\r\n        kbExpr: EditorContextKeys.focus,\r\n        primary: 1024 /* Shift */ + 3 /* Enter */\r\n    }\r\n}));\r\nregisterEditorCommand(new RenameCommand({\r\n    id: 'cancelRenameInput',\r\n    precondition: CONTEXT_RENAME_INPUT_VISIBLE,\r\n    handler: x => x.cancelRenameInput(),\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 99,\r\n        kbExpr: EditorContextKeys.focus,\r\n        primary: 9 /* Escape */,\r\n        secondary: [1024 /* Shift */ | 9 /* Escape */]\r\n    }\r\n}));\r\n// ---- api bridge command\r\nregisterModelAndPositionCommand('_executeDocumentRenameProvider', function (model, position, ...args) {\r\n    const [newName] = args;\r\n    assertType(typeof newName === 'string');\r\n    return rename(model, position, newName);\r\n});\r\n//todo@jrieken use editor options world\r\nRegistry.as(Extensions.Configuration).registerConfiguration({\r\n    id: 'editor',\r\n    properties: {\r\n        'editor.rename.enablePreview': {\r\n            scope: 5 /* LANGUAGE_OVERRIDABLE */,\r\n            description: nls.localize('enablePreview', \"Enable/disable the ability to preview changes before renaming\"),\r\n            default: true,\r\n            type: 'boolean'\r\n        }\r\n    }\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}