{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\n// ------ internal util\nexport var _util;\n(function (_util) {\n  _util.serviceIds = new Map();\n  _util.DI_TARGET = '$di$target';\n  _util.DI_DEPENDENCIES = '$di$dependencies';\n  function getServiceDependencies(ctor) {\n    return ctor[_util.DI_DEPENDENCIES] || [];\n  }\n  _util.getServiceDependencies = getServiceDependencies;\n})(_util || (_util = {}));\nexport const IInstantiationService = createDecorator('instantiationService');\nfunction storeServiceDependency(id, target, index, optional) {\n  if (target[_util.DI_TARGET] === target) {\n    target[_util.DI_DEPENDENCIES].push({\n      id,\n      index,\n      optional\n    });\n  } else {\n    target[_util.DI_DEPENDENCIES] = [{\n      id,\n      index,\n      optional\n    }];\n    target[_util.DI_TARGET] = target;\n  }\n}\n/**\r\n * The *only* valid way to create a {{ServiceIdentifier}}.\r\n */\nexport function createDecorator(serviceId) {\n  if (_util.serviceIds.has(serviceId)) {\n    return _util.serviceIds.get(serviceId);\n  }\n  const id = function (target, key, index) {\n    if (arguments.length !== 3) {\n      throw new Error('@IServiceName-decorator can only be used to decorate a parameter');\n    }\n    storeServiceDependency(id, target, index, false);\n  };\n  id.toString = () => serviceId;\n  _util.serviceIds.set(serviceId, id);\n  return id;\n}\n/**\r\n * Mark a service dependency as optional.\r\n */\nexport function optional(serviceIdentifier) {\n  return function (target, key, index) {\n    if (arguments.length !== 3) {\n      throw new Error('@optional-decorator can only be used to decorate a parameter');\n    }\n    storeServiceDependency(serviceIdentifier, target, index, true);\n  };\n}","map":{"version":3,"names":["_util","serviceIds","Map","DI_TARGET","DI_DEPENDENCIES","getServiceDependencies","ctor","IInstantiationService","createDecorator","storeServiceDependency","id","target","index","optional","push","serviceId","has","get","key","arguments","length","Error","toString","set","serviceIdentifier"],"sources":["C:/Users/Administrator/Desktop/sqllineage-master/sqllineagejs/node_modules/monaco-editor/esm/vs/platform/instantiation/common/instantiation.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n// ------ internal util\r\nexport var _util;\r\n(function (_util) {\r\n    _util.serviceIds = new Map();\r\n    _util.DI_TARGET = '$di$target';\r\n    _util.DI_DEPENDENCIES = '$di$dependencies';\r\n    function getServiceDependencies(ctor) {\r\n        return ctor[_util.DI_DEPENDENCIES] || [];\r\n    }\r\n    _util.getServiceDependencies = getServiceDependencies;\r\n})(_util || (_util = {}));\r\nexport const IInstantiationService = createDecorator('instantiationService');\r\nfunction storeServiceDependency(id, target, index, optional) {\r\n    if (target[_util.DI_TARGET] === target) {\r\n        target[_util.DI_DEPENDENCIES].push({ id, index, optional });\r\n    }\r\n    else {\r\n        target[_util.DI_DEPENDENCIES] = [{ id, index, optional }];\r\n        target[_util.DI_TARGET] = target;\r\n    }\r\n}\r\n/**\r\n * The *only* valid way to create a {{ServiceIdentifier}}.\r\n */\r\nexport function createDecorator(serviceId) {\r\n    if (_util.serviceIds.has(serviceId)) {\r\n        return _util.serviceIds.get(serviceId);\r\n    }\r\n    const id = function (target, key, index) {\r\n        if (arguments.length !== 3) {\r\n            throw new Error('@IServiceName-decorator can only be used to decorate a parameter');\r\n        }\r\n        storeServiceDependency(id, target, index, false);\r\n    };\r\n    id.toString = () => serviceId;\r\n    _util.serviceIds.set(serviceId, id);\r\n    return id;\r\n}\r\n/**\r\n * Mark a service dependency as optional.\r\n */\r\nexport function optional(serviceIdentifier) {\r\n    return function (target, key, index) {\r\n        if (arguments.length !== 3) {\r\n            throw new Error('@optional-decorator can only be used to decorate a parameter');\r\n        }\r\n        storeServiceDependency(serviceIdentifier, target, index, true);\r\n    };\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIA,KAAK;AAChB,CAAC,UAAUA,KAAK,EAAE;EACdA,KAAK,CAACC,UAAU,GAAG,IAAIC,GAAG,CAAC,CAAC;EAC5BF,KAAK,CAACG,SAAS,GAAG,YAAY;EAC9BH,KAAK,CAACI,eAAe,GAAG,kBAAkB;EAC1C,SAASC,sBAAsBA,CAACC,IAAI,EAAE;IAClC,OAAOA,IAAI,CAACN,KAAK,CAACI,eAAe,CAAC,IAAI,EAAE;EAC5C;EACAJ,KAAK,CAACK,sBAAsB,GAAGA,sBAAsB;AACzD,CAAC,EAAEL,KAAK,KAAKA,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;AACzB,OAAO,MAAMO,qBAAqB,GAAGC,eAAe,CAAC,sBAAsB,CAAC;AAC5E,SAASC,sBAAsBA,CAACC,EAAE,EAAEC,MAAM,EAAEC,KAAK,EAAEC,QAAQ,EAAE;EACzD,IAAIF,MAAM,CAACX,KAAK,CAACG,SAAS,CAAC,KAAKQ,MAAM,EAAE;IACpCA,MAAM,CAACX,KAAK,CAACI,eAAe,CAAC,CAACU,IAAI,CAAC;MAAEJ,EAAE;MAAEE,KAAK;MAAEC;IAAS,CAAC,CAAC;EAC/D,CAAC,MACI;IACDF,MAAM,CAACX,KAAK,CAACI,eAAe,CAAC,GAAG,CAAC;MAAEM,EAAE;MAAEE,KAAK;MAAEC;IAAS,CAAC,CAAC;IACzDF,MAAM,CAACX,KAAK,CAACG,SAAS,CAAC,GAAGQ,MAAM;EACpC;AACJ;AACA;AACA;AACA;AACA,OAAO,SAASH,eAAeA,CAACO,SAAS,EAAE;EACvC,IAAIf,KAAK,CAACC,UAAU,CAACe,GAAG,CAACD,SAAS,CAAC,EAAE;IACjC,OAAOf,KAAK,CAACC,UAAU,CAACgB,GAAG,CAACF,SAAS,CAAC;EAC1C;EACA,MAAML,EAAE,GAAG,SAAAA,CAAUC,MAAM,EAAEO,GAAG,EAAEN,KAAK,EAAE;IACrC,IAAIO,SAAS,CAACC,MAAM,KAAK,CAAC,EAAE;MACxB,MAAM,IAAIC,KAAK,CAAC,kEAAkE,CAAC;IACvF;IACAZ,sBAAsB,CAACC,EAAE,EAAEC,MAAM,EAAEC,KAAK,EAAE,KAAK,CAAC;EACpD,CAAC;EACDF,EAAE,CAACY,QAAQ,GAAG,MAAMP,SAAS;EAC7Bf,KAAK,CAACC,UAAU,CAACsB,GAAG,CAACR,SAAS,EAAEL,EAAE,CAAC;EACnC,OAAOA,EAAE;AACb;AACA;AACA;AACA;AACA,OAAO,SAASG,QAAQA,CAACW,iBAAiB,EAAE;EACxC,OAAO,UAAUb,MAAM,EAAEO,GAAG,EAAEN,KAAK,EAAE;IACjC,IAAIO,SAAS,CAACC,MAAM,KAAK,CAAC,EAAE;MACxB,MAAM,IAAIC,KAAK,CAAC,8DAA8D,CAAC;IACnF;IACAZ,sBAAsB,CAACe,iBAAiB,EAAEb,MAAM,EAAEC,KAAK,EAAE,IAAI,CAAC;EAClE,CAAC;AACL"},"metadata":{},"sourceType":"module","externalDependencies":[]}