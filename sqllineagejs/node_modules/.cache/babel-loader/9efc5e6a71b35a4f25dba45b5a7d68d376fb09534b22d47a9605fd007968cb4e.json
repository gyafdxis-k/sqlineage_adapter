{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport './overlayWidgets.css';\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { PartFingerprints, ViewPart } from '../../view/viewPart.js';\nexport class ViewOverlayWidgets extends ViewPart {\n  constructor(context) {\n    super(context);\n    const options = this._context.configuration.options;\n    const layoutInfo = options.get(124 /* layoutInfo */);\n    this._widgets = {};\n    this._verticalScrollbarWidth = layoutInfo.verticalScrollbarWidth;\n    this._minimapWidth = layoutInfo.minimap.minimapWidth;\n    this._horizontalScrollbarHeight = layoutInfo.horizontalScrollbarHeight;\n    this._editorHeight = layoutInfo.height;\n    this._editorWidth = layoutInfo.width;\n    this._domNode = createFastDomNode(document.createElement('div'));\n    PartFingerprints.write(this._domNode, 4 /* OverlayWidgets */);\n    this._domNode.setClassName('overlayWidgets');\n  }\n  dispose() {\n    super.dispose();\n    this._widgets = {};\n  }\n  getDomNode() {\n    return this._domNode;\n  }\n  // ---- begin view event handlers\n  onConfigurationChanged(e) {\n    const options = this._context.configuration.options;\n    const layoutInfo = options.get(124 /* layoutInfo */);\n    this._verticalScrollbarWidth = layoutInfo.verticalScrollbarWidth;\n    this._minimapWidth = layoutInfo.minimap.minimapWidth;\n    this._horizontalScrollbarHeight = layoutInfo.horizontalScrollbarHeight;\n    this._editorHeight = layoutInfo.height;\n    this._editorWidth = layoutInfo.width;\n    return true;\n  }\n  // ---- end view event handlers\n  addWidget(widget) {\n    const domNode = createFastDomNode(widget.getDomNode());\n    this._widgets[widget.getId()] = {\n      widget: widget,\n      preference: null,\n      domNode: domNode\n    };\n    // This is sync because a widget wants to be in the dom\n    domNode.setPosition('absolute');\n    domNode.setAttribute('widgetId', widget.getId());\n    this._domNode.appendChild(domNode);\n    this.setShouldRender();\n  }\n  setWidgetPosition(widget, preference) {\n    const widgetData = this._widgets[widget.getId()];\n    if (widgetData.preference === preference) {\n      return false;\n    }\n    widgetData.preference = preference;\n    this.setShouldRender();\n    return true;\n  }\n  removeWidget(widget) {\n    const widgetId = widget.getId();\n    if (this._widgets.hasOwnProperty(widgetId)) {\n      const widgetData = this._widgets[widgetId];\n      const domNode = widgetData.domNode.domNode;\n      delete this._widgets[widgetId];\n      domNode.parentNode.removeChild(domNode);\n      this.setShouldRender();\n    }\n  }\n  _renderWidget(widgetData) {\n    const domNode = widgetData.domNode;\n    if (widgetData.preference === null) {\n      domNode.unsetTop();\n      return;\n    }\n    if (widgetData.preference === 0 /* TOP_RIGHT_CORNER */) {\n      domNode.setTop(0);\n      domNode.setRight(2 * this._verticalScrollbarWidth + this._minimapWidth);\n    } else if (widgetData.preference === 1 /* BOTTOM_RIGHT_CORNER */) {\n      const widgetHeight = domNode.domNode.clientHeight;\n      domNode.setTop(this._editorHeight - widgetHeight - 2 * this._horizontalScrollbarHeight);\n      domNode.setRight(2 * this._verticalScrollbarWidth + this._minimapWidth);\n    } else if (widgetData.preference === 2 /* TOP_CENTER */) {\n      domNode.setTop(0);\n      domNode.domNode.style.right = '50%';\n    }\n  }\n  prepareRender(ctx) {\n    // Nothing to read\n  }\n  render(ctx) {\n    this._domNode.setWidth(this._editorWidth);\n    const keys = Object.keys(this._widgets);\n    for (let i = 0, len = keys.length; i < len; i++) {\n      const widgetId = keys[i];\n      this._renderWidget(this._widgets[widgetId]);\n    }\n  }\n}","map":{"version":3,"names":["createFastDomNode","PartFingerprints","ViewPart","ViewOverlayWidgets","constructor","context","options","_context","configuration","layoutInfo","get","_widgets","_verticalScrollbarWidth","verticalScrollbarWidth","_minimapWidth","minimap","minimapWidth","_horizontalScrollbarHeight","horizontalScrollbarHeight","_editorHeight","height","_editorWidth","width","_domNode","document","createElement","write","setClassName","dispose","getDomNode","onConfigurationChanged","e","addWidget","widget","domNode","getId","preference","setPosition","setAttribute","appendChild","setShouldRender","setWidgetPosition","widgetData","removeWidget","widgetId","hasOwnProperty","parentNode","removeChild","_renderWidget","unsetTop","setTop","setRight","widgetHeight","clientHeight","style","right","prepareRender","ctx","render","setWidth","keys","Object","i","len","length"],"sources":["C:/Users/Administrator/Desktop/sqllineage-master/sqllineagejs/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/overlayWidgets/overlayWidgets.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport './overlayWidgets.css';\r\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\r\nimport { PartFingerprints, ViewPart } from '../../view/viewPart.js';\r\nexport class ViewOverlayWidgets extends ViewPart {\r\n    constructor(context) {\r\n        super(context);\r\n        const options = this._context.configuration.options;\r\n        const layoutInfo = options.get(124 /* layoutInfo */);\r\n        this._widgets = {};\r\n        this._verticalScrollbarWidth = layoutInfo.verticalScrollbarWidth;\r\n        this._minimapWidth = layoutInfo.minimap.minimapWidth;\r\n        this._horizontalScrollbarHeight = layoutInfo.horizontalScrollbarHeight;\r\n        this._editorHeight = layoutInfo.height;\r\n        this._editorWidth = layoutInfo.width;\r\n        this._domNode = createFastDomNode(document.createElement('div'));\r\n        PartFingerprints.write(this._domNode, 4 /* OverlayWidgets */);\r\n        this._domNode.setClassName('overlayWidgets');\r\n    }\r\n    dispose() {\r\n        super.dispose();\r\n        this._widgets = {};\r\n    }\r\n    getDomNode() {\r\n        return this._domNode;\r\n    }\r\n    // ---- begin view event handlers\r\n    onConfigurationChanged(e) {\r\n        const options = this._context.configuration.options;\r\n        const layoutInfo = options.get(124 /* layoutInfo */);\r\n        this._verticalScrollbarWidth = layoutInfo.verticalScrollbarWidth;\r\n        this._minimapWidth = layoutInfo.minimap.minimapWidth;\r\n        this._horizontalScrollbarHeight = layoutInfo.horizontalScrollbarHeight;\r\n        this._editorHeight = layoutInfo.height;\r\n        this._editorWidth = layoutInfo.width;\r\n        return true;\r\n    }\r\n    // ---- end view event handlers\r\n    addWidget(widget) {\r\n        const domNode = createFastDomNode(widget.getDomNode());\r\n        this._widgets[widget.getId()] = {\r\n            widget: widget,\r\n            preference: null,\r\n            domNode: domNode\r\n        };\r\n        // This is sync because a widget wants to be in the dom\r\n        domNode.setPosition('absolute');\r\n        domNode.setAttribute('widgetId', widget.getId());\r\n        this._domNode.appendChild(domNode);\r\n        this.setShouldRender();\r\n    }\r\n    setWidgetPosition(widget, preference) {\r\n        const widgetData = this._widgets[widget.getId()];\r\n        if (widgetData.preference === preference) {\r\n            return false;\r\n        }\r\n        widgetData.preference = preference;\r\n        this.setShouldRender();\r\n        return true;\r\n    }\r\n    removeWidget(widget) {\r\n        const widgetId = widget.getId();\r\n        if (this._widgets.hasOwnProperty(widgetId)) {\r\n            const widgetData = this._widgets[widgetId];\r\n            const domNode = widgetData.domNode.domNode;\r\n            delete this._widgets[widgetId];\r\n            domNode.parentNode.removeChild(domNode);\r\n            this.setShouldRender();\r\n        }\r\n    }\r\n    _renderWidget(widgetData) {\r\n        const domNode = widgetData.domNode;\r\n        if (widgetData.preference === null) {\r\n            domNode.unsetTop();\r\n            return;\r\n        }\r\n        if (widgetData.preference === 0 /* TOP_RIGHT_CORNER */) {\r\n            domNode.setTop(0);\r\n            domNode.setRight((2 * this._verticalScrollbarWidth) + this._minimapWidth);\r\n        }\r\n        else if (widgetData.preference === 1 /* BOTTOM_RIGHT_CORNER */) {\r\n            const widgetHeight = domNode.domNode.clientHeight;\r\n            domNode.setTop((this._editorHeight - widgetHeight - 2 * this._horizontalScrollbarHeight));\r\n            domNode.setRight((2 * this._verticalScrollbarWidth) + this._minimapWidth);\r\n        }\r\n        else if (widgetData.preference === 2 /* TOP_CENTER */) {\r\n            domNode.setTop(0);\r\n            domNode.domNode.style.right = '50%';\r\n        }\r\n    }\r\n    prepareRender(ctx) {\r\n        // Nothing to read\r\n    }\r\n    render(ctx) {\r\n        this._domNode.setWidth(this._editorWidth);\r\n        const keys = Object.keys(this._widgets);\r\n        for (let i = 0, len = keys.length; i < len; i++) {\r\n            const widgetId = keys[i];\r\n            this._renderWidget(this._widgets[widgetId]);\r\n        }\r\n    }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}