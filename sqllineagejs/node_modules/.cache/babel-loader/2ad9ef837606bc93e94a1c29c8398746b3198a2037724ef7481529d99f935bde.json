{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nimport './goToDefinitionAtPosition.css';\nimport * as nls from '../../../../nls.js';\nimport { createCancelablePromise } from '../../../../base/common/async.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { MarkdownString } from '../../../../base/common/htmlContent.js';\nimport { IModeService } from '../../../common/services/modeService.js';\nimport { Range } from '../../../common/core/range.js';\nimport { DefinitionProviderRegistry } from '../../../common/modes.js';\nimport { registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { getDefinitionsAtPosition } from '../goToSymbol.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { ITextModelService } from '../../../common/services/resolverService.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { editorActiveLinkForeground } from '../../../../platform/theme/common/colorRegistry.js';\nimport { EditorState } from '../../../browser/core/editorState.js';\nimport { DefinitionAction } from '../goToCommands.js';\nimport { ClickLinkGesture } from './clickLinkGesture.js';\nimport { Position } from '../../../common/core/position.js';\nimport { withNullAsUndefined } from '../../../../base/common/types.js';\nimport { PeekContext } from '../../peekView/peekView.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nlet GotoDefinitionAtPositionEditorContribution = class GotoDefinitionAtPositionEditorContribution {\n  constructor(editor, textModelResolverService, modeService) {\n    this.textModelResolverService = textModelResolverService;\n    this.modeService = modeService;\n    this.toUnhook = new DisposableStore();\n    this.toUnhookForKeyboard = new DisposableStore();\n    this.linkDecorations = [];\n    this.currentWordAtPosition = null;\n    this.previousPromise = null;\n    this.editor = editor;\n    let linkGesture = new ClickLinkGesture(editor);\n    this.toUnhook.add(linkGesture);\n    this.toUnhook.add(linkGesture.onMouseMoveOrRelevantKeyDown(_ref => {\n      let [mouseEvent, keyboardEvent] = _ref;\n      this.startFindDefinitionFromMouse(mouseEvent, withNullAsUndefined(keyboardEvent));\n    }));\n    this.toUnhook.add(linkGesture.onExecute(mouseEvent => {\n      if (this.isEnabled(mouseEvent)) {\n        this.gotoDefinition(mouseEvent.target.position, mouseEvent.hasSideBySideModifier).then(() => {\n          this.removeLinkDecorations();\n        }, error => {\n          this.removeLinkDecorations();\n          onUnexpectedError(error);\n        });\n      }\n    }));\n    this.toUnhook.add(linkGesture.onCancel(() => {\n      this.removeLinkDecorations();\n      this.currentWordAtPosition = null;\n    }));\n  }\n  static get(editor) {\n    return editor.getContribution(GotoDefinitionAtPositionEditorContribution.ID);\n  }\n  startFindDefinitionFromCursor(position) {\n    // For issue: https://github.com/microsoft/vscode/issues/46257\n    // equivalent to mouse move with meta/ctrl key\n    // First find the definition and add decorations\n    // to the editor to be shown with the content hover widget\n    return this.startFindDefinition(position).then(() => {\n      // Add listeners for editor cursor move and key down events\n      // Dismiss the \"extended\" editor decorations when the user hides\n      // the hover widget. There is no event for the widget itself so these\n      // serve as a best effort. After removing the link decorations, the hover\n      // widget is clean and will only show declarations per next request.\n      this.toUnhookForKeyboard.add(this.editor.onDidChangeCursorPosition(() => {\n        this.currentWordAtPosition = null;\n        this.removeLinkDecorations();\n        this.toUnhookForKeyboard.clear();\n      }));\n      this.toUnhookForKeyboard.add(this.editor.onKeyDown(e => {\n        if (e) {\n          this.currentWordAtPosition = null;\n          this.removeLinkDecorations();\n          this.toUnhookForKeyboard.clear();\n        }\n      }));\n    });\n  }\n  startFindDefinitionFromMouse(mouseEvent, withKey) {\n    // check if we are active and on a content widget\n    if (mouseEvent.target.type === 9 /* CONTENT_WIDGET */ && this.linkDecorations.length > 0) {\n      return;\n    }\n    if (!this.editor.hasModel() || !this.isEnabled(mouseEvent, withKey)) {\n      this.currentWordAtPosition = null;\n      this.removeLinkDecorations();\n      return;\n    }\n    const position = mouseEvent.target.position;\n    this.startFindDefinition(position);\n  }\n  startFindDefinition(position) {\n    var _a;\n    // Dispose listeners for updating decorations when using keyboard to show definition hover\n    this.toUnhookForKeyboard.clear();\n    // Find word at mouse position\n    const word = position ? (_a = this.editor.getModel()) === null || _a === void 0 ? void 0 : _a.getWordAtPosition(position) : null;\n    if (!word) {\n      this.currentWordAtPosition = null;\n      this.removeLinkDecorations();\n      return Promise.resolve(0);\n    }\n    // Return early if word at position is still the same\n    if (this.currentWordAtPosition && this.currentWordAtPosition.startColumn === word.startColumn && this.currentWordAtPosition.endColumn === word.endColumn && this.currentWordAtPosition.word === word.word) {\n      return Promise.resolve(0);\n    }\n    this.currentWordAtPosition = word;\n    // Find definition and decorate word if found\n    let state = new EditorState(this.editor, 4 /* Position */ | 1 /* Value */ | 2 /* Selection */ | 8 /* Scroll */);\n    if (this.previousPromise) {\n      this.previousPromise.cancel();\n      this.previousPromise = null;\n    }\n    this.previousPromise = createCancelablePromise(token => this.findDefinition(position, token));\n    return this.previousPromise.then(results => {\n      if (!results || !results.length || !state.validate(this.editor)) {\n        this.removeLinkDecorations();\n        return;\n      }\n      // Multiple results\n      if (results.length > 1) {\n        this.addDecoration(new Range(position.lineNumber, word.startColumn, position.lineNumber, word.endColumn), new MarkdownString().appendText(nls.localize('multipleResults', \"Click to show {0} definitions.\", results.length)));\n      }\n      // Single result\n      else {\n        let result = results[0];\n        if (!result.uri) {\n          return;\n        }\n        this.textModelResolverService.createModelReference(result.uri).then(ref => {\n          if (!ref.object || !ref.object.textEditorModel) {\n            ref.dispose();\n            return;\n          }\n          const {\n            object: {\n              textEditorModel\n            }\n          } = ref;\n          const {\n            startLineNumber\n          } = result.range;\n          if (startLineNumber < 1 || startLineNumber > textEditorModel.getLineCount()) {\n            // invalid range\n            ref.dispose();\n            return;\n          }\n          const previewValue = this.getPreviewValue(textEditorModel, startLineNumber, result);\n          let wordRange;\n          if (result.originSelectionRange) {\n            wordRange = Range.lift(result.originSelectionRange);\n          } else {\n            wordRange = new Range(position.lineNumber, word.startColumn, position.lineNumber, word.endColumn);\n          }\n          const modeId = this.modeService.getModeIdByFilepathOrFirstLine(textEditorModel.uri);\n          this.addDecoration(wordRange, new MarkdownString().appendCodeblock(modeId ? modeId : '', previewValue));\n          ref.dispose();\n        });\n      }\n    }).then(undefined, onUnexpectedError);\n  }\n  getPreviewValue(textEditorModel, startLineNumber, result) {\n    let rangeToUse = result.targetSelectionRange ? result.range : this.getPreviewRangeBasedOnBrackets(textEditorModel, startLineNumber);\n    const numberOfLinesInRange = rangeToUse.endLineNumber - rangeToUse.startLineNumber;\n    if (numberOfLinesInRange >= GotoDefinitionAtPositionEditorContribution.MAX_SOURCE_PREVIEW_LINES) {\n      rangeToUse = this.getPreviewRangeBasedOnIndentation(textEditorModel, startLineNumber);\n    }\n    const previewValue = this.stripIndentationFromPreviewRange(textEditorModel, startLineNumber, rangeToUse);\n    return previewValue;\n  }\n  stripIndentationFromPreviewRange(textEditorModel, startLineNumber, previewRange) {\n    const startIndent = textEditorModel.getLineFirstNonWhitespaceColumn(startLineNumber);\n    let minIndent = startIndent;\n    for (let endLineNumber = startLineNumber + 1; endLineNumber < previewRange.endLineNumber; endLineNumber++) {\n      const endIndent = textEditorModel.getLineFirstNonWhitespaceColumn(endLineNumber);\n      minIndent = Math.min(minIndent, endIndent);\n    }\n    const previewValue = textEditorModel.getValueInRange(previewRange).replace(new RegExp(\"^\\\\s{\".concat(minIndent - 1, \"}\"), 'gm'), '').trim();\n    return previewValue;\n  }\n  getPreviewRangeBasedOnIndentation(textEditorModel, startLineNumber) {\n    const startIndent = textEditorModel.getLineFirstNonWhitespaceColumn(startLineNumber);\n    const maxLineNumber = Math.min(textEditorModel.getLineCount(), startLineNumber + GotoDefinitionAtPositionEditorContribution.MAX_SOURCE_PREVIEW_LINES);\n    let endLineNumber = startLineNumber + 1;\n    for (; endLineNumber < maxLineNumber; endLineNumber++) {\n      let endIndent = textEditorModel.getLineFirstNonWhitespaceColumn(endLineNumber);\n      if (startIndent === endIndent) {\n        break;\n      }\n    }\n    return new Range(startLineNumber, 1, endLineNumber + 1, 1);\n  }\n  getPreviewRangeBasedOnBrackets(textEditorModel, startLineNumber) {\n    const maxLineNumber = Math.min(textEditorModel.getLineCount(), startLineNumber + GotoDefinitionAtPositionEditorContribution.MAX_SOURCE_PREVIEW_LINES);\n    const brackets = [];\n    let ignoreFirstEmpty = true;\n    let currentBracket = textEditorModel.findNextBracket(new Position(startLineNumber, 1));\n    while (currentBracket !== null) {\n      if (brackets.length === 0) {\n        brackets.push(currentBracket);\n      } else {\n        const lastBracket = brackets[brackets.length - 1];\n        if (lastBracket.open[0] === currentBracket.open[0] && lastBracket.isOpen && !currentBracket.isOpen) {\n          brackets.pop();\n        } else {\n          brackets.push(currentBracket);\n        }\n        if (brackets.length === 0) {\n          if (ignoreFirstEmpty) {\n            ignoreFirstEmpty = false;\n          } else {\n            return new Range(startLineNumber, 1, currentBracket.range.endLineNumber + 1, 1);\n          }\n        }\n      }\n      const maxColumn = textEditorModel.getLineMaxColumn(startLineNumber);\n      let nextLineNumber = currentBracket.range.endLineNumber;\n      let nextColumn = currentBracket.range.endColumn;\n      if (maxColumn === currentBracket.range.endColumn) {\n        nextLineNumber++;\n        nextColumn = 1;\n      }\n      if (nextLineNumber > maxLineNumber) {\n        return new Range(startLineNumber, 1, maxLineNumber + 1, 1);\n      }\n      currentBracket = textEditorModel.findNextBracket(new Position(nextLineNumber, nextColumn));\n    }\n    return new Range(startLineNumber, 1, maxLineNumber + 1, 1);\n  }\n  addDecoration(range, hoverMessage) {\n    const newDecorations = {\n      range: range,\n      options: {\n        inlineClassName: 'goto-definition-link',\n        hoverMessage\n      }\n    };\n    this.linkDecorations = this.editor.deltaDecorations(this.linkDecorations, [newDecorations]);\n  }\n  removeLinkDecorations() {\n    if (this.linkDecorations.length > 0) {\n      this.linkDecorations = this.editor.deltaDecorations(this.linkDecorations, []);\n    }\n  }\n  isEnabled(mouseEvent, withKey) {\n    return this.editor.hasModel() && mouseEvent.isNoneOrSingleMouseDown && mouseEvent.target.type === 6 /* CONTENT_TEXT */ && (mouseEvent.hasTriggerModifier || (withKey ? withKey.keyCodeIsTriggerKey : false)) && DefinitionProviderRegistry.has(this.editor.getModel());\n  }\n  findDefinition(position, token) {\n    const model = this.editor.getModel();\n    if (!model) {\n      return Promise.resolve(null);\n    }\n    return getDefinitionsAtPosition(model, position, token);\n  }\n  gotoDefinition(position, openToSide) {\n    this.editor.setPosition(position);\n    return this.editor.invokeWithinContext(accessor => {\n      const canPeek = !openToSide && this.editor.getOption(72 /* definitionLinkOpensInPeek */) && !this.isInPeekEditor(accessor);\n      const action = new DefinitionAction({\n        openToSide,\n        openInPeek: canPeek,\n        muteMessage: true\n      }, {\n        alias: '',\n        label: '',\n        id: '',\n        precondition: undefined\n      });\n      return action.run(accessor, this.editor);\n    });\n  }\n  isInPeekEditor(accessor) {\n    const contextKeyService = accessor.get(IContextKeyService);\n    return PeekContext.inPeekEditor.getValue(contextKeyService);\n  }\n  dispose() {\n    this.toUnhook.dispose();\n  }\n};\nGotoDefinitionAtPositionEditorContribution.ID = 'editor.contrib.gotodefinitionatposition';\nGotoDefinitionAtPositionEditorContribution.MAX_SOURCE_PREVIEW_LINES = 8;\nGotoDefinitionAtPositionEditorContribution = __decorate([__param(1, ITextModelService), __param(2, IModeService)], GotoDefinitionAtPositionEditorContribution);\nexport { GotoDefinitionAtPositionEditorContribution };\nregisterEditorContribution(GotoDefinitionAtPositionEditorContribution.ID, GotoDefinitionAtPositionEditorContribution);\nregisterThemingParticipant((theme, collector) => {\n  const activeLinkForeground = theme.getColor(editorActiveLinkForeground);\n  if (activeLinkForeground) {\n    collector.addRule(\".monaco-editor .goto-definition-link { color: \".concat(activeLinkForeground, \" !important; }\"));\n  }\n});","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","nls","createCancelablePromise","onUnexpectedError","MarkdownString","IModeService","Range","DefinitionProviderRegistry","registerEditorContribution","getDefinitionsAtPosition","DisposableStore","ITextModelService","registerThemingParticipant","editorActiveLinkForeground","EditorState","DefinitionAction","ClickLinkGesture","Position","withNullAsUndefined","PeekContext","IContextKeyService","GotoDefinitionAtPositionEditorContribution","constructor","editor","textModelResolverService","modeService","toUnhook","toUnhookForKeyboard","linkDecorations","currentWordAtPosition","previousPromise","linkGesture","add","onMouseMoveOrRelevantKeyDown","_ref","mouseEvent","keyboardEvent","startFindDefinitionFromMouse","onExecute","isEnabled","gotoDefinition","position","hasSideBySideModifier","then","removeLinkDecorations","error","onCancel","get","getContribution","ID","startFindDefinitionFromCursor","startFindDefinition","onDidChangeCursorPosition","clear","onKeyDown","e","withKey","type","hasModel","_a","word","getModel","getWordAtPosition","Promise","resolve","startColumn","endColumn","state","cancel","token","findDefinition","results","validate","addDecoration","lineNumber","appendText","localize","result","uri","createModelReference","ref","object","textEditorModel","dispose","startLineNumber","range","getLineCount","previewValue","getPreviewValue","wordRange","originSelectionRange","lift","modeId","getModeIdByFilepathOrFirstLine","appendCodeblock","undefined","rangeToUse","targetSelectionRange","getPreviewRangeBasedOnBrackets","numberOfLinesInRange","endLineNumber","MAX_SOURCE_PREVIEW_LINES","getPreviewRangeBasedOnIndentation","stripIndentationFromPreviewRange","previewRange","startIndent","getLineFirstNonWhitespaceColumn","minIndent","endIndent","Math","min","getValueInRange","replace","RegExp","concat","trim","maxLineNumber","brackets","ignoreFirstEmpty","currentBracket","findNextBracket","push","lastBracket","open","isOpen","pop","maxColumn","getLineMaxColumn","nextLineNumber","nextColumn","hoverMessage","newDecorations","options","inlineClassName","deltaDecorations","isNoneOrSingleMouseDown","hasTriggerModifier","keyCodeIsTriggerKey","has","model","openToSide","setPosition","invokeWithinContext","accessor","canPeek","getOption","isInPeekEditor","action","openInPeek","muteMessage","alias","label","id","precondition","run","contextKeyService","inPeekEditor","getValue","theme","collector","activeLinkForeground","getColor","addRule"],"sources":["C:/Users/Administrator/Desktop/sqllineage-master/sqllineagejs/node_modules/monaco-editor/esm/vs/editor/contrib/gotoSymbol/link/goToDefinitionAtPosition.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport './goToDefinitionAtPosition.css';\r\nimport * as nls from '../../../../nls.js';\r\nimport { createCancelablePromise } from '../../../../base/common/async.js';\r\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\r\nimport { MarkdownString } from '../../../../base/common/htmlContent.js';\r\nimport { IModeService } from '../../../common/services/modeService.js';\r\nimport { Range } from '../../../common/core/range.js';\r\nimport { DefinitionProviderRegistry } from '../../../common/modes.js';\r\nimport { registerEditorContribution } from '../../../browser/editorExtensions.js';\r\nimport { getDefinitionsAtPosition } from '../goToSymbol.js';\r\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\r\nimport { ITextModelService } from '../../../common/services/resolverService.js';\r\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\r\nimport { editorActiveLinkForeground } from '../../../../platform/theme/common/colorRegistry.js';\r\nimport { EditorState } from '../../../browser/core/editorState.js';\r\nimport { DefinitionAction } from '../goToCommands.js';\r\nimport { ClickLinkGesture } from './clickLinkGesture.js';\r\nimport { Position } from '../../../common/core/position.js';\r\nimport { withNullAsUndefined } from '../../../../base/common/types.js';\r\nimport { PeekContext } from '../../peekView/peekView.js';\r\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\r\nlet GotoDefinitionAtPositionEditorContribution = class GotoDefinitionAtPositionEditorContribution {\r\n    constructor(editor, textModelResolverService, modeService) {\r\n        this.textModelResolverService = textModelResolverService;\r\n        this.modeService = modeService;\r\n        this.toUnhook = new DisposableStore();\r\n        this.toUnhookForKeyboard = new DisposableStore();\r\n        this.linkDecorations = [];\r\n        this.currentWordAtPosition = null;\r\n        this.previousPromise = null;\r\n        this.editor = editor;\r\n        let linkGesture = new ClickLinkGesture(editor);\r\n        this.toUnhook.add(linkGesture);\r\n        this.toUnhook.add(linkGesture.onMouseMoveOrRelevantKeyDown(([mouseEvent, keyboardEvent]) => {\r\n            this.startFindDefinitionFromMouse(mouseEvent, withNullAsUndefined(keyboardEvent));\r\n        }));\r\n        this.toUnhook.add(linkGesture.onExecute((mouseEvent) => {\r\n            if (this.isEnabled(mouseEvent)) {\r\n                this.gotoDefinition(mouseEvent.target.position, mouseEvent.hasSideBySideModifier).then(() => {\r\n                    this.removeLinkDecorations();\r\n                }, (error) => {\r\n                    this.removeLinkDecorations();\r\n                    onUnexpectedError(error);\r\n                });\r\n            }\r\n        }));\r\n        this.toUnhook.add(linkGesture.onCancel(() => {\r\n            this.removeLinkDecorations();\r\n            this.currentWordAtPosition = null;\r\n        }));\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(GotoDefinitionAtPositionEditorContribution.ID);\r\n    }\r\n    startFindDefinitionFromCursor(position) {\r\n        // For issue: https://github.com/microsoft/vscode/issues/46257\r\n        // equivalent to mouse move with meta/ctrl key\r\n        // First find the definition and add decorations\r\n        // to the editor to be shown with the content hover widget\r\n        return this.startFindDefinition(position).then(() => {\r\n            // Add listeners for editor cursor move and key down events\r\n            // Dismiss the \"extended\" editor decorations when the user hides\r\n            // the hover widget. There is no event for the widget itself so these\r\n            // serve as a best effort. After removing the link decorations, the hover\r\n            // widget is clean and will only show declarations per next request.\r\n            this.toUnhookForKeyboard.add(this.editor.onDidChangeCursorPosition(() => {\r\n                this.currentWordAtPosition = null;\r\n                this.removeLinkDecorations();\r\n                this.toUnhookForKeyboard.clear();\r\n            }));\r\n            this.toUnhookForKeyboard.add(this.editor.onKeyDown((e) => {\r\n                if (e) {\r\n                    this.currentWordAtPosition = null;\r\n                    this.removeLinkDecorations();\r\n                    this.toUnhookForKeyboard.clear();\r\n                }\r\n            }));\r\n        });\r\n    }\r\n    startFindDefinitionFromMouse(mouseEvent, withKey) {\r\n        // check if we are active and on a content widget\r\n        if (mouseEvent.target.type === 9 /* CONTENT_WIDGET */ && this.linkDecorations.length > 0) {\r\n            return;\r\n        }\r\n        if (!this.editor.hasModel() || !this.isEnabled(mouseEvent, withKey)) {\r\n            this.currentWordAtPosition = null;\r\n            this.removeLinkDecorations();\r\n            return;\r\n        }\r\n        const position = mouseEvent.target.position;\r\n        this.startFindDefinition(position);\r\n    }\r\n    startFindDefinition(position) {\r\n        var _a;\r\n        // Dispose listeners for updating decorations when using keyboard to show definition hover\r\n        this.toUnhookForKeyboard.clear();\r\n        // Find word at mouse position\r\n        const word = position ? (_a = this.editor.getModel()) === null || _a === void 0 ? void 0 : _a.getWordAtPosition(position) : null;\r\n        if (!word) {\r\n            this.currentWordAtPosition = null;\r\n            this.removeLinkDecorations();\r\n            return Promise.resolve(0);\r\n        }\r\n        // Return early if word at position is still the same\r\n        if (this.currentWordAtPosition && this.currentWordAtPosition.startColumn === word.startColumn && this.currentWordAtPosition.endColumn === word.endColumn && this.currentWordAtPosition.word === word.word) {\r\n            return Promise.resolve(0);\r\n        }\r\n        this.currentWordAtPosition = word;\r\n        // Find definition and decorate word if found\r\n        let state = new EditorState(this.editor, 4 /* Position */ | 1 /* Value */ | 2 /* Selection */ | 8 /* Scroll */);\r\n        if (this.previousPromise) {\r\n            this.previousPromise.cancel();\r\n            this.previousPromise = null;\r\n        }\r\n        this.previousPromise = createCancelablePromise(token => this.findDefinition(position, token));\r\n        return this.previousPromise.then(results => {\r\n            if (!results || !results.length || !state.validate(this.editor)) {\r\n                this.removeLinkDecorations();\r\n                return;\r\n            }\r\n            // Multiple results\r\n            if (results.length > 1) {\r\n                this.addDecoration(new Range(position.lineNumber, word.startColumn, position.lineNumber, word.endColumn), new MarkdownString().appendText(nls.localize('multipleResults', \"Click to show {0} definitions.\", results.length)));\r\n            }\r\n            // Single result\r\n            else {\r\n                let result = results[0];\r\n                if (!result.uri) {\r\n                    return;\r\n                }\r\n                this.textModelResolverService.createModelReference(result.uri).then(ref => {\r\n                    if (!ref.object || !ref.object.textEditorModel) {\r\n                        ref.dispose();\r\n                        return;\r\n                    }\r\n                    const { object: { textEditorModel } } = ref;\r\n                    const { startLineNumber } = result.range;\r\n                    if (startLineNumber < 1 || startLineNumber > textEditorModel.getLineCount()) {\r\n                        // invalid range\r\n                        ref.dispose();\r\n                        return;\r\n                    }\r\n                    const previewValue = this.getPreviewValue(textEditorModel, startLineNumber, result);\r\n                    let wordRange;\r\n                    if (result.originSelectionRange) {\r\n                        wordRange = Range.lift(result.originSelectionRange);\r\n                    }\r\n                    else {\r\n                        wordRange = new Range(position.lineNumber, word.startColumn, position.lineNumber, word.endColumn);\r\n                    }\r\n                    const modeId = this.modeService.getModeIdByFilepathOrFirstLine(textEditorModel.uri);\r\n                    this.addDecoration(wordRange, new MarkdownString().appendCodeblock(modeId ? modeId : '', previewValue));\r\n                    ref.dispose();\r\n                });\r\n            }\r\n        }).then(undefined, onUnexpectedError);\r\n    }\r\n    getPreviewValue(textEditorModel, startLineNumber, result) {\r\n        let rangeToUse = result.targetSelectionRange ? result.range : this.getPreviewRangeBasedOnBrackets(textEditorModel, startLineNumber);\r\n        const numberOfLinesInRange = rangeToUse.endLineNumber - rangeToUse.startLineNumber;\r\n        if (numberOfLinesInRange >= GotoDefinitionAtPositionEditorContribution.MAX_SOURCE_PREVIEW_LINES) {\r\n            rangeToUse = this.getPreviewRangeBasedOnIndentation(textEditorModel, startLineNumber);\r\n        }\r\n        const previewValue = this.stripIndentationFromPreviewRange(textEditorModel, startLineNumber, rangeToUse);\r\n        return previewValue;\r\n    }\r\n    stripIndentationFromPreviewRange(textEditorModel, startLineNumber, previewRange) {\r\n        const startIndent = textEditorModel.getLineFirstNonWhitespaceColumn(startLineNumber);\r\n        let minIndent = startIndent;\r\n        for (let endLineNumber = startLineNumber + 1; endLineNumber < previewRange.endLineNumber; endLineNumber++) {\r\n            const endIndent = textEditorModel.getLineFirstNonWhitespaceColumn(endLineNumber);\r\n            minIndent = Math.min(minIndent, endIndent);\r\n        }\r\n        const previewValue = textEditorModel.getValueInRange(previewRange).replace(new RegExp(`^\\\\s{${minIndent - 1}}`, 'gm'), '').trim();\r\n        return previewValue;\r\n    }\r\n    getPreviewRangeBasedOnIndentation(textEditorModel, startLineNumber) {\r\n        const startIndent = textEditorModel.getLineFirstNonWhitespaceColumn(startLineNumber);\r\n        const maxLineNumber = Math.min(textEditorModel.getLineCount(), startLineNumber + GotoDefinitionAtPositionEditorContribution.MAX_SOURCE_PREVIEW_LINES);\r\n        let endLineNumber = startLineNumber + 1;\r\n        for (; endLineNumber < maxLineNumber; endLineNumber++) {\r\n            let endIndent = textEditorModel.getLineFirstNonWhitespaceColumn(endLineNumber);\r\n            if (startIndent === endIndent) {\r\n                break;\r\n            }\r\n        }\r\n        return new Range(startLineNumber, 1, endLineNumber + 1, 1);\r\n    }\r\n    getPreviewRangeBasedOnBrackets(textEditorModel, startLineNumber) {\r\n        const maxLineNumber = Math.min(textEditorModel.getLineCount(), startLineNumber + GotoDefinitionAtPositionEditorContribution.MAX_SOURCE_PREVIEW_LINES);\r\n        const brackets = [];\r\n        let ignoreFirstEmpty = true;\r\n        let currentBracket = textEditorModel.findNextBracket(new Position(startLineNumber, 1));\r\n        while (currentBracket !== null) {\r\n            if (brackets.length === 0) {\r\n                brackets.push(currentBracket);\r\n            }\r\n            else {\r\n                const lastBracket = brackets[brackets.length - 1];\r\n                if (lastBracket.open[0] === currentBracket.open[0] && lastBracket.isOpen && !currentBracket.isOpen) {\r\n                    brackets.pop();\r\n                }\r\n                else {\r\n                    brackets.push(currentBracket);\r\n                }\r\n                if (brackets.length === 0) {\r\n                    if (ignoreFirstEmpty) {\r\n                        ignoreFirstEmpty = false;\r\n                    }\r\n                    else {\r\n                        return new Range(startLineNumber, 1, currentBracket.range.endLineNumber + 1, 1);\r\n                    }\r\n                }\r\n            }\r\n            const maxColumn = textEditorModel.getLineMaxColumn(startLineNumber);\r\n            let nextLineNumber = currentBracket.range.endLineNumber;\r\n            let nextColumn = currentBracket.range.endColumn;\r\n            if (maxColumn === currentBracket.range.endColumn) {\r\n                nextLineNumber++;\r\n                nextColumn = 1;\r\n            }\r\n            if (nextLineNumber > maxLineNumber) {\r\n                return new Range(startLineNumber, 1, maxLineNumber + 1, 1);\r\n            }\r\n            currentBracket = textEditorModel.findNextBracket(new Position(nextLineNumber, nextColumn));\r\n        }\r\n        return new Range(startLineNumber, 1, maxLineNumber + 1, 1);\r\n    }\r\n    addDecoration(range, hoverMessage) {\r\n        const newDecorations = {\r\n            range: range,\r\n            options: {\r\n                inlineClassName: 'goto-definition-link',\r\n                hoverMessage\r\n            }\r\n        };\r\n        this.linkDecorations = this.editor.deltaDecorations(this.linkDecorations, [newDecorations]);\r\n    }\r\n    removeLinkDecorations() {\r\n        if (this.linkDecorations.length > 0) {\r\n            this.linkDecorations = this.editor.deltaDecorations(this.linkDecorations, []);\r\n        }\r\n    }\r\n    isEnabled(mouseEvent, withKey) {\r\n        return this.editor.hasModel() &&\r\n            mouseEvent.isNoneOrSingleMouseDown &&\r\n            (mouseEvent.target.type === 6 /* CONTENT_TEXT */) &&\r\n            (mouseEvent.hasTriggerModifier || (withKey ? withKey.keyCodeIsTriggerKey : false)) &&\r\n            DefinitionProviderRegistry.has(this.editor.getModel());\r\n    }\r\n    findDefinition(position, token) {\r\n        const model = this.editor.getModel();\r\n        if (!model) {\r\n            return Promise.resolve(null);\r\n        }\r\n        return getDefinitionsAtPosition(model, position, token);\r\n    }\r\n    gotoDefinition(position, openToSide) {\r\n        this.editor.setPosition(position);\r\n        return this.editor.invokeWithinContext((accessor) => {\r\n            const canPeek = !openToSide && this.editor.getOption(72 /* definitionLinkOpensInPeek */) && !this.isInPeekEditor(accessor);\r\n            const action = new DefinitionAction({ openToSide, openInPeek: canPeek, muteMessage: true }, { alias: '', label: '', id: '', precondition: undefined });\r\n            return action.run(accessor, this.editor);\r\n        });\r\n    }\r\n    isInPeekEditor(accessor) {\r\n        const contextKeyService = accessor.get(IContextKeyService);\r\n        return PeekContext.inPeekEditor.getValue(contextKeyService);\r\n    }\r\n    dispose() {\r\n        this.toUnhook.dispose();\r\n    }\r\n};\r\nGotoDefinitionAtPositionEditorContribution.ID = 'editor.contrib.gotodefinitionatposition';\r\nGotoDefinitionAtPositionEditorContribution.MAX_SOURCE_PREVIEW_LINES = 8;\r\nGotoDefinitionAtPositionEditorContribution = __decorate([\r\n    __param(1, ITextModelService),\r\n    __param(2, IModeService)\r\n], GotoDefinitionAtPositionEditorContribution);\r\nexport { GotoDefinitionAtPositionEditorContribution };\r\nregisterEditorContribution(GotoDefinitionAtPositionEditorContribution.ID, GotoDefinitionAtPositionEditorContribution);\r\nregisterThemingParticipant((theme, collector) => {\r\n    const activeLinkForeground = theme.getColor(editorActiveLinkForeground);\r\n    if (activeLinkForeground) {\r\n        collector.addRule(`.monaco-editor .goto-definition-link { color: ${activeLinkForeground} !important; }`);\r\n    }\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}