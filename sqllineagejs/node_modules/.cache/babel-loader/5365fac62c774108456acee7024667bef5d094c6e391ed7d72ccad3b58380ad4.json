{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\n/**\r\n * An event describing that a model has been reset to a new value.\r\n * @internal\r\n */\nexport class ModelRawFlush {\n  constructor() {\n    this.changeType = 1 /* Flush */;\n  }\n}\n/**\r\n * An event describing that a line has changed in a model.\r\n * @internal\r\n */\nexport class ModelRawLineChanged {\n  constructor(lineNumber, detail) {\n    this.changeType = 2 /* LineChanged */;\n    this.lineNumber = lineNumber;\n    this.detail = detail;\n  }\n}\n/**\r\n * An event describing that line(s) have been deleted in a model.\r\n * @internal\r\n */\nexport class ModelRawLinesDeleted {\n  constructor(fromLineNumber, toLineNumber) {\n    this.changeType = 3 /* LinesDeleted */;\n    this.fromLineNumber = fromLineNumber;\n    this.toLineNumber = toLineNumber;\n  }\n}\n/**\r\n * An event describing that line(s) have been inserted in a model.\r\n * @internal\r\n */\nexport class ModelRawLinesInserted {\n  constructor(fromLineNumber, toLineNumber, detail) {\n    this.changeType = 4 /* LinesInserted */;\n    this.fromLineNumber = fromLineNumber;\n    this.toLineNumber = toLineNumber;\n    this.detail = detail;\n  }\n}\n/**\r\n * An event describing that a model has had its EOL changed.\r\n * @internal\r\n */\nexport class ModelRawEOLChanged {\n  constructor() {\n    this.changeType = 5 /* EOLChanged */;\n  }\n}\n/**\r\n * An event describing a change in the text of a model.\r\n * @internal\r\n */\nexport class ModelRawContentChangedEvent {\n  constructor(changes, versionId, isUndoing, isRedoing) {\n    this.changes = changes;\n    this.versionId = versionId;\n    this.isUndoing = isUndoing;\n    this.isRedoing = isRedoing;\n    this.resultingSelection = null;\n  }\n  containsEvent(type) {\n    for (let i = 0, len = this.changes.length; i < len; i++) {\n      const change = this.changes[i];\n      if (change.changeType === type) {\n        return true;\n      }\n    }\n    return false;\n  }\n  static merge(a, b) {\n    const changes = [].concat(a.changes).concat(b.changes);\n    const versionId = b.versionId;\n    const isUndoing = a.isUndoing || b.isUndoing;\n    const isRedoing = a.isRedoing || b.isRedoing;\n    return new ModelRawContentChangedEvent(changes, versionId, isUndoing, isRedoing);\n  }\n}\n/**\r\n * @internal\r\n */\nexport class InternalModelContentChangeEvent {\n  constructor(rawContentChangedEvent, contentChangedEvent) {\n    this.rawContentChangedEvent = rawContentChangedEvent;\n    this.contentChangedEvent = contentChangedEvent;\n  }\n  merge(other) {\n    const rawContentChangedEvent = ModelRawContentChangedEvent.merge(this.rawContentChangedEvent, other.rawContentChangedEvent);\n    const contentChangedEvent = InternalModelContentChangeEvent._mergeChangeEvents(this.contentChangedEvent, other.contentChangedEvent);\n    return new InternalModelContentChangeEvent(rawContentChangedEvent, contentChangedEvent);\n  }\n  static _mergeChangeEvents(a, b) {\n    const changes = [].concat(a.changes).concat(b.changes);\n    const eol = b.eol;\n    const versionId = b.versionId;\n    const isUndoing = a.isUndoing || b.isUndoing;\n    const isRedoing = a.isRedoing || b.isRedoing;\n    const isFlush = a.isFlush || b.isFlush;\n    return {\n      changes: changes,\n      eol: eol,\n      versionId: versionId,\n      isUndoing: isUndoing,\n      isRedoing: isRedoing,\n      isFlush: isFlush\n    };\n  }\n}","map":{"version":3,"names":["ModelRawFlush","constructor","changeType","ModelRawLineChanged","lineNumber","detail","ModelRawLinesDeleted","fromLineNumber","toLineNumber","ModelRawLinesInserted","ModelRawEOLChanged","ModelRawContentChangedEvent","changes","versionId","isUndoing","isRedoing","resultingSelection","containsEvent","type","i","len","length","change","merge","a","b","concat","InternalModelContentChangeEvent","rawContentChangedEvent","contentChangedEvent","other","_mergeChangeEvents","eol","isFlush"],"sources":["C:/Users/Administrator/Desktop/sqllineage-master/sqllineagejs/node_modules/monaco-editor/esm/vs/editor/common/model/textModelEvents.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n/**\r\n * An event describing that a model has been reset to a new value.\r\n * @internal\r\n */\r\nexport class ModelRawFlush {\r\n    constructor() {\r\n        this.changeType = 1 /* Flush */;\r\n    }\r\n}\r\n/**\r\n * An event describing that a line has changed in a model.\r\n * @internal\r\n */\r\nexport class ModelRawLineChanged {\r\n    constructor(lineNumber, detail) {\r\n        this.changeType = 2 /* LineChanged */;\r\n        this.lineNumber = lineNumber;\r\n        this.detail = detail;\r\n    }\r\n}\r\n/**\r\n * An event describing that line(s) have been deleted in a model.\r\n * @internal\r\n */\r\nexport class ModelRawLinesDeleted {\r\n    constructor(fromLineNumber, toLineNumber) {\r\n        this.changeType = 3 /* LinesDeleted */;\r\n        this.fromLineNumber = fromLineNumber;\r\n        this.toLineNumber = toLineNumber;\r\n    }\r\n}\r\n/**\r\n * An event describing that line(s) have been inserted in a model.\r\n * @internal\r\n */\r\nexport class ModelRawLinesInserted {\r\n    constructor(fromLineNumber, toLineNumber, detail) {\r\n        this.changeType = 4 /* LinesInserted */;\r\n        this.fromLineNumber = fromLineNumber;\r\n        this.toLineNumber = toLineNumber;\r\n        this.detail = detail;\r\n    }\r\n}\r\n/**\r\n * An event describing that a model has had its EOL changed.\r\n * @internal\r\n */\r\nexport class ModelRawEOLChanged {\r\n    constructor() {\r\n        this.changeType = 5 /* EOLChanged */;\r\n    }\r\n}\r\n/**\r\n * An event describing a change in the text of a model.\r\n * @internal\r\n */\r\nexport class ModelRawContentChangedEvent {\r\n    constructor(changes, versionId, isUndoing, isRedoing) {\r\n        this.changes = changes;\r\n        this.versionId = versionId;\r\n        this.isUndoing = isUndoing;\r\n        this.isRedoing = isRedoing;\r\n        this.resultingSelection = null;\r\n    }\r\n    containsEvent(type) {\r\n        for (let i = 0, len = this.changes.length; i < len; i++) {\r\n            const change = this.changes[i];\r\n            if (change.changeType === type) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    static merge(a, b) {\r\n        const changes = [].concat(a.changes).concat(b.changes);\r\n        const versionId = b.versionId;\r\n        const isUndoing = (a.isUndoing || b.isUndoing);\r\n        const isRedoing = (a.isRedoing || b.isRedoing);\r\n        return new ModelRawContentChangedEvent(changes, versionId, isUndoing, isRedoing);\r\n    }\r\n}\r\n/**\r\n * @internal\r\n */\r\nexport class InternalModelContentChangeEvent {\r\n    constructor(rawContentChangedEvent, contentChangedEvent) {\r\n        this.rawContentChangedEvent = rawContentChangedEvent;\r\n        this.contentChangedEvent = contentChangedEvent;\r\n    }\r\n    merge(other) {\r\n        const rawContentChangedEvent = ModelRawContentChangedEvent.merge(this.rawContentChangedEvent, other.rawContentChangedEvent);\r\n        const contentChangedEvent = InternalModelContentChangeEvent._mergeChangeEvents(this.contentChangedEvent, other.contentChangedEvent);\r\n        return new InternalModelContentChangeEvent(rawContentChangedEvent, contentChangedEvent);\r\n    }\r\n    static _mergeChangeEvents(a, b) {\r\n        const changes = [].concat(a.changes).concat(b.changes);\r\n        const eol = b.eol;\r\n        const versionId = b.versionId;\r\n        const isUndoing = (a.isUndoing || b.isUndoing);\r\n        const isRedoing = (a.isRedoing || b.isRedoing);\r\n        const isFlush = (a.isFlush || b.isFlush);\r\n        return {\r\n            changes: changes,\r\n            eol: eol,\r\n            versionId: versionId,\r\n            isUndoing: isUndoing,\r\n            isRedoing: isRedoing,\r\n            isFlush: isFlush\r\n        };\r\n    }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}