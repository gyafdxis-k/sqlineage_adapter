{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nimport { TimeoutTimer, createCancelablePromise } from '../../../base/common/async.js';\nimport { RGBA } from '../../../base/common/color.js';\nimport { onUnexpectedError } from '../../../base/common/errors.js';\nimport { hash } from '../../../base/common/hash.js';\nimport { Disposable, DisposableStore } from '../../../base/common/lifecycle.js';\nimport { registerEditorContribution } from '../../browser/editorExtensions.js';\nimport { ICodeEditorService } from '../../browser/services/codeEditorService.js';\nimport { Range } from '../../common/core/range.js';\nimport { ModelDecorationOptions } from '../../common/model/textModel.js';\nimport { ColorProviderRegistry } from '../../common/modes.js';\nimport { getColors } from './color.js';\nimport { IConfigurationService } from '../../../platform/configuration/common/configuration.js';\nconst MAX_DECORATORS = 500;\nlet ColorDetector = class ColorDetector extends Disposable {\n  constructor(_editor, _codeEditorService, _configurationService) {\n    super();\n    this._editor = _editor;\n    this._codeEditorService = _codeEditorService;\n    this._configurationService = _configurationService;\n    this._localToDispose = this._register(new DisposableStore());\n    this._decorationsIds = [];\n    this._colorDatas = new Map();\n    this._colorDecoratorIds = [];\n    this._decorationsTypes = new Set();\n    this._register(_editor.onDidChangeModel(() => {\n      this._isEnabled = this.isEnabled();\n      this.onModelChanged();\n    }));\n    this._register(_editor.onDidChangeModelLanguage(() => this.onModelChanged()));\n    this._register(ColorProviderRegistry.onDidChange(() => this.onModelChanged()));\n    this._register(_editor.onDidChangeConfiguration(() => {\n      let prevIsEnabled = this._isEnabled;\n      this._isEnabled = this.isEnabled();\n      if (prevIsEnabled !== this._isEnabled) {\n        if (this._isEnabled) {\n          this.onModelChanged();\n        } else {\n          this.removeAllDecorations();\n        }\n      }\n    }));\n    this._timeoutTimer = null;\n    this._computePromise = null;\n    this._isEnabled = this.isEnabled();\n    this.onModelChanged();\n  }\n  isEnabled() {\n    const model = this._editor.getModel();\n    if (!model) {\n      return false;\n    }\n    const languageId = model.getLanguageIdentifier();\n    // handle deprecated settings. [languageId].colorDecorators.enable\n    const deprecatedConfig = this._configurationService.getValue(languageId.language);\n    if (deprecatedConfig) {\n      const colorDecorators = deprecatedConfig['colorDecorators']; // deprecatedConfig.valueOf('.colorDecorators.enable');\n      if (colorDecorators && colorDecorators['enable'] !== undefined && !colorDecorators['enable']) {\n        return colorDecorators['enable'];\n      }\n    }\n    return this._editor.getOption(14 /* colorDecorators */);\n  }\n\n  static get(editor) {\n    return editor.getContribution(this.ID);\n  }\n  dispose() {\n    this.stop();\n    this.removeAllDecorations();\n    super.dispose();\n  }\n  onModelChanged() {\n    this.stop();\n    if (!this._isEnabled) {\n      return;\n    }\n    const model = this._editor.getModel();\n    if (!model || !ColorProviderRegistry.has(model)) {\n      return;\n    }\n    this._localToDispose.add(this._editor.onDidChangeModelContent(() => {\n      if (!this._timeoutTimer) {\n        this._timeoutTimer = new TimeoutTimer();\n        this._timeoutTimer.cancelAndSet(() => {\n          this._timeoutTimer = null;\n          this.beginCompute();\n        }, ColorDetector.RECOMPUTE_TIME);\n      }\n    }));\n    this.beginCompute();\n  }\n  beginCompute() {\n    this._computePromise = createCancelablePromise(token => {\n      const model = this._editor.getModel();\n      if (!model) {\n        return Promise.resolve([]);\n      }\n      return getColors(model, token);\n    });\n    this._computePromise.then(colorInfos => {\n      this.updateDecorations(colorInfos);\n      this.updateColorDecorators(colorInfos);\n      this._computePromise = null;\n    }, onUnexpectedError);\n  }\n  stop() {\n    if (this._timeoutTimer) {\n      this._timeoutTimer.cancel();\n      this._timeoutTimer = null;\n    }\n    if (this._computePromise) {\n      this._computePromise.cancel();\n      this._computePromise = null;\n    }\n    this._localToDispose.clear();\n  }\n  updateDecorations(colorDatas) {\n    const decorations = colorDatas.map(c => ({\n      range: {\n        startLineNumber: c.colorInfo.range.startLineNumber,\n        startColumn: c.colorInfo.range.startColumn,\n        endLineNumber: c.colorInfo.range.endLineNumber,\n        endColumn: c.colorInfo.range.endColumn\n      },\n      options: ModelDecorationOptions.EMPTY\n    }));\n    this._decorationsIds = this._editor.deltaDecorations(this._decorationsIds, decorations);\n    this._colorDatas = new Map();\n    this._decorationsIds.forEach((id, i) => this._colorDatas.set(id, colorDatas[i]));\n  }\n  updateColorDecorators(colorData) {\n    let decorations = [];\n    let newDecorationsTypes = {};\n    for (let i = 0; i < colorData.length && decorations.length < MAX_DECORATORS; i++) {\n      const {\n        red,\n        green,\n        blue,\n        alpha\n      } = colorData[i].colorInfo.color;\n      const rgba = new RGBA(Math.round(red * 255), Math.round(green * 255), Math.round(blue * 255), alpha);\n      let subKey = hash(\"rgba(\".concat(rgba.r, \",\").concat(rgba.g, \",\").concat(rgba.b, \",\").concat(rgba.a, \")\")).toString(16);\n      let color = \"rgba(\".concat(rgba.r, \", \").concat(rgba.g, \", \").concat(rgba.b, \", \").concat(rgba.a, \")\");\n      let key = 'colorBox-' + subKey;\n      if (!this._decorationsTypes.has(key) && !newDecorationsTypes[key]) {\n        this._codeEditorService.registerDecorationType(key, {\n          before: {\n            contentText: ' ',\n            border: 'solid 0.1em #000',\n            margin: '0.1em 0.2em 0 0.2em',\n            width: '0.8em',\n            height: '0.8em',\n            backgroundColor: color\n          },\n          dark: {\n            before: {\n              border: 'solid 0.1em #eee'\n            }\n          }\n        }, undefined, this._editor);\n      }\n      newDecorationsTypes[key] = true;\n      decorations.push({\n        range: {\n          startLineNumber: colorData[i].colorInfo.range.startLineNumber,\n          startColumn: colorData[i].colorInfo.range.startColumn,\n          endLineNumber: colorData[i].colorInfo.range.endLineNumber,\n          endColumn: colorData[i].colorInfo.range.endColumn\n        },\n        options: this._codeEditorService.resolveDecorationOptions(key, true)\n      });\n    }\n    this._decorationsTypes.forEach(subType => {\n      if (!newDecorationsTypes[subType]) {\n        this._codeEditorService.removeDecorationType(subType);\n      }\n    });\n    this._colorDecoratorIds = this._editor.deltaDecorations(this._colorDecoratorIds, decorations);\n  }\n  removeAllDecorations() {\n    this._decorationsIds = this._editor.deltaDecorations(this._decorationsIds, []);\n    this._colorDecoratorIds = this._editor.deltaDecorations(this._colorDecoratorIds, []);\n    this._decorationsTypes.forEach(subType => {\n      this._codeEditorService.removeDecorationType(subType);\n    });\n  }\n  getColorData(position) {\n    const model = this._editor.getModel();\n    if (!model) {\n      return null;\n    }\n    const decorations = model.getDecorationsInRange(Range.fromPositions(position, position)).filter(d => this._colorDatas.has(d.id));\n    if (decorations.length === 0) {\n      return null;\n    }\n    return this._colorDatas.get(decorations[0].id);\n  }\n};\nColorDetector.ID = 'editor.contrib.colorDetector';\nColorDetector.RECOMPUTE_TIME = 1000; // ms\nColorDetector = __decorate([__param(1, ICodeEditorService), __param(2, IConfigurationService)], ColorDetector);\nexport { ColorDetector };\nregisterEditorContribution(ColorDetector.ID, ColorDetector);","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","TimeoutTimer","createCancelablePromise","RGBA","onUnexpectedError","hash","Disposable","DisposableStore","registerEditorContribution","ICodeEditorService","Range","ModelDecorationOptions","ColorProviderRegistry","getColors","IConfigurationService","MAX_DECORATORS","ColorDetector","constructor","_editor","_codeEditorService","_configurationService","_localToDispose","_register","_decorationsIds","_colorDatas","Map","_colorDecoratorIds","_decorationsTypes","Set","onDidChangeModel","_isEnabled","isEnabled","onModelChanged","onDidChangeModelLanguage","onDidChange","onDidChangeConfiguration","prevIsEnabled","removeAllDecorations","_timeoutTimer","_computePromise","model","getModel","languageId","getLanguageIdentifier","deprecatedConfig","getValue","language","colorDecorators","undefined","getOption","get","editor","getContribution","ID","dispose","stop","has","add","onDidChangeModelContent","cancelAndSet","beginCompute","RECOMPUTE_TIME","token","Promise","resolve","then","colorInfos","updateDecorations","updateColorDecorators","cancel","clear","colorDatas","decorations","map","range","startLineNumber","colorInfo","startColumn","endLineNumber","endColumn","options","EMPTY","deltaDecorations","forEach","id","set","colorData","newDecorationsTypes","red","green","blue","alpha","color","rgba","Math","round","subKey","concat","g","b","a","toString","registerDecorationType","before","contentText","border","margin","width","height","backgroundColor","dark","push","resolveDecorationOptions","subType","removeDecorationType","getColorData","position","getDecorationsInRange","fromPositions","filter"],"sources":["C:/Users/Administrator/Desktop/sqllineage-master/sqllineagejs/node_modules/monaco-editor/esm/vs/editor/contrib/colorPicker/colorDetector.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { TimeoutTimer, createCancelablePromise } from '../../../base/common/async.js';\r\nimport { RGBA } from '../../../base/common/color.js';\r\nimport { onUnexpectedError } from '../../../base/common/errors.js';\r\nimport { hash } from '../../../base/common/hash.js';\r\nimport { Disposable, DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { registerEditorContribution } from '../../browser/editorExtensions.js';\r\nimport { ICodeEditorService } from '../../browser/services/codeEditorService.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { ModelDecorationOptions } from '../../common/model/textModel.js';\r\nimport { ColorProviderRegistry } from '../../common/modes.js';\r\nimport { getColors } from './color.js';\r\nimport { IConfigurationService } from '../../../platform/configuration/common/configuration.js';\r\nconst MAX_DECORATORS = 500;\r\nlet ColorDetector = class ColorDetector extends Disposable {\r\n    constructor(_editor, _codeEditorService, _configurationService) {\r\n        super();\r\n        this._editor = _editor;\r\n        this._codeEditorService = _codeEditorService;\r\n        this._configurationService = _configurationService;\r\n        this._localToDispose = this._register(new DisposableStore());\r\n        this._decorationsIds = [];\r\n        this._colorDatas = new Map();\r\n        this._colorDecoratorIds = [];\r\n        this._decorationsTypes = new Set();\r\n        this._register(_editor.onDidChangeModel(() => {\r\n            this._isEnabled = this.isEnabled();\r\n            this.onModelChanged();\r\n        }));\r\n        this._register(_editor.onDidChangeModelLanguage(() => this.onModelChanged()));\r\n        this._register(ColorProviderRegistry.onDidChange(() => this.onModelChanged()));\r\n        this._register(_editor.onDidChangeConfiguration(() => {\r\n            let prevIsEnabled = this._isEnabled;\r\n            this._isEnabled = this.isEnabled();\r\n            if (prevIsEnabled !== this._isEnabled) {\r\n                if (this._isEnabled) {\r\n                    this.onModelChanged();\r\n                }\r\n                else {\r\n                    this.removeAllDecorations();\r\n                }\r\n            }\r\n        }));\r\n        this._timeoutTimer = null;\r\n        this._computePromise = null;\r\n        this._isEnabled = this.isEnabled();\r\n        this.onModelChanged();\r\n    }\r\n    isEnabled() {\r\n        const model = this._editor.getModel();\r\n        if (!model) {\r\n            return false;\r\n        }\r\n        const languageId = model.getLanguageIdentifier();\r\n        // handle deprecated settings. [languageId].colorDecorators.enable\r\n        const deprecatedConfig = this._configurationService.getValue(languageId.language);\r\n        if (deprecatedConfig) {\r\n            const colorDecorators = deprecatedConfig['colorDecorators']; // deprecatedConfig.valueOf('.colorDecorators.enable');\r\n            if (colorDecorators && colorDecorators['enable'] !== undefined && !colorDecorators['enable']) {\r\n                return colorDecorators['enable'];\r\n            }\r\n        }\r\n        return this._editor.getOption(14 /* colorDecorators */);\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(this.ID);\r\n    }\r\n    dispose() {\r\n        this.stop();\r\n        this.removeAllDecorations();\r\n        super.dispose();\r\n    }\r\n    onModelChanged() {\r\n        this.stop();\r\n        if (!this._isEnabled) {\r\n            return;\r\n        }\r\n        const model = this._editor.getModel();\r\n        if (!model || !ColorProviderRegistry.has(model)) {\r\n            return;\r\n        }\r\n        this._localToDispose.add(this._editor.onDidChangeModelContent(() => {\r\n            if (!this._timeoutTimer) {\r\n                this._timeoutTimer = new TimeoutTimer();\r\n                this._timeoutTimer.cancelAndSet(() => {\r\n                    this._timeoutTimer = null;\r\n                    this.beginCompute();\r\n                }, ColorDetector.RECOMPUTE_TIME);\r\n            }\r\n        }));\r\n        this.beginCompute();\r\n    }\r\n    beginCompute() {\r\n        this._computePromise = createCancelablePromise(token => {\r\n            const model = this._editor.getModel();\r\n            if (!model) {\r\n                return Promise.resolve([]);\r\n            }\r\n            return getColors(model, token);\r\n        });\r\n        this._computePromise.then((colorInfos) => {\r\n            this.updateDecorations(colorInfos);\r\n            this.updateColorDecorators(colorInfos);\r\n            this._computePromise = null;\r\n        }, onUnexpectedError);\r\n    }\r\n    stop() {\r\n        if (this._timeoutTimer) {\r\n            this._timeoutTimer.cancel();\r\n            this._timeoutTimer = null;\r\n        }\r\n        if (this._computePromise) {\r\n            this._computePromise.cancel();\r\n            this._computePromise = null;\r\n        }\r\n        this._localToDispose.clear();\r\n    }\r\n    updateDecorations(colorDatas) {\r\n        const decorations = colorDatas.map(c => ({\r\n            range: {\r\n                startLineNumber: c.colorInfo.range.startLineNumber,\r\n                startColumn: c.colorInfo.range.startColumn,\r\n                endLineNumber: c.colorInfo.range.endLineNumber,\r\n                endColumn: c.colorInfo.range.endColumn\r\n            },\r\n            options: ModelDecorationOptions.EMPTY\r\n        }));\r\n        this._decorationsIds = this._editor.deltaDecorations(this._decorationsIds, decorations);\r\n        this._colorDatas = new Map();\r\n        this._decorationsIds.forEach((id, i) => this._colorDatas.set(id, colorDatas[i]));\r\n    }\r\n    updateColorDecorators(colorData) {\r\n        let decorations = [];\r\n        let newDecorationsTypes = {};\r\n        for (let i = 0; i < colorData.length && decorations.length < MAX_DECORATORS; i++) {\r\n            const { red, green, blue, alpha } = colorData[i].colorInfo.color;\r\n            const rgba = new RGBA(Math.round(red * 255), Math.round(green * 255), Math.round(blue * 255), alpha);\r\n            let subKey = hash(`rgba(${rgba.r},${rgba.g},${rgba.b},${rgba.a})`).toString(16);\r\n            let color = `rgba(${rgba.r}, ${rgba.g}, ${rgba.b}, ${rgba.a})`;\r\n            let key = 'colorBox-' + subKey;\r\n            if (!this._decorationsTypes.has(key) && !newDecorationsTypes[key]) {\r\n                this._codeEditorService.registerDecorationType(key, {\r\n                    before: {\r\n                        contentText: ' ',\r\n                        border: 'solid 0.1em #000',\r\n                        margin: '0.1em 0.2em 0 0.2em',\r\n                        width: '0.8em',\r\n                        height: '0.8em',\r\n                        backgroundColor: color\r\n                    },\r\n                    dark: {\r\n                        before: {\r\n                            border: 'solid 0.1em #eee'\r\n                        }\r\n                    }\r\n                }, undefined, this._editor);\r\n            }\r\n            newDecorationsTypes[key] = true;\r\n            decorations.push({\r\n                range: {\r\n                    startLineNumber: colorData[i].colorInfo.range.startLineNumber,\r\n                    startColumn: colorData[i].colorInfo.range.startColumn,\r\n                    endLineNumber: colorData[i].colorInfo.range.endLineNumber,\r\n                    endColumn: colorData[i].colorInfo.range.endColumn\r\n                },\r\n                options: this._codeEditorService.resolveDecorationOptions(key, true)\r\n            });\r\n        }\r\n        this._decorationsTypes.forEach(subType => {\r\n            if (!newDecorationsTypes[subType]) {\r\n                this._codeEditorService.removeDecorationType(subType);\r\n            }\r\n        });\r\n        this._colorDecoratorIds = this._editor.deltaDecorations(this._colorDecoratorIds, decorations);\r\n    }\r\n    removeAllDecorations() {\r\n        this._decorationsIds = this._editor.deltaDecorations(this._decorationsIds, []);\r\n        this._colorDecoratorIds = this._editor.deltaDecorations(this._colorDecoratorIds, []);\r\n        this._decorationsTypes.forEach(subType => {\r\n            this._codeEditorService.removeDecorationType(subType);\r\n        });\r\n    }\r\n    getColorData(position) {\r\n        const model = this._editor.getModel();\r\n        if (!model) {\r\n            return null;\r\n        }\r\n        const decorations = model\r\n            .getDecorationsInRange(Range.fromPositions(position, position))\r\n            .filter(d => this._colorDatas.has(d.id));\r\n        if (decorations.length === 0) {\r\n            return null;\r\n        }\r\n        return this._colorDatas.get(decorations[0].id);\r\n    }\r\n};\r\nColorDetector.ID = 'editor.contrib.colorDetector';\r\nColorDetector.RECOMPUTE_TIME = 1000; // ms\r\nColorDetector = __decorate([\r\n    __param(1, ICodeEditorService),\r\n    __param(2, IConfigurationService)\r\n], ColorDetector);\r\nexport { ColorDetector };\r\nregisterEditorContribution(ColorDetector.ID, ColorDetector);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}