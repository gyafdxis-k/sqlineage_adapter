{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { contrastBorder, listFocusBackground, listFocusForeground, listActiveSelectionBackground, listActiveSelectionForeground, listInactiveSelectionForeground, listInactiveSelectionBackground, listInactiveFocusBackground, listHoverBackground, listHoverForeground, listDropBackground, widgetShadow, activeContrastBorder, badgeBackground, badgeForeground, menuForeground, menuBackground, menuSelectionForeground, menuSelectionBackground, menuSelectionBorder, menuBorder, menuSeparatorBackground, darken, listFilterWidgetOutline, listFilterWidgetNoMatchesOutline, listFilterWidgetBackground, treeIndentGuidesStroke, resolveColorValue } from './colorRegistry.js';\nexport function computeStyles(theme, styleMap) {\n  const styles = Object.create(null);\n  for (let key in styleMap) {\n    const value = styleMap[key];\n    if (value) {\n      styles[key] = resolveColorValue(value, theme);\n    }\n  }\n  return styles;\n}\nexport function attachStyler(themeService, styleMap, widgetOrCallback) {\n  function applyStyles(theme) {\n    const styles = computeStyles(themeService.getColorTheme(), styleMap);\n    if (typeof widgetOrCallback === 'function') {\n      widgetOrCallback(styles);\n    } else {\n      widgetOrCallback.style(styles);\n    }\n  }\n  applyStyles(themeService.getColorTheme());\n  return themeService.onDidColorThemeChange(applyStyles);\n}\nexport function attachBadgeStyler(widget, themeService, style) {\n  return attachStyler(themeService, {\n    badgeBackground: style && style.badgeBackground || badgeBackground,\n    badgeForeground: style && style.badgeForeground || badgeForeground,\n    badgeBorder: contrastBorder\n  }, widget);\n}\nexport function attachListStyler(widget, themeService, overrides) {\n  return attachStyler(themeService, Object.assign(Object.assign({}, defaultListStyles), overrides || {}), widget);\n}\nexport const defaultListStyles = {\n  listFocusBackground: listFocusBackground,\n  listFocusForeground: listFocusForeground,\n  listActiveSelectionBackground: darken(listActiveSelectionBackground, 0.1),\n  listActiveSelectionForeground: listActiveSelectionForeground,\n  listFocusAndSelectionBackground: listActiveSelectionBackground,\n  listFocusAndSelectionForeground: listActiveSelectionForeground,\n  listInactiveSelectionBackground: listInactiveSelectionBackground,\n  listInactiveSelectionForeground: listInactiveSelectionForeground,\n  listInactiveFocusBackground: listInactiveFocusBackground,\n  listHoverBackground: listHoverBackground,\n  listHoverForeground: listHoverForeground,\n  listDropBackground: listDropBackground,\n  listFocusOutline: activeContrastBorder,\n  listSelectionOutline: activeContrastBorder,\n  listHoverOutline: activeContrastBorder,\n  listFilterWidgetBackground: listFilterWidgetBackground,\n  listFilterWidgetOutline: listFilterWidgetOutline,\n  listFilterWidgetNoMatchesOutline: listFilterWidgetNoMatchesOutline,\n  listMatchesShadow: widgetShadow,\n  treeIndentGuidesStroke: treeIndentGuidesStroke\n};\nexport const defaultMenuStyles = {\n  shadowColor: widgetShadow,\n  borderColor: menuBorder,\n  foregroundColor: menuForeground,\n  backgroundColor: menuBackground,\n  selectionForegroundColor: menuSelectionForeground,\n  selectionBackgroundColor: menuSelectionBackground,\n  selectionBorderColor: menuSelectionBorder,\n  separatorColor: menuSeparatorBackground\n};\nexport function attachMenuStyler(widget, themeService, style) {\n  return attachStyler(themeService, Object.assign(Object.assign({}, defaultMenuStyles), style), widget);\n}","map":{"version":3,"names":["contrastBorder","listFocusBackground","listFocusForeground","listActiveSelectionBackground","listActiveSelectionForeground","listInactiveSelectionForeground","listInactiveSelectionBackground","listInactiveFocusBackground","listHoverBackground","listHoverForeground","listDropBackground","widgetShadow","activeContrastBorder","badgeBackground","badgeForeground","menuForeground","menuBackground","menuSelectionForeground","menuSelectionBackground","menuSelectionBorder","menuBorder","menuSeparatorBackground","darken","listFilterWidgetOutline","listFilterWidgetNoMatchesOutline","listFilterWidgetBackground","treeIndentGuidesStroke","resolveColorValue","computeStyles","theme","styleMap","styles","Object","create","key","value","attachStyler","themeService","widgetOrCallback","applyStyles","getColorTheme","style","onDidColorThemeChange","attachBadgeStyler","widget","badgeBorder","attachListStyler","overrides","assign","defaultListStyles","listFocusAndSelectionBackground","listFocusAndSelectionForeground","listFocusOutline","listSelectionOutline","listHoverOutline","listMatchesShadow","defaultMenuStyles","shadowColor","borderColor","foregroundColor","backgroundColor","selectionForegroundColor","selectionBackgroundColor","selectionBorderColor","separatorColor","attachMenuStyler"],"sources":["C:/Users/Administrator/Desktop/sqllineage-master/sqllineagejs/node_modules/monaco-editor/esm/vs/platform/theme/common/styler.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { contrastBorder, listFocusBackground, listFocusForeground, listActiveSelectionBackground, listActiveSelectionForeground, listInactiveSelectionForeground, listInactiveSelectionBackground, listInactiveFocusBackground, listHoverBackground, listHoverForeground, listDropBackground, widgetShadow, activeContrastBorder, badgeBackground, badgeForeground, menuForeground, menuBackground, menuSelectionForeground, menuSelectionBackground, menuSelectionBorder, menuBorder, menuSeparatorBackground, darken, listFilterWidgetOutline, listFilterWidgetNoMatchesOutline, listFilterWidgetBackground, treeIndentGuidesStroke, resolveColorValue } from './colorRegistry.js';\r\nexport function computeStyles(theme, styleMap) {\r\n    const styles = Object.create(null);\r\n    for (let key in styleMap) {\r\n        const value = styleMap[key];\r\n        if (value) {\r\n            styles[key] = resolveColorValue(value, theme);\r\n        }\r\n    }\r\n    return styles;\r\n}\r\nexport function attachStyler(themeService, styleMap, widgetOrCallback) {\r\n    function applyStyles(theme) {\r\n        const styles = computeStyles(themeService.getColorTheme(), styleMap);\r\n        if (typeof widgetOrCallback === 'function') {\r\n            widgetOrCallback(styles);\r\n        }\r\n        else {\r\n            widgetOrCallback.style(styles);\r\n        }\r\n    }\r\n    applyStyles(themeService.getColorTheme());\r\n    return themeService.onDidColorThemeChange(applyStyles);\r\n}\r\nexport function attachBadgeStyler(widget, themeService, style) {\r\n    return attachStyler(themeService, {\r\n        badgeBackground: (style && style.badgeBackground) || badgeBackground,\r\n        badgeForeground: (style && style.badgeForeground) || badgeForeground,\r\n        badgeBorder: contrastBorder\r\n    }, widget);\r\n}\r\nexport function attachListStyler(widget, themeService, overrides) {\r\n    return attachStyler(themeService, Object.assign(Object.assign({}, defaultListStyles), (overrides || {})), widget);\r\n}\r\nexport const defaultListStyles = {\r\n    listFocusBackground: listFocusBackground,\r\n    listFocusForeground: listFocusForeground,\r\n    listActiveSelectionBackground: darken(listActiveSelectionBackground, 0.1),\r\n    listActiveSelectionForeground: listActiveSelectionForeground,\r\n    listFocusAndSelectionBackground: listActiveSelectionBackground,\r\n    listFocusAndSelectionForeground: listActiveSelectionForeground,\r\n    listInactiveSelectionBackground: listInactiveSelectionBackground,\r\n    listInactiveSelectionForeground: listInactiveSelectionForeground,\r\n    listInactiveFocusBackground: listInactiveFocusBackground,\r\n    listHoverBackground: listHoverBackground,\r\n    listHoverForeground: listHoverForeground,\r\n    listDropBackground: listDropBackground,\r\n    listFocusOutline: activeContrastBorder,\r\n    listSelectionOutline: activeContrastBorder,\r\n    listHoverOutline: activeContrastBorder,\r\n    listFilterWidgetBackground: listFilterWidgetBackground,\r\n    listFilterWidgetOutline: listFilterWidgetOutline,\r\n    listFilterWidgetNoMatchesOutline: listFilterWidgetNoMatchesOutline,\r\n    listMatchesShadow: widgetShadow,\r\n    treeIndentGuidesStroke: treeIndentGuidesStroke\r\n};\r\nexport const defaultMenuStyles = {\r\n    shadowColor: widgetShadow,\r\n    borderColor: menuBorder,\r\n    foregroundColor: menuForeground,\r\n    backgroundColor: menuBackground,\r\n    selectionForegroundColor: menuSelectionForeground,\r\n    selectionBackgroundColor: menuSelectionBackground,\r\n    selectionBorderColor: menuSelectionBorder,\r\n    separatorColor: menuSeparatorBackground\r\n};\r\nexport function attachMenuStyler(widget, themeService, style) {\r\n    return attachStyler(themeService, Object.assign(Object.assign({}, defaultMenuStyles), style), widget);\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}