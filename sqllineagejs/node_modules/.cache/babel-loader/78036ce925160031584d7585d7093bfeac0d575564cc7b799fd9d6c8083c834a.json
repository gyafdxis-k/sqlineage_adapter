{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport './lineNumbers.css';\nimport * as platform from '../../../../base/common/platform.js';\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\nimport { Position } from '../../../common/core/position.js';\nimport { editorActiveLineNumber, editorLineNumbers } from '../../../common/view/editorColorRegistry.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nexport class LineNumbersOverlay extends DynamicViewOverlay {\n  constructor(context) {\n    super();\n    this._context = context;\n    this._readConfig();\n    this._lastCursorModelPosition = new Position(1, 1);\n    this._renderResult = null;\n    this._context.addEventHandler(this);\n  }\n  _readConfig() {\n    const options = this._context.configuration.options;\n    this._lineHeight = options.get(53 /* lineHeight */);\n    const lineNumbers = options.get(54 /* lineNumbers */);\n    this._renderLineNumbers = lineNumbers.renderType;\n    this._renderCustomLineNumbers = lineNumbers.renderFn;\n    this._renderFinalNewline = options.get(79 /* renderFinalNewline */);\n    const layoutInfo = options.get(124 /* layoutInfo */);\n    this._lineNumbersLeft = layoutInfo.lineNumbersLeft;\n    this._lineNumbersWidth = layoutInfo.lineNumbersWidth;\n  }\n  dispose() {\n    this._context.removeEventHandler(this);\n    this._renderResult = null;\n    super.dispose();\n  }\n  // --- begin event handlers\n  onConfigurationChanged(e) {\n    this._readConfig();\n    return true;\n  }\n  onCursorStateChanged(e) {\n    const primaryViewPosition = e.selections[0].getPosition();\n    this._lastCursorModelPosition = this._context.model.coordinatesConverter.convertViewPositionToModelPosition(primaryViewPosition);\n    if (this._renderLineNumbers === 2 /* Relative */ || this._renderLineNumbers === 3 /* Interval */) {\n      return true;\n    }\n    return false;\n  }\n  onFlushed(e) {\n    return true;\n  }\n  onLinesChanged(e) {\n    return true;\n  }\n  onLinesDeleted(e) {\n    return true;\n  }\n  onLinesInserted(e) {\n    return true;\n  }\n  onScrollChanged(e) {\n    return e.scrollTopChanged;\n  }\n  onZonesChanged(e) {\n    return true;\n  }\n  // --- end event handlers\n  _getLineRenderLineNumber(viewLineNumber) {\n    const modelPosition = this._context.model.coordinatesConverter.convertViewPositionToModelPosition(new Position(viewLineNumber, 1));\n    if (modelPosition.column !== 1) {\n      return '';\n    }\n    const modelLineNumber = modelPosition.lineNumber;\n    if (this._renderCustomLineNumbers) {\n      return this._renderCustomLineNumbers(modelLineNumber);\n    }\n    if (this._renderLineNumbers === 2 /* Relative */) {\n      const diff = Math.abs(this._lastCursorModelPosition.lineNumber - modelLineNumber);\n      if (diff === 0) {\n        return '<span class=\"relative-current-line-number\">' + modelLineNumber + '</span>';\n      }\n      return String(diff);\n    }\n    if (this._renderLineNumbers === 3 /* Interval */) {\n      if (this._lastCursorModelPosition.lineNumber === modelLineNumber) {\n        return String(modelLineNumber);\n      }\n      if (modelLineNumber % 10 === 0) {\n        return String(modelLineNumber);\n      }\n      return '';\n    }\n    return String(modelLineNumber);\n  }\n  prepareRender(ctx) {\n    if (this._renderLineNumbers === 0 /* Off */) {\n      this._renderResult = null;\n      return;\n    }\n    const lineHeightClassName = platform.isLinux ? this._lineHeight % 2 === 0 ? ' lh-even' : ' lh-odd' : '';\n    const visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n    const visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n    const common = '<div class=\"' + LineNumbersOverlay.CLASS_NAME + lineHeightClassName + '\" style=\"left:' + this._lineNumbersLeft.toString() + 'px;width:' + this._lineNumbersWidth.toString() + 'px;\">';\n    const lineCount = this._context.model.getLineCount();\n    const output = [];\n    for (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n      const lineIndex = lineNumber - visibleStartLineNumber;\n      if (!this._renderFinalNewline) {\n        if (lineNumber === lineCount && this._context.model.getLineLength(lineNumber) === 0) {\n          // Do not render last (empty) line\n          output[lineIndex] = '';\n          continue;\n        }\n      }\n      const renderLineNumber = this._getLineRenderLineNumber(lineNumber);\n      if (renderLineNumber) {\n        output[lineIndex] = common + renderLineNumber + '</div>';\n      } else {\n        output[lineIndex] = '';\n      }\n    }\n    this._renderResult = output;\n  }\n  render(startLineNumber, lineNumber) {\n    if (!this._renderResult) {\n      return '';\n    }\n    const lineIndex = lineNumber - startLineNumber;\n    if (lineIndex < 0 || lineIndex >= this._renderResult.length) {\n      return '';\n    }\n    return this._renderResult[lineIndex];\n  }\n}\nLineNumbersOverlay.CLASS_NAME = 'line-numbers';\n// theming\nregisterThemingParticipant((theme, collector) => {\n  const lineNumbers = theme.getColor(editorLineNumbers);\n  if (lineNumbers) {\n    collector.addRule(\".monaco-editor .line-numbers { color: \".concat(lineNumbers, \"; }\"));\n  }\n  const activeLineNumber = theme.getColor(editorActiveLineNumber);\n  if (activeLineNumber) {\n    collector.addRule(\".monaco-editor .current-line ~ .line-numbers { color: \".concat(activeLineNumber, \"; }\"));\n  }\n});","map":{"version":3,"names":["platform","DynamicViewOverlay","Position","editorActiveLineNumber","editorLineNumbers","registerThemingParticipant","LineNumbersOverlay","constructor","context","_context","_readConfig","_lastCursorModelPosition","_renderResult","addEventHandler","options","configuration","_lineHeight","get","lineNumbers","_renderLineNumbers","renderType","_renderCustomLineNumbers","renderFn","_renderFinalNewline","layoutInfo","_lineNumbersLeft","lineNumbersLeft","_lineNumbersWidth","lineNumbersWidth","dispose","removeEventHandler","onConfigurationChanged","e","onCursorStateChanged","primaryViewPosition","selections","getPosition","model","coordinatesConverter","convertViewPositionToModelPosition","onFlushed","onLinesChanged","onLinesDeleted","onLinesInserted","onScrollChanged","scrollTopChanged","onZonesChanged","_getLineRenderLineNumber","viewLineNumber","modelPosition","column","modelLineNumber","lineNumber","diff","Math","abs","String","prepareRender","ctx","lineHeightClassName","isLinux","visibleStartLineNumber","visibleRange","startLineNumber","visibleEndLineNumber","endLineNumber","common","CLASS_NAME","toString","lineCount","getLineCount","output","lineIndex","getLineLength","renderLineNumber","render","length","theme","collector","getColor","addRule","concat","activeLineNumber"],"sources":["C:/Users/Administrator/Desktop/sqllineage-master/sqllineagejs/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/lineNumbers/lineNumbers.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport './lineNumbers.css';\r\nimport * as platform from '../../../../base/common/platform.js';\r\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\r\nimport { Position } from '../../../common/core/position.js';\r\nimport { editorActiveLineNumber, editorLineNumbers } from '../../../common/view/editorColorRegistry.js';\r\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\r\nexport class LineNumbersOverlay extends DynamicViewOverlay {\r\n    constructor(context) {\r\n        super();\r\n        this._context = context;\r\n        this._readConfig();\r\n        this._lastCursorModelPosition = new Position(1, 1);\r\n        this._renderResult = null;\r\n        this._context.addEventHandler(this);\r\n    }\r\n    _readConfig() {\r\n        const options = this._context.configuration.options;\r\n        this._lineHeight = options.get(53 /* lineHeight */);\r\n        const lineNumbers = options.get(54 /* lineNumbers */);\r\n        this._renderLineNumbers = lineNumbers.renderType;\r\n        this._renderCustomLineNumbers = lineNumbers.renderFn;\r\n        this._renderFinalNewline = options.get(79 /* renderFinalNewline */);\r\n        const layoutInfo = options.get(124 /* layoutInfo */);\r\n        this._lineNumbersLeft = layoutInfo.lineNumbersLeft;\r\n        this._lineNumbersWidth = layoutInfo.lineNumbersWidth;\r\n    }\r\n    dispose() {\r\n        this._context.removeEventHandler(this);\r\n        this._renderResult = null;\r\n        super.dispose();\r\n    }\r\n    // --- begin event handlers\r\n    onConfigurationChanged(e) {\r\n        this._readConfig();\r\n        return true;\r\n    }\r\n    onCursorStateChanged(e) {\r\n        const primaryViewPosition = e.selections[0].getPosition();\r\n        this._lastCursorModelPosition = this._context.model.coordinatesConverter.convertViewPositionToModelPosition(primaryViewPosition);\r\n        if (this._renderLineNumbers === 2 /* Relative */ || this._renderLineNumbers === 3 /* Interval */) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    onFlushed(e) {\r\n        return true;\r\n    }\r\n    onLinesChanged(e) {\r\n        return true;\r\n    }\r\n    onLinesDeleted(e) {\r\n        return true;\r\n    }\r\n    onLinesInserted(e) {\r\n        return true;\r\n    }\r\n    onScrollChanged(e) {\r\n        return e.scrollTopChanged;\r\n    }\r\n    onZonesChanged(e) {\r\n        return true;\r\n    }\r\n    // --- end event handlers\r\n    _getLineRenderLineNumber(viewLineNumber) {\r\n        const modelPosition = this._context.model.coordinatesConverter.convertViewPositionToModelPosition(new Position(viewLineNumber, 1));\r\n        if (modelPosition.column !== 1) {\r\n            return '';\r\n        }\r\n        const modelLineNumber = modelPosition.lineNumber;\r\n        if (this._renderCustomLineNumbers) {\r\n            return this._renderCustomLineNumbers(modelLineNumber);\r\n        }\r\n        if (this._renderLineNumbers === 2 /* Relative */) {\r\n            const diff = Math.abs(this._lastCursorModelPosition.lineNumber - modelLineNumber);\r\n            if (diff === 0) {\r\n                return '<span class=\"relative-current-line-number\">' + modelLineNumber + '</span>';\r\n            }\r\n            return String(diff);\r\n        }\r\n        if (this._renderLineNumbers === 3 /* Interval */) {\r\n            if (this._lastCursorModelPosition.lineNumber === modelLineNumber) {\r\n                return String(modelLineNumber);\r\n            }\r\n            if (modelLineNumber % 10 === 0) {\r\n                return String(modelLineNumber);\r\n            }\r\n            return '';\r\n        }\r\n        return String(modelLineNumber);\r\n    }\r\n    prepareRender(ctx) {\r\n        if (this._renderLineNumbers === 0 /* Off */) {\r\n            this._renderResult = null;\r\n            return;\r\n        }\r\n        const lineHeightClassName = (platform.isLinux ? (this._lineHeight % 2 === 0 ? ' lh-even' : ' lh-odd') : '');\r\n        const visibleStartLineNumber = ctx.visibleRange.startLineNumber;\r\n        const visibleEndLineNumber = ctx.visibleRange.endLineNumber;\r\n        const common = '<div class=\"' + LineNumbersOverlay.CLASS_NAME + lineHeightClassName + '\" style=\"left:' + this._lineNumbersLeft.toString() + 'px;width:' + this._lineNumbersWidth.toString() + 'px;\">';\r\n        const lineCount = this._context.model.getLineCount();\r\n        const output = [];\r\n        for (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\r\n            const lineIndex = lineNumber - visibleStartLineNumber;\r\n            if (!this._renderFinalNewline) {\r\n                if (lineNumber === lineCount && this._context.model.getLineLength(lineNumber) === 0) {\r\n                    // Do not render last (empty) line\r\n                    output[lineIndex] = '';\r\n                    continue;\r\n                }\r\n            }\r\n            const renderLineNumber = this._getLineRenderLineNumber(lineNumber);\r\n            if (renderLineNumber) {\r\n                output[lineIndex] = (common\r\n                    + renderLineNumber\r\n                    + '</div>');\r\n            }\r\n            else {\r\n                output[lineIndex] = '';\r\n            }\r\n        }\r\n        this._renderResult = output;\r\n    }\r\n    render(startLineNumber, lineNumber) {\r\n        if (!this._renderResult) {\r\n            return '';\r\n        }\r\n        const lineIndex = lineNumber - startLineNumber;\r\n        if (lineIndex < 0 || lineIndex >= this._renderResult.length) {\r\n            return '';\r\n        }\r\n        return this._renderResult[lineIndex];\r\n    }\r\n}\r\nLineNumbersOverlay.CLASS_NAME = 'line-numbers';\r\n// theming\r\nregisterThemingParticipant((theme, collector) => {\r\n    const lineNumbers = theme.getColor(editorLineNumbers);\r\n    if (lineNumbers) {\r\n        collector.addRule(`.monaco-editor .line-numbers { color: ${lineNumbers}; }`);\r\n    }\r\n    const activeLineNumber = theme.getColor(editorActiveLineNumber);\r\n    if (activeLineNumber) {\r\n        collector.addRule(`.monaco-editor .current-line ~ .line-numbers { color: ${activeLineNumber}; }`);\r\n    }\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}