{"ast":null,"code":"/**\r\n * @returns whether the provided parameter is a JavaScript Array or not.\r\n */\nexport function isArray(array) {\n  return Array.isArray(array);\n}\n/**\r\n * @returns whether the provided parameter is a JavaScript String or not.\r\n */\nexport function isString(str) {\n  return typeof str === 'string';\n}\n/**\r\n *\r\n * @returns whether the provided parameter is of type `object` but **not**\r\n *\t`null`, an `array`, a `regexp`, nor a `date`.\r\n */\nexport function isObject(obj) {\n  // The method can't do a type cast since there are type (like strings) which\n  // are subclasses of any put not positvely matched by the function. Hence type\n  // narrowing results in wrong results.\n  return typeof obj === 'object' && obj !== null && !Array.isArray(obj) && !(obj instanceof RegExp) && !(obj instanceof Date);\n}\n/**\r\n * In **contrast** to just checking `typeof` this will return `false` for `NaN`.\r\n * @returns whether the provided parameter is a JavaScript Number or not.\r\n */\nexport function isNumber(obj) {\n  return typeof obj === 'number' && !isNaN(obj);\n}\n/**\r\n * @returns whether the provided parameter is a JavaScript Boolean or not.\r\n */\nexport function isBoolean(obj) {\n  return obj === true || obj === false;\n}\n/**\r\n * @returns whether the provided parameter is undefined.\r\n */\nexport function isUndefined(obj) {\n  return typeof obj === 'undefined';\n}\n/**\r\n * @returns whether the provided parameter is undefined or null.\r\n */\nexport function isUndefinedOrNull(obj) {\n  return isUndefined(obj) || obj === null;\n}\nexport function assertType(condition, type) {\n  if (!condition) {\n    throw new Error(type ? \"Unexpected type, expected '\".concat(type, \"'\") : 'Unexpected type');\n  }\n}\n/**\r\n * Asserts that the argument passed in is neither undefined nor null.\r\n */\nexport function assertIsDefined(arg) {\n  if (isUndefinedOrNull(arg)) {\n    throw new Error('Assertion Failed: argument is undefined or null');\n  }\n  return arg;\n}\n/**\r\n * @returns whether the provided parameter is a JavaScript Function or not.\r\n */\nexport function isFunction(obj) {\n  return typeof obj === 'function';\n}\nexport function validateConstraints(args, constraints) {\n  const len = Math.min(args.length, constraints.length);\n  for (let i = 0; i < len; i++) {\n    validateConstraint(args[i], constraints[i]);\n  }\n}\nexport function validateConstraint(arg, constraint) {\n  if (isString(constraint)) {\n    if (typeof arg !== constraint) {\n      throw new Error(\"argument does not match constraint: typeof \".concat(constraint));\n    }\n  } else if (isFunction(constraint)) {\n    try {\n      if (arg instanceof constraint) {\n        return;\n      }\n    } catch (_a) {\n      // ignore\n    }\n    if (!isUndefinedOrNull(arg) && arg.constructor === constraint) {\n      return;\n    }\n    if (constraint.length === 1 && constraint.call(undefined, arg) === true) {\n      return;\n    }\n    throw new Error(\"argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true\");\n  }\n}\nexport function getAllPropertyNames(obj) {\n  let res = [];\n  let proto = Object.getPrototypeOf(obj);\n  while (Object.prototype !== proto) {\n    res = res.concat(Object.getOwnPropertyNames(proto));\n    proto = Object.getPrototypeOf(proto);\n  }\n  return res;\n}\nexport function getAllMethodNames(obj) {\n  const methods = [];\n  for (const prop of getAllPropertyNames(obj)) {\n    if (typeof obj[prop] === 'function') {\n      methods.push(prop);\n    }\n  }\n  return methods;\n}\nexport function createProxyObject(methodNames, invoke) {\n  const createProxyMethod = method => {\n    return function () {\n      const args = Array.prototype.slice.call(arguments, 0);\n      return invoke(method, args);\n    };\n  };\n  let result = {};\n  for (const methodName of methodNames) {\n    result[methodName] = createProxyMethod(methodName);\n  }\n  return result;\n}\n/**\r\n * Converts null to undefined, passes all other values through.\r\n */\nexport function withNullAsUndefined(x) {\n  return x === null ? undefined : x;\n}","map":{"version":3,"names":["isArray","array","Array","isString","str","isObject","obj","RegExp","Date","isNumber","isNaN","isBoolean","isUndefined","isUndefinedOrNull","assertType","condition","type","Error","concat","assertIsDefined","arg","isFunction","validateConstraints","args","constraints","len","Math","min","length","i","validateConstraint","constraint","_a","constructor","call","undefined","getAllPropertyNames","res","proto","Object","getPrototypeOf","prototype","getOwnPropertyNames","getAllMethodNames","methods","prop","push","createProxyObject","methodNames","invoke","createProxyMethod","method","slice","arguments","result","methodName","withNullAsUndefined","x"],"sources":["C:/Users/Administrator/Desktop/sqllineage-master/sqllineagejs/node_modules/monaco-editor/esm/vs/base/common/types.js"],"sourcesContent":["/**\r\n * @returns whether the provided parameter is a JavaScript Array or not.\r\n */\r\nexport function isArray(array) {\r\n    return Array.isArray(array);\r\n}\r\n/**\r\n * @returns whether the provided parameter is a JavaScript String or not.\r\n */\r\nexport function isString(str) {\r\n    return (typeof str === 'string');\r\n}\r\n/**\r\n *\r\n * @returns whether the provided parameter is of type `object` but **not**\r\n *\t`null`, an `array`, a `regexp`, nor a `date`.\r\n */\r\nexport function isObject(obj) {\r\n    // The method can't do a type cast since there are type (like strings) which\r\n    // are subclasses of any put not positvely matched by the function. Hence type\r\n    // narrowing results in wrong results.\r\n    return typeof obj === 'object'\r\n        && obj !== null\r\n        && !Array.isArray(obj)\r\n        && !(obj instanceof RegExp)\r\n        && !(obj instanceof Date);\r\n}\r\n/**\r\n * In **contrast** to just checking `typeof` this will return `false` for `NaN`.\r\n * @returns whether the provided parameter is a JavaScript Number or not.\r\n */\r\nexport function isNumber(obj) {\r\n    return (typeof obj === 'number' && !isNaN(obj));\r\n}\r\n/**\r\n * @returns whether the provided parameter is a JavaScript Boolean or not.\r\n */\r\nexport function isBoolean(obj) {\r\n    return (obj === true || obj === false);\r\n}\r\n/**\r\n * @returns whether the provided parameter is undefined.\r\n */\r\nexport function isUndefined(obj) {\r\n    return (typeof obj === 'undefined');\r\n}\r\n/**\r\n * @returns whether the provided parameter is undefined or null.\r\n */\r\nexport function isUndefinedOrNull(obj) {\r\n    return (isUndefined(obj) || obj === null);\r\n}\r\nexport function assertType(condition, type) {\r\n    if (!condition) {\r\n        throw new Error(type ? `Unexpected type, expected '${type}'` : 'Unexpected type');\r\n    }\r\n}\r\n/**\r\n * Asserts that the argument passed in is neither undefined nor null.\r\n */\r\nexport function assertIsDefined(arg) {\r\n    if (isUndefinedOrNull(arg)) {\r\n        throw new Error('Assertion Failed: argument is undefined or null');\r\n    }\r\n    return arg;\r\n}\r\n/**\r\n * @returns whether the provided parameter is a JavaScript Function or not.\r\n */\r\nexport function isFunction(obj) {\r\n    return (typeof obj === 'function');\r\n}\r\nexport function validateConstraints(args, constraints) {\r\n    const len = Math.min(args.length, constraints.length);\r\n    for (let i = 0; i < len; i++) {\r\n        validateConstraint(args[i], constraints[i]);\r\n    }\r\n}\r\nexport function validateConstraint(arg, constraint) {\r\n    if (isString(constraint)) {\r\n        if (typeof arg !== constraint) {\r\n            throw new Error(`argument does not match constraint: typeof ${constraint}`);\r\n        }\r\n    }\r\n    else if (isFunction(constraint)) {\r\n        try {\r\n            if (arg instanceof constraint) {\r\n                return;\r\n            }\r\n        }\r\n        catch (_a) {\r\n            // ignore\r\n        }\r\n        if (!isUndefinedOrNull(arg) && arg.constructor === constraint) {\r\n            return;\r\n        }\r\n        if (constraint.length === 1 && constraint.call(undefined, arg) === true) {\r\n            return;\r\n        }\r\n        throw new Error(`argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true`);\r\n    }\r\n}\r\nexport function getAllPropertyNames(obj) {\r\n    let res = [];\r\n    let proto = Object.getPrototypeOf(obj);\r\n    while (Object.prototype !== proto) {\r\n        res = res.concat(Object.getOwnPropertyNames(proto));\r\n        proto = Object.getPrototypeOf(proto);\r\n    }\r\n    return res;\r\n}\r\nexport function getAllMethodNames(obj) {\r\n    const methods = [];\r\n    for (const prop of getAllPropertyNames(obj)) {\r\n        if (typeof obj[prop] === 'function') {\r\n            methods.push(prop);\r\n        }\r\n    }\r\n    return methods;\r\n}\r\nexport function createProxyObject(methodNames, invoke) {\r\n    const createProxyMethod = (method) => {\r\n        return function () {\r\n            const args = Array.prototype.slice.call(arguments, 0);\r\n            return invoke(method, args);\r\n        };\r\n    };\r\n    let result = {};\r\n    for (const methodName of methodNames) {\r\n        result[methodName] = createProxyMethod(methodName);\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Converts null to undefined, passes all other values through.\r\n */\r\nexport function withNullAsUndefined(x) {\r\n    return x === null ? undefined : x;\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}