{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport { equals, flatten, isNonEmptyArray, mergeSort, coalesce } from '../../../base/common/arrays.js';\nimport { CancellationToken } from '../../../base/common/cancellation.js';\nimport { illegalArgument, isPromiseCanceledError, onUnexpectedExternalError } from '../../../base/common/errors.js';\nimport { Disposable, DisposableStore } from '../../../base/common/lifecycle.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { TextModelCancellationTokenSource } from '../../browser/core/editorState.js';\nimport { Range } from '../../common/core/range.js';\nimport { Selection } from '../../common/core/selection.js';\nimport * as modes from '../../common/modes.js';\nimport { IModelService } from '../../common/services/modelService.js';\nimport { CodeActionKind, filtersAction, mayIncludeActionsOfKind } from './types.js';\nimport { Progress } from '../../../platform/progress/common/progress.js';\nimport { CommandsRegistry } from '../../../platform/commands/common/commands.js';\nexport const codeActionCommandId = 'editor.action.codeAction';\nexport const refactorCommandId = 'editor.action.refactor';\nexport const sourceActionCommandId = 'editor.action.sourceAction';\nexport const organizeImportsCommandId = 'editor.action.organizeImports';\nexport const fixAllCommandId = 'editor.action.fixAll';\nexport class CodeActionItem {\n  constructor(action, provider) {\n    this.action = action;\n    this.provider = provider;\n  }\n  resolve(token) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n      if (((_a = this.provider) === null || _a === void 0 ? void 0 : _a.resolveCodeAction) && !this.action.edit) {\n        let action;\n        try {\n          action = yield this.provider.resolveCodeAction(this.action, token);\n        } catch (err) {\n          onUnexpectedExternalError(err);\n        }\n        if (action) {\n          this.action.edit = action.edit;\n        }\n      }\n      return this;\n    });\n  }\n}\nclass ManagedCodeActionSet extends Disposable {\n  constructor(actions, documentation, disposables) {\n    super();\n    this.documentation = documentation;\n    this._register(disposables);\n    this.allActions = mergeSort([...actions], ManagedCodeActionSet.codeActionsComparator);\n    this.validActions = this.allActions.filter(_ref => {\n      let {\n        action\n      } = _ref;\n      return !action.disabled;\n    });\n  }\n  static codeActionsComparator(_ref2, _ref3) {\n    let {\n      action: a\n    } = _ref2;\n    let {\n      action: b\n    } = _ref3;\n    if (a.isPreferred && !b.isPreferred) {\n      return -1;\n    } else if (!a.isPreferred && b.isPreferred) {\n      return 1;\n    }\n    if (isNonEmptyArray(a.diagnostics)) {\n      if (isNonEmptyArray(b.diagnostics)) {\n        return a.diagnostics[0].message.localeCompare(b.diagnostics[0].message);\n      } else {\n        return -1;\n      }\n    } else if (isNonEmptyArray(b.diagnostics)) {\n      return 1;\n    } else {\n      return 0; // both have no diagnostics\n    }\n  }\n\n  get hasAutoFix() {\n    return this.validActions.some(_ref4 => {\n      let {\n        action: fix\n      } = _ref4;\n      return !!fix.kind && CodeActionKind.QuickFix.contains(new CodeActionKind(fix.kind)) && !!fix.isPreferred;\n    });\n  }\n}\nconst emptyCodeActionsResponse = {\n  actions: [],\n  documentation: undefined\n};\nexport function getCodeActions(model, rangeOrSelection, trigger, progress, token) {\n  var _a;\n  const filter = trigger.filter || {};\n  const codeActionContext = {\n    only: (_a = filter.include) === null || _a === void 0 ? void 0 : _a.value,\n    trigger: trigger.type\n  };\n  const cts = new TextModelCancellationTokenSource(model, token);\n  const providers = getCodeActionProviders(model, filter);\n  const disposables = new DisposableStore();\n  const promises = providers.map(provider => __awaiter(this, void 0, void 0, function* () {\n    try {\n      progress.report(provider);\n      const providedCodeActions = yield provider.provideCodeActions(model, rangeOrSelection, codeActionContext, cts.token);\n      if (providedCodeActions) {\n        disposables.add(providedCodeActions);\n      }\n      if (cts.token.isCancellationRequested) {\n        return emptyCodeActionsResponse;\n      }\n      const filteredActions = ((providedCodeActions === null || providedCodeActions === void 0 ? void 0 : providedCodeActions.actions) || []).filter(action => action && filtersAction(filter, action));\n      const documentation = getDocumentation(provider, filteredActions, filter.include);\n      return {\n        actions: filteredActions.map(action => new CodeActionItem(action, provider)),\n        documentation\n      };\n    } catch (err) {\n      if (isPromiseCanceledError(err)) {\n        throw err;\n      }\n      onUnexpectedExternalError(err);\n      return emptyCodeActionsResponse;\n    }\n  }));\n  const listener = modes.CodeActionProviderRegistry.onDidChange(() => {\n    const newProviders = modes.CodeActionProviderRegistry.all(model);\n    if (!equals(newProviders, providers)) {\n      cts.cancel();\n    }\n  });\n  return Promise.all(promises).then(actions => {\n    const allActions = flatten(actions.map(x => x.actions));\n    const allDocumentation = coalesce(actions.map(x => x.documentation));\n    return new ManagedCodeActionSet(allActions, allDocumentation, disposables);\n  }).finally(() => {\n    listener.dispose();\n    cts.dispose();\n  });\n}\nfunction getCodeActionProviders(model, filter) {\n  return modes.CodeActionProviderRegistry.all(model)\n  // Don't include providers that we know will not return code actions of interest\n  .filter(provider => {\n    if (!provider.providedCodeActionKinds) {\n      // We don't know what type of actions this provider will return.\n      return true;\n    }\n    return provider.providedCodeActionKinds.some(kind => mayIncludeActionsOfKind(filter, new CodeActionKind(kind)));\n  });\n}\nfunction getDocumentation(provider, providedCodeActions, only) {\n  if (!provider.documentation) {\n    return undefined;\n  }\n  const documentation = provider.documentation.map(entry => ({\n    kind: new CodeActionKind(entry.kind),\n    command: entry.command\n  }));\n  if (only) {\n    let currentBest;\n    for (const entry of documentation) {\n      if (entry.kind.contains(only)) {\n        if (!currentBest) {\n          currentBest = entry;\n        } else {\n          // Take best match\n          if (currentBest.kind.contains(entry.kind)) {\n            currentBest = entry;\n          }\n        }\n      }\n    }\n    if (currentBest) {\n      return currentBest === null || currentBest === void 0 ? void 0 : currentBest.command;\n    }\n  }\n  // Otherwise, check to see if any of the provided actions match.\n  for (const action of providedCodeActions) {\n    if (!action.kind) {\n      continue;\n    }\n    for (const entry of documentation) {\n      if (entry.kind.contains(new CodeActionKind(action.kind))) {\n        return entry.command;\n      }\n    }\n  }\n  return undefined;\n}\nCommandsRegistry.registerCommand('_executeCodeActionProvider', function (accessor) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n  return __awaiter(this, void 0, void 0, function* () {\n    const [resource, rangeOrSelection, kind, itemResolveCount] = args;\n    if (!(resource instanceof URI)) {\n      throw illegalArgument();\n    }\n    const model = accessor.get(IModelService).getModel(resource);\n    if (!model) {\n      throw illegalArgument();\n    }\n    const validatedRangeOrSelection = Selection.isISelection(rangeOrSelection) ? Selection.liftSelection(rangeOrSelection) : Range.isIRange(rangeOrSelection) ? model.validateRange(rangeOrSelection) : undefined;\n    if (!validatedRangeOrSelection) {\n      throw illegalArgument();\n    }\n    const codeActionSet = yield getCodeActions(model, validatedRangeOrSelection, {\n      type: 2 /* Manual */,\n      filter: {\n        includeSourceActions: true,\n        include: kind && kind.value ? new CodeActionKind(kind.value) : undefined\n      }\n    }, Progress.None, CancellationToken.None);\n    const resolving = [];\n    const resolveCount = Math.min(codeActionSet.validActions.length, typeof itemResolveCount === 'number' ? itemResolveCount : 0);\n    for (let i = 0; i < resolveCount; i++) {\n      resolving.push(codeActionSet.validActions[i].resolve(CancellationToken.None));\n    }\n    try {\n      yield Promise.all(resolving);\n      return codeActionSet.validActions.map(item => item.action);\n    } finally {\n      setTimeout(() => codeActionSet.dispose(), 100);\n    }\n  });\n});","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","equals","flatten","isNonEmptyArray","mergeSort","coalesce","CancellationToken","illegalArgument","isPromiseCanceledError","onUnexpectedExternalError","Disposable","DisposableStore","URI","TextModelCancellationTokenSource","Range","Selection","modes","IModelService","CodeActionKind","filtersAction","mayIncludeActionsOfKind","Progress","CommandsRegistry","codeActionCommandId","refactorCommandId","sourceActionCommandId","organizeImportsCommandId","fixAllCommandId","CodeActionItem","constructor","action","provider","token","_a","resolveCodeAction","edit","err","ManagedCodeActionSet","actions","documentation","disposables","_register","allActions","codeActionsComparator","validActions","filter","_ref","disabled","_ref2","_ref3","a","b","isPreferred","diagnostics","message","localeCompare","hasAutoFix","some","_ref4","fix","kind","QuickFix","contains","emptyCodeActionsResponse","undefined","getCodeActions","model","rangeOrSelection","trigger","progress","codeActionContext","only","include","type","cts","providers","getCodeActionProviders","promises","map","report","providedCodeActions","provideCodeActions","add","isCancellationRequested","filteredActions","getDocumentation","listener","CodeActionProviderRegistry","onDidChange","newProviders","all","cancel","x","allDocumentation","finally","dispose","providedCodeActionKinds","entry","command","currentBest","registerCommand","accessor","_len","arguments","length","args","Array","_key","resource","itemResolveCount","get","getModel","validatedRangeOrSelection","isISelection","liftSelection","isIRange","validateRange","codeActionSet","includeSourceActions","None","resolving","resolveCount","Math","min","i","push","item","setTimeout"],"sources":["C:/Users/Administrator/Desktop/sqllineage-master/sqllineagejs/node_modules/monaco-editor/esm/vs/editor/contrib/codeAction/codeAction.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { equals, flatten, isNonEmptyArray, mergeSort, coalesce } from '../../../base/common/arrays.js';\r\nimport { CancellationToken } from '../../../base/common/cancellation.js';\r\nimport { illegalArgument, isPromiseCanceledError, onUnexpectedExternalError } from '../../../base/common/errors.js';\r\nimport { Disposable, DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { URI } from '../../../base/common/uri.js';\r\nimport { TextModelCancellationTokenSource } from '../../browser/core/editorState.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { Selection } from '../../common/core/selection.js';\r\nimport * as modes from '../../common/modes.js';\r\nimport { IModelService } from '../../common/services/modelService.js';\r\nimport { CodeActionKind, filtersAction, mayIncludeActionsOfKind } from './types.js';\r\nimport { Progress } from '../../../platform/progress/common/progress.js';\r\nimport { CommandsRegistry } from '../../../platform/commands/common/commands.js';\r\nexport const codeActionCommandId = 'editor.action.codeAction';\r\nexport const refactorCommandId = 'editor.action.refactor';\r\nexport const sourceActionCommandId = 'editor.action.sourceAction';\r\nexport const organizeImportsCommandId = 'editor.action.organizeImports';\r\nexport const fixAllCommandId = 'editor.action.fixAll';\r\nexport class CodeActionItem {\r\n    constructor(action, provider) {\r\n        this.action = action;\r\n        this.provider = provider;\r\n    }\r\n    resolve(token) {\r\n        var _a;\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (((_a = this.provider) === null || _a === void 0 ? void 0 : _a.resolveCodeAction) && !this.action.edit) {\r\n                let action;\r\n                try {\r\n                    action = yield this.provider.resolveCodeAction(this.action, token);\r\n                }\r\n                catch (err) {\r\n                    onUnexpectedExternalError(err);\r\n                }\r\n                if (action) {\r\n                    this.action.edit = action.edit;\r\n                }\r\n            }\r\n            return this;\r\n        });\r\n    }\r\n}\r\nclass ManagedCodeActionSet extends Disposable {\r\n    constructor(actions, documentation, disposables) {\r\n        super();\r\n        this.documentation = documentation;\r\n        this._register(disposables);\r\n        this.allActions = mergeSort([...actions], ManagedCodeActionSet.codeActionsComparator);\r\n        this.validActions = this.allActions.filter(({ action }) => !action.disabled);\r\n    }\r\n    static codeActionsComparator({ action: a }, { action: b }) {\r\n        if (a.isPreferred && !b.isPreferred) {\r\n            return -1;\r\n        }\r\n        else if (!a.isPreferred && b.isPreferred) {\r\n            return 1;\r\n        }\r\n        if (isNonEmptyArray(a.diagnostics)) {\r\n            if (isNonEmptyArray(b.diagnostics)) {\r\n                return a.diagnostics[0].message.localeCompare(b.diagnostics[0].message);\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (isNonEmptyArray(b.diagnostics)) {\r\n            return 1;\r\n        }\r\n        else {\r\n            return 0; // both have no diagnostics\r\n        }\r\n    }\r\n    get hasAutoFix() {\r\n        return this.validActions.some(({ action: fix }) => !!fix.kind && CodeActionKind.QuickFix.contains(new CodeActionKind(fix.kind)) && !!fix.isPreferred);\r\n    }\r\n}\r\nconst emptyCodeActionsResponse = { actions: [], documentation: undefined };\r\nexport function getCodeActions(model, rangeOrSelection, trigger, progress, token) {\r\n    var _a;\r\n    const filter = trigger.filter || {};\r\n    const codeActionContext = {\r\n        only: (_a = filter.include) === null || _a === void 0 ? void 0 : _a.value,\r\n        trigger: trigger.type,\r\n    };\r\n    const cts = new TextModelCancellationTokenSource(model, token);\r\n    const providers = getCodeActionProviders(model, filter);\r\n    const disposables = new DisposableStore();\r\n    const promises = providers.map((provider) => __awaiter(this, void 0, void 0, function* () {\r\n        try {\r\n            progress.report(provider);\r\n            const providedCodeActions = yield provider.provideCodeActions(model, rangeOrSelection, codeActionContext, cts.token);\r\n            if (providedCodeActions) {\r\n                disposables.add(providedCodeActions);\r\n            }\r\n            if (cts.token.isCancellationRequested) {\r\n                return emptyCodeActionsResponse;\r\n            }\r\n            const filteredActions = ((providedCodeActions === null || providedCodeActions === void 0 ? void 0 : providedCodeActions.actions) || []).filter(action => action && filtersAction(filter, action));\r\n            const documentation = getDocumentation(provider, filteredActions, filter.include);\r\n            return {\r\n                actions: filteredActions.map(action => new CodeActionItem(action, provider)),\r\n                documentation\r\n            };\r\n        }\r\n        catch (err) {\r\n            if (isPromiseCanceledError(err)) {\r\n                throw err;\r\n            }\r\n            onUnexpectedExternalError(err);\r\n            return emptyCodeActionsResponse;\r\n        }\r\n    }));\r\n    const listener = modes.CodeActionProviderRegistry.onDidChange(() => {\r\n        const newProviders = modes.CodeActionProviderRegistry.all(model);\r\n        if (!equals(newProviders, providers)) {\r\n            cts.cancel();\r\n        }\r\n    });\r\n    return Promise.all(promises).then(actions => {\r\n        const allActions = flatten(actions.map(x => x.actions));\r\n        const allDocumentation = coalesce(actions.map(x => x.documentation));\r\n        return new ManagedCodeActionSet(allActions, allDocumentation, disposables);\r\n    })\r\n        .finally(() => {\r\n        listener.dispose();\r\n        cts.dispose();\r\n    });\r\n}\r\nfunction getCodeActionProviders(model, filter) {\r\n    return modes.CodeActionProviderRegistry.all(model)\r\n        // Don't include providers that we know will not return code actions of interest\r\n        .filter(provider => {\r\n        if (!provider.providedCodeActionKinds) {\r\n            // We don't know what type of actions this provider will return.\r\n            return true;\r\n        }\r\n        return provider.providedCodeActionKinds.some(kind => mayIncludeActionsOfKind(filter, new CodeActionKind(kind)));\r\n    });\r\n}\r\nfunction getDocumentation(provider, providedCodeActions, only) {\r\n    if (!provider.documentation) {\r\n        return undefined;\r\n    }\r\n    const documentation = provider.documentation.map(entry => ({ kind: new CodeActionKind(entry.kind), command: entry.command }));\r\n    if (only) {\r\n        let currentBest;\r\n        for (const entry of documentation) {\r\n            if (entry.kind.contains(only)) {\r\n                if (!currentBest) {\r\n                    currentBest = entry;\r\n                }\r\n                else {\r\n                    // Take best match\r\n                    if (currentBest.kind.contains(entry.kind)) {\r\n                        currentBest = entry;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (currentBest) {\r\n            return currentBest === null || currentBest === void 0 ? void 0 : currentBest.command;\r\n        }\r\n    }\r\n    // Otherwise, check to see if any of the provided actions match.\r\n    for (const action of providedCodeActions) {\r\n        if (!action.kind) {\r\n            continue;\r\n        }\r\n        for (const entry of documentation) {\r\n            if (entry.kind.contains(new CodeActionKind(action.kind))) {\r\n                return entry.command;\r\n            }\r\n        }\r\n    }\r\n    return undefined;\r\n}\r\nCommandsRegistry.registerCommand('_executeCodeActionProvider', function (accessor, ...args) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const [resource, rangeOrSelection, kind, itemResolveCount] = args;\r\n        if (!(resource instanceof URI)) {\r\n            throw illegalArgument();\r\n        }\r\n        const model = accessor.get(IModelService).getModel(resource);\r\n        if (!model) {\r\n            throw illegalArgument();\r\n        }\r\n        const validatedRangeOrSelection = Selection.isISelection(rangeOrSelection)\r\n            ? Selection.liftSelection(rangeOrSelection)\r\n            : Range.isIRange(rangeOrSelection)\r\n                ? model.validateRange(rangeOrSelection)\r\n                : undefined;\r\n        if (!validatedRangeOrSelection) {\r\n            throw illegalArgument();\r\n        }\r\n        const codeActionSet = yield getCodeActions(model, validatedRangeOrSelection, { type: 2 /* Manual */, filter: { includeSourceActions: true, include: kind && kind.value ? new CodeActionKind(kind.value) : undefined } }, Progress.None, CancellationToken.None);\r\n        const resolving = [];\r\n        const resolveCount = Math.min(codeActionSet.validActions.length, typeof itemResolveCount === 'number' ? itemResolveCount : 0);\r\n        for (let i = 0; i < resolveCount; i++) {\r\n            resolving.push(codeActionSet.validActions[i].resolve(CancellationToken.None));\r\n        }\r\n        try {\r\n            yield Promise.all(resolving);\r\n            return codeActionSet.validActions.map(item => item.action);\r\n        }\r\n        finally {\r\n            setTimeout(() => codeActionSet.dispose(), 100);\r\n        }\r\n    });\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}