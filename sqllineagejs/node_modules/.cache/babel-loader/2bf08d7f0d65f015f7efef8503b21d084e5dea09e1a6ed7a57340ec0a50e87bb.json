{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../../nls.js';\nimport { Color, RGBA } from '../../../base/common/color.js';\nimport { activeContrastBorder, editorBackground, editorForeground, registerColor, editorWarningForeground, editorInfoForeground, editorWarningBorder, editorInfoBorder, contrastBorder, editorFindMatchHighlight } from '../../../platform/theme/common/colorRegistry.js';\nimport { registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\n/**\r\n * Definition of the editor colors\r\n */\nexport const editorLineHighlight = registerColor('editor.lineHighlightBackground', {\n  dark: null,\n  light: null,\n  hc: null\n}, nls.localize('lineHighlight', 'Background color for the highlight of line at the cursor position.'));\nexport const editorLineHighlightBorder = registerColor('editor.lineHighlightBorder', {\n  dark: '#282828',\n  light: '#eeeeee',\n  hc: '#f38518'\n}, nls.localize('lineHighlightBorderBox', 'Background color for the border around the line at the cursor position.'));\nexport const editorRangeHighlight = registerColor('editor.rangeHighlightBackground', {\n  dark: '#ffffff0b',\n  light: '#fdff0033',\n  hc: null\n}, nls.localize('rangeHighlight', 'Background color of highlighted ranges, like by quick open and find features. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const editorRangeHighlightBorder = registerColor('editor.rangeHighlightBorder', {\n  dark: null,\n  light: null,\n  hc: activeContrastBorder\n}, nls.localize('rangeHighlightBorder', 'Background color of the border around highlighted ranges.'), true);\nexport const editorSymbolHighlight = registerColor('editor.symbolHighlightBackground', {\n  dark: editorFindMatchHighlight,\n  light: editorFindMatchHighlight,\n  hc: null\n}, nls.localize('symbolHighlight', 'Background color of highlighted symbol, like for go to definition or go next/previous symbol. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const editorSymbolHighlightBorder = registerColor('editor.symbolHighlightBorder', {\n  dark: null,\n  light: null,\n  hc: activeContrastBorder\n}, nls.localize('symbolHighlightBorder', 'Background color of the border around highlighted symbols.'), true);\nexport const editorCursorForeground = registerColor('editorCursor.foreground', {\n  dark: '#AEAFAD',\n  light: Color.black,\n  hc: Color.white\n}, nls.localize('caret', 'Color of the editor cursor.'));\nexport const editorCursorBackground = registerColor('editorCursor.background', null, nls.localize('editorCursorBackground', 'The background color of the editor cursor. Allows customizing the color of a character overlapped by a block cursor.'));\nexport const editorWhitespaces = registerColor('editorWhitespace.foreground', {\n  dark: '#e3e4e229',\n  light: '#33333333',\n  hc: '#e3e4e229'\n}, nls.localize('editorWhitespaces', 'Color of whitespace characters in the editor.'));\nexport const editorIndentGuides = registerColor('editorIndentGuide.background', {\n  dark: editorWhitespaces,\n  light: editorWhitespaces,\n  hc: editorWhitespaces\n}, nls.localize('editorIndentGuides', 'Color of the editor indentation guides.'));\nexport const editorActiveIndentGuides = registerColor('editorIndentGuide.activeBackground', {\n  dark: editorWhitespaces,\n  light: editorWhitespaces,\n  hc: editorWhitespaces\n}, nls.localize('editorActiveIndentGuide', 'Color of the active editor indentation guides.'));\nexport const editorLineNumbers = registerColor('editorLineNumber.foreground', {\n  dark: '#858585',\n  light: '#237893',\n  hc: Color.white\n}, nls.localize('editorLineNumbers', 'Color of editor line numbers.'));\nconst deprecatedEditorActiveLineNumber = registerColor('editorActiveLineNumber.foreground', {\n  dark: '#c6c6c6',\n  light: '#0B216F',\n  hc: activeContrastBorder\n}, nls.localize('editorActiveLineNumber', 'Color of editor active line number'), false, nls.localize('deprecatedEditorActiveLineNumber', 'Id is deprecated. Use \\'editorLineNumber.activeForeground\\' instead.'));\nexport const editorActiveLineNumber = registerColor('editorLineNumber.activeForeground', {\n  dark: deprecatedEditorActiveLineNumber,\n  light: deprecatedEditorActiveLineNumber,\n  hc: deprecatedEditorActiveLineNumber\n}, nls.localize('editorActiveLineNumber', 'Color of editor active line number'));\nexport const editorRuler = registerColor('editorRuler.foreground', {\n  dark: '#5A5A5A',\n  light: Color.lightgrey,\n  hc: Color.white\n}, nls.localize('editorRuler', 'Color of the editor rulers.'));\nexport const editorCodeLensForeground = registerColor('editorCodeLens.foreground', {\n  dark: '#999999',\n  light: '#999999',\n  hc: '#999999'\n}, nls.localize('editorCodeLensForeground', 'Foreground color of editor CodeLens'));\nexport const editorBracketMatchBackground = registerColor('editorBracketMatch.background', {\n  dark: '#0064001a',\n  light: '#0064001a',\n  hc: '#0064001a'\n}, nls.localize('editorBracketMatchBackground', 'Background color behind matching brackets'));\nexport const editorBracketMatchBorder = registerColor('editorBracketMatch.border', {\n  dark: '#888',\n  light: '#B9B9B9',\n  hc: contrastBorder\n}, nls.localize('editorBracketMatchBorder', 'Color for matching brackets boxes'));\nexport const editorOverviewRulerBorder = registerColor('editorOverviewRuler.border', {\n  dark: '#7f7f7f4d',\n  light: '#7f7f7f4d',\n  hc: '#7f7f7f4d'\n}, nls.localize('editorOverviewRulerBorder', 'Color of the overview ruler border.'));\nexport const editorOverviewRulerBackground = registerColor('editorOverviewRuler.background', null, nls.localize('editorOverviewRulerBackground', 'Background color of the editor overview ruler. Only used when the minimap is enabled and placed on the right side of the editor.'));\nexport const editorGutter = registerColor('editorGutter.background', {\n  dark: editorBackground,\n  light: editorBackground,\n  hc: editorBackground\n}, nls.localize('editorGutter', 'Background color of the editor gutter. The gutter contains the glyph margins and the line numbers.'));\nexport const editorUnnecessaryCodeBorder = registerColor('editorUnnecessaryCode.border', {\n  dark: null,\n  light: null,\n  hc: Color.fromHex('#fff').transparent(0.8)\n}, nls.localize('unnecessaryCodeBorder', 'Border color of unnecessary (unused) source code in the editor.'));\nexport const editorUnnecessaryCodeOpacity = registerColor('editorUnnecessaryCode.opacity', {\n  dark: Color.fromHex('#000a'),\n  light: Color.fromHex('#0007'),\n  hc: null\n}, nls.localize('unnecessaryCodeOpacity', 'Opacity of unnecessary (unused) source code in the editor. For example, \"#000000c0\" will render the code with 75% opacity. For high contrast themes, use the  \\'editorUnnecessaryCode.border\\' theme color to underline unnecessary code instead of fading it out.'));\nconst rulerRangeDefault = new Color(new RGBA(0, 122, 204, 0.6));\nexport const overviewRulerRangeHighlight = registerColor('editorOverviewRuler.rangeHighlightForeground', {\n  dark: rulerRangeDefault,\n  light: rulerRangeDefault,\n  hc: rulerRangeDefault\n}, nls.localize('overviewRulerRangeHighlight', 'Overview ruler marker color for range highlights. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const overviewRulerError = registerColor('editorOverviewRuler.errorForeground', {\n  dark: new Color(new RGBA(255, 18, 18, 0.7)),\n  light: new Color(new RGBA(255, 18, 18, 0.7)),\n  hc: new Color(new RGBA(255, 50, 50, 1))\n}, nls.localize('overviewRuleError', 'Overview ruler marker color for errors.'));\nexport const overviewRulerWarning = registerColor('editorOverviewRuler.warningForeground', {\n  dark: editorWarningForeground,\n  light: editorWarningForeground,\n  hc: editorWarningBorder\n}, nls.localize('overviewRuleWarning', 'Overview ruler marker color for warnings.'));\nexport const overviewRulerInfo = registerColor('editorOverviewRuler.infoForeground', {\n  dark: editorInfoForeground,\n  light: editorInfoForeground,\n  hc: editorInfoBorder\n}, nls.localize('overviewRuleInfo', 'Overview ruler marker color for infos.'));\n// contains all color rules that used to defined in editor/browser/widget/editor.css\nregisterThemingParticipant((theme, collector) => {\n  const background = theme.getColor(editorBackground);\n  if (background) {\n    collector.addRule(\".monaco-editor, .monaco-editor-background, .monaco-editor .inputarea.ime-input { background-color: \".concat(background, \"; }\"));\n  }\n  const foreground = theme.getColor(editorForeground);\n  if (foreground) {\n    collector.addRule(\".monaco-editor, .monaco-editor .inputarea.ime-input { color: \".concat(foreground, \"; }\"));\n  }\n  const gutter = theme.getColor(editorGutter);\n  if (gutter) {\n    collector.addRule(\".monaco-editor .margin { background-color: \".concat(gutter, \"; }\"));\n  }\n  const rangeHighlight = theme.getColor(editorRangeHighlight);\n  if (rangeHighlight) {\n    collector.addRule(\".monaco-editor .rangeHighlight { background-color: \".concat(rangeHighlight, \"; }\"));\n  }\n  const rangeHighlightBorder = theme.getColor(editorRangeHighlightBorder);\n  if (rangeHighlightBorder) {\n    collector.addRule(\".monaco-editor .rangeHighlight { border: 1px \".concat(theme.type === 'hc' ? 'dotted' : 'solid', \" \").concat(rangeHighlightBorder, \"; }\"));\n  }\n  const symbolHighlight = theme.getColor(editorSymbolHighlight);\n  if (symbolHighlight) {\n    collector.addRule(\".monaco-editor .symbolHighlight { background-color: \".concat(symbolHighlight, \"; }\"));\n  }\n  const symbolHighlightBorder = theme.getColor(editorSymbolHighlightBorder);\n  if (symbolHighlightBorder) {\n    collector.addRule(\".monaco-editor .symbolHighlight { border: 1px \".concat(theme.type === 'hc' ? 'dotted' : 'solid', \" \").concat(symbolHighlightBorder, \"; }\"));\n  }\n  const invisibles = theme.getColor(editorWhitespaces);\n  if (invisibles) {\n    collector.addRule(\".monaco-editor .mtkw { color: \".concat(invisibles, \" !important; }\"));\n    collector.addRule(\".monaco-editor .mtkz { color: \".concat(invisibles, \" !important; }\"));\n  }\n});","map":{"version":3,"names":["nls","Color","RGBA","activeContrastBorder","editorBackground","editorForeground","registerColor","editorWarningForeground","editorInfoForeground","editorWarningBorder","editorInfoBorder","contrastBorder","editorFindMatchHighlight","registerThemingParticipant","editorLineHighlight","dark","light","hc","localize","editorLineHighlightBorder","editorRangeHighlight","editorRangeHighlightBorder","editorSymbolHighlight","editorSymbolHighlightBorder","editorCursorForeground","black","white","editorCursorBackground","editorWhitespaces","editorIndentGuides","editorActiveIndentGuides","editorLineNumbers","deprecatedEditorActiveLineNumber","editorActiveLineNumber","editorRuler","lightgrey","editorCodeLensForeground","editorBracketMatchBackground","editorBracketMatchBorder","editorOverviewRulerBorder","editorOverviewRulerBackground","editorGutter","editorUnnecessaryCodeBorder","fromHex","transparent","editorUnnecessaryCodeOpacity","rulerRangeDefault","overviewRulerRangeHighlight","overviewRulerError","overviewRulerWarning","overviewRulerInfo","theme","collector","background","getColor","addRule","concat","foreground","gutter","rangeHighlight","rangeHighlightBorder","type","symbolHighlight","symbolHighlightBorder","invisibles"],"sources":["C:/Users/Administrator/Desktop/sqllineage-master/sqllineagejs/node_modules/monaco-editor/esm/vs/editor/common/view/editorColorRegistry.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as nls from '../../../nls.js';\r\nimport { Color, RGBA } from '../../../base/common/color.js';\r\nimport { activeContrastBorder, editorBackground, editorForeground, registerColor, editorWarningForeground, editorInfoForeground, editorWarningBorder, editorInfoBorder, contrastBorder, editorFindMatchHighlight } from '../../../platform/theme/common/colorRegistry.js';\r\nimport { registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\r\n/**\r\n * Definition of the editor colors\r\n */\r\nexport const editorLineHighlight = registerColor('editor.lineHighlightBackground', { dark: null, light: null, hc: null }, nls.localize('lineHighlight', 'Background color for the highlight of line at the cursor position.'));\r\nexport const editorLineHighlightBorder = registerColor('editor.lineHighlightBorder', { dark: '#282828', light: '#eeeeee', hc: '#f38518' }, nls.localize('lineHighlightBorderBox', 'Background color for the border around the line at the cursor position.'));\r\nexport const editorRangeHighlight = registerColor('editor.rangeHighlightBackground', { dark: '#ffffff0b', light: '#fdff0033', hc: null }, nls.localize('rangeHighlight', 'Background color of highlighted ranges, like by quick open and find features. The color must not be opaque so as not to hide underlying decorations.'), true);\r\nexport const editorRangeHighlightBorder = registerColor('editor.rangeHighlightBorder', { dark: null, light: null, hc: activeContrastBorder }, nls.localize('rangeHighlightBorder', 'Background color of the border around highlighted ranges.'), true);\r\nexport const editorSymbolHighlight = registerColor('editor.symbolHighlightBackground', { dark: editorFindMatchHighlight, light: editorFindMatchHighlight, hc: null }, nls.localize('symbolHighlight', 'Background color of highlighted symbol, like for go to definition or go next/previous symbol. The color must not be opaque so as not to hide underlying decorations.'), true);\r\nexport const editorSymbolHighlightBorder = registerColor('editor.symbolHighlightBorder', { dark: null, light: null, hc: activeContrastBorder }, nls.localize('symbolHighlightBorder', 'Background color of the border around highlighted symbols.'), true);\r\nexport const editorCursorForeground = registerColor('editorCursor.foreground', { dark: '#AEAFAD', light: Color.black, hc: Color.white }, nls.localize('caret', 'Color of the editor cursor.'));\r\nexport const editorCursorBackground = registerColor('editorCursor.background', null, nls.localize('editorCursorBackground', 'The background color of the editor cursor. Allows customizing the color of a character overlapped by a block cursor.'));\r\nexport const editorWhitespaces = registerColor('editorWhitespace.foreground', { dark: '#e3e4e229', light: '#33333333', hc: '#e3e4e229' }, nls.localize('editorWhitespaces', 'Color of whitespace characters in the editor.'));\r\nexport const editorIndentGuides = registerColor('editorIndentGuide.background', { dark: editorWhitespaces, light: editorWhitespaces, hc: editorWhitespaces }, nls.localize('editorIndentGuides', 'Color of the editor indentation guides.'));\r\nexport const editorActiveIndentGuides = registerColor('editorIndentGuide.activeBackground', { dark: editorWhitespaces, light: editorWhitespaces, hc: editorWhitespaces }, nls.localize('editorActiveIndentGuide', 'Color of the active editor indentation guides.'));\r\nexport const editorLineNumbers = registerColor('editorLineNumber.foreground', { dark: '#858585', light: '#237893', hc: Color.white }, nls.localize('editorLineNumbers', 'Color of editor line numbers.'));\r\nconst deprecatedEditorActiveLineNumber = registerColor('editorActiveLineNumber.foreground', { dark: '#c6c6c6', light: '#0B216F', hc: activeContrastBorder }, nls.localize('editorActiveLineNumber', 'Color of editor active line number'), false, nls.localize('deprecatedEditorActiveLineNumber', 'Id is deprecated. Use \\'editorLineNumber.activeForeground\\' instead.'));\r\nexport const editorActiveLineNumber = registerColor('editorLineNumber.activeForeground', { dark: deprecatedEditorActiveLineNumber, light: deprecatedEditorActiveLineNumber, hc: deprecatedEditorActiveLineNumber }, nls.localize('editorActiveLineNumber', 'Color of editor active line number'));\r\nexport const editorRuler = registerColor('editorRuler.foreground', { dark: '#5A5A5A', light: Color.lightgrey, hc: Color.white }, nls.localize('editorRuler', 'Color of the editor rulers.'));\r\nexport const editorCodeLensForeground = registerColor('editorCodeLens.foreground', { dark: '#999999', light: '#999999', hc: '#999999' }, nls.localize('editorCodeLensForeground', 'Foreground color of editor CodeLens'));\r\nexport const editorBracketMatchBackground = registerColor('editorBracketMatch.background', { dark: '#0064001a', light: '#0064001a', hc: '#0064001a' }, nls.localize('editorBracketMatchBackground', 'Background color behind matching brackets'));\r\nexport const editorBracketMatchBorder = registerColor('editorBracketMatch.border', { dark: '#888', light: '#B9B9B9', hc: contrastBorder }, nls.localize('editorBracketMatchBorder', 'Color for matching brackets boxes'));\r\nexport const editorOverviewRulerBorder = registerColor('editorOverviewRuler.border', { dark: '#7f7f7f4d', light: '#7f7f7f4d', hc: '#7f7f7f4d' }, nls.localize('editorOverviewRulerBorder', 'Color of the overview ruler border.'));\r\nexport const editorOverviewRulerBackground = registerColor('editorOverviewRuler.background', null, nls.localize('editorOverviewRulerBackground', 'Background color of the editor overview ruler. Only used when the minimap is enabled and placed on the right side of the editor.'));\r\nexport const editorGutter = registerColor('editorGutter.background', { dark: editorBackground, light: editorBackground, hc: editorBackground }, nls.localize('editorGutter', 'Background color of the editor gutter. The gutter contains the glyph margins and the line numbers.'));\r\nexport const editorUnnecessaryCodeBorder = registerColor('editorUnnecessaryCode.border', { dark: null, light: null, hc: Color.fromHex('#fff').transparent(0.8) }, nls.localize('unnecessaryCodeBorder', 'Border color of unnecessary (unused) source code in the editor.'));\r\nexport const editorUnnecessaryCodeOpacity = registerColor('editorUnnecessaryCode.opacity', { dark: Color.fromHex('#000a'), light: Color.fromHex('#0007'), hc: null }, nls.localize('unnecessaryCodeOpacity', 'Opacity of unnecessary (unused) source code in the editor. For example, \"#000000c0\" will render the code with 75% opacity. For high contrast themes, use the  \\'editorUnnecessaryCode.border\\' theme color to underline unnecessary code instead of fading it out.'));\r\nconst rulerRangeDefault = new Color(new RGBA(0, 122, 204, 0.6));\r\nexport const overviewRulerRangeHighlight = registerColor('editorOverviewRuler.rangeHighlightForeground', { dark: rulerRangeDefault, light: rulerRangeDefault, hc: rulerRangeDefault }, nls.localize('overviewRulerRangeHighlight', 'Overview ruler marker color for range highlights. The color must not be opaque so as not to hide underlying decorations.'), true);\r\nexport const overviewRulerError = registerColor('editorOverviewRuler.errorForeground', { dark: new Color(new RGBA(255, 18, 18, 0.7)), light: new Color(new RGBA(255, 18, 18, 0.7)), hc: new Color(new RGBA(255, 50, 50, 1)) }, nls.localize('overviewRuleError', 'Overview ruler marker color for errors.'));\r\nexport const overviewRulerWarning = registerColor('editorOverviewRuler.warningForeground', { dark: editorWarningForeground, light: editorWarningForeground, hc: editorWarningBorder }, nls.localize('overviewRuleWarning', 'Overview ruler marker color for warnings.'));\r\nexport const overviewRulerInfo = registerColor('editorOverviewRuler.infoForeground', { dark: editorInfoForeground, light: editorInfoForeground, hc: editorInfoBorder }, nls.localize('overviewRuleInfo', 'Overview ruler marker color for infos.'));\r\n// contains all color rules that used to defined in editor/browser/widget/editor.css\r\nregisterThemingParticipant((theme, collector) => {\r\n    const background = theme.getColor(editorBackground);\r\n    if (background) {\r\n        collector.addRule(`.monaco-editor, .monaco-editor-background, .monaco-editor .inputarea.ime-input { background-color: ${background}; }`);\r\n    }\r\n    const foreground = theme.getColor(editorForeground);\r\n    if (foreground) {\r\n        collector.addRule(`.monaco-editor, .monaco-editor .inputarea.ime-input { color: ${foreground}; }`);\r\n    }\r\n    const gutter = theme.getColor(editorGutter);\r\n    if (gutter) {\r\n        collector.addRule(`.monaco-editor .margin { background-color: ${gutter}; }`);\r\n    }\r\n    const rangeHighlight = theme.getColor(editorRangeHighlight);\r\n    if (rangeHighlight) {\r\n        collector.addRule(`.monaco-editor .rangeHighlight { background-color: ${rangeHighlight}; }`);\r\n    }\r\n    const rangeHighlightBorder = theme.getColor(editorRangeHighlightBorder);\r\n    if (rangeHighlightBorder) {\r\n        collector.addRule(`.monaco-editor .rangeHighlight { border: 1px ${theme.type === 'hc' ? 'dotted' : 'solid'} ${rangeHighlightBorder}; }`);\r\n    }\r\n    const symbolHighlight = theme.getColor(editorSymbolHighlight);\r\n    if (symbolHighlight) {\r\n        collector.addRule(`.monaco-editor .symbolHighlight { background-color: ${symbolHighlight}; }`);\r\n    }\r\n    const symbolHighlightBorder = theme.getColor(editorSymbolHighlightBorder);\r\n    if (symbolHighlightBorder) {\r\n        collector.addRule(`.monaco-editor .symbolHighlight { border: 1px ${theme.type === 'hc' ? 'dotted' : 'solid'} ${symbolHighlightBorder}; }`);\r\n    }\r\n    const invisibles = theme.getColor(editorWhitespaces);\r\n    if (invisibles) {\r\n        collector.addRule(`.monaco-editor .mtkw { color: ${invisibles} !important; }`);\r\n        collector.addRule(`.monaco-editor .mtkz { color: ${invisibles} !important; }`);\r\n    }\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}