{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { Registry } from '../../registry/common/platform.js';\nimport { coalesce } from '../../../base/common/arrays.js';\nimport { toDisposable } from '../../../base/common/lifecycle.js';\nexport var DefaultQuickAccessFilterValue;\n(function (DefaultQuickAccessFilterValue) {\n  /**\r\n   * Keep the value as it is given to quick access.\r\n   */\n  DefaultQuickAccessFilterValue[DefaultQuickAccessFilterValue[\"PRESERVE\"] = 0] = \"PRESERVE\";\n  /**\r\n   * Use the value that was used last time something was accepted from the picker.\r\n   */\n  DefaultQuickAccessFilterValue[DefaultQuickAccessFilterValue[\"LAST\"] = 1] = \"LAST\";\n})(DefaultQuickAccessFilterValue || (DefaultQuickAccessFilterValue = {}));\nexport const Extensions = {\n  Quickaccess: 'workbench.contributions.quickaccess'\n};\nexport class QuickAccessRegistry {\n  constructor() {\n    this.providers = [];\n    this.defaultProvider = undefined;\n  }\n  registerQuickAccessProvider(provider) {\n    // Extract the default provider when no prefix is present\n    if (provider.prefix.length === 0) {\n      this.defaultProvider = provider;\n    } else {\n      this.providers.push(provider);\n    }\n    // sort the providers by decreasing prefix length, such that longer\n    // prefixes take priority: 'ext' vs 'ext install' - the latter should win\n    this.providers.sort((providerA, providerB) => providerB.prefix.length - providerA.prefix.length);\n    return toDisposable(() => {\n      this.providers.splice(this.providers.indexOf(provider), 1);\n      if (this.defaultProvider === provider) {\n        this.defaultProvider = undefined;\n      }\n    });\n  }\n  getQuickAccessProviders() {\n    return coalesce([this.defaultProvider, ...this.providers]);\n  }\n  getQuickAccessProvider(prefix) {\n    const result = prefix ? this.providers.find(provider => prefix.startsWith(provider.prefix)) || undefined : undefined;\n    return result || this.defaultProvider;\n  }\n}\nRegistry.add(Extensions.Quickaccess, new QuickAccessRegistry());","map":{"version":3,"names":["Registry","coalesce","toDisposable","DefaultQuickAccessFilterValue","Extensions","Quickaccess","QuickAccessRegistry","constructor","providers","defaultProvider","undefined","registerQuickAccessProvider","provider","prefix","length","push","sort","providerA","providerB","splice","indexOf","getQuickAccessProviders","getQuickAccessProvider","result","find","startsWith","add"],"sources":["C:/Users/Administrator/Desktop/sqllineage-master/sqllineagejs/node_modules/monaco-editor/esm/vs/platform/quickinput/common/quickAccess.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Registry } from '../../registry/common/platform.js';\r\nimport { coalesce } from '../../../base/common/arrays.js';\r\nimport { toDisposable } from '../../../base/common/lifecycle.js';\r\nexport var DefaultQuickAccessFilterValue;\r\n(function (DefaultQuickAccessFilterValue) {\r\n    /**\r\n     * Keep the value as it is given to quick access.\r\n     */\r\n    DefaultQuickAccessFilterValue[DefaultQuickAccessFilterValue[\"PRESERVE\"] = 0] = \"PRESERVE\";\r\n    /**\r\n     * Use the value that was used last time something was accepted from the picker.\r\n     */\r\n    DefaultQuickAccessFilterValue[DefaultQuickAccessFilterValue[\"LAST\"] = 1] = \"LAST\";\r\n})(DefaultQuickAccessFilterValue || (DefaultQuickAccessFilterValue = {}));\r\nexport const Extensions = {\r\n    Quickaccess: 'workbench.contributions.quickaccess'\r\n};\r\nexport class QuickAccessRegistry {\r\n    constructor() {\r\n        this.providers = [];\r\n        this.defaultProvider = undefined;\r\n    }\r\n    registerQuickAccessProvider(provider) {\r\n        // Extract the default provider when no prefix is present\r\n        if (provider.prefix.length === 0) {\r\n            this.defaultProvider = provider;\r\n        }\r\n        else {\r\n            this.providers.push(provider);\r\n        }\r\n        // sort the providers by decreasing prefix length, such that longer\r\n        // prefixes take priority: 'ext' vs 'ext install' - the latter should win\r\n        this.providers.sort((providerA, providerB) => providerB.prefix.length - providerA.prefix.length);\r\n        return toDisposable(() => {\r\n            this.providers.splice(this.providers.indexOf(provider), 1);\r\n            if (this.defaultProvider === provider) {\r\n                this.defaultProvider = undefined;\r\n            }\r\n        });\r\n    }\r\n    getQuickAccessProviders() {\r\n        return coalesce([this.defaultProvider, ...this.providers]);\r\n    }\r\n    getQuickAccessProvider(prefix) {\r\n        const result = prefix ? (this.providers.find(provider => prefix.startsWith(provider.prefix)) || undefined) : undefined;\r\n        return result || this.defaultProvider;\r\n    }\r\n}\r\nRegistry.add(Extensions.Quickaccess, new QuickAccessRegistry());\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,QAAQ,QAAQ,mCAAmC;AAC5D,SAASC,QAAQ,QAAQ,gCAAgC;AACzD,SAASC,YAAY,QAAQ,mCAAmC;AAChE,OAAO,IAAIC,6BAA6B;AACxC,CAAC,UAAUA,6BAA6B,EAAE;EACtC;AACJ;AACA;EACIA,6BAA6B,CAACA,6BAA6B,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,GAAG,UAAU;EACzF;AACJ;AACA;EACIA,6BAA6B,CAACA,6BAA6B,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM;AACrF,CAAC,EAAEA,6BAA6B,KAAKA,6BAA6B,GAAG,CAAC,CAAC,CAAC,CAAC;AACzE,OAAO,MAAMC,UAAU,GAAG;EACtBC,WAAW,EAAE;AACjB,CAAC;AACD,OAAO,MAAMC,mBAAmB,CAAC;EAC7BC,WAAWA,CAAA,EAAG;IACV,IAAI,CAACC,SAAS,GAAG,EAAE;IACnB,IAAI,CAACC,eAAe,GAAGC,SAAS;EACpC;EACAC,2BAA2BA,CAACC,QAAQ,EAAE;IAClC;IACA,IAAIA,QAAQ,CAACC,MAAM,CAACC,MAAM,KAAK,CAAC,EAAE;MAC9B,IAAI,CAACL,eAAe,GAAGG,QAAQ;IACnC,CAAC,MACI;MACD,IAAI,CAACJ,SAAS,CAACO,IAAI,CAACH,QAAQ,CAAC;IACjC;IACA;IACA;IACA,IAAI,CAACJ,SAAS,CAACQ,IAAI,CAAC,CAACC,SAAS,EAAEC,SAAS,KAAKA,SAAS,CAACL,MAAM,CAACC,MAAM,GAAGG,SAAS,CAACJ,MAAM,CAACC,MAAM,CAAC;IAChG,OAAOZ,YAAY,CAAC,MAAM;MACtB,IAAI,CAACM,SAAS,CAACW,MAAM,CAAC,IAAI,CAACX,SAAS,CAACY,OAAO,CAACR,QAAQ,CAAC,EAAE,CAAC,CAAC;MAC1D,IAAI,IAAI,CAACH,eAAe,KAAKG,QAAQ,EAAE;QACnC,IAAI,CAACH,eAAe,GAAGC,SAAS;MACpC;IACJ,CAAC,CAAC;EACN;EACAW,uBAAuBA,CAAA,EAAG;IACtB,OAAOpB,QAAQ,CAAC,CAAC,IAAI,CAACQ,eAAe,EAAE,GAAG,IAAI,CAACD,SAAS,CAAC,CAAC;EAC9D;EACAc,sBAAsBA,CAACT,MAAM,EAAE;IAC3B,MAAMU,MAAM,GAAGV,MAAM,GAAI,IAAI,CAACL,SAAS,CAACgB,IAAI,CAACZ,QAAQ,IAAIC,MAAM,CAACY,UAAU,CAACb,QAAQ,CAACC,MAAM,CAAC,CAAC,IAAIH,SAAS,GAAIA,SAAS;IACtH,OAAOa,MAAM,IAAI,IAAI,CAACd,eAAe;EACzC;AACJ;AACAT,QAAQ,CAAC0B,GAAG,CAACtB,UAAU,CAACC,WAAW,EAAE,IAAIC,mBAAmB,CAAC,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}