{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nexport class ViewModelEventDispatcher extends Disposable {\n  constructor() {\n    super();\n    this._onEvent = this._register(new Emitter());\n    this.onEvent = this._onEvent.event;\n    this._eventHandlers = [];\n    this._viewEventQueue = null;\n    this._isConsumingViewEventQueue = false;\n    this._collector = null;\n    this._collectorCnt = 0;\n    this._outgoingEvents = [];\n  }\n  emitOutgoingEvent(e) {\n    this._addOutgoingEvent(e);\n    this._emitOugoingEvents();\n  }\n  _addOutgoingEvent(e) {\n    for (let i = 0, len = this._outgoingEvents.length; i < len; i++) {\n      if (this._outgoingEvents[i].kind === e.kind) {\n        this._outgoingEvents[i] = this._outgoingEvents[i].merge(e);\n        return;\n      }\n    }\n    // not merged\n    this._outgoingEvents.push(e);\n  }\n  _emitOugoingEvents() {\n    while (this._outgoingEvents.length > 0) {\n      if (this._collector || this._isConsumingViewEventQueue) {\n        // right now collecting or emitting view events, so let's postpone emitting\n        return;\n      }\n      const event = this._outgoingEvents.shift();\n      if (event.isNoOp()) {\n        continue;\n      }\n      this._onEvent.fire(event);\n    }\n  }\n  addViewEventHandler(eventHandler) {\n    for (let i = 0, len = this._eventHandlers.length; i < len; i++) {\n      if (this._eventHandlers[i] === eventHandler) {\n        console.warn('Detected duplicate listener in ViewEventDispatcher', eventHandler);\n      }\n    }\n    this._eventHandlers.push(eventHandler);\n  }\n  removeViewEventHandler(eventHandler) {\n    for (let i = 0; i < this._eventHandlers.length; i++) {\n      if (this._eventHandlers[i] === eventHandler) {\n        this._eventHandlers.splice(i, 1);\n        break;\n      }\n    }\n  }\n  beginEmitViewEvents() {\n    this._collectorCnt++;\n    if (this._collectorCnt === 1) {\n      this._collector = new ViewModelEventsCollector();\n    }\n    return this._collector;\n  }\n  endEmitViewEvents() {\n    this._collectorCnt--;\n    if (this._collectorCnt === 0) {\n      const outgoingEvents = this._collector.outgoingEvents;\n      const viewEvents = this._collector.viewEvents;\n      this._collector = null;\n      for (const outgoingEvent of outgoingEvents) {\n        this._addOutgoingEvent(outgoingEvent);\n      }\n      if (viewEvents.length > 0) {\n        this._emitMany(viewEvents);\n      }\n    }\n    this._emitOugoingEvents();\n  }\n  emitSingleViewEvent(event) {\n    try {\n      const eventsCollector = this.beginEmitViewEvents();\n      eventsCollector.emitViewEvent(event);\n    } finally {\n      this.endEmitViewEvents();\n    }\n  }\n  _emitMany(events) {\n    if (this._viewEventQueue) {\n      this._viewEventQueue = this._viewEventQueue.concat(events);\n    } else {\n      this._viewEventQueue = events;\n    }\n    if (!this._isConsumingViewEventQueue) {\n      this._consumeViewEventQueue();\n    }\n  }\n  _consumeViewEventQueue() {\n    try {\n      this._isConsumingViewEventQueue = true;\n      this._doConsumeQueue();\n    } finally {\n      this._isConsumingViewEventQueue = false;\n    }\n  }\n  _doConsumeQueue() {\n    while (this._viewEventQueue) {\n      // Empty event queue, as events might come in while sending these off\n      const events = this._viewEventQueue;\n      this._viewEventQueue = null;\n      // Use a clone of the event handlers list, as they might remove themselves\n      const eventHandlers = this._eventHandlers.slice(0);\n      for (const eventHandler of eventHandlers) {\n        eventHandler.handleEvents(events);\n      }\n    }\n  }\n}\nexport class ViewModelEventsCollector {\n  constructor() {\n    this.viewEvents = [];\n    this.outgoingEvents = [];\n  }\n  emitViewEvent(event) {\n    this.viewEvents.push(event);\n  }\n  emitOutgoingEvent(e) {\n    this.outgoingEvents.push(e);\n  }\n}\nexport class ContentSizeChangedEvent {\n  constructor(oldContentWidth, oldContentHeight, contentWidth, contentHeight) {\n    this.kind = 0 /* ContentSizeChanged */;\n    this._oldContentWidth = oldContentWidth;\n    this._oldContentHeight = oldContentHeight;\n    this.contentWidth = contentWidth;\n    this.contentHeight = contentHeight;\n    this.contentWidthChanged = this._oldContentWidth !== this.contentWidth;\n    this.contentHeightChanged = this._oldContentHeight !== this.contentHeight;\n  }\n  isNoOp() {\n    return !this.contentWidthChanged && !this.contentHeightChanged;\n  }\n  merge(other) {\n    if (other.kind !== 0 /* ContentSizeChanged */) {\n      return this;\n    }\n    return new ContentSizeChangedEvent(this._oldContentWidth, this._oldContentHeight, other.contentWidth, other.contentHeight);\n  }\n}\nexport class FocusChangedEvent {\n  constructor(oldHasFocus, hasFocus) {\n    this.kind = 1 /* FocusChanged */;\n    this.oldHasFocus = oldHasFocus;\n    this.hasFocus = hasFocus;\n  }\n  isNoOp() {\n    return this.oldHasFocus === this.hasFocus;\n  }\n  merge(other) {\n    if (other.kind !== 1 /* FocusChanged */) {\n      return this;\n    }\n    return new FocusChangedEvent(this.oldHasFocus, other.hasFocus);\n  }\n}\nexport class ScrollChangedEvent {\n  constructor(oldScrollWidth, oldScrollLeft, oldScrollHeight, oldScrollTop, scrollWidth, scrollLeft, scrollHeight, scrollTop) {\n    this.kind = 2 /* ScrollChanged */;\n    this._oldScrollWidth = oldScrollWidth;\n    this._oldScrollLeft = oldScrollLeft;\n    this._oldScrollHeight = oldScrollHeight;\n    this._oldScrollTop = oldScrollTop;\n    this.scrollWidth = scrollWidth;\n    this.scrollLeft = scrollLeft;\n    this.scrollHeight = scrollHeight;\n    this.scrollTop = scrollTop;\n    this.scrollWidthChanged = this._oldScrollWidth !== this.scrollWidth;\n    this.scrollLeftChanged = this._oldScrollLeft !== this.scrollLeft;\n    this.scrollHeightChanged = this._oldScrollHeight !== this.scrollHeight;\n    this.scrollTopChanged = this._oldScrollTop !== this.scrollTop;\n  }\n  isNoOp() {\n    return !this.scrollWidthChanged && !this.scrollLeftChanged && !this.scrollHeightChanged && !this.scrollTopChanged;\n  }\n  merge(other) {\n    if (other.kind !== 2 /* ScrollChanged */) {\n      return this;\n    }\n    return new ScrollChangedEvent(this._oldScrollWidth, this._oldScrollLeft, this._oldScrollHeight, this._oldScrollTop, other.scrollWidth, other.scrollLeft, other.scrollHeight, other.scrollTop);\n  }\n}\nexport class ViewZonesChangedEvent {\n  constructor() {\n    this.kind = 3 /* ViewZonesChanged */;\n  }\n\n  isNoOp() {\n    return false;\n  }\n  merge(other) {\n    return this;\n  }\n}\nexport class CursorStateChangedEvent {\n  constructor(oldSelections, selections, oldModelVersionId, modelVersionId, source, reason, reachedMaxCursorCount) {\n    this.kind = 5 /* CursorStateChanged */;\n    this.oldSelections = oldSelections;\n    this.selections = selections;\n    this.oldModelVersionId = oldModelVersionId;\n    this.modelVersionId = modelVersionId;\n    this.source = source;\n    this.reason = reason;\n    this.reachedMaxCursorCount = reachedMaxCursorCount;\n  }\n  static _selectionsAreEqual(a, b) {\n    if (!a && !b) {\n      return true;\n    }\n    if (!a || !b) {\n      return false;\n    }\n    const aLen = a.length;\n    const bLen = b.length;\n    if (aLen !== bLen) {\n      return false;\n    }\n    for (let i = 0; i < aLen; i++) {\n      if (!a[i].equalsSelection(b[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  isNoOp() {\n    return CursorStateChangedEvent._selectionsAreEqual(this.oldSelections, this.selections) && this.oldModelVersionId === this.modelVersionId;\n  }\n  merge(other) {\n    if (other.kind !== 5 /* CursorStateChanged */) {\n      return this;\n    }\n    return new CursorStateChangedEvent(this.oldSelections, other.selections, this.oldModelVersionId, other.modelVersionId, other.source, other.reason, this.reachedMaxCursorCount || other.reachedMaxCursorCount);\n  }\n}\nexport class ReadOnlyEditAttemptEvent {\n  constructor() {\n    this.kind = 4 /* ReadOnlyEditAttempt */;\n  }\n\n  isNoOp() {\n    return false;\n  }\n  merge(other) {\n    return this;\n  }\n}","map":{"version":3,"names":["Emitter","Disposable","ViewModelEventDispatcher","constructor","_onEvent","_register","onEvent","event","_eventHandlers","_viewEventQueue","_isConsumingViewEventQueue","_collector","_collectorCnt","_outgoingEvents","emitOutgoingEvent","e","_addOutgoingEvent","_emitOugoingEvents","i","len","length","kind","merge","push","shift","isNoOp","fire","addViewEventHandler","eventHandler","console","warn","removeViewEventHandler","splice","beginEmitViewEvents","ViewModelEventsCollector","endEmitViewEvents","outgoingEvents","viewEvents","outgoingEvent","_emitMany","emitSingleViewEvent","eventsCollector","emitViewEvent","events","concat","_consumeViewEventQueue","_doConsumeQueue","eventHandlers","slice","handleEvents","ContentSizeChangedEvent","oldContentWidth","oldContentHeight","contentWidth","contentHeight","_oldContentWidth","_oldContentHeight","contentWidthChanged","contentHeightChanged","other","FocusChangedEvent","oldHasFocus","hasFocus","ScrollChangedEvent","oldScrollWidth","oldScrollLeft","oldScrollHeight","oldScrollTop","scrollWidth","scrollLeft","scrollHeight","scrollTop","_oldScrollWidth","_oldScrollLeft","_oldScrollHeight","_oldScrollTop","scrollWidthChanged","scrollLeftChanged","scrollHeightChanged","scrollTopChanged","ViewZonesChangedEvent","CursorStateChangedEvent","oldSelections","selections","oldModelVersionId","modelVersionId","source","reason","reachedMaxCursorCount","_selectionsAreEqual","a","b","aLen","bLen","equalsSelection","ReadOnlyEditAttemptEvent"],"sources":["C:/Users/Administrator/Desktop/sqllineage-master/sqllineagejs/node_modules/monaco-editor/esm/vs/editor/common/viewModel/viewModelEventDispatcher.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { Disposable } from '../../../base/common/lifecycle.js';\r\nexport class ViewModelEventDispatcher extends Disposable {\r\n    constructor() {\r\n        super();\r\n        this._onEvent = this._register(new Emitter());\r\n        this.onEvent = this._onEvent.event;\r\n        this._eventHandlers = [];\r\n        this._viewEventQueue = null;\r\n        this._isConsumingViewEventQueue = false;\r\n        this._collector = null;\r\n        this._collectorCnt = 0;\r\n        this._outgoingEvents = [];\r\n    }\r\n    emitOutgoingEvent(e) {\r\n        this._addOutgoingEvent(e);\r\n        this._emitOugoingEvents();\r\n    }\r\n    _addOutgoingEvent(e) {\r\n        for (let i = 0, len = this._outgoingEvents.length; i < len; i++) {\r\n            if (this._outgoingEvents[i].kind === e.kind) {\r\n                this._outgoingEvents[i] = this._outgoingEvents[i].merge(e);\r\n                return;\r\n            }\r\n        }\r\n        // not merged\r\n        this._outgoingEvents.push(e);\r\n    }\r\n    _emitOugoingEvents() {\r\n        while (this._outgoingEvents.length > 0) {\r\n            if (this._collector || this._isConsumingViewEventQueue) {\r\n                // right now collecting or emitting view events, so let's postpone emitting\r\n                return;\r\n            }\r\n            const event = this._outgoingEvents.shift();\r\n            if (event.isNoOp()) {\r\n                continue;\r\n            }\r\n            this._onEvent.fire(event);\r\n        }\r\n    }\r\n    addViewEventHandler(eventHandler) {\r\n        for (let i = 0, len = this._eventHandlers.length; i < len; i++) {\r\n            if (this._eventHandlers[i] === eventHandler) {\r\n                console.warn('Detected duplicate listener in ViewEventDispatcher', eventHandler);\r\n            }\r\n        }\r\n        this._eventHandlers.push(eventHandler);\r\n    }\r\n    removeViewEventHandler(eventHandler) {\r\n        for (let i = 0; i < this._eventHandlers.length; i++) {\r\n            if (this._eventHandlers[i] === eventHandler) {\r\n                this._eventHandlers.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    beginEmitViewEvents() {\r\n        this._collectorCnt++;\r\n        if (this._collectorCnt === 1) {\r\n            this._collector = new ViewModelEventsCollector();\r\n        }\r\n        return this._collector;\r\n    }\r\n    endEmitViewEvents() {\r\n        this._collectorCnt--;\r\n        if (this._collectorCnt === 0) {\r\n            const outgoingEvents = this._collector.outgoingEvents;\r\n            const viewEvents = this._collector.viewEvents;\r\n            this._collector = null;\r\n            for (const outgoingEvent of outgoingEvents) {\r\n                this._addOutgoingEvent(outgoingEvent);\r\n            }\r\n            if (viewEvents.length > 0) {\r\n                this._emitMany(viewEvents);\r\n            }\r\n        }\r\n        this._emitOugoingEvents();\r\n    }\r\n    emitSingleViewEvent(event) {\r\n        try {\r\n            const eventsCollector = this.beginEmitViewEvents();\r\n            eventsCollector.emitViewEvent(event);\r\n        }\r\n        finally {\r\n            this.endEmitViewEvents();\r\n        }\r\n    }\r\n    _emitMany(events) {\r\n        if (this._viewEventQueue) {\r\n            this._viewEventQueue = this._viewEventQueue.concat(events);\r\n        }\r\n        else {\r\n            this._viewEventQueue = events;\r\n        }\r\n        if (!this._isConsumingViewEventQueue) {\r\n            this._consumeViewEventQueue();\r\n        }\r\n    }\r\n    _consumeViewEventQueue() {\r\n        try {\r\n            this._isConsumingViewEventQueue = true;\r\n            this._doConsumeQueue();\r\n        }\r\n        finally {\r\n            this._isConsumingViewEventQueue = false;\r\n        }\r\n    }\r\n    _doConsumeQueue() {\r\n        while (this._viewEventQueue) {\r\n            // Empty event queue, as events might come in while sending these off\r\n            const events = this._viewEventQueue;\r\n            this._viewEventQueue = null;\r\n            // Use a clone of the event handlers list, as they might remove themselves\r\n            const eventHandlers = this._eventHandlers.slice(0);\r\n            for (const eventHandler of eventHandlers) {\r\n                eventHandler.handleEvents(events);\r\n            }\r\n        }\r\n    }\r\n}\r\nexport class ViewModelEventsCollector {\r\n    constructor() {\r\n        this.viewEvents = [];\r\n        this.outgoingEvents = [];\r\n    }\r\n    emitViewEvent(event) {\r\n        this.viewEvents.push(event);\r\n    }\r\n    emitOutgoingEvent(e) {\r\n        this.outgoingEvents.push(e);\r\n    }\r\n}\r\nexport class ContentSizeChangedEvent {\r\n    constructor(oldContentWidth, oldContentHeight, contentWidth, contentHeight) {\r\n        this.kind = 0 /* ContentSizeChanged */;\r\n        this._oldContentWidth = oldContentWidth;\r\n        this._oldContentHeight = oldContentHeight;\r\n        this.contentWidth = contentWidth;\r\n        this.contentHeight = contentHeight;\r\n        this.contentWidthChanged = (this._oldContentWidth !== this.contentWidth);\r\n        this.contentHeightChanged = (this._oldContentHeight !== this.contentHeight);\r\n    }\r\n    isNoOp() {\r\n        return (!this.contentWidthChanged && !this.contentHeightChanged);\r\n    }\r\n    merge(other) {\r\n        if (other.kind !== 0 /* ContentSizeChanged */) {\r\n            return this;\r\n        }\r\n        return new ContentSizeChangedEvent(this._oldContentWidth, this._oldContentHeight, other.contentWidth, other.contentHeight);\r\n    }\r\n}\r\nexport class FocusChangedEvent {\r\n    constructor(oldHasFocus, hasFocus) {\r\n        this.kind = 1 /* FocusChanged */;\r\n        this.oldHasFocus = oldHasFocus;\r\n        this.hasFocus = hasFocus;\r\n    }\r\n    isNoOp() {\r\n        return (this.oldHasFocus === this.hasFocus);\r\n    }\r\n    merge(other) {\r\n        if (other.kind !== 1 /* FocusChanged */) {\r\n            return this;\r\n        }\r\n        return new FocusChangedEvent(this.oldHasFocus, other.hasFocus);\r\n    }\r\n}\r\nexport class ScrollChangedEvent {\r\n    constructor(oldScrollWidth, oldScrollLeft, oldScrollHeight, oldScrollTop, scrollWidth, scrollLeft, scrollHeight, scrollTop) {\r\n        this.kind = 2 /* ScrollChanged */;\r\n        this._oldScrollWidth = oldScrollWidth;\r\n        this._oldScrollLeft = oldScrollLeft;\r\n        this._oldScrollHeight = oldScrollHeight;\r\n        this._oldScrollTop = oldScrollTop;\r\n        this.scrollWidth = scrollWidth;\r\n        this.scrollLeft = scrollLeft;\r\n        this.scrollHeight = scrollHeight;\r\n        this.scrollTop = scrollTop;\r\n        this.scrollWidthChanged = (this._oldScrollWidth !== this.scrollWidth);\r\n        this.scrollLeftChanged = (this._oldScrollLeft !== this.scrollLeft);\r\n        this.scrollHeightChanged = (this._oldScrollHeight !== this.scrollHeight);\r\n        this.scrollTopChanged = (this._oldScrollTop !== this.scrollTop);\r\n    }\r\n    isNoOp() {\r\n        return (!this.scrollWidthChanged && !this.scrollLeftChanged && !this.scrollHeightChanged && !this.scrollTopChanged);\r\n    }\r\n    merge(other) {\r\n        if (other.kind !== 2 /* ScrollChanged */) {\r\n            return this;\r\n        }\r\n        return new ScrollChangedEvent(this._oldScrollWidth, this._oldScrollLeft, this._oldScrollHeight, this._oldScrollTop, other.scrollWidth, other.scrollLeft, other.scrollHeight, other.scrollTop);\r\n    }\r\n}\r\nexport class ViewZonesChangedEvent {\r\n    constructor() {\r\n        this.kind = 3 /* ViewZonesChanged */;\r\n    }\r\n    isNoOp() {\r\n        return false;\r\n    }\r\n    merge(other) {\r\n        return this;\r\n    }\r\n}\r\nexport class CursorStateChangedEvent {\r\n    constructor(oldSelections, selections, oldModelVersionId, modelVersionId, source, reason, reachedMaxCursorCount) {\r\n        this.kind = 5 /* CursorStateChanged */;\r\n        this.oldSelections = oldSelections;\r\n        this.selections = selections;\r\n        this.oldModelVersionId = oldModelVersionId;\r\n        this.modelVersionId = modelVersionId;\r\n        this.source = source;\r\n        this.reason = reason;\r\n        this.reachedMaxCursorCount = reachedMaxCursorCount;\r\n    }\r\n    static _selectionsAreEqual(a, b) {\r\n        if (!a && !b) {\r\n            return true;\r\n        }\r\n        if (!a || !b) {\r\n            return false;\r\n        }\r\n        const aLen = a.length;\r\n        const bLen = b.length;\r\n        if (aLen !== bLen) {\r\n            return false;\r\n        }\r\n        for (let i = 0; i < aLen; i++) {\r\n            if (!a[i].equalsSelection(b[i])) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    isNoOp() {\r\n        return (CursorStateChangedEvent._selectionsAreEqual(this.oldSelections, this.selections)\r\n            && this.oldModelVersionId === this.modelVersionId);\r\n    }\r\n    merge(other) {\r\n        if (other.kind !== 5 /* CursorStateChanged */) {\r\n            return this;\r\n        }\r\n        return new CursorStateChangedEvent(this.oldSelections, other.selections, this.oldModelVersionId, other.modelVersionId, other.source, other.reason, this.reachedMaxCursorCount || other.reachedMaxCursorCount);\r\n    }\r\n}\r\nexport class ReadOnlyEditAttemptEvent {\r\n    constructor() {\r\n        this.kind = 4 /* ReadOnlyEditAttempt */;\r\n    }\r\n    isNoOp() {\r\n        return false;\r\n    }\r\n    merge(other) {\r\n        return this;\r\n    }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}