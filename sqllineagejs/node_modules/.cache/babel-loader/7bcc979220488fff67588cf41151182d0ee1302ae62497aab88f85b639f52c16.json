{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { EditOperation } from '../../common/core/editOperation.js';\nimport { Range } from '../../common/core/range.js';\nexport class FormattingEdit {\n  static _handleEolEdits(editor, edits) {\n    let newEol = undefined;\n    let singleEdits = [];\n    for (let edit of edits) {\n      if (typeof edit.eol === 'number') {\n        newEol = edit.eol;\n      }\n      if (edit.range && typeof edit.text === 'string') {\n        singleEdits.push(edit);\n      }\n    }\n    if (typeof newEol === 'number') {\n      if (editor.hasModel()) {\n        editor.getModel().pushEOL(newEol);\n      }\n    }\n    return singleEdits;\n  }\n  static _isFullModelReplaceEdit(editor, edit) {\n    if (!editor.hasModel()) {\n      return false;\n    }\n    const model = editor.getModel();\n    const editRange = model.validateRange(edit.range);\n    const fullModelRange = model.getFullModelRange();\n    return fullModelRange.equalsRange(editRange);\n  }\n  static execute(editor, _edits, addUndoStops) {\n    if (addUndoStops) {\n      editor.pushUndoStop();\n    }\n    const edits = FormattingEdit._handleEolEdits(editor, _edits);\n    if (edits.length === 1 && FormattingEdit._isFullModelReplaceEdit(editor, edits[0])) {\n      // We use replace semantics and hope that markers stay put...\n      editor.executeEdits('formatEditsCommand', edits.map(edit => EditOperation.replace(Range.lift(edit.range), edit.text)));\n    } else {\n      editor.executeEdits('formatEditsCommand', edits.map(edit => EditOperation.replaceMove(Range.lift(edit.range), edit.text)));\n    }\n    if (addUndoStops) {\n      editor.pushUndoStop();\n    }\n  }\n}","map":{"version":3,"names":["EditOperation","Range","FormattingEdit","_handleEolEdits","editor","edits","newEol","undefined","singleEdits","edit","eol","range","text","push","hasModel","getModel","pushEOL","_isFullModelReplaceEdit","model","editRange","validateRange","fullModelRange","getFullModelRange","equalsRange","execute","_edits","addUndoStops","pushUndoStop","length","executeEdits","map","replace","lift","replaceMove"],"sources":["C:/Users/Administrator/Desktop/sqllineage-master/sqllineagejs/node_modules/monaco-editor/esm/vs/editor/contrib/format/formattingEdit.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { EditOperation } from '../../common/core/editOperation.js';\r\nimport { Range } from '../../common/core/range.js';\r\nexport class FormattingEdit {\r\n    static _handleEolEdits(editor, edits) {\r\n        let newEol = undefined;\r\n        let singleEdits = [];\r\n        for (let edit of edits) {\r\n            if (typeof edit.eol === 'number') {\r\n                newEol = edit.eol;\r\n            }\r\n            if (edit.range && typeof edit.text === 'string') {\r\n                singleEdits.push(edit);\r\n            }\r\n        }\r\n        if (typeof newEol === 'number') {\r\n            if (editor.hasModel()) {\r\n                editor.getModel().pushEOL(newEol);\r\n            }\r\n        }\r\n        return singleEdits;\r\n    }\r\n    static _isFullModelReplaceEdit(editor, edit) {\r\n        if (!editor.hasModel()) {\r\n            return false;\r\n        }\r\n        const model = editor.getModel();\r\n        const editRange = model.validateRange(edit.range);\r\n        const fullModelRange = model.getFullModelRange();\r\n        return fullModelRange.equalsRange(editRange);\r\n    }\r\n    static execute(editor, _edits, addUndoStops) {\r\n        if (addUndoStops) {\r\n            editor.pushUndoStop();\r\n        }\r\n        const edits = FormattingEdit._handleEolEdits(editor, _edits);\r\n        if (edits.length === 1 && FormattingEdit._isFullModelReplaceEdit(editor, edits[0])) {\r\n            // We use replace semantics and hope that markers stay put...\r\n            editor.executeEdits('formatEditsCommand', edits.map(edit => EditOperation.replace(Range.lift(edit.range), edit.text)));\r\n        }\r\n        else {\r\n            editor.executeEdits('formatEditsCommand', edits.map(edit => EditOperation.replaceMove(Range.lift(edit.range), edit.text)));\r\n        }\r\n        if (addUndoStops) {\r\n            editor.pushUndoStop();\r\n        }\r\n    }\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,aAAa,QAAQ,oCAAoC;AAClE,SAASC,KAAK,QAAQ,4BAA4B;AAClD,OAAO,MAAMC,cAAc,CAAC;EACxB,OAAOC,eAAeA,CAACC,MAAM,EAAEC,KAAK,EAAE;IAClC,IAAIC,MAAM,GAAGC,SAAS;IACtB,IAAIC,WAAW,GAAG,EAAE;IACpB,KAAK,IAAIC,IAAI,IAAIJ,KAAK,EAAE;MACpB,IAAI,OAAOI,IAAI,CAACC,GAAG,KAAK,QAAQ,EAAE;QAC9BJ,MAAM,GAAGG,IAAI,CAACC,GAAG;MACrB;MACA,IAAID,IAAI,CAACE,KAAK,IAAI,OAAOF,IAAI,CAACG,IAAI,KAAK,QAAQ,EAAE;QAC7CJ,WAAW,CAACK,IAAI,CAACJ,IAAI,CAAC;MAC1B;IACJ;IACA,IAAI,OAAOH,MAAM,KAAK,QAAQ,EAAE;MAC5B,IAAIF,MAAM,CAACU,QAAQ,CAAC,CAAC,EAAE;QACnBV,MAAM,CAACW,QAAQ,CAAC,CAAC,CAACC,OAAO,CAACV,MAAM,CAAC;MACrC;IACJ;IACA,OAAOE,WAAW;EACtB;EACA,OAAOS,uBAAuBA,CAACb,MAAM,EAAEK,IAAI,EAAE;IACzC,IAAI,CAACL,MAAM,CAACU,QAAQ,CAAC,CAAC,EAAE;MACpB,OAAO,KAAK;IAChB;IACA,MAAMI,KAAK,GAAGd,MAAM,CAACW,QAAQ,CAAC,CAAC;IAC/B,MAAMI,SAAS,GAAGD,KAAK,CAACE,aAAa,CAACX,IAAI,CAACE,KAAK,CAAC;IACjD,MAAMU,cAAc,GAAGH,KAAK,CAACI,iBAAiB,CAAC,CAAC;IAChD,OAAOD,cAAc,CAACE,WAAW,CAACJ,SAAS,CAAC;EAChD;EACA,OAAOK,OAAOA,CAACpB,MAAM,EAAEqB,MAAM,EAAEC,YAAY,EAAE;IACzC,IAAIA,YAAY,EAAE;MACdtB,MAAM,CAACuB,YAAY,CAAC,CAAC;IACzB;IACA,MAAMtB,KAAK,GAAGH,cAAc,CAACC,eAAe,CAACC,MAAM,EAAEqB,MAAM,CAAC;IAC5D,IAAIpB,KAAK,CAACuB,MAAM,KAAK,CAAC,IAAI1B,cAAc,CAACe,uBAAuB,CAACb,MAAM,EAAEC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;MAChF;MACAD,MAAM,CAACyB,YAAY,CAAC,oBAAoB,EAAExB,KAAK,CAACyB,GAAG,CAACrB,IAAI,IAAIT,aAAa,CAAC+B,OAAO,CAAC9B,KAAK,CAAC+B,IAAI,CAACvB,IAAI,CAACE,KAAK,CAAC,EAAEF,IAAI,CAACG,IAAI,CAAC,CAAC,CAAC;IAC1H,CAAC,MACI;MACDR,MAAM,CAACyB,YAAY,CAAC,oBAAoB,EAAExB,KAAK,CAACyB,GAAG,CAACrB,IAAI,IAAIT,aAAa,CAACiC,WAAW,CAAChC,KAAK,CAAC+B,IAAI,CAACvB,IAAI,CAACE,KAAK,CAAC,EAAEF,IAAI,CAACG,IAAI,CAAC,CAAC,CAAC;IAC9H;IACA,IAAIc,YAAY,EAAE;MACdtB,MAAM,CAACuB,YAAY,CAAC,CAAC;IACzB;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}