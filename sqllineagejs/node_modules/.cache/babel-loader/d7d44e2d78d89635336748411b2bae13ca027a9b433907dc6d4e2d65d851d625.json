{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport { Position } from '../../common/core/position.js';\nimport { Range } from '../../common/core/range.js';\nimport { LinkedList } from '../../../base/common/linkedList.js';\nexport class BracketSelectionRangeProvider {\n  provideSelectionRanges(model, positions) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const result = [];\n      for (const position of positions) {\n        const bucket = [];\n        result.push(bucket);\n        const ranges = new Map();\n        yield new Promise(resolve => BracketSelectionRangeProvider._bracketsRightYield(resolve, 0, model, position, ranges));\n        yield new Promise(resolve => BracketSelectionRangeProvider._bracketsLeftYield(resolve, 0, model, position, ranges, bucket));\n      }\n      return result;\n    });\n  }\n  static _bracketsRightYield(resolve, round, model, pos, ranges) {\n    const counts = new Map();\n    const t1 = Date.now();\n    while (true) {\n      if (round >= BracketSelectionRangeProvider._maxRounds) {\n        resolve();\n        break;\n      }\n      if (!pos) {\n        resolve();\n        break;\n      }\n      let bracket = model.findNextBracket(pos);\n      if (!bracket) {\n        resolve();\n        break;\n      }\n      let d = Date.now() - t1;\n      if (d > BracketSelectionRangeProvider._maxDuration) {\n        setTimeout(() => BracketSelectionRangeProvider._bracketsRightYield(resolve, round + 1, model, pos, ranges));\n        break;\n      }\n      const key = bracket.close[0];\n      if (bracket.isOpen) {\n        // wait for closing\n        let val = counts.has(key) ? counts.get(key) : 0;\n        counts.set(key, val + 1);\n      } else {\n        // process closing\n        let val = counts.has(key) ? counts.get(key) : 0;\n        val -= 1;\n        counts.set(key, Math.max(0, val));\n        if (val < 0) {\n          let list = ranges.get(key);\n          if (!list) {\n            list = new LinkedList();\n            ranges.set(key, list);\n          }\n          list.push(bracket.range);\n        }\n      }\n      pos = bracket.range.getEndPosition();\n    }\n  }\n  static _bracketsLeftYield(resolve, round, model, pos, ranges, bucket) {\n    const counts = new Map();\n    const t1 = Date.now();\n    while (true) {\n      if (round >= BracketSelectionRangeProvider._maxRounds && ranges.size === 0) {\n        resolve();\n        break;\n      }\n      if (!pos) {\n        resolve();\n        break;\n      }\n      let bracket = model.findPrevBracket(pos);\n      if (!bracket) {\n        resolve();\n        break;\n      }\n      let d = Date.now() - t1;\n      if (d > BracketSelectionRangeProvider._maxDuration) {\n        setTimeout(() => BracketSelectionRangeProvider._bracketsLeftYield(resolve, round + 1, model, pos, ranges, bucket));\n        break;\n      }\n      const key = bracket.close[0];\n      if (!bracket.isOpen) {\n        // wait for opening\n        let val = counts.has(key) ? counts.get(key) : 0;\n        counts.set(key, val + 1);\n      } else {\n        // opening\n        let val = counts.has(key) ? counts.get(key) : 0;\n        val -= 1;\n        counts.set(key, Math.max(0, val));\n        if (val < 0) {\n          let list = ranges.get(key);\n          if (list) {\n            let closing = list.shift();\n            if (list.size === 0) {\n              ranges.delete(key);\n            }\n            const innerBracket = Range.fromPositions(bracket.range.getEndPosition(), closing.getStartPosition());\n            const outerBracket = Range.fromPositions(bracket.range.getStartPosition(), closing.getEndPosition());\n            bucket.push({\n              range: innerBracket\n            });\n            bucket.push({\n              range: outerBracket\n            });\n            BracketSelectionRangeProvider._addBracketLeading(model, outerBracket, bucket);\n          }\n        }\n      }\n      pos = bracket.range.getStartPosition();\n    }\n  }\n  static _addBracketLeading(model, bracket, bucket) {\n    if (bracket.startLineNumber === bracket.endLineNumber) {\n      return;\n    }\n    // xxxxxxxx {\n    //\n    // }\n    const startLine = bracket.startLineNumber;\n    const column = model.getLineFirstNonWhitespaceColumn(startLine);\n    if (column !== 0 && column !== bracket.startColumn) {\n      bucket.push({\n        range: Range.fromPositions(new Position(startLine, column), bracket.getEndPosition())\n      });\n      bucket.push({\n        range: Range.fromPositions(new Position(startLine, 1), bracket.getEndPosition())\n      });\n    }\n    // xxxxxxxx\n    // {\n    //\n    // }\n    const aboveLine = startLine - 1;\n    if (aboveLine > 0) {\n      const column = model.getLineFirstNonWhitespaceColumn(aboveLine);\n      if (column === bracket.startColumn && column !== model.getLineLastNonWhitespaceColumn(aboveLine)) {\n        bucket.push({\n          range: Range.fromPositions(new Position(aboveLine, column), bracket.getEndPosition())\n        });\n        bucket.push({\n          range: Range.fromPositions(new Position(aboveLine, 1), bracket.getEndPosition())\n        });\n      }\n    }\n  }\n}\nBracketSelectionRangeProvider._maxDuration = 30;\nBracketSelectionRangeProvider._maxRounds = 2;","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","Position","Range","LinkedList","BracketSelectionRangeProvider","provideSelectionRanges","model","positions","position","bucket","push","ranges","Map","_bracketsRightYield","_bracketsLeftYield","round","pos","counts","t1","Date","now","_maxRounds","bracket","findNextBracket","d","_maxDuration","setTimeout","key","close","isOpen","val","has","get","set","Math","max","list","range","getEndPosition","size","findPrevBracket","closing","shift","delete","innerBracket","fromPositions","getStartPosition","outerBracket","_addBracketLeading","startLineNumber","endLineNumber","startLine","column","getLineFirstNonWhitespaceColumn","startColumn","aboveLine","getLineLastNonWhitespaceColumn"],"sources":["C:/Users/Administrator/Desktop/sqllineage-master/sqllineagejs/node_modules/monaco-editor/esm/vs/editor/contrib/smartSelect/bracketSelections.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { Position } from '../../common/core/position.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { LinkedList } from '../../../base/common/linkedList.js';\r\nexport class BracketSelectionRangeProvider {\r\n    provideSelectionRanges(model, positions) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const result = [];\r\n            for (const position of positions) {\r\n                const bucket = [];\r\n                result.push(bucket);\r\n                const ranges = new Map();\r\n                yield new Promise(resolve => BracketSelectionRangeProvider._bracketsRightYield(resolve, 0, model, position, ranges));\r\n                yield new Promise(resolve => BracketSelectionRangeProvider._bracketsLeftYield(resolve, 0, model, position, ranges, bucket));\r\n            }\r\n            return result;\r\n        });\r\n    }\r\n    static _bracketsRightYield(resolve, round, model, pos, ranges) {\r\n        const counts = new Map();\r\n        const t1 = Date.now();\r\n        while (true) {\r\n            if (round >= BracketSelectionRangeProvider._maxRounds) {\r\n                resolve();\r\n                break;\r\n            }\r\n            if (!pos) {\r\n                resolve();\r\n                break;\r\n            }\r\n            let bracket = model.findNextBracket(pos);\r\n            if (!bracket) {\r\n                resolve();\r\n                break;\r\n            }\r\n            let d = Date.now() - t1;\r\n            if (d > BracketSelectionRangeProvider._maxDuration) {\r\n                setTimeout(() => BracketSelectionRangeProvider._bracketsRightYield(resolve, round + 1, model, pos, ranges));\r\n                break;\r\n            }\r\n            const key = bracket.close[0];\r\n            if (bracket.isOpen) {\r\n                // wait for closing\r\n                let val = counts.has(key) ? counts.get(key) : 0;\r\n                counts.set(key, val + 1);\r\n            }\r\n            else {\r\n                // process closing\r\n                let val = counts.has(key) ? counts.get(key) : 0;\r\n                val -= 1;\r\n                counts.set(key, Math.max(0, val));\r\n                if (val < 0) {\r\n                    let list = ranges.get(key);\r\n                    if (!list) {\r\n                        list = new LinkedList();\r\n                        ranges.set(key, list);\r\n                    }\r\n                    list.push(bracket.range);\r\n                }\r\n            }\r\n            pos = bracket.range.getEndPosition();\r\n        }\r\n    }\r\n    static _bracketsLeftYield(resolve, round, model, pos, ranges, bucket) {\r\n        const counts = new Map();\r\n        const t1 = Date.now();\r\n        while (true) {\r\n            if (round >= BracketSelectionRangeProvider._maxRounds && ranges.size === 0) {\r\n                resolve();\r\n                break;\r\n            }\r\n            if (!pos) {\r\n                resolve();\r\n                break;\r\n            }\r\n            let bracket = model.findPrevBracket(pos);\r\n            if (!bracket) {\r\n                resolve();\r\n                break;\r\n            }\r\n            let d = Date.now() - t1;\r\n            if (d > BracketSelectionRangeProvider._maxDuration) {\r\n                setTimeout(() => BracketSelectionRangeProvider._bracketsLeftYield(resolve, round + 1, model, pos, ranges, bucket));\r\n                break;\r\n            }\r\n            const key = bracket.close[0];\r\n            if (!bracket.isOpen) {\r\n                // wait for opening\r\n                let val = counts.has(key) ? counts.get(key) : 0;\r\n                counts.set(key, val + 1);\r\n            }\r\n            else {\r\n                // opening\r\n                let val = counts.has(key) ? counts.get(key) : 0;\r\n                val -= 1;\r\n                counts.set(key, Math.max(0, val));\r\n                if (val < 0) {\r\n                    let list = ranges.get(key);\r\n                    if (list) {\r\n                        let closing = list.shift();\r\n                        if (list.size === 0) {\r\n                            ranges.delete(key);\r\n                        }\r\n                        const innerBracket = Range.fromPositions(bracket.range.getEndPosition(), closing.getStartPosition());\r\n                        const outerBracket = Range.fromPositions(bracket.range.getStartPosition(), closing.getEndPosition());\r\n                        bucket.push({ range: innerBracket });\r\n                        bucket.push({ range: outerBracket });\r\n                        BracketSelectionRangeProvider._addBracketLeading(model, outerBracket, bucket);\r\n                    }\r\n                }\r\n            }\r\n            pos = bracket.range.getStartPosition();\r\n        }\r\n    }\r\n    static _addBracketLeading(model, bracket, bucket) {\r\n        if (bracket.startLineNumber === bracket.endLineNumber) {\r\n            return;\r\n        }\r\n        // xxxxxxxx {\r\n        //\r\n        // }\r\n        const startLine = bracket.startLineNumber;\r\n        const column = model.getLineFirstNonWhitespaceColumn(startLine);\r\n        if (column !== 0 && column !== bracket.startColumn) {\r\n            bucket.push({ range: Range.fromPositions(new Position(startLine, column), bracket.getEndPosition()) });\r\n            bucket.push({ range: Range.fromPositions(new Position(startLine, 1), bracket.getEndPosition()) });\r\n        }\r\n        // xxxxxxxx\r\n        // {\r\n        //\r\n        // }\r\n        const aboveLine = startLine - 1;\r\n        if (aboveLine > 0) {\r\n            const column = model.getLineFirstNonWhitespaceColumn(aboveLine);\r\n            if (column === bracket.startColumn && column !== model.getLineLastNonWhitespaceColumn(aboveLine)) {\r\n                bucket.push({ range: Range.fromPositions(new Position(aboveLine, column), bracket.getEndPosition()) });\r\n                bucket.push({ range: Range.fromPositions(new Position(aboveLine, 1), bracket.getEndPosition()) });\r\n            }\r\n        }\r\n    }\r\n}\r\nBracketSelectionRangeProvider._maxDuration = 30;\r\nBracketSelectionRangeProvider._maxRounds = 2;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}