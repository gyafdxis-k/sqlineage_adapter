{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { IBulkEditService } from '../../browser/services/bulkEditService.js';\nimport { ICodeEditorService } from '../../browser/services/codeEditorService.js';\nimport { IEditorWorkerService } from '../../common/services/editorWorkerService.js';\nimport { EditorWorkerServiceImpl } from '../../common/services/editorWorkerServiceImpl.js';\nimport { IModeService } from '../../common/services/modeService.js';\nimport { ModeServiceImpl } from '../../common/services/modeServiceImpl.js';\nimport { IModelService } from '../../common/services/modelService.js';\nimport { ModelServiceImpl } from '../../common/services/modelServiceImpl.js';\nimport { ITextResourceConfigurationService, ITextResourcePropertiesService } from '../../common/services/textResourceConfigurationService.js';\nimport { SimpleBulkEditService, SimpleConfigurationService, SimpleDialogService, SimpleNotificationService, SimpleEditorProgressService, SimpleResourceConfigurationService, SimpleResourcePropertiesService, SimpleUriLabelService, SimpleWorkspaceContextService, StandaloneCommandService, StandaloneKeybindingService, StandaloneTelemetryService, SimpleLayoutService } from './simpleServices.js';\nimport { StandaloneCodeEditorServiceImpl } from './standaloneCodeServiceImpl.js';\nimport { StandaloneThemeServiceImpl } from './standaloneThemeServiceImpl.js';\nimport { IStandaloneThemeService } from '../common/standaloneThemeService.js';\nimport { IMenuService } from '../../../platform/actions/common/actions.js';\nimport { ICommandService } from '../../../platform/commands/common/commands.js';\nimport { IConfigurationService } from '../../../platform/configuration/common/configuration.js';\nimport { ContextKeyService } from '../../../platform/contextkey/browser/contextKeyService.js';\nimport { IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\nimport { ContextMenuService } from '../../../platform/contextview/browser/contextMenuService.js';\nimport { IContextMenuService, IContextViewService } from '../../../platform/contextview/browser/contextView.js';\nimport { ContextViewService } from '../../../platform/contextview/browser/contextViewService.js';\nimport { IDialogService } from '../../../platform/dialogs/common/dialogs.js';\nimport { IInstantiationService, createDecorator } from '../../../platform/instantiation/common/instantiation.js';\nimport { InstantiationService } from '../../../platform/instantiation/common/instantiationService.js';\nimport { ServiceCollection } from '../../../platform/instantiation/common/serviceCollection.js';\nimport { IKeybindingService } from '../../../platform/keybinding/common/keybinding.js';\nimport { ILabelService } from '../../../platform/label/common/label.js';\nimport { IListService, ListService } from '../../../platform/list/browser/listService.js';\nimport { ConsoleLogService, ILogService } from '../../../platform/log/common/log.js';\nimport { MarkerService } from '../../../platform/markers/common/markerService.js';\nimport { IMarkerService } from '../../../platform/markers/common/markers.js';\nimport { INotificationService } from '../../../platform/notification/common/notification.js';\nimport { IEditorProgressService } from '../../../platform/progress/common/progress.js';\nimport { IStorageService, InMemoryStorageService } from '../../../platform/storage/common/storage.js';\nimport { ITelemetryService } from '../../../platform/telemetry/common/telemetry.js';\nimport { IThemeService } from '../../../platform/theme/common/themeService.js';\nimport { IWorkspaceContextService } from '../../../platform/workspace/common/workspace.js';\nimport { MenuService } from '../../../platform/actions/common/menuService.js';\nimport { IMarkerDecorationsService } from '../../common/services/markersDecorationService.js';\nimport { MarkerDecorationsService } from '../../common/services/markerDecorationsServiceImpl.js';\nimport { IAccessibilityService } from '../../../platform/accessibility/common/accessibility.js';\nimport { ILayoutService } from '../../../platform/layout/browser/layoutService.js';\nimport { getSingletonServiceDescriptors } from '../../../platform/instantiation/common/extensions.js';\nimport { AccessibilityService } from '../../../platform/accessibility/common/accessibilityService.js';\nimport { IClipboardService } from '../../../platform/clipboard/common/clipboardService.js';\nimport { BrowserClipboardService } from '../../../platform/clipboard/browser/clipboardService.js';\nimport { IUndoRedoService } from '../../../platform/undoRedo/common/undoRedo.js';\nimport { UndoRedoService } from '../../../platform/undoRedo/common/undoRedoService.js';\nimport { StandaloneQuickInputServiceImpl } from './quickInput/standaloneQuickInputServiceImpl.js';\nimport { IQuickInputService } from '../../../platform/quickinput/common/quickInput.js';\nexport var StaticServices;\n(function (StaticServices) {\n  const _serviceCollection = new ServiceCollection();\n  class LazyStaticService {\n    constructor(serviceId, factory) {\n      this._serviceId = serviceId;\n      this._factory = factory;\n      this._value = null;\n    }\n    get id() {\n      return this._serviceId;\n    }\n    get(overrides) {\n      if (!this._value) {\n        if (overrides) {\n          this._value = overrides[this._serviceId.toString()];\n        }\n        if (!this._value) {\n          this._value = this._factory(overrides);\n        }\n        if (!this._value) {\n          throw new Error('Service ' + this._serviceId + ' is missing!');\n        }\n        _serviceCollection.set(this._serviceId, this._value);\n      }\n      return this._value;\n    }\n  }\n  StaticServices.LazyStaticService = LazyStaticService;\n  let _all = [];\n  function define(serviceId, factory) {\n    let r = new LazyStaticService(serviceId, factory);\n    _all.push(r);\n    return r;\n  }\n  function init(overrides) {\n    // Create a fresh service collection\n    let result = new ServiceCollection();\n    // make sure to add all services that use `registerSingleton`\n    for (const [id, descriptor] of getSingletonServiceDescriptors()) {\n      result.set(id, descriptor);\n    }\n    // Initialize the service collection with the overrides\n    for (let serviceId in overrides) {\n      if (overrides.hasOwnProperty(serviceId)) {\n        result.set(createDecorator(serviceId), overrides[serviceId]);\n      }\n    }\n    // Make sure the same static services are present in all service collections\n    _all.forEach(service => result.set(service.id, service.get(overrides)));\n    // Ensure the collection gets the correct instantiation service\n    let instantiationService = new InstantiationService(result, true);\n    result.set(IInstantiationService, instantiationService);\n    return [result, instantiationService];\n  }\n  StaticServices.init = init;\n  StaticServices.instantiationService = define(IInstantiationService, () => new InstantiationService(_serviceCollection, true));\n  const configurationServiceImpl = new SimpleConfigurationService();\n  StaticServices.configurationService = define(IConfigurationService, () => configurationServiceImpl);\n  StaticServices.resourceConfigurationService = define(ITextResourceConfigurationService, () => new SimpleResourceConfigurationService(configurationServiceImpl));\n  StaticServices.resourcePropertiesService = define(ITextResourcePropertiesService, () => new SimpleResourcePropertiesService(configurationServiceImpl));\n  StaticServices.contextService = define(IWorkspaceContextService, () => new SimpleWorkspaceContextService());\n  StaticServices.labelService = define(ILabelService, () => new SimpleUriLabelService());\n  StaticServices.telemetryService = define(ITelemetryService, () => new StandaloneTelemetryService());\n  StaticServices.dialogService = define(IDialogService, () => new SimpleDialogService());\n  StaticServices.notificationService = define(INotificationService, () => new SimpleNotificationService());\n  StaticServices.markerService = define(IMarkerService, () => new MarkerService());\n  StaticServices.modeService = define(IModeService, o => new ModeServiceImpl());\n  StaticServices.standaloneThemeService = define(IStandaloneThemeService, () => new StandaloneThemeServiceImpl());\n  StaticServices.logService = define(ILogService, () => new ConsoleLogService());\n  StaticServices.undoRedoService = define(IUndoRedoService, o => new UndoRedoService(StaticServices.dialogService.get(o), StaticServices.notificationService.get(o)));\n  StaticServices.modelService = define(IModelService, o => new ModelServiceImpl(StaticServices.configurationService.get(o), StaticServices.resourcePropertiesService.get(o), StaticServices.standaloneThemeService.get(o), StaticServices.logService.get(o), StaticServices.undoRedoService.get(o)));\n  StaticServices.markerDecorationsService = define(IMarkerDecorationsService, o => new MarkerDecorationsService(StaticServices.modelService.get(o), StaticServices.markerService.get(o)));\n  StaticServices.codeEditorService = define(ICodeEditorService, o => new StandaloneCodeEditorServiceImpl(StaticServices.standaloneThemeService.get(o)));\n  StaticServices.editorProgressService = define(IEditorProgressService, () => new SimpleEditorProgressService());\n  StaticServices.storageService = define(IStorageService, () => new InMemoryStorageService());\n  StaticServices.editorWorkerService = define(IEditorWorkerService, o => new EditorWorkerServiceImpl(StaticServices.modelService.get(o), StaticServices.resourceConfigurationService.get(o), StaticServices.logService.get(o)));\n})(StaticServices || (StaticServices = {}));\nexport class DynamicStandaloneServices extends Disposable {\n  constructor(domElement, overrides) {\n    super();\n    const [_serviceCollection, _instantiationService] = StaticServices.init(overrides);\n    this._serviceCollection = _serviceCollection;\n    this._instantiationService = _instantiationService;\n    const configurationService = this.get(IConfigurationService);\n    const notificationService = this.get(INotificationService);\n    const telemetryService = this.get(ITelemetryService);\n    const themeService = this.get(IThemeService);\n    const logService = this.get(ILogService);\n    let ensure = (serviceId, factory) => {\n      let value = null;\n      if (overrides) {\n        value = overrides[serviceId.toString()];\n      }\n      if (!value) {\n        value = factory();\n      }\n      this._serviceCollection.set(serviceId, value);\n      return value;\n    };\n    let contextKeyService = ensure(IContextKeyService, () => this._register(new ContextKeyService(configurationService)));\n    ensure(IAccessibilityService, () => new AccessibilityService(contextKeyService, configurationService));\n    ensure(IListService, () => new ListService(themeService));\n    let commandService = ensure(ICommandService, () => new StandaloneCommandService(this._instantiationService));\n    let keybindingService = ensure(IKeybindingService, () => this._register(new StandaloneKeybindingService(contextKeyService, commandService, telemetryService, notificationService, logService, domElement)));\n    let layoutService = ensure(ILayoutService, () => new SimpleLayoutService(StaticServices.codeEditorService.get(ICodeEditorService), domElement));\n    ensure(IQuickInputService, () => new StandaloneQuickInputServiceImpl(_instantiationService, StaticServices.codeEditorService.get(ICodeEditorService)));\n    let contextViewService = ensure(IContextViewService, () => this._register(new ContextViewService(layoutService)));\n    ensure(IClipboardService, () => new BrowserClipboardService());\n    ensure(IContextMenuService, () => {\n      const contextMenuService = new ContextMenuService(telemetryService, notificationService, contextViewService, keybindingService, themeService);\n      contextMenuService.configure({\n        blockMouse: false\n      }); // we do not want that in the standalone editor\n      return this._register(contextMenuService);\n    });\n    ensure(IMenuService, () => new MenuService(commandService));\n    ensure(IBulkEditService, () => new SimpleBulkEditService(StaticServices.modelService.get(IModelService)));\n  }\n  get(serviceId) {\n    let r = this._serviceCollection.get(serviceId);\n    if (!r) {\n      throw new Error('Missing service ' + serviceId);\n    }\n    return r;\n  }\n  set(serviceId, instance) {\n    this._serviceCollection.set(serviceId, instance);\n  }\n  has(serviceId) {\n    return this._serviceCollection.has(serviceId);\n  }\n}","map":{"version":3,"names":["Disposable","IBulkEditService","ICodeEditorService","IEditorWorkerService","EditorWorkerServiceImpl","IModeService","ModeServiceImpl","IModelService","ModelServiceImpl","ITextResourceConfigurationService","ITextResourcePropertiesService","SimpleBulkEditService","SimpleConfigurationService","SimpleDialogService","SimpleNotificationService","SimpleEditorProgressService","SimpleResourceConfigurationService","SimpleResourcePropertiesService","SimpleUriLabelService","SimpleWorkspaceContextService","StandaloneCommandService","StandaloneKeybindingService","StandaloneTelemetryService","SimpleLayoutService","StandaloneCodeEditorServiceImpl","StandaloneThemeServiceImpl","IStandaloneThemeService","IMenuService","ICommandService","IConfigurationService","ContextKeyService","IContextKeyService","ContextMenuService","IContextMenuService","IContextViewService","ContextViewService","IDialogService","IInstantiationService","createDecorator","InstantiationService","ServiceCollection","IKeybindingService","ILabelService","IListService","ListService","ConsoleLogService","ILogService","MarkerService","IMarkerService","INotificationService","IEditorProgressService","IStorageService","InMemoryStorageService","ITelemetryService","IThemeService","IWorkspaceContextService","MenuService","IMarkerDecorationsService","MarkerDecorationsService","IAccessibilityService","ILayoutService","getSingletonServiceDescriptors","AccessibilityService","IClipboardService","BrowserClipboardService","IUndoRedoService","UndoRedoService","StandaloneQuickInputServiceImpl","IQuickInputService","StaticServices","_serviceCollection","LazyStaticService","constructor","serviceId","factory","_serviceId","_factory","_value","id","get","overrides","toString","Error","set","_all","define","r","push","init","result","descriptor","hasOwnProperty","forEach","service","instantiationService","configurationServiceImpl","configurationService","resourceConfigurationService","resourcePropertiesService","contextService","labelService","telemetryService","dialogService","notificationService","markerService","modeService","o","standaloneThemeService","logService","undoRedoService","modelService","markerDecorationsService","codeEditorService","editorProgressService","storageService","editorWorkerService","DynamicStandaloneServices","domElement","_instantiationService","themeService","ensure","value","contextKeyService","_register","commandService","keybindingService","layoutService","contextViewService","contextMenuService","configure","blockMouse","instance","has"],"sources":["C:/Users/Administrator/Desktop/sqllineage-master/sqllineagejs/node_modules/monaco-editor/esm/vs/editor/standalone/browser/standaloneServices.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Disposable } from '../../../base/common/lifecycle.js';\r\nimport { IBulkEditService } from '../../browser/services/bulkEditService.js';\r\nimport { ICodeEditorService } from '../../browser/services/codeEditorService.js';\r\nimport { IEditorWorkerService } from '../../common/services/editorWorkerService.js';\r\nimport { EditorWorkerServiceImpl } from '../../common/services/editorWorkerServiceImpl.js';\r\nimport { IModeService } from '../../common/services/modeService.js';\r\nimport { ModeServiceImpl } from '../../common/services/modeServiceImpl.js';\r\nimport { IModelService } from '../../common/services/modelService.js';\r\nimport { ModelServiceImpl } from '../../common/services/modelServiceImpl.js';\r\nimport { ITextResourceConfigurationService, ITextResourcePropertiesService } from '../../common/services/textResourceConfigurationService.js';\r\nimport { SimpleBulkEditService, SimpleConfigurationService, SimpleDialogService, SimpleNotificationService, SimpleEditorProgressService, SimpleResourceConfigurationService, SimpleResourcePropertiesService, SimpleUriLabelService, SimpleWorkspaceContextService, StandaloneCommandService, StandaloneKeybindingService, StandaloneTelemetryService, SimpleLayoutService } from './simpleServices.js';\r\nimport { StandaloneCodeEditorServiceImpl } from './standaloneCodeServiceImpl.js';\r\nimport { StandaloneThemeServiceImpl } from './standaloneThemeServiceImpl.js';\r\nimport { IStandaloneThemeService } from '../common/standaloneThemeService.js';\r\nimport { IMenuService } from '../../../platform/actions/common/actions.js';\r\nimport { ICommandService } from '../../../platform/commands/common/commands.js';\r\nimport { IConfigurationService } from '../../../platform/configuration/common/configuration.js';\r\nimport { ContextKeyService } from '../../../platform/contextkey/browser/contextKeyService.js';\r\nimport { IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { ContextMenuService } from '../../../platform/contextview/browser/contextMenuService.js';\r\nimport { IContextMenuService, IContextViewService } from '../../../platform/contextview/browser/contextView.js';\r\nimport { ContextViewService } from '../../../platform/contextview/browser/contextViewService.js';\r\nimport { IDialogService } from '../../../platform/dialogs/common/dialogs.js';\r\nimport { IInstantiationService, createDecorator } from '../../../platform/instantiation/common/instantiation.js';\r\nimport { InstantiationService } from '../../../platform/instantiation/common/instantiationService.js';\r\nimport { ServiceCollection } from '../../../platform/instantiation/common/serviceCollection.js';\r\nimport { IKeybindingService } from '../../../platform/keybinding/common/keybinding.js';\r\nimport { ILabelService } from '../../../platform/label/common/label.js';\r\nimport { IListService, ListService } from '../../../platform/list/browser/listService.js';\r\nimport { ConsoleLogService, ILogService } from '../../../platform/log/common/log.js';\r\nimport { MarkerService } from '../../../platform/markers/common/markerService.js';\r\nimport { IMarkerService } from '../../../platform/markers/common/markers.js';\r\nimport { INotificationService } from '../../../platform/notification/common/notification.js';\r\nimport { IEditorProgressService } from '../../../platform/progress/common/progress.js';\r\nimport { IStorageService, InMemoryStorageService } from '../../../platform/storage/common/storage.js';\r\nimport { ITelemetryService } from '../../../platform/telemetry/common/telemetry.js';\r\nimport { IThemeService } from '../../../platform/theme/common/themeService.js';\r\nimport { IWorkspaceContextService } from '../../../platform/workspace/common/workspace.js';\r\nimport { MenuService } from '../../../platform/actions/common/menuService.js';\r\nimport { IMarkerDecorationsService } from '../../common/services/markersDecorationService.js';\r\nimport { MarkerDecorationsService } from '../../common/services/markerDecorationsServiceImpl.js';\r\nimport { IAccessibilityService } from '../../../platform/accessibility/common/accessibility.js';\r\nimport { ILayoutService } from '../../../platform/layout/browser/layoutService.js';\r\nimport { getSingletonServiceDescriptors } from '../../../platform/instantiation/common/extensions.js';\r\nimport { AccessibilityService } from '../../../platform/accessibility/common/accessibilityService.js';\r\nimport { IClipboardService } from '../../../platform/clipboard/common/clipboardService.js';\r\nimport { BrowserClipboardService } from '../../../platform/clipboard/browser/clipboardService.js';\r\nimport { IUndoRedoService } from '../../../platform/undoRedo/common/undoRedo.js';\r\nimport { UndoRedoService } from '../../../platform/undoRedo/common/undoRedoService.js';\r\nimport { StandaloneQuickInputServiceImpl } from './quickInput/standaloneQuickInputServiceImpl.js';\r\nimport { IQuickInputService } from '../../../platform/quickinput/common/quickInput.js';\r\nexport var StaticServices;\r\n(function (StaticServices) {\r\n    const _serviceCollection = new ServiceCollection();\r\n    class LazyStaticService {\r\n        constructor(serviceId, factory) {\r\n            this._serviceId = serviceId;\r\n            this._factory = factory;\r\n            this._value = null;\r\n        }\r\n        get id() { return this._serviceId; }\r\n        get(overrides) {\r\n            if (!this._value) {\r\n                if (overrides) {\r\n                    this._value = overrides[this._serviceId.toString()];\r\n                }\r\n                if (!this._value) {\r\n                    this._value = this._factory(overrides);\r\n                }\r\n                if (!this._value) {\r\n                    throw new Error('Service ' + this._serviceId + ' is missing!');\r\n                }\r\n                _serviceCollection.set(this._serviceId, this._value);\r\n            }\r\n            return this._value;\r\n        }\r\n    }\r\n    StaticServices.LazyStaticService = LazyStaticService;\r\n    let _all = [];\r\n    function define(serviceId, factory) {\r\n        let r = new LazyStaticService(serviceId, factory);\r\n        _all.push(r);\r\n        return r;\r\n    }\r\n    function init(overrides) {\r\n        // Create a fresh service collection\r\n        let result = new ServiceCollection();\r\n        // make sure to add all services that use `registerSingleton`\r\n        for (const [id, descriptor] of getSingletonServiceDescriptors()) {\r\n            result.set(id, descriptor);\r\n        }\r\n        // Initialize the service collection with the overrides\r\n        for (let serviceId in overrides) {\r\n            if (overrides.hasOwnProperty(serviceId)) {\r\n                result.set(createDecorator(serviceId), overrides[serviceId]);\r\n            }\r\n        }\r\n        // Make sure the same static services are present in all service collections\r\n        _all.forEach(service => result.set(service.id, service.get(overrides)));\r\n        // Ensure the collection gets the correct instantiation service\r\n        let instantiationService = new InstantiationService(result, true);\r\n        result.set(IInstantiationService, instantiationService);\r\n        return [result, instantiationService];\r\n    }\r\n    StaticServices.init = init;\r\n    StaticServices.instantiationService = define(IInstantiationService, () => new InstantiationService(_serviceCollection, true));\r\n    const configurationServiceImpl = new SimpleConfigurationService();\r\n    StaticServices.configurationService = define(IConfigurationService, () => configurationServiceImpl);\r\n    StaticServices.resourceConfigurationService = define(ITextResourceConfigurationService, () => new SimpleResourceConfigurationService(configurationServiceImpl));\r\n    StaticServices.resourcePropertiesService = define(ITextResourcePropertiesService, () => new SimpleResourcePropertiesService(configurationServiceImpl));\r\n    StaticServices.contextService = define(IWorkspaceContextService, () => new SimpleWorkspaceContextService());\r\n    StaticServices.labelService = define(ILabelService, () => new SimpleUriLabelService());\r\n    StaticServices.telemetryService = define(ITelemetryService, () => new StandaloneTelemetryService());\r\n    StaticServices.dialogService = define(IDialogService, () => new SimpleDialogService());\r\n    StaticServices.notificationService = define(INotificationService, () => new SimpleNotificationService());\r\n    StaticServices.markerService = define(IMarkerService, () => new MarkerService());\r\n    StaticServices.modeService = define(IModeService, (o) => new ModeServiceImpl());\r\n    StaticServices.standaloneThemeService = define(IStandaloneThemeService, () => new StandaloneThemeServiceImpl());\r\n    StaticServices.logService = define(ILogService, () => new ConsoleLogService());\r\n    StaticServices.undoRedoService = define(IUndoRedoService, (o) => new UndoRedoService(StaticServices.dialogService.get(o), StaticServices.notificationService.get(o)));\r\n    StaticServices.modelService = define(IModelService, (o) => new ModelServiceImpl(StaticServices.configurationService.get(o), StaticServices.resourcePropertiesService.get(o), StaticServices.standaloneThemeService.get(o), StaticServices.logService.get(o), StaticServices.undoRedoService.get(o)));\r\n    StaticServices.markerDecorationsService = define(IMarkerDecorationsService, (o) => new MarkerDecorationsService(StaticServices.modelService.get(o), StaticServices.markerService.get(o)));\r\n    StaticServices.codeEditorService = define(ICodeEditorService, (o) => new StandaloneCodeEditorServiceImpl(StaticServices.standaloneThemeService.get(o)));\r\n    StaticServices.editorProgressService = define(IEditorProgressService, () => new SimpleEditorProgressService());\r\n    StaticServices.storageService = define(IStorageService, () => new InMemoryStorageService());\r\n    StaticServices.editorWorkerService = define(IEditorWorkerService, (o) => new EditorWorkerServiceImpl(StaticServices.modelService.get(o), StaticServices.resourceConfigurationService.get(o), StaticServices.logService.get(o)));\r\n})(StaticServices || (StaticServices = {}));\r\nexport class DynamicStandaloneServices extends Disposable {\r\n    constructor(domElement, overrides) {\r\n        super();\r\n        const [_serviceCollection, _instantiationService] = StaticServices.init(overrides);\r\n        this._serviceCollection = _serviceCollection;\r\n        this._instantiationService = _instantiationService;\r\n        const configurationService = this.get(IConfigurationService);\r\n        const notificationService = this.get(INotificationService);\r\n        const telemetryService = this.get(ITelemetryService);\r\n        const themeService = this.get(IThemeService);\r\n        const logService = this.get(ILogService);\r\n        let ensure = (serviceId, factory) => {\r\n            let value = null;\r\n            if (overrides) {\r\n                value = overrides[serviceId.toString()];\r\n            }\r\n            if (!value) {\r\n                value = factory();\r\n            }\r\n            this._serviceCollection.set(serviceId, value);\r\n            return value;\r\n        };\r\n        let contextKeyService = ensure(IContextKeyService, () => this._register(new ContextKeyService(configurationService)));\r\n        ensure(IAccessibilityService, () => new AccessibilityService(contextKeyService, configurationService));\r\n        ensure(IListService, () => new ListService(themeService));\r\n        let commandService = ensure(ICommandService, () => new StandaloneCommandService(this._instantiationService));\r\n        let keybindingService = ensure(IKeybindingService, () => this._register(new StandaloneKeybindingService(contextKeyService, commandService, telemetryService, notificationService, logService, domElement)));\r\n        let layoutService = ensure(ILayoutService, () => new SimpleLayoutService(StaticServices.codeEditorService.get(ICodeEditorService), domElement));\r\n        ensure(IQuickInputService, () => new StandaloneQuickInputServiceImpl(_instantiationService, StaticServices.codeEditorService.get(ICodeEditorService)));\r\n        let contextViewService = ensure(IContextViewService, () => this._register(new ContextViewService(layoutService)));\r\n        ensure(IClipboardService, () => new BrowserClipboardService());\r\n        ensure(IContextMenuService, () => {\r\n            const contextMenuService = new ContextMenuService(telemetryService, notificationService, contextViewService, keybindingService, themeService);\r\n            contextMenuService.configure({ blockMouse: false }); // we do not want that in the standalone editor\r\n            return this._register(contextMenuService);\r\n        });\r\n        ensure(IMenuService, () => new MenuService(commandService));\r\n        ensure(IBulkEditService, () => new SimpleBulkEditService(StaticServices.modelService.get(IModelService)));\r\n    }\r\n    get(serviceId) {\r\n        let r = this._serviceCollection.get(serviceId);\r\n        if (!r) {\r\n            throw new Error('Missing service ' + serviceId);\r\n        }\r\n        return r;\r\n    }\r\n    set(serviceId, instance) {\r\n        this._serviceCollection.set(serviceId, instance);\r\n    }\r\n    has(serviceId) {\r\n        return this._serviceCollection.has(serviceId);\r\n    }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}