{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nlet hasDifferentOriginAncestorFlag = false;\nlet sameOriginWindowChainCache = null;\nfunction getParentWindowIfSameOrigin(w) {\n  if (!w.parent || w.parent === w) {\n    return null;\n  }\n  // Cannot really tell if we have access to the parent window unless we try to access something in it\n  try {\n    let location = w.location;\n    let parentLocation = w.parent.location;\n    if (location.origin !== 'null' && parentLocation.origin !== 'null') {\n      if (location.protocol !== parentLocation.protocol || location.hostname !== parentLocation.hostname || location.port !== parentLocation.port) {\n        hasDifferentOriginAncestorFlag = true;\n        return null;\n      }\n    }\n  } catch (e) {\n    hasDifferentOriginAncestorFlag = true;\n    return null;\n  }\n  return w.parent;\n}\nexport class IframeUtils {\n  /**\r\n   * Returns a chain of embedded windows with the same origin (which can be accessed programmatically).\r\n   * Having a chain of length 1 might mean that the current execution environment is running outside of an iframe or inside an iframe embedded in a window with a different origin.\r\n   * To distinguish if at one point the current execution environment is running inside a window with a different origin, see hasDifferentOriginAncestor()\r\n   */\n  static getSameOriginWindowChain() {\n    if (!sameOriginWindowChainCache) {\n      sameOriginWindowChainCache = [];\n      let w = window;\n      let parent;\n      do {\n        parent = getParentWindowIfSameOrigin(w);\n        if (parent) {\n          sameOriginWindowChainCache.push({\n            window: w,\n            iframeElement: w.frameElement || null\n          });\n        } else {\n          sameOriginWindowChainCache.push({\n            window: w,\n            iframeElement: null\n          });\n        }\n        w = parent;\n      } while (w);\n    }\n    return sameOriginWindowChainCache.slice(0);\n  }\n  /**\r\n   * Returns true if the current execution environment is chained in a list of iframes which at one point ends in a window with a different origin.\r\n   * Returns false if the current execution environment is not running inside an iframe or if the entire chain of iframes have the same origin.\r\n   */\n  static hasDifferentOriginAncestor() {\n    if (!sameOriginWindowChainCache) {\n      this.getSameOriginWindowChain();\n    }\n    return hasDifferentOriginAncestorFlag;\n  }\n  /**\r\n   * Returns the position of `childWindow` relative to `ancestorWindow`\r\n   */\n  static getPositionOfChildWindowRelativeToAncestorWindow(childWindow, ancestorWindow) {\n    if (!ancestorWindow || childWindow === ancestorWindow) {\n      return {\n        top: 0,\n        left: 0\n      };\n    }\n    let top = 0,\n      left = 0;\n    let windowChain = this.getSameOriginWindowChain();\n    for (const windowChainEl of windowChain) {\n      top += windowChainEl.window.scrollY;\n      left += windowChainEl.window.scrollX;\n      if (windowChainEl.window === ancestorWindow) {\n        break;\n      }\n      if (!windowChainEl.iframeElement) {\n        break;\n      }\n      let boundingRect = windowChainEl.iframeElement.getBoundingClientRect();\n      top += boundingRect.top;\n      left += boundingRect.left;\n    }\n    return {\n      top: top,\n      left: left\n    };\n  }\n}","map":{"version":3,"names":["hasDifferentOriginAncestorFlag","sameOriginWindowChainCache","getParentWindowIfSameOrigin","w","parent","location","parentLocation","origin","protocol","hostname","port","e","IframeUtils","getSameOriginWindowChain","window","push","iframeElement","frameElement","slice","hasDifferentOriginAncestor","getPositionOfChildWindowRelativeToAncestorWindow","childWindow","ancestorWindow","top","left","windowChain","windowChainEl","scrollY","scrollX","boundingRect","getBoundingClientRect"],"sources":["C:/Users/Administrator/Desktop/sqllineage-master/sqllineagejs/node_modules/monaco-editor/esm/vs/base/browser/iframe.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nlet hasDifferentOriginAncestorFlag = false;\r\nlet sameOriginWindowChainCache = null;\r\nfunction getParentWindowIfSameOrigin(w) {\r\n    if (!w.parent || w.parent === w) {\r\n        return null;\r\n    }\r\n    // Cannot really tell if we have access to the parent window unless we try to access something in it\r\n    try {\r\n        let location = w.location;\r\n        let parentLocation = w.parent.location;\r\n        if (location.origin !== 'null' && parentLocation.origin !== 'null') {\r\n            if (location.protocol !== parentLocation.protocol || location.hostname !== parentLocation.hostname || location.port !== parentLocation.port) {\r\n                hasDifferentOriginAncestorFlag = true;\r\n                return null;\r\n            }\r\n        }\r\n    }\r\n    catch (e) {\r\n        hasDifferentOriginAncestorFlag = true;\r\n        return null;\r\n    }\r\n    return w.parent;\r\n}\r\nexport class IframeUtils {\r\n    /**\r\n     * Returns a chain of embedded windows with the same origin (which can be accessed programmatically).\r\n     * Having a chain of length 1 might mean that the current execution environment is running outside of an iframe or inside an iframe embedded in a window with a different origin.\r\n     * To distinguish if at one point the current execution environment is running inside a window with a different origin, see hasDifferentOriginAncestor()\r\n     */\r\n    static getSameOriginWindowChain() {\r\n        if (!sameOriginWindowChainCache) {\r\n            sameOriginWindowChainCache = [];\r\n            let w = window;\r\n            let parent;\r\n            do {\r\n                parent = getParentWindowIfSameOrigin(w);\r\n                if (parent) {\r\n                    sameOriginWindowChainCache.push({\r\n                        window: w,\r\n                        iframeElement: w.frameElement || null\r\n                    });\r\n                }\r\n                else {\r\n                    sameOriginWindowChainCache.push({\r\n                        window: w,\r\n                        iframeElement: null\r\n                    });\r\n                }\r\n                w = parent;\r\n            } while (w);\r\n        }\r\n        return sameOriginWindowChainCache.slice(0);\r\n    }\r\n    /**\r\n     * Returns true if the current execution environment is chained in a list of iframes which at one point ends in a window with a different origin.\r\n     * Returns false if the current execution environment is not running inside an iframe or if the entire chain of iframes have the same origin.\r\n     */\r\n    static hasDifferentOriginAncestor() {\r\n        if (!sameOriginWindowChainCache) {\r\n            this.getSameOriginWindowChain();\r\n        }\r\n        return hasDifferentOriginAncestorFlag;\r\n    }\r\n    /**\r\n     * Returns the position of `childWindow` relative to `ancestorWindow`\r\n     */\r\n    static getPositionOfChildWindowRelativeToAncestorWindow(childWindow, ancestorWindow) {\r\n        if (!ancestorWindow || childWindow === ancestorWindow) {\r\n            return {\r\n                top: 0,\r\n                left: 0\r\n            };\r\n        }\r\n        let top = 0, left = 0;\r\n        let windowChain = this.getSameOriginWindowChain();\r\n        for (const windowChainEl of windowChain) {\r\n            top += windowChainEl.window.scrollY;\r\n            left += windowChainEl.window.scrollX;\r\n            if (windowChainEl.window === ancestorWindow) {\r\n                break;\r\n            }\r\n            if (!windowChainEl.iframeElement) {\r\n                break;\r\n            }\r\n            let boundingRect = windowChainEl.iframeElement.getBoundingClientRect();\r\n            top += boundingRect.top;\r\n            left += boundingRect.left;\r\n        }\r\n        return {\r\n            top: top,\r\n            left: left\r\n        };\r\n    }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}