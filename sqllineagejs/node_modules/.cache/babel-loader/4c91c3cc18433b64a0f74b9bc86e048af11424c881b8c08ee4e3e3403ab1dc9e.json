{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport Severity from '../../../base/common/severity.js';\nimport { registerThemingParticipant } from '../../theme/common/themeService.js';\nimport { problemsErrorIconForeground, problemsInfoIconForeground, problemsWarningIconForeground } from '../../theme/common/colorRegistry.js';\nimport { Codicon } from '../../../base/common/codicons.js';\nexport var SeverityIcon;\n(function (SeverityIcon) {\n  function className(severity) {\n    switch (severity) {\n      case Severity.Ignore:\n        return 'severity-ignore ' + Codicon.info.classNames;\n      case Severity.Info:\n        return Codicon.info.classNames;\n      case Severity.Warning:\n        return Codicon.warning.classNames;\n      case Severity.Error:\n        return Codicon.error.classNames;\n      default:\n        return '';\n    }\n  }\n  SeverityIcon.className = className;\n})(SeverityIcon || (SeverityIcon = {}));\nregisterThemingParticipant((theme, collector) => {\n  const errorIconForeground = theme.getColor(problemsErrorIconForeground);\n  if (errorIconForeground) {\n    const errorCodiconSelector = Codicon.error.cssSelector;\n    collector.addRule(\"\\n\\t\\t\\t.monaco-editor .zone-widget \".concat(errorCodiconSelector, \",\\n\\t\\t\\t.markers-panel .marker-icon\").concat(errorCodiconSelector, \",\\n\\t\\t\\t.extensions-viewlet > .extensions \").concat(errorCodiconSelector, \" {\\n\\t\\t\\t\\tcolor: \").concat(errorIconForeground, \";\\n\\t\\t\\t}\\n\\t\\t\"));\n  }\n  const warningIconForeground = theme.getColor(problemsWarningIconForeground);\n  if (warningIconForeground) {\n    const warningCodiconSelector = Codicon.warning.cssSelector;\n    collector.addRule(\"\\n\\t\\t\\t.monaco-editor .zone-widget \".concat(warningCodiconSelector, \",\\n\\t\\t\\t.markers-panel .marker-icon\").concat(warningCodiconSelector, \",\\n\\t\\t\\t.extensions-viewlet > .extensions \").concat(warningCodiconSelector, \",\\n\\t\\t\\t.extension-editor \").concat(warningCodiconSelector, \" {\\n\\t\\t\\t\\tcolor: \").concat(warningIconForeground, \";\\n\\t\\t\\t}\\n\\t\\t\"));\n  }\n  const infoIconForeground = theme.getColor(problemsInfoIconForeground);\n  if (infoIconForeground) {\n    const infoCodiconSelector = Codicon.info.cssSelector;\n    collector.addRule(\"\\n\\t\\t\\t.monaco-editor .zone-widget \".concat(infoCodiconSelector, \",\\n\\t\\t\\t.markers-panel .marker-icon\").concat(infoCodiconSelector, \",\\n\\t\\t\\t.extensions-viewlet > .extensions \").concat(infoCodiconSelector, \",\\n\\t\\t\\t.extension-editor \").concat(infoCodiconSelector, \" {\\n\\t\\t\\t\\tcolor: \").concat(infoIconForeground, \";\\n\\t\\t\\t}\\n\\t\\t\"));\n  }\n});","map":{"version":3,"names":["Severity","registerThemingParticipant","problemsErrorIconForeground","problemsInfoIconForeground","problemsWarningIconForeground","Codicon","SeverityIcon","className","severity","Ignore","info","classNames","Info","Warning","warning","Error","error","theme","collector","errorIconForeground","getColor","errorCodiconSelector","cssSelector","addRule","concat","warningIconForeground","warningCodiconSelector","infoIconForeground","infoCodiconSelector"],"sources":["C:/Users/Administrator/Desktop/sqllineage-master/sqllineagejs/node_modules/monaco-editor/esm/vs/platform/severityIcon/common/severityIcon.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport Severity from '../../../base/common/severity.js';\r\nimport { registerThemingParticipant } from '../../theme/common/themeService.js';\r\nimport { problemsErrorIconForeground, problemsInfoIconForeground, problemsWarningIconForeground } from '../../theme/common/colorRegistry.js';\r\nimport { Codicon } from '../../../base/common/codicons.js';\r\nexport var SeverityIcon;\r\n(function (SeverityIcon) {\r\n    function className(severity) {\r\n        switch (severity) {\r\n            case Severity.Ignore:\r\n                return 'severity-ignore ' + Codicon.info.classNames;\r\n            case Severity.Info:\r\n                return Codicon.info.classNames;\r\n            case Severity.Warning:\r\n                return Codicon.warning.classNames;\r\n            case Severity.Error:\r\n                return Codicon.error.classNames;\r\n            default:\r\n                return '';\r\n        }\r\n    }\r\n    SeverityIcon.className = className;\r\n})(SeverityIcon || (SeverityIcon = {}));\r\nregisterThemingParticipant((theme, collector) => {\r\n    const errorIconForeground = theme.getColor(problemsErrorIconForeground);\r\n    if (errorIconForeground) {\r\n        const errorCodiconSelector = Codicon.error.cssSelector;\r\n        collector.addRule(`\n\t\t\t.monaco-editor .zone-widget ${errorCodiconSelector},\n\t\t\t.markers-panel .marker-icon${errorCodiconSelector},\n\t\t\t.extensions-viewlet > .extensions ${errorCodiconSelector} {\n\t\t\t\tcolor: ${errorIconForeground};\n\t\t\t}\n\t\t`);\r\n    }\r\n    const warningIconForeground = theme.getColor(problemsWarningIconForeground);\r\n    if (warningIconForeground) {\r\n        const warningCodiconSelector = Codicon.warning.cssSelector;\r\n        collector.addRule(`\n\t\t\t.monaco-editor .zone-widget ${warningCodiconSelector},\n\t\t\t.markers-panel .marker-icon${warningCodiconSelector},\n\t\t\t.extensions-viewlet > .extensions ${warningCodiconSelector},\n\t\t\t.extension-editor ${warningCodiconSelector} {\n\t\t\t\tcolor: ${warningIconForeground};\n\t\t\t}\n\t\t`);\r\n    }\r\n    const infoIconForeground = theme.getColor(problemsInfoIconForeground);\r\n    if (infoIconForeground) {\r\n        const infoCodiconSelector = Codicon.info.cssSelector;\r\n        collector.addRule(`\n\t\t\t.monaco-editor .zone-widget ${infoCodiconSelector},\n\t\t\t.markers-panel .marker-icon${infoCodiconSelector},\n\t\t\t.extensions-viewlet > .extensions ${infoCodiconSelector},\n\t\t\t.extension-editor ${infoCodiconSelector} {\n\t\t\t\tcolor: ${infoIconForeground};\n\t\t\t}\n\t\t`);\r\n    }\r\n});\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAOA,QAAQ,MAAM,kCAAkC;AACvD,SAASC,0BAA0B,QAAQ,oCAAoC;AAC/E,SAASC,2BAA2B,EAAEC,0BAA0B,EAAEC,6BAA6B,QAAQ,qCAAqC;AAC5I,SAASC,OAAO,QAAQ,kCAAkC;AAC1D,OAAO,IAAIC,YAAY;AACvB,CAAC,UAAUA,YAAY,EAAE;EACrB,SAASC,SAASA,CAACC,QAAQ,EAAE;IACzB,QAAQA,QAAQ;MACZ,KAAKR,QAAQ,CAACS,MAAM;QAChB,OAAO,kBAAkB,GAAGJ,OAAO,CAACK,IAAI,CAACC,UAAU;MACvD,KAAKX,QAAQ,CAACY,IAAI;QACd,OAAOP,OAAO,CAACK,IAAI,CAACC,UAAU;MAClC,KAAKX,QAAQ,CAACa,OAAO;QACjB,OAAOR,OAAO,CAACS,OAAO,CAACH,UAAU;MACrC,KAAKX,QAAQ,CAACe,KAAK;QACf,OAAOV,OAAO,CAACW,KAAK,CAACL,UAAU;MACnC;QACI,OAAO,EAAE;IACjB;EACJ;EACAL,YAAY,CAACC,SAAS,GAAGA,SAAS;AACtC,CAAC,EAAED,YAAY,KAAKA,YAAY,GAAG,CAAC,CAAC,CAAC,CAAC;AACvCL,0BAA0B,CAAC,CAACgB,KAAK,EAAEC,SAAS,KAAK;EAC7C,MAAMC,mBAAmB,GAAGF,KAAK,CAACG,QAAQ,CAAClB,2BAA2B,CAAC;EACvE,IAAIiB,mBAAmB,EAAE;IACrB,MAAME,oBAAoB,GAAGhB,OAAO,CAACW,KAAK,CAACM,WAAW;IACtDJ,SAAS,CAACK,OAAO,wCAAAC,MAAA,CACQH,oBAAoB,0CAAAG,MAAA,CACrBH,oBAAoB,iDAAAG,MAAA,CACbH,oBAAoB,yBAAAG,MAAA,CAC9CL,mBAAmB,qBAE7B,CAAC;EACA;EACA,MAAMM,qBAAqB,GAAGR,KAAK,CAACG,QAAQ,CAAChB,6BAA6B,CAAC;EAC3E,IAAIqB,qBAAqB,EAAE;IACvB,MAAMC,sBAAsB,GAAGrB,OAAO,CAACS,OAAO,CAACQ,WAAW;IAC1DJ,SAAS,CAACK,OAAO,wCAAAC,MAAA,CACQE,sBAAsB,0CAAAF,MAAA,CACvBE,sBAAsB,iDAAAF,MAAA,CACfE,sBAAsB,iCAAAF,MAAA,CACtCE,sBAAsB,yBAAAF,MAAA,CAChCC,qBAAqB,qBAE/B,CAAC;EACA;EACA,MAAME,kBAAkB,GAAGV,KAAK,CAACG,QAAQ,CAACjB,0BAA0B,CAAC;EACrE,IAAIwB,kBAAkB,EAAE;IACpB,MAAMC,mBAAmB,GAAGvB,OAAO,CAACK,IAAI,CAACY,WAAW;IACpDJ,SAAS,CAACK,OAAO,wCAAAC,MAAA,CACQI,mBAAmB,0CAAAJ,MAAA,CACpBI,mBAAmB,iDAAAJ,MAAA,CACZI,mBAAmB,iCAAAJ,MAAA,CACnCI,mBAAmB,yBAAAJ,MAAA,CAC7BG,kBAAkB,qBAE5B,CAAC;EACA;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}