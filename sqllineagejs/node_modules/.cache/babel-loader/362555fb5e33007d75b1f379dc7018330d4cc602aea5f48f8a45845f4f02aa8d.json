{"ast":null,"code":"let memoizeId = 0;\nexport function createMemoizer() {\n  const memoizeKeyPrefix = \"$memoize\".concat(memoizeId++);\n  let self = undefined;\n  const result = function memoize(target, key, descriptor) {\n    let fnKey = null;\n    let fn = null;\n    if (typeof descriptor.value === 'function') {\n      fnKey = 'value';\n      fn = descriptor.value;\n      if (fn.length !== 0) {\n        console.warn('Memoize should only be used in functions with zero parameters');\n      }\n    } else if (typeof descriptor.get === 'function') {\n      fnKey = 'get';\n      fn = descriptor.get;\n    }\n    if (!fn) {\n      throw new Error('not supported');\n    }\n    const memoizeKey = \"\".concat(memoizeKeyPrefix, \":\").concat(key);\n    descriptor[fnKey] = function () {\n      self = this;\n      if (!this.hasOwnProperty(memoizeKey)) {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n        Object.defineProperty(this, memoizeKey, {\n          configurable: true,\n          enumerable: false,\n          writable: true,\n          value: fn.apply(this, args)\n        });\n      }\n      return this[memoizeKey];\n    };\n  };\n  result.clear = () => {\n    if (typeof self === 'undefined') {\n      return;\n    }\n    Object.getOwnPropertyNames(self).forEach(property => {\n      if (property.indexOf(memoizeKeyPrefix) === 0) {\n        delete self[property];\n      }\n    });\n  };\n  return result;\n}\nexport function memoize(target, key, descriptor) {\n  return createMemoizer()(target, key, descriptor);\n}","map":{"version":3,"names":["memoizeId","createMemoizer","memoizeKeyPrefix","concat","self","undefined","result","memoize","target","key","descriptor","fnKey","fn","value","length","console","warn","get","Error","memoizeKey","hasOwnProperty","_len","arguments","args","Array","_key","Object","defineProperty","configurable","enumerable","writable","apply","clear","getOwnPropertyNames","forEach","property","indexOf"],"sources":["C:/Users/Administrator/Desktop/sqllineage-master/sqllineagejs/node_modules/monaco-editor/esm/vs/base/common/decorators.js"],"sourcesContent":["let memoizeId = 0;\r\nexport function createMemoizer() {\r\n    const memoizeKeyPrefix = `$memoize${memoizeId++}`;\r\n    let self = undefined;\r\n    const result = function memoize(target, key, descriptor) {\r\n        let fnKey = null;\r\n        let fn = null;\r\n        if (typeof descriptor.value === 'function') {\r\n            fnKey = 'value';\r\n            fn = descriptor.value;\r\n            if (fn.length !== 0) {\r\n                console.warn('Memoize should only be used in functions with zero parameters');\r\n            }\r\n        }\r\n        else if (typeof descriptor.get === 'function') {\r\n            fnKey = 'get';\r\n            fn = descriptor.get;\r\n        }\r\n        if (!fn) {\r\n            throw new Error('not supported');\r\n        }\r\n        const memoizeKey = `${memoizeKeyPrefix}:${key}`;\r\n        descriptor[fnKey] = function (...args) {\r\n            self = this;\r\n            if (!this.hasOwnProperty(memoizeKey)) {\r\n                Object.defineProperty(this, memoizeKey, {\r\n                    configurable: true,\r\n                    enumerable: false,\r\n                    writable: true,\r\n                    value: fn.apply(this, args)\r\n                });\r\n            }\r\n            return this[memoizeKey];\r\n        };\r\n    };\r\n    result.clear = () => {\r\n        if (typeof self === 'undefined') {\r\n            return;\r\n        }\r\n        Object.getOwnPropertyNames(self).forEach(property => {\r\n            if (property.indexOf(memoizeKeyPrefix) === 0) {\r\n                delete self[property];\r\n            }\r\n        });\r\n    };\r\n    return result;\r\n}\r\nexport function memoize(target, key, descriptor) {\r\n    return createMemoizer()(target, key, descriptor);\r\n}\r\n"],"mappings":"AAAA,IAAIA,SAAS,GAAG,CAAC;AACjB,OAAO,SAASC,cAAcA,CAAA,EAAG;EAC7B,MAAMC,gBAAgB,cAAAC,MAAA,CAAcH,SAAS,EAAE,CAAE;EACjD,IAAII,IAAI,GAAGC,SAAS;EACpB,MAAMC,MAAM,GAAG,SAASC,OAAOA,CAACC,MAAM,EAAEC,GAAG,EAAEC,UAAU,EAAE;IACrD,IAAIC,KAAK,GAAG,IAAI;IAChB,IAAIC,EAAE,GAAG,IAAI;IACb,IAAI,OAAOF,UAAU,CAACG,KAAK,KAAK,UAAU,EAAE;MACxCF,KAAK,GAAG,OAAO;MACfC,EAAE,GAAGF,UAAU,CAACG,KAAK;MACrB,IAAID,EAAE,CAACE,MAAM,KAAK,CAAC,EAAE;QACjBC,OAAO,CAACC,IAAI,CAAC,+DAA+D,CAAC;MACjF;IACJ,CAAC,MACI,IAAI,OAAON,UAAU,CAACO,GAAG,KAAK,UAAU,EAAE;MAC3CN,KAAK,GAAG,KAAK;MACbC,EAAE,GAAGF,UAAU,CAACO,GAAG;IACvB;IACA,IAAI,CAACL,EAAE,EAAE;MACL,MAAM,IAAIM,KAAK,CAAC,eAAe,CAAC;IACpC;IACA,MAAMC,UAAU,MAAAhB,MAAA,CAAMD,gBAAgB,OAAAC,MAAA,CAAIM,GAAG,CAAE;IAC/CC,UAAU,CAACC,KAAK,CAAC,GAAG,YAAmB;MACnCP,IAAI,GAAG,IAAI;MACX,IAAI,CAAC,IAAI,CAACgB,cAAc,CAACD,UAAU,CAAC,EAAE;QAAA,SAAAE,IAAA,GAAAC,SAAA,CAAAR,MAAA,EAFTS,IAAI,OAAAC,KAAA,CAAAH,IAAA,GAAAI,IAAA,MAAAA,IAAA,GAAAJ,IAAA,EAAAI,IAAA;UAAJF,IAAI,CAAAE,IAAA,IAAAH,SAAA,CAAAG,IAAA;QAAA;QAG7BC,MAAM,CAACC,cAAc,CAAC,IAAI,EAAER,UAAU,EAAE;UACpCS,YAAY,EAAE,IAAI;UAClBC,UAAU,EAAE,KAAK;UACjBC,QAAQ,EAAE,IAAI;UACdjB,KAAK,EAAED,EAAE,CAACmB,KAAK,CAAC,IAAI,EAAER,IAAI;QAC9B,CAAC,CAAC;MACN;MACA,OAAO,IAAI,CAACJ,UAAU,CAAC;IAC3B,CAAC;EACL,CAAC;EACDb,MAAM,CAAC0B,KAAK,GAAG,MAAM;IACjB,IAAI,OAAO5B,IAAI,KAAK,WAAW,EAAE;MAC7B;IACJ;IACAsB,MAAM,CAACO,mBAAmB,CAAC7B,IAAI,CAAC,CAAC8B,OAAO,CAACC,QAAQ,IAAI;MACjD,IAAIA,QAAQ,CAACC,OAAO,CAAClC,gBAAgB,CAAC,KAAK,CAAC,EAAE;QAC1C,OAAOE,IAAI,CAAC+B,QAAQ,CAAC;MACzB;IACJ,CAAC,CAAC;EACN,CAAC;EACD,OAAO7B,MAAM;AACjB;AACA,OAAO,SAASC,OAAOA,CAACC,MAAM,EAAEC,GAAG,EAAEC,UAAU,EAAE;EAC7C,OAAOT,cAAc,CAAC,CAAC,CAACO,MAAM,EAAEC,GAAG,EAAEC,UAAU,CAAC;AACpD"},"metadata":{},"sourceType":"module","externalDependencies":[]}