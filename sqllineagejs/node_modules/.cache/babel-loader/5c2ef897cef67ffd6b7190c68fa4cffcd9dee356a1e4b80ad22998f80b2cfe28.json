{"ast":null,"code":"/**\n * marked - a markdown parser\n * Copyright (c) 2011-2020, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.marked = factory());\n})(this, function () {\n  'use strict';\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n    return arr2;\n  }\n  function _createForOfIteratorHelperLoose(o, allowArrayLike) {\n    var it;\n    if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n      if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n        if (it) o = it;\n        var i = 0;\n        return function () {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        };\n      }\n      throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n    }\n    it = o[Symbol.iterator]();\n    return it.next.bind(it);\n  }\n  function createCommonjsModule(fn, module) {\n    return module = {\n      exports: {}\n    }, fn(module, module.exports), module.exports;\n  }\n  var defaults = createCommonjsModule(function (module) {\n    function getDefaults() {\n      return {\n        baseUrl: null,\n        breaks: false,\n        gfm: true,\n        headerIds: true,\n        headerPrefix: '',\n        highlight: null,\n        langPrefix: 'language-',\n        mangle: true,\n        pedantic: false,\n        renderer: null,\n        sanitize: false,\n        sanitizer: null,\n        silent: false,\n        smartLists: false,\n        smartypants: false,\n        tokenizer: null,\n        walkTokens: null,\n        xhtml: false\n      };\n    }\n    function changeDefaults(newDefaults) {\n      module.exports.defaults = newDefaults;\n    }\n    module.exports = {\n      defaults: getDefaults(),\n      getDefaults: getDefaults,\n      changeDefaults: changeDefaults\n    };\n  });\n  var defaults_1 = defaults.defaults;\n  var defaults_2 = defaults.getDefaults;\n  var defaults_3 = defaults.changeDefaults;\n\n  /**\n   * Helpers\n   */\n  var escapeTest = /[&<>\"']/;\n  var escapeReplace = /[&<>\"']/g;\n  var escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\n  var escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\n  var escapeReplacements = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n  var getEscapeReplacement = function getEscapeReplacement(ch) {\n    return escapeReplacements[ch];\n  };\n  function escape(html, encode) {\n    if (encode) {\n      if (escapeTest.test(html)) {\n        return html.replace(escapeReplace, getEscapeReplacement);\n      }\n    } else {\n      if (escapeTestNoEncode.test(html)) {\n        return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n      }\n    }\n    return html;\n  }\n  var unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n  function unescape(html) {\n    // explicitly match decimal, hex, and named HTML entities\n    return html.replace(unescapeTest, function (_, n) {\n      n = n.toLowerCase();\n      if (n === 'colon') return ':';\n      if (n.charAt(0) === '#') {\n        return n.charAt(1) === 'x' ? String.fromCharCode(parseInt(n.substring(2), 16)) : String.fromCharCode(+n.substring(1));\n      }\n      return '';\n    });\n  }\n  var caret = /(^|[^\\[])\\^/g;\n  function edit(regex, opt) {\n    regex = regex.source || regex;\n    opt = opt || '';\n    var obj = {\n      replace: function replace(name, val) {\n        val = val.source || val;\n        val = val.replace(caret, '$1');\n        regex = regex.replace(name, val);\n        return obj;\n      },\n      getRegex: function getRegex() {\n        return new RegExp(regex, opt);\n      }\n    };\n    return obj;\n  }\n  var nonWordAndColonTest = /[^\\w:]/g;\n  var originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n  function cleanUrl(sanitize, base, href) {\n    if (sanitize) {\n      var prot;\n      try {\n        prot = decodeURIComponent(unescape(href)).replace(nonWordAndColonTest, '').toLowerCase();\n      } catch (e) {\n        return null;\n      }\n      if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n        return null;\n      }\n    }\n    if (base && !originIndependentUrl.test(href)) {\n      href = resolveUrl(base, href);\n    }\n    try {\n      href = encodeURI(href).replace(/%25/g, '%');\n    } catch (e) {\n      return null;\n    }\n    return href;\n  }\n  var baseUrls = {};\n  var justDomain = /^[^:]+:\\/*[^/]*$/;\n  var protocol = /^([^:]+:)[\\s\\S]*$/;\n  var domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n  function resolveUrl(base, href) {\n    if (!baseUrls[' ' + base]) {\n      // we can ignore everything in base after the last slash of its path component,\n      // but we might need to add _that_\n      // https://tools.ietf.org/html/rfc3986#section-3\n      if (justDomain.test(base)) {\n        baseUrls[' ' + base] = base + '/';\n      } else {\n        baseUrls[' ' + base] = rtrim(base, '/', true);\n      }\n    }\n    base = baseUrls[' ' + base];\n    var relativeBase = base.indexOf(':') === -1;\n    if (href.substring(0, 2) === '//') {\n      if (relativeBase) {\n        return href;\n      }\n      return base.replace(protocol, '$1') + href;\n    } else if (href.charAt(0) === '/') {\n      if (relativeBase) {\n        return href;\n      }\n      return base.replace(domain, '$1') + href;\n    } else {\n      return base + href;\n    }\n  }\n  var noopTest = {\n    exec: function noopTest() {}\n  };\n  function merge(obj) {\n    var i = 1,\n      target,\n      key;\n    for (; i < arguments.length; i++) {\n      target = arguments[i];\n      for (key in target) {\n        if (Object.prototype.hasOwnProperty.call(target, key)) {\n          obj[key] = target[key];\n        }\n      }\n    }\n    return obj;\n  }\n  function splitCells(tableRow, count) {\n    // ensure that every cell-delimiting pipe has a space\n    // before it to distinguish it from an escaped pipe\n    var row = tableRow.replace(/\\|/g, function (match, offset, str) {\n        var escaped = false,\n          curr = offset;\n        while (--curr >= 0 && str[curr] === '\\\\') {\n          escaped = !escaped;\n        }\n        if (escaped) {\n          // odd number of slashes means | is escaped\n          // so we leave it alone\n          return '|';\n        } else {\n          // add space before unescaped |\n          return ' |';\n        }\n      }),\n      cells = row.split(/ \\|/);\n    var i = 0;\n    if (cells.length > count) {\n      cells.splice(count);\n    } else {\n      while (cells.length < count) {\n        cells.push('');\n      }\n    }\n    for (; i < cells.length; i++) {\n      // leading or trailing whitespace is ignored per the gfm spec\n      cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n    }\n    return cells;\n  } // Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n  // /c*$/ is vulnerable to REDOS.\n  // invert: Remove suffix of non-c chars instead. Default falsey.\n\n  function rtrim(str, c, invert) {\n    var l = str.length;\n    if (l === 0) {\n      return '';\n    } // Length of suffix matching the invert condition.\n\n    var suffLen = 0; // Step left until we fail to match the invert condition.\n\n    while (suffLen < l) {\n      var currChar = str.charAt(l - suffLen - 1);\n      if (currChar === c && !invert) {\n        suffLen++;\n      } else if (currChar !== c && invert) {\n        suffLen++;\n      } else {\n        break;\n      }\n    }\n    return str.substr(0, l - suffLen);\n  }\n  function findClosingBracket(str, b) {\n    if (str.indexOf(b[1]) === -1) {\n      return -1;\n    }\n    var l = str.length;\n    var level = 0,\n      i = 0;\n    for (; i < l; i++) {\n      if (str[i] === '\\\\') {\n        i++;\n      } else if (str[i] === b[0]) {\n        level++;\n      } else if (str[i] === b[1]) {\n        level--;\n        if (level < 0) {\n          return i;\n        }\n      }\n    }\n    return -1;\n  }\n  function checkSanitizeDeprecation(opt) {\n    if (opt && opt.sanitize && !opt.silent) {\n      console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n    }\n  } // copied from https://stackoverflow.com/a/5450113/806777\n\n  function repeatString(pattern, count) {\n    if (count < 1) {\n      return '';\n    }\n    var result = '';\n    while (count > 1) {\n      if (count & 1) {\n        result += pattern;\n      }\n      count >>= 1;\n      pattern += pattern;\n    }\n    return result + pattern;\n  }\n  var helpers = {\n    escape: escape,\n    unescape: unescape,\n    edit: edit,\n    cleanUrl: cleanUrl,\n    resolveUrl: resolveUrl,\n    noopTest: noopTest,\n    merge: merge,\n    splitCells: splitCells,\n    rtrim: rtrim,\n    findClosingBracket: findClosingBracket,\n    checkSanitizeDeprecation: checkSanitizeDeprecation,\n    repeatString: repeatString\n  };\n  var defaults$1 = defaults.defaults;\n  var rtrim$1 = helpers.rtrim,\n    splitCells$1 = helpers.splitCells,\n    _escape = helpers.escape,\n    findClosingBracket$1 = helpers.findClosingBracket;\n  function outputLink(cap, link, raw) {\n    var href = link.href;\n    var title = link.title ? _escape(link.title) : null;\n    var text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n    if (cap[0].charAt(0) !== '!') {\n      return {\n        type: 'link',\n        raw: raw,\n        href: href,\n        title: title,\n        text: text\n      };\n    } else {\n      return {\n        type: 'image',\n        raw: raw,\n        href: href,\n        title: title,\n        text: _escape(text)\n      };\n    }\n  }\n  function indentCodeCompensation(raw, text) {\n    var matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n    if (matchIndentToCode === null) {\n      return text;\n    }\n    var indentToCode = matchIndentToCode[1];\n    return text.split('\\n').map(function (node) {\n      var matchIndentInNode = node.match(/^\\s+/);\n      if (matchIndentInNode === null) {\n        return node;\n      }\n      var indentInNode = matchIndentInNode[0];\n      if (indentInNode.length >= indentToCode.length) {\n        return node.slice(indentToCode.length);\n      }\n      return node;\n    }).join('\\n');\n  }\n  /**\n   * Tokenizer\n   */\n\n  var Tokenizer_1 = /*#__PURE__*/function () {\n    function Tokenizer(options) {\n      this.options = options || defaults$1;\n    }\n    var _proto = Tokenizer.prototype;\n    _proto.space = function space(src) {\n      var cap = this.rules.block.newline.exec(src);\n      if (cap) {\n        if (cap[0].length > 1) {\n          return {\n            type: 'space',\n            raw: cap[0]\n          };\n        }\n        return {\n          raw: '\\n'\n        };\n      }\n    };\n    _proto.code = function code(src, tokens) {\n      var cap = this.rules.block.code.exec(src);\n      if (cap) {\n        var lastToken = tokens[tokens.length - 1]; // An indented code block cannot interrupt a paragraph.\n\n        if (lastToken && lastToken.type === 'paragraph') {\n          return {\n            raw: cap[0],\n            text: cap[0].trimRight()\n          };\n        }\n        var text = cap[0].replace(/^ {4}/gm, '');\n        return {\n          type: 'code',\n          raw: cap[0],\n          codeBlockStyle: 'indented',\n          text: !this.options.pedantic ? rtrim$1(text, '\\n') : text\n        };\n      }\n    };\n    _proto.fences = function fences(src) {\n      var cap = this.rules.block.fences.exec(src);\n      if (cap) {\n        var raw = cap[0];\n        var text = indentCodeCompensation(raw, cap[3] || '');\n        return {\n          type: 'code',\n          raw: raw,\n          lang: cap[2] ? cap[2].trim() : cap[2],\n          text: text\n        };\n      }\n    };\n    _proto.heading = function heading(src) {\n      var cap = this.rules.block.heading.exec(src);\n      if (cap) {\n        return {\n          type: 'heading',\n          raw: cap[0],\n          depth: cap[1].length,\n          text: cap[2]\n        };\n      }\n    };\n    _proto.nptable = function nptable(src) {\n      var cap = this.rules.block.nptable.exec(src);\n      if (cap) {\n        var item = {\n          type: 'table',\n          header: splitCells$1(cap[1].replace(/^ *| *\\| *$/g, '')),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : [],\n          raw: cap[0]\n        };\n        if (item.header.length === item.align.length) {\n          var l = item.align.length;\n          var i;\n          for (i = 0; i < l; i++) {\n            if (/^ *-+: *$/.test(item.align[i])) {\n              item.align[i] = 'right';\n            } else if (/^ *:-+: *$/.test(item.align[i])) {\n              item.align[i] = 'center';\n            } else if (/^ *:-+ *$/.test(item.align[i])) {\n              item.align[i] = 'left';\n            } else {\n              item.align[i] = null;\n            }\n          }\n          l = item.cells.length;\n          for (i = 0; i < l; i++) {\n            item.cells[i] = splitCells$1(item.cells[i], item.header.length);\n          }\n          return item;\n        }\n      }\n    };\n    _proto.hr = function hr(src) {\n      var cap = this.rules.block.hr.exec(src);\n      if (cap) {\n        return {\n          type: 'hr',\n          raw: cap[0]\n        };\n      }\n    };\n    _proto.blockquote = function blockquote(src) {\n      var cap = this.rules.block.blockquote.exec(src);\n      if (cap) {\n        var text = cap[0].replace(/^ *> ?/gm, '');\n        return {\n          type: 'blockquote',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n    _proto.list = function list(src) {\n      var cap = this.rules.block.list.exec(src);\n      if (cap) {\n        var raw = cap[0];\n        var bull = cap[2];\n        var isordered = bull.length > 1;\n        var isparen = bull[bull.length - 1] === ')';\n        var list = {\n          type: 'list',\n          raw: raw,\n          ordered: isordered,\n          start: isordered ? +bull.slice(0, -1) : '',\n          loose: false,\n          items: []\n        }; // Get each top-level item.\n\n        var itemMatch = cap[0].match(this.rules.block.item);\n        var next = false,\n          item,\n          space,\n          b,\n          addBack,\n          loose,\n          istask,\n          ischecked;\n        var l = itemMatch.length;\n        for (var i = 0; i < l; i++) {\n          item = itemMatch[i];\n          raw = item; // Remove the list item's bullet\n          // so it is seen as the next token.\n\n          space = item.length;\n          item = item.replace(/^ *([*+-]|\\d+[.)]) ?/, ''); // Outdent whatever the\n          // list item contains. Hacky.\n\n          if (~item.indexOf('\\n ')) {\n            space -= item.length;\n            item = !this.options.pedantic ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '') : item.replace(/^ {1,4}/gm, '');\n          } // Determine whether the next list item belongs here.\n          // Backpedal if it does not belong in this list.\n\n          if (i !== l - 1) {\n            b = this.rules.block.bullet.exec(itemMatch[i + 1])[0];\n            if (isordered ? b.length === 1 || !isparen && b[b.length - 1] === ')' : b.length > 1 || this.options.smartLists && b !== bull) {\n              addBack = itemMatch.slice(i + 1).join('\\n');\n              list.raw = list.raw.substring(0, list.raw.length - addBack.length);\n              i = l - 1;\n            }\n          } // Determine whether item is loose or not.\n          // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n          // for discount behavior.\n\n          loose = next || /\\n\\n(?!\\s*$)/.test(item);\n          if (i !== l - 1) {\n            next = item.charAt(item.length - 1) === '\\n';\n            if (!loose) loose = next;\n          }\n          if (loose) {\n            list.loose = true;\n          } // Check for task list items\n\n          istask = /^\\[[ xX]\\] /.test(item);\n          ischecked = undefined;\n          if (istask) {\n            ischecked = item[1] !== ' ';\n            item = item.replace(/^\\[[ xX]\\] +/, '');\n          }\n          list.items.push({\n            type: 'list_item',\n            raw: raw,\n            task: istask,\n            checked: ischecked,\n            loose: loose,\n            text: item\n          });\n        }\n        return list;\n      }\n    };\n    _proto.html = function html(src) {\n      var cap = this.rules.block.html.exec(src);\n      if (cap) {\n        return {\n          type: this.options.sanitize ? 'paragraph' : 'html',\n          raw: cap[0],\n          pre: !this.options.sanitizer && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n          text: this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : _escape(cap[0]) : cap[0]\n        };\n      }\n    };\n    _proto.def = function def(src) {\n      var cap = this.rules.block.def.exec(src);\n      if (cap) {\n        if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n        var tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n        return {\n          tag: tag,\n          raw: cap[0],\n          href: cap[2],\n          title: cap[3]\n        };\n      }\n    };\n    _proto.table = function table(src) {\n      var cap = this.rules.block.table.exec(src);\n      if (cap) {\n        var item = {\n          type: 'table',\n          header: splitCells$1(cap[1].replace(/^ *| *\\| *$/g, '')),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n        };\n        if (item.header.length === item.align.length) {\n          item.raw = cap[0];\n          var l = item.align.length;\n          var i;\n          for (i = 0; i < l; i++) {\n            if (/^ *-+: *$/.test(item.align[i])) {\n              item.align[i] = 'right';\n            } else if (/^ *:-+: *$/.test(item.align[i])) {\n              item.align[i] = 'center';\n            } else if (/^ *:-+ *$/.test(item.align[i])) {\n              item.align[i] = 'left';\n            } else {\n              item.align[i] = null;\n            }\n          }\n          l = item.cells.length;\n          for (i = 0; i < l; i++) {\n            item.cells[i] = splitCells$1(item.cells[i].replace(/^ *\\| *| *\\| *$/g, ''), item.header.length);\n          }\n          return item;\n        }\n      }\n    };\n    _proto.lheading = function lheading(src) {\n      var cap = this.rules.block.lheading.exec(src);\n      if (cap) {\n        return {\n          type: 'heading',\n          raw: cap[0],\n          depth: cap[2].charAt(0) === '=' ? 1 : 2,\n          text: cap[1]\n        };\n      }\n    };\n    _proto.paragraph = function paragraph(src) {\n      var cap = this.rules.block.paragraph.exec(src);\n      if (cap) {\n        return {\n          type: 'paragraph',\n          raw: cap[0],\n          text: cap[1].charAt(cap[1].length - 1) === '\\n' ? cap[1].slice(0, -1) : cap[1]\n        };\n      }\n    };\n    _proto.text = function text(src, tokens) {\n      var cap = this.rules.block.text.exec(src);\n      if (cap) {\n        var lastToken = tokens[tokens.length - 1];\n        if (lastToken && lastToken.type === 'text') {\n          return {\n            raw: cap[0],\n            text: cap[0]\n          };\n        }\n        return {\n          type: 'text',\n          raw: cap[0],\n          text: cap[0]\n        };\n      }\n    };\n    _proto.escape = function escape(src) {\n      var cap = this.rules.inline.escape.exec(src);\n      if (cap) {\n        return {\n          type: 'escape',\n          raw: cap[0],\n          text: _escape(cap[1])\n        };\n      }\n    };\n    _proto.tag = function tag(src, inLink, inRawBlock) {\n      var cap = this.rules.inline.tag.exec(src);\n      if (cap) {\n        if (!inLink && /^<a /i.test(cap[0])) {\n          inLink = true;\n        } else if (inLink && /^<\\/a>/i.test(cap[0])) {\n          inLink = false;\n        }\n        if (!inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          inRawBlock = true;\n        } else if (inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          inRawBlock = false;\n        }\n        return {\n          type: this.options.sanitize ? 'text' : 'html',\n          raw: cap[0],\n          inLink: inLink,\n          inRawBlock: inRawBlock,\n          text: this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : _escape(cap[0]) : cap[0]\n        };\n      }\n    };\n    _proto.link = function link(src) {\n      var cap = this.rules.inline.link.exec(src);\n      if (cap) {\n        var lastParenIndex = findClosingBracket$1(cap[2], '()');\n        if (lastParenIndex > -1) {\n          var start = cap[0].indexOf('!') === 0 ? 5 : 4;\n          var linkLen = start + cap[1].length + lastParenIndex;\n          cap[2] = cap[2].substring(0, lastParenIndex);\n          cap[0] = cap[0].substring(0, linkLen).trim();\n          cap[3] = '';\n        }\n        var href = cap[2];\n        var title = '';\n        if (this.options.pedantic) {\n          var link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n          if (link) {\n            href = link[1];\n            title = link[3];\n          } else {\n            title = '';\n          }\n        } else {\n          title = cap[3] ? cap[3].slice(1, -1) : '';\n        }\n        href = href.trim().replace(/^<([\\s\\S]*)>$/, '$1');\n        var token = outputLink(cap, {\n          href: href ? href.replace(this.rules.inline._escapes, '$1') : href,\n          title: title ? title.replace(this.rules.inline._escapes, '$1') : title\n        }, cap[0]);\n        return token;\n      }\n    };\n    _proto.reflink = function reflink(src, links) {\n      var cap;\n      if ((cap = this.rules.inline.reflink.exec(src)) || (cap = this.rules.inline.nolink.exec(src))) {\n        var link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n        link = links[link.toLowerCase()];\n        if (!link || !link.href) {\n          var text = cap[0].charAt(0);\n          return {\n            type: 'text',\n            raw: text,\n            text: text\n          };\n        }\n        var token = outputLink(cap, link, cap[0]);\n        return token;\n      }\n    };\n    _proto.strong = function strong(src, maskedSrc, prevChar) {\n      if (prevChar === void 0) {\n        prevChar = '';\n      }\n      var match = this.rules.inline.strong.start.exec(src);\n      if (match && (!match[1] || match[1] && (prevChar === '' || this.rules.inline.punctuation.exec(prevChar)))) {\n        maskedSrc = maskedSrc.slice(-1 * src.length);\n        var endReg = match[0] === '**' ? this.rules.inline.strong.endAst : this.rules.inline.strong.endUnd;\n        endReg.lastIndex = 0;\n        var cap;\n        while ((match = endReg.exec(maskedSrc)) != null) {\n          cap = this.rules.inline.strong.middle.exec(maskedSrc.slice(0, match.index + 3));\n          if (cap) {\n            return {\n              type: 'strong',\n              raw: src.slice(0, cap[0].length),\n              text: src.slice(2, cap[0].length - 2)\n            };\n          }\n        }\n      }\n    };\n    _proto.em = function em(src, maskedSrc, prevChar) {\n      if (prevChar === void 0) {\n        prevChar = '';\n      }\n      var match = this.rules.inline.em.start.exec(src);\n      if (match && (!match[1] || match[1] && (prevChar === '' || this.rules.inline.punctuation.exec(prevChar)))) {\n        maskedSrc = maskedSrc.slice(-1 * src.length);\n        var endReg = match[0] === '*' ? this.rules.inline.em.endAst : this.rules.inline.em.endUnd;\n        endReg.lastIndex = 0;\n        var cap;\n        while ((match = endReg.exec(maskedSrc)) != null) {\n          cap = this.rules.inline.em.middle.exec(maskedSrc.slice(0, match.index + 2));\n          if (cap) {\n            return {\n              type: 'em',\n              raw: src.slice(0, cap[0].length),\n              text: src.slice(1, cap[0].length - 1)\n            };\n          }\n        }\n      }\n    };\n    _proto.codespan = function codespan(src) {\n      var cap = this.rules.inline.code.exec(src);\n      if (cap) {\n        var text = cap[2].replace(/\\n/g, ' ');\n        var hasNonSpaceChars = /[^ ]/.test(text);\n        var hasSpaceCharsOnBothEnds = text.startsWith(' ') && text.endsWith(' ');\n        if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n          text = text.substring(1, text.length - 1);\n        }\n        text = _escape(text, true);\n        return {\n          type: 'codespan',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n    _proto.br = function br(src) {\n      var cap = this.rules.inline.br.exec(src);\n      if (cap) {\n        return {\n          type: 'br',\n          raw: cap[0]\n        };\n      }\n    };\n    _proto.del = function del(src) {\n      var cap = this.rules.inline.del.exec(src);\n      if (cap) {\n        return {\n          type: 'del',\n          raw: cap[0],\n          text: cap[1]\n        };\n      }\n    };\n    _proto.autolink = function autolink(src, mangle) {\n      var cap = this.rules.inline.autolink.exec(src);\n      if (cap) {\n        var text, href;\n        if (cap[2] === '@') {\n          text = _escape(this.options.mangle ? mangle(cap[1]) : cap[1]);\n          href = 'mailto:' + text;\n        } else {\n          text = _escape(cap[1]);\n          href = text;\n        }\n        return {\n          type: 'link',\n          raw: cap[0],\n          text: text,\n          href: href,\n          tokens: [{\n            type: 'text',\n            raw: text,\n            text: text\n          }]\n        };\n      }\n    };\n    _proto.url = function url(src, mangle) {\n      var cap;\n      if (cap = this.rules.inline.url.exec(src)) {\n        var text, href;\n        if (cap[2] === '@') {\n          text = _escape(this.options.mangle ? mangle(cap[0]) : cap[0]);\n          href = 'mailto:' + text;\n        } else {\n          // do extended autolink path validation\n          var prevCapZero;\n          do {\n            prevCapZero = cap[0];\n            cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];\n          } while (prevCapZero !== cap[0]);\n          text = _escape(cap[0]);\n          if (cap[1] === 'www.') {\n            href = 'http://' + text;\n          } else {\n            href = text;\n          }\n        }\n        return {\n          type: 'link',\n          raw: cap[0],\n          text: text,\n          href: href,\n          tokens: [{\n            type: 'text',\n            raw: text,\n            text: text\n          }]\n        };\n      }\n    };\n    _proto.inlineText = function inlineText(src, inRawBlock, smartypants) {\n      var cap = this.rules.inline.text.exec(src);\n      if (cap) {\n        var text;\n        if (inRawBlock) {\n          text = this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : _escape(cap[0]) : cap[0];\n        } else {\n          text = _escape(this.options.smartypants ? smartypants(cap[0]) : cap[0]);\n        }\n        return {\n          type: 'text',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n    return Tokenizer;\n  }();\n  var noopTest$1 = helpers.noopTest,\n    edit$1 = helpers.edit,\n    merge$1 = helpers.merge;\n  /**\n   * Block-Level Grammar\n   */\n\n  var block = {\n    newline: /^\\n+/,\n    code: /^( {4}[^\\n]+\\n*)+/,\n    fences: /^ {0,3}(`{3,}(?=[^`\\n]*\\n)|~{3,})([^\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?:\\n+|$)|$)/,\n    hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,\n    heading: /^ {0,3}(#{1,6}) +([^\\n]*?)(?: +#+)? *(?:\\n+|$)/,\n    blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n    list: /^( {0,3})(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\n    html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (6)\n    + '|<(?!script|pre|style)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) open tag\n    + '|</(?!script|pre|style)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) closing tag\n    + ')',\n    def: /^ {0,3}\\[(label)\\]: *\\n? *<?([^\\s>]+)>?(?:(?: +\\n? *| *\\n *)(title))? *(?:\\n+|$)/,\n    nptable: noopTest$1,\n    table: noopTest$1,\n    lheading: /^([^\\n]+)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n    // regex template, placeholders will be replaced according to different paragraph\n    // interruption rules of commonmark and the original markdown spec:\n    _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html)[^\\n]+)*)/,\n    text: /^[^\\n]+/\n  };\n  block._label = /(?!\\s*\\])(?:\\\\[\\[\\]]|[^\\[\\]])+/;\n  block._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\n  block.def = edit$1(block.def).replace('label', block._label).replace('title', block._title).getRegex();\n  block.bullet = /(?:[*+-]|\\d{1,9}[.)])/;\n  block.item = /^( *)(bull) ?[^\\n]*(?:\\n(?!\\1bull ?)[^\\n]*)*/;\n  block.item = edit$1(block.item, 'gm').replace(/bull/g, block.bullet).getRegex();\n  block.list = edit$1(block.list).replace(/bull/g, block.bullet).replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))').replace('def', '\\\\n+(?=' + block.def.source + ')').getRegex();\n  block._tag = 'address|article|aside|base|basefont|blockquote|body|caption' + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption' + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe' + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option' + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr' + '|track|ul';\n  block._comment = /<!--(?!-?>)[\\s\\S]*?(?:-->|$)/;\n  block.html = edit$1(block.html, 'i').replace('comment', block._comment).replace('tag', block._tag).replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/).getRegex();\n  block.paragraph = edit$1(block._paragraph).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('blockquote', ' {0,3}>').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)').replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n  block.blockquote = edit$1(block.blockquote).replace('paragraph', block.paragraph).getRegex();\n  /**\n   * Normal Block Grammar\n   */\n\n  block.normal = merge$1({}, block);\n  /**\n   * GFM Block Grammar\n   */\n\n  block.gfm = merge$1({}, block.normal, {\n    nptable: '^ *([^|\\\\n ].*\\\\|.*)\\\\n' // Header\n    + ' {0,3}([-:]+ *\\\\|[-| :]*)' // Align\n    + '(?:\\\\n((?:(?!\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)',\n    // Cells\n    table: '^ *\\\\|(.+)\\\\n' // Header\n    + ' {0,3}\\\\|?( *[-:]+[-| :]*)' // Align\n    + '(?:\\\\n *((?:(?!\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n  });\n\n  block.gfm.nptable = edit$1(block.gfm.nptable).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('blockquote', ' {0,3}>').replace('code', ' {4}[^\\\\n]').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)').replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n  block.gfm.table = edit$1(block.gfm.table).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('blockquote', ' {0,3}>').replace('code', ' {4}[^\\\\n]').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)').replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n  /**\n   * Pedantic grammar (original John Gruber's loose markdown specification)\n   */\n\n  block.pedantic = merge$1({}, block.normal, {\n    html: edit$1('^ *(?:comment *(?:\\\\n|\\\\s*$)' + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))').replace('comment', block._comment).replace(/tag/g, '(?!(?:' + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub' + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)' + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b').getRegex(),\n    def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n    heading: /^ *(#{1,6}) *([^\\n]+?) *(?:#+ *)?(?:\\n+|$)/,\n    fences: noopTest$1,\n    // fences not supported\n    paragraph: edit$1(block.normal._paragraph).replace('hr', block.hr).replace('heading', ' *#{1,6} *[^\\n]').replace('lheading', block.lheading).replace('blockquote', ' {0,3}>').replace('|fences', '').replace('|list', '').replace('|html', '').getRegex()\n  });\n  /**\n   * Inline-Level Grammar\n   */\n\n  var inline = {\n    escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n    autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n    url: noopTest$1,\n    tag: '^comment' + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>',\n    // CDATA section\n    link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n    reflink: /^!?\\[(label)\\]\\[(?!\\s*\\])((?:\\\\[\\[\\]]?|[^\\[\\]\\\\])+)\\]/,\n    nolink: /^!?\\[(?!\\s*\\])((?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]])*)\\](?:\\[\\])?/,\n    reflinkSearch: 'reflink|nolink(?!\\\\()',\n    strong: {\n      start: /^(?:(\\*\\*(?=[*punctuation]))|\\*\\*)(?![\\s])|__/,\n      // (1) returns if starts w/ punctuation\n      middle: /^\\*\\*(?:(?:(?!overlapSkip)(?:[^*]|\\\\\\*)|overlapSkip)|\\*(?:(?!overlapSkip)(?:[^*]|\\\\\\*)|overlapSkip)*?\\*)+?\\*\\*$|^__(?![\\s])((?:(?:(?!overlapSkip)(?:[^_]|\\\\_)|overlapSkip)|_(?:(?!overlapSkip)(?:[^_]|\\\\_)|overlapSkip)*?_)+?)__$/,\n      endAst: /[^punctuation\\s]\\*\\*(?!\\*)|[punctuation]\\*\\*(?!\\*)(?:(?=[punctuation_\\s]|$))/,\n      // last char can't be punct, or final * must also be followed by punct (or endline)\n      endUnd: /[^\\s]__(?!_)(?:(?=[punctuation*\\s])|$)/ // last char can't be a space, and final _ must preceed punct or \\s (or endline)\n    },\n\n    em: {\n      start: /^(?:(\\*(?=[punctuation]))|\\*)(?![*\\s])|_/,\n      // (1) returns if starts w/ punctuation\n      middle: /^\\*(?:(?:(?!overlapSkip)(?:[^*]|\\\\\\*)|overlapSkip)|\\*(?:(?!overlapSkip)(?:[^*]|\\\\\\*)|overlapSkip)*?\\*)+?\\*$|^_(?![_\\s])(?:(?:(?!overlapSkip)(?:[^_]|\\\\_)|overlapSkip)|_(?:(?!overlapSkip)(?:[^_]|\\\\_)|overlapSkip)*?_)+?_$/,\n      endAst: /[^punctuation\\s]\\*(?!\\*)|[punctuation]\\*(?!\\*)(?:(?=[punctuation_\\s]|$))/,\n      // last char can't be punct, or final * must also be followed by punct (or endline)\n      endUnd: /[^\\s]_(?!_)(?:(?=[punctuation*\\s])|$)/ // last char can't be a space, and final _ must preceed punct or \\s (or endline)\n    },\n\n    code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n    br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n    del: noopTest$1,\n    text: /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*]|\\b_|$)|[^ ](?= {2,}\\n)))/,\n    punctuation: /^([\\s*punctuation])/\n  }; // list of punctuation marks from common mark spec\n  // without * and _ to workaround cases with double emphasis\n\n  inline._punctuation = '!\"#$%&\\'()+\\\\-.,/:;<=>?@\\\\[\\\\]`^{|}~';\n  inline.punctuation = edit$1(inline.punctuation).replace(/punctuation/g, inline._punctuation).getRegex(); // sequences em should skip over [title](link), `code`, <html>\n\n  inline._blockSkip = '\\\\[[^\\\\]]*?\\\\]\\\\([^\\\\)]*?\\\\)|`[^`]*?`|<[^>]*?>';\n  inline._overlapSkip = '__[^_]*?__|\\\\*\\\\*\\\\[^\\\\*\\\\]*?\\\\*\\\\*';\n  inline._comment = edit$1(block._comment).replace('(?:-->|$)', '-->').getRegex();\n  inline.em.start = edit$1(inline.em.start).replace(/punctuation/g, inline._punctuation).getRegex();\n  inline.em.middle = edit$1(inline.em.middle).replace(/punctuation/g, inline._punctuation).replace(/overlapSkip/g, inline._overlapSkip).getRegex();\n  inline.em.endAst = edit$1(inline.em.endAst, 'g').replace(/punctuation/g, inline._punctuation).getRegex();\n  inline.em.endUnd = edit$1(inline.em.endUnd, 'g').replace(/punctuation/g, inline._punctuation).getRegex();\n  inline.strong.start = edit$1(inline.strong.start).replace(/punctuation/g, inline._punctuation).getRegex();\n  inline.strong.middle = edit$1(inline.strong.middle).replace(/punctuation/g, inline._punctuation).replace(/overlapSkip/g, inline._overlapSkip).getRegex();\n  inline.strong.endAst = edit$1(inline.strong.endAst, 'g').replace(/punctuation/g, inline._punctuation).getRegex();\n  inline.strong.endUnd = edit$1(inline.strong.endUnd, 'g').replace(/punctuation/g, inline._punctuation).getRegex();\n  inline.blockSkip = edit$1(inline._blockSkip, 'g').getRegex();\n  inline.overlapSkip = edit$1(inline._overlapSkip, 'g').getRegex();\n  inline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n  inline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\n  inline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\n  inline.autolink = edit$1(inline.autolink).replace('scheme', inline._scheme).replace('email', inline._email).getRegex();\n  inline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n  inline.tag = edit$1(inline.tag).replace('comment', inline._comment).replace('attribute', inline._attribute).getRegex();\n  inline._label = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\n  inline._href = /<(?:\\\\[<>]?|[^\\s<>\\\\])*>|[^\\s\\x00-\\x1f]*/;\n  inline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n  inline.link = edit$1(inline.link).replace('label', inline._label).replace('href', inline._href).replace('title', inline._title).getRegex();\n  inline.reflink = edit$1(inline.reflink).replace('label', inline._label).getRegex();\n  inline.reflinkSearch = edit$1(inline.reflinkSearch, 'g').replace('reflink', inline.reflink).replace('nolink', inline.nolink).getRegex();\n  /**\n   * Normal Inline Grammar\n   */\n\n  inline.normal = merge$1({}, inline);\n  /**\n   * Pedantic Inline Grammar\n   */\n\n  inline.pedantic = merge$1({}, inline.normal, {\n    strong: {\n      start: /^__|\\*\\*/,\n      middle: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n      endAst: /\\*\\*(?!\\*)/g,\n      endUnd: /__(?!_)/g\n    },\n    em: {\n      start: /^_|\\*/,\n      middle: /^()\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/,\n      endAst: /\\*(?!\\*)/g,\n      endUnd: /_(?!_)/g\n    },\n    link: edit$1(/^!?\\[(label)\\]\\((.*?)\\)/).replace('label', inline._label).getRegex(),\n    reflink: edit$1(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/).replace('label', inline._label).getRegex()\n  });\n  /**\n   * GFM Inline Grammar\n   */\n\n  inline.gfm = merge$1({}, inline.normal, {\n    escape: edit$1(inline.escape).replace('])', '~|])').getRegex(),\n    _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n    url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n    _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n    del: /^~+(?=\\S)([\\s\\S]*?\\S)~+/,\n    text: /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))/\n  });\n  inline.gfm.url = edit$1(inline.gfm.url, 'i').replace('email', inline.gfm._extended_email).getRegex();\n  /**\n   * GFM + Line Breaks Inline Grammar\n   */\n\n  inline.breaks = merge$1({}, inline.gfm, {\n    br: edit$1(inline.br).replace('{2,}', '*').getRegex(),\n    text: edit$1(inline.gfm.text).replace('\\\\b_', '\\\\b_| {2,}\\\\n').replace(/\\{2,\\}/g, '*').getRegex()\n  });\n  var rules = {\n    block: block,\n    inline: inline\n  };\n  var defaults$2 = defaults.defaults;\n  var block$1 = rules.block,\n    inline$1 = rules.inline;\n  var repeatString$1 = helpers.repeatString;\n  /**\n   * smartypants text replacement\n   */\n\n  function smartypants(text) {\n    return text // em-dashes\n    .replace(/---/g, \"\\u2014\") // en-dashes\n    .replace(/--/g, \"\\u2013\") // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, \"$1\\u2018\") // closing singles & apostrophes\n    .replace(/'/g, \"\\u2019\") // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, \"$1\\u201C\") // closing doubles\n    .replace(/\"/g, \"\\u201D\") // ellipses\n    .replace(/\\.{3}/g, \"\\u2026\");\n  }\n  /**\n   * mangle email addresses\n   */\n\n  function mangle(text) {\n    var out = '',\n      i,\n      ch;\n    var l = text.length;\n    for (i = 0; i < l; i++) {\n      ch = text.charCodeAt(i);\n      if (Math.random() > 0.5) {\n        ch = 'x' + ch.toString(16);\n      }\n      out += '&#' + ch + ';';\n    }\n    return out;\n  }\n  /**\n   * Block Lexer\n   */\n\n  var Lexer_1 = /*#__PURE__*/function () {\n    function Lexer(options) {\n      this.tokens = [];\n      this.tokens.links = Object.create(null);\n      this.options = options || defaults$2;\n      this.options.tokenizer = this.options.tokenizer || new Tokenizer_1();\n      this.tokenizer = this.options.tokenizer;\n      this.tokenizer.options = this.options;\n      var rules = {\n        block: block$1.normal,\n        inline: inline$1.normal\n      };\n      if (this.options.pedantic) {\n        rules.block = block$1.pedantic;\n        rules.inline = inline$1.pedantic;\n      } else if (this.options.gfm) {\n        rules.block = block$1.gfm;\n        if (this.options.breaks) {\n          rules.inline = inline$1.breaks;\n        } else {\n          rules.inline = inline$1.gfm;\n        }\n      }\n      this.tokenizer.rules = rules;\n    }\n    /**\n     * Expose Rules\n     */\n\n    /**\n     * Static Lex Method\n     */\n    Lexer.lex = function lex(src, options) {\n      var lexer = new Lexer(options);\n      return lexer.lex(src);\n    }\n    /**\n     * Static Lex Inline Method\n     */;\n\n    Lexer.lexInline = function lexInline(src, options) {\n      var lexer = new Lexer(options);\n      return lexer.inlineTokens(src);\n    }\n    /**\n     * Preprocessing\n     */;\n\n    var _proto = Lexer.prototype;\n    _proto.lex = function lex(src) {\n      src = src.replace(/\\r\\n|\\r/g, '\\n').replace(/\\t/g, '    ');\n      this.blockTokens(src, this.tokens, true);\n      this.inline(this.tokens);\n      return this.tokens;\n    }\n    /**\n     * Lexing\n     */;\n\n    _proto.blockTokens = function blockTokens(src, tokens, top) {\n      if (tokens === void 0) {\n        tokens = [];\n      }\n      if (top === void 0) {\n        top = true;\n      }\n      src = src.replace(/^ +$/gm, '');\n      var token, i, l, lastToken;\n      while (src) {\n        // newline\n        if (token = this.tokenizer.space(src)) {\n          src = src.substring(token.raw.length);\n          if (token.type) {\n            tokens.push(token);\n          }\n          continue;\n        } // code\n\n        if (token = this.tokenizer.code(src, tokens)) {\n          src = src.substring(token.raw.length);\n          if (token.type) {\n            tokens.push(token);\n          } else {\n            lastToken = tokens[tokens.length - 1];\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n          }\n          continue;\n        } // fences\n\n        if (token = this.tokenizer.fences(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // heading\n\n        if (token = this.tokenizer.heading(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // table no leading pipe (gfm)\n\n        if (token = this.tokenizer.nptable(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // hr\n\n        if (token = this.tokenizer.hr(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // blockquote\n\n        if (token = this.tokenizer.blockquote(src)) {\n          src = src.substring(token.raw.length);\n          token.tokens = this.blockTokens(token.text, [], top);\n          tokens.push(token);\n          continue;\n        } // list\n\n        if (token = this.tokenizer.list(src)) {\n          src = src.substring(token.raw.length);\n          l = token.items.length;\n          for (i = 0; i < l; i++) {\n            token.items[i].tokens = this.blockTokens(token.items[i].text, [], false);\n          }\n          tokens.push(token);\n          continue;\n        } // html\n\n        if (token = this.tokenizer.html(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // def\n\n        if (top && (token = this.tokenizer.def(src))) {\n          src = src.substring(token.raw.length);\n          if (!this.tokens.links[token.tag]) {\n            this.tokens.links[token.tag] = {\n              href: token.href,\n              title: token.title\n            };\n          }\n          continue;\n        } // table (gfm)\n\n        if (token = this.tokenizer.table(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // lheading\n\n        if (token = this.tokenizer.lheading(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // top-level paragraph\n\n        if (top && (token = this.tokenizer.paragraph(src))) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // text\n\n        if (token = this.tokenizer.text(src, tokens)) {\n          src = src.substring(token.raw.length);\n          if (token.type) {\n            tokens.push(token);\n          } else {\n            lastToken = tokens[tokens.length - 1];\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n          }\n          continue;\n        }\n        if (src) {\n          var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n          if (this.options.silent) {\n            console.error(errMsg);\n            break;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n      return tokens;\n    };\n    _proto.inline = function inline(tokens) {\n      var i, j, k, l2, row, token;\n      var l = tokens.length;\n      for (i = 0; i < l; i++) {\n        token = tokens[i];\n        switch (token.type) {\n          case 'paragraph':\n          case 'text':\n          case 'heading':\n            {\n              token.tokens = [];\n              this.inlineTokens(token.text, token.tokens);\n              break;\n            }\n          case 'table':\n            {\n              token.tokens = {\n                header: [],\n                cells: []\n              }; // header\n\n              l2 = token.header.length;\n              for (j = 0; j < l2; j++) {\n                token.tokens.header[j] = [];\n                this.inlineTokens(token.header[j], token.tokens.header[j]);\n              } // cells\n\n              l2 = token.cells.length;\n              for (j = 0; j < l2; j++) {\n                row = token.cells[j];\n                token.tokens.cells[j] = [];\n                for (k = 0; k < row.length; k++) {\n                  token.tokens.cells[j][k] = [];\n                  this.inlineTokens(row[k], token.tokens.cells[j][k]);\n                }\n              }\n              break;\n            }\n          case 'blockquote':\n            {\n              this.inline(token.tokens);\n              break;\n            }\n          case 'list':\n            {\n              l2 = token.items.length;\n              for (j = 0; j < l2; j++) {\n                this.inline(token.items[j].tokens);\n              }\n              break;\n            }\n        }\n      }\n      return tokens;\n    }\n    /**\n     * Lexing/Compiling\n     */;\n\n    _proto.inlineTokens = function inlineTokens(src, tokens, inLink, inRawBlock, prevChar) {\n      if (tokens === void 0) {\n        tokens = [];\n      }\n      if (inLink === void 0) {\n        inLink = false;\n      }\n      if (inRawBlock === void 0) {\n        inRawBlock = false;\n      }\n      if (prevChar === void 0) {\n        prevChar = '';\n      }\n      var token; // String with links masked to avoid interference with em and strong\n\n      var maskedSrc = src;\n      var match; // Mask out reflinks\n\n      if (this.tokens.links) {\n        var links = Object.keys(this.tokens.links);\n        if (links.length > 0) {\n          while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n            if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n              maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString$1('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n            }\n          }\n        }\n      } // Mask out other blocks\n\n      while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n        maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString$1('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n      }\n      while (src) {\n        // escape\n        if (token = this.tokenizer.escape(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // tag\n\n        if (token = this.tokenizer.tag(src, inLink, inRawBlock)) {\n          src = src.substring(token.raw.length);\n          inLink = token.inLink;\n          inRawBlock = token.inRawBlock;\n          tokens.push(token);\n          continue;\n        } // link\n\n        if (token = this.tokenizer.link(src)) {\n          src = src.substring(token.raw.length);\n          if (token.type === 'link') {\n            token.tokens = this.inlineTokens(token.text, [], true, inRawBlock);\n          }\n          tokens.push(token);\n          continue;\n        } // reflink, nolink\n\n        if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n          src = src.substring(token.raw.length);\n          if (token.type === 'link') {\n            token.tokens = this.inlineTokens(token.text, [], true, inRawBlock);\n          }\n          tokens.push(token);\n          continue;\n        } // strong\n\n        if (token = this.tokenizer.strong(src, maskedSrc, prevChar)) {\n          src = src.substring(token.raw.length);\n          token.tokens = this.inlineTokens(token.text, [], inLink, inRawBlock);\n          tokens.push(token);\n          continue;\n        } // em\n\n        if (token = this.tokenizer.em(src, maskedSrc, prevChar)) {\n          src = src.substring(token.raw.length);\n          token.tokens = this.inlineTokens(token.text, [], inLink, inRawBlock);\n          tokens.push(token);\n          continue;\n        } // code\n\n        if (token = this.tokenizer.codespan(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // br\n\n        if (token = this.tokenizer.br(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // del (gfm)\n\n        if (token = this.tokenizer.del(src)) {\n          src = src.substring(token.raw.length);\n          token.tokens = this.inlineTokens(token.text, [], inLink, inRawBlock);\n          tokens.push(token);\n          continue;\n        } // autolink\n\n        if (token = this.tokenizer.autolink(src, mangle)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // url (gfm)\n\n        if (!inLink && (token = this.tokenizer.url(src, mangle))) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // text\n\n        if (token = this.tokenizer.inlineText(src, inRawBlock, smartypants)) {\n          src = src.substring(token.raw.length);\n          prevChar = token.raw.slice(-1);\n          tokens.push(token);\n          continue;\n        }\n        if (src) {\n          var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n          if (this.options.silent) {\n            console.error(errMsg);\n            break;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n      return tokens;\n    };\n    _createClass(Lexer, null, [{\n      key: \"rules\",\n      get: function get() {\n        return {\n          block: block$1,\n          inline: inline$1\n        };\n      }\n    }]);\n    return Lexer;\n  }();\n  var defaults$3 = defaults.defaults;\n  var cleanUrl$1 = helpers.cleanUrl,\n    escape$1 = helpers.escape;\n  /**\n   * Renderer\n   */\n\n  var Renderer_1 = /*#__PURE__*/function () {\n    function Renderer(options) {\n      this.options = options || defaults$3;\n    }\n    var _proto = Renderer.prototype;\n    _proto.code = function code(_code, infostring, escaped) {\n      var lang = (infostring || '').match(/\\S*/)[0];\n      if (this.options.highlight) {\n        var out = this.options.highlight(_code, lang);\n        if (out != null && out !== _code) {\n          escaped = true;\n          _code = out;\n        }\n      }\n      if (!lang) {\n        return '<pre><code>' + (escaped ? _code : escape$1(_code, true)) + '</code></pre>\\n';\n      }\n      return '<pre><code class=\"' + this.options.langPrefix + escape$1(lang, true) + '\">' + (escaped ? _code : escape$1(_code, true)) + '</code></pre>\\n';\n    };\n    _proto.blockquote = function blockquote(quote) {\n      return '<blockquote>\\n' + quote + '</blockquote>\\n';\n    };\n    _proto.html = function html(_html) {\n      return _html;\n    };\n    _proto.heading = function heading(text, level, raw, slugger) {\n      if (this.options.headerIds) {\n        return '<h' + level + ' id=\"' + this.options.headerPrefix + slugger.slug(raw) + '\">' + text + '</h' + level + '>\\n';\n      } // ignore IDs\n\n      return '<h' + level + '>' + text + '</h' + level + '>\\n';\n    };\n    _proto.hr = function hr() {\n      return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n    };\n    _proto.list = function list(body, ordered, start) {\n      var type = ordered ? 'ol' : 'ul',\n        startatt = ordered && start !== 1 ? ' start=\"' + start + '\"' : '';\n      return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n    };\n    _proto.listitem = function listitem(text) {\n      return '<li>' + text + '</li>\\n';\n    };\n    _proto.checkbox = function checkbox(checked) {\n      return '<input ' + (checked ? 'checked=\"\" ' : '') + 'disabled=\"\" type=\"checkbox\"' + (this.options.xhtml ? ' /' : '') + '> ';\n    };\n    _proto.paragraph = function paragraph(text) {\n      return '<p>' + text + '</p>\\n';\n    };\n    _proto.table = function table(header, body) {\n      if (body) body = '<tbody>' + body + '</tbody>';\n      return '<table>\\n' + '<thead>\\n' + header + '</thead>\\n' + body + '</table>\\n';\n    };\n    _proto.tablerow = function tablerow(content) {\n      return '<tr>\\n' + content + '</tr>\\n';\n    };\n    _proto.tablecell = function tablecell(content, flags) {\n      var type = flags.header ? 'th' : 'td';\n      var tag = flags.align ? '<' + type + ' align=\"' + flags.align + '\">' : '<' + type + '>';\n      return tag + content + '</' + type + '>\\n';\n    } // span level renderer\n    ;\n\n    _proto.strong = function strong(text) {\n      return '<strong>' + text + '</strong>';\n    };\n    _proto.em = function em(text) {\n      return '<em>' + text + '</em>';\n    };\n    _proto.codespan = function codespan(text) {\n      return '<code>' + text + '</code>';\n    };\n    _proto.br = function br() {\n      return this.options.xhtml ? '<br/>' : '<br>';\n    };\n    _proto.del = function del(text) {\n      return '<del>' + text + '</del>';\n    };\n    _proto.link = function link(href, title, text) {\n      href = cleanUrl$1(this.options.sanitize, this.options.baseUrl, href);\n      if (href === null) {\n        return text;\n      }\n      var out = '<a href=\"' + escape$1(href) + '\"';\n      if (title) {\n        out += ' title=\"' + title + '\"';\n      }\n      out += '>' + text + '</a>';\n      return out;\n    };\n    _proto.image = function image(href, title, text) {\n      href = cleanUrl$1(this.options.sanitize, this.options.baseUrl, href);\n      if (href === null) {\n        return text;\n      }\n      var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n      if (title) {\n        out += ' title=\"' + title + '\"';\n      }\n      out += this.options.xhtml ? '/>' : '>';\n      return out;\n    };\n    _proto.text = function text(_text) {\n      return _text;\n    };\n    return Renderer;\n  }();\n\n  /**\n   * TextRenderer\n   * returns only the textual part of the token\n   */\n  var TextRenderer_1 = /*#__PURE__*/function () {\n    function TextRenderer() {}\n    var _proto = TextRenderer.prototype;\n\n    // no need for block level renderers\n    _proto.strong = function strong(text) {\n      return text;\n    };\n    _proto.em = function em(text) {\n      return text;\n    };\n    _proto.codespan = function codespan(text) {\n      return text;\n    };\n    _proto.del = function del(text) {\n      return text;\n    };\n    _proto.html = function html(text) {\n      return text;\n    };\n    _proto.text = function text(_text) {\n      return _text;\n    };\n    _proto.link = function link(href, title, text) {\n      return '' + text;\n    };\n    _proto.image = function image(href, title, text) {\n      return '' + text;\n    };\n    _proto.br = function br() {\n      return '';\n    };\n    return TextRenderer;\n  }();\n\n  /**\n   * Slugger generates header id\n   */\n  var Slugger_1 = /*#__PURE__*/function () {\n    function Slugger() {\n      this.seen = {};\n    }\n    var _proto = Slugger.prototype;\n    _proto.serialize = function serialize(value) {\n      return value.toLowerCase().trim() // remove html tags\n      .replace(/<[!\\/a-z].*?>/ig, '') // remove unwanted chars\n      .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '').replace(/\\s/g, '-');\n    }\n    /**\n     * Finds the next safe (unique) slug to use\n     */;\n\n    _proto.getNextSafeSlug = function getNextSafeSlug(originalSlug, isDryRun) {\n      var slug = originalSlug;\n      var occurenceAccumulator = 0;\n      if (this.seen.hasOwnProperty(slug)) {\n        occurenceAccumulator = this.seen[originalSlug];\n        do {\n          occurenceAccumulator++;\n          slug = originalSlug + '-' + occurenceAccumulator;\n        } while (this.seen.hasOwnProperty(slug));\n      }\n      if (!isDryRun) {\n        this.seen[originalSlug] = occurenceAccumulator;\n        this.seen[slug] = 0;\n      }\n      return slug;\n    }\n    /**\n     * Convert string to unique id\n     * @param {object} options\n     * @param {boolean} options.dryrun Generates the next unique slug without updating the internal accumulator.\n     */;\n\n    _proto.slug = function slug(value, options) {\n      if (options === void 0) {\n        options = {};\n      }\n      var slug = this.serialize(value);\n      return this.getNextSafeSlug(slug, options.dryrun);\n    };\n    return Slugger;\n  }();\n  var defaults$4 = defaults.defaults;\n  var unescape$1 = helpers.unescape;\n  /**\n   * Parsing & Compiling\n   */\n\n  var Parser_1 = /*#__PURE__*/function () {\n    function Parser(options) {\n      this.options = options || defaults$4;\n      this.options.renderer = this.options.renderer || new Renderer_1();\n      this.renderer = this.options.renderer;\n      this.renderer.options = this.options;\n      this.textRenderer = new TextRenderer_1();\n      this.slugger = new Slugger_1();\n    }\n    /**\n     * Static Parse Method\n     */\n\n    Parser.parse = function parse(tokens, options) {\n      var parser = new Parser(options);\n      return parser.parse(tokens);\n    }\n    /**\n     * Static Parse Inline Method\n     */;\n\n    Parser.parseInline = function parseInline(tokens, options) {\n      var parser = new Parser(options);\n      return parser.parseInline(tokens);\n    }\n    /**\n     * Parse Loop\n     */;\n\n    var _proto = Parser.prototype;\n    _proto.parse = function parse(tokens, top) {\n      if (top === void 0) {\n        top = true;\n      }\n      var out = '',\n        i,\n        j,\n        k,\n        l2,\n        l3,\n        row,\n        cell,\n        header,\n        body,\n        token,\n        ordered,\n        start,\n        loose,\n        itemBody,\n        item,\n        checked,\n        task,\n        checkbox;\n      var l = tokens.length;\n      for (i = 0; i < l; i++) {\n        token = tokens[i];\n        switch (token.type) {\n          case 'space':\n            {\n              continue;\n            }\n          case 'hr':\n            {\n              out += this.renderer.hr();\n              continue;\n            }\n          case 'heading':\n            {\n              out += this.renderer.heading(this.parseInline(token.tokens), token.depth, unescape$1(this.parseInline(token.tokens, this.textRenderer)), this.slugger);\n              continue;\n            }\n          case 'code':\n            {\n              out += this.renderer.code(token.text, token.lang, token.escaped);\n              continue;\n            }\n          case 'table':\n            {\n              header = ''; // header\n\n              cell = '';\n              l2 = token.header.length;\n              for (j = 0; j < l2; j++) {\n                cell += this.renderer.tablecell(this.parseInline(token.tokens.header[j]), {\n                  header: true,\n                  align: token.align[j]\n                });\n              }\n              header += this.renderer.tablerow(cell);\n              body = '';\n              l2 = token.cells.length;\n              for (j = 0; j < l2; j++) {\n                row = token.tokens.cells[j];\n                cell = '';\n                l3 = row.length;\n                for (k = 0; k < l3; k++) {\n                  cell += this.renderer.tablecell(this.parseInline(row[k]), {\n                    header: false,\n                    align: token.align[k]\n                  });\n                }\n                body += this.renderer.tablerow(cell);\n              }\n              out += this.renderer.table(header, body);\n              continue;\n            }\n          case 'blockquote':\n            {\n              body = this.parse(token.tokens);\n              out += this.renderer.blockquote(body);\n              continue;\n            }\n          case 'list':\n            {\n              ordered = token.ordered;\n              start = token.start;\n              loose = token.loose;\n              l2 = token.items.length;\n              body = '';\n              for (j = 0; j < l2; j++) {\n                item = token.items[j];\n                checked = item.checked;\n                task = item.task;\n                itemBody = '';\n                if (item.task) {\n                  checkbox = this.renderer.checkbox(checked);\n                  if (loose) {\n                    if (item.tokens.length > 0 && item.tokens[0].type === 'text') {\n                      item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n                      if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                        item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                      }\n                    } else {\n                      item.tokens.unshift({\n                        type: 'text',\n                        text: checkbox\n                      });\n                    }\n                  } else {\n                    itemBody += checkbox;\n                  }\n                }\n                itemBody += this.parse(item.tokens, loose);\n                body += this.renderer.listitem(itemBody, task, checked);\n              }\n              out += this.renderer.list(body, ordered, start);\n              continue;\n            }\n          case 'html':\n            {\n              // TODO parse inline content if parameter markdown=1\n              out += this.renderer.html(token.text);\n              continue;\n            }\n          case 'paragraph':\n            {\n              out += this.renderer.paragraph(this.parseInline(token.tokens));\n              continue;\n            }\n          case 'text':\n            {\n              body = token.tokens ? this.parseInline(token.tokens) : token.text;\n              while (i + 1 < l && tokens[i + 1].type === 'text') {\n                token = tokens[++i];\n                body += '\\n' + (token.tokens ? this.parseInline(token.tokens) : token.text);\n              }\n              out += top ? this.renderer.paragraph(body) : body;\n              continue;\n            }\n          default:\n            {\n              var errMsg = 'Token with \"' + token.type + '\" type was not found.';\n              if (this.options.silent) {\n                console.error(errMsg);\n                return;\n              } else {\n                throw new Error(errMsg);\n              }\n            }\n        }\n      }\n      return out;\n    }\n    /**\n     * Parse Inline Tokens\n     */;\n\n    _proto.parseInline = function parseInline(tokens, renderer) {\n      renderer = renderer || this.renderer;\n      var out = '',\n        i,\n        token;\n      var l = tokens.length;\n      for (i = 0; i < l; i++) {\n        token = tokens[i];\n        switch (token.type) {\n          case 'escape':\n            {\n              out += renderer.text(token.text);\n              break;\n            }\n          case 'html':\n            {\n              out += renderer.html(token.text);\n              break;\n            }\n          case 'link':\n            {\n              out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));\n              break;\n            }\n          case 'image':\n            {\n              out += renderer.image(token.href, token.title, token.text);\n              break;\n            }\n          case 'strong':\n            {\n              out += renderer.strong(this.parseInline(token.tokens, renderer));\n              break;\n            }\n          case 'em':\n            {\n              out += renderer.em(this.parseInline(token.tokens, renderer));\n              break;\n            }\n          case 'codespan':\n            {\n              out += renderer.codespan(token.text);\n              break;\n            }\n          case 'br':\n            {\n              out += renderer.br();\n              break;\n            }\n          case 'del':\n            {\n              out += renderer.del(this.parseInline(token.tokens, renderer));\n              break;\n            }\n          case 'text':\n            {\n              out += renderer.text(token.text);\n              break;\n            }\n          default:\n            {\n              var errMsg = 'Token with \"' + token.type + '\" type was not found.';\n              if (this.options.silent) {\n                console.error(errMsg);\n                return;\n              } else {\n                throw new Error(errMsg);\n              }\n            }\n        }\n      }\n      return out;\n    };\n    return Parser;\n  }();\n  var merge$2 = helpers.merge,\n    checkSanitizeDeprecation$1 = helpers.checkSanitizeDeprecation,\n    escape$2 = helpers.escape;\n  var getDefaults = defaults.getDefaults,\n    changeDefaults = defaults.changeDefaults,\n    defaults$5 = defaults.defaults;\n  /**\n   * Marked\n   */\n\n  function marked(src, opt, callback) {\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      throw new Error('marked(): input parameter is undefined or null');\n    }\n    if (typeof src !== 'string') {\n      throw new Error('marked(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');\n    }\n    if (typeof opt === 'function') {\n      callback = opt;\n      opt = null;\n    }\n    opt = merge$2({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation$1(opt);\n    if (callback) {\n      var highlight = opt.highlight;\n      var tokens;\n      try {\n        tokens = Lexer_1.lex(src, opt);\n      } catch (e) {\n        return callback(e);\n      }\n      var done = function done(err) {\n        var out;\n        if (!err) {\n          try {\n            out = Parser_1.parse(tokens, opt);\n          } catch (e) {\n            err = e;\n          }\n        }\n        opt.highlight = highlight;\n        return err ? callback(err) : callback(null, out);\n      };\n      if (!highlight || highlight.length < 3) {\n        return done();\n      }\n      delete opt.highlight;\n      if (!tokens.length) return done();\n      var pending = 0;\n      marked.walkTokens(tokens, function (token) {\n        if (token.type === 'code') {\n          pending++;\n          setTimeout(function () {\n            highlight(token.text, token.lang, function (err, code) {\n              if (err) {\n                return done(err);\n              }\n              if (code != null && code !== token.text) {\n                token.text = code;\n                token.escaped = true;\n              }\n              pending--;\n              if (pending === 0) {\n                done();\n              }\n            });\n          }, 0);\n        }\n      });\n      if (pending === 0) {\n        done();\n      }\n      return;\n    }\n    try {\n      var _tokens = Lexer_1.lex(src, opt);\n      if (opt.walkTokens) {\n        marked.walkTokens(_tokens, opt.walkTokens);\n      }\n      return Parser_1.parse(_tokens, opt);\n    } catch (e) {\n      e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n      if (opt.silent) {\n        return '<p>An error occurred:</p><pre>' + escape$2(e.message + '', true) + '</pre>';\n      }\n      throw e;\n    }\n  }\n  /**\n   * Options\n   */\n\n  marked.options = marked.setOptions = function (opt) {\n    merge$2(marked.defaults, opt);\n    changeDefaults(marked.defaults);\n    return marked;\n  };\n  marked.getDefaults = getDefaults;\n  marked.defaults = defaults$5;\n  /**\n   * Use Extension\n   */\n\n  marked.use = function (extension) {\n    var opts = merge$2({}, extension);\n    if (extension.renderer) {\n      (function () {\n        var renderer = marked.defaults.renderer || new Renderer_1();\n        var _loop = function _loop(prop) {\n          var prevRenderer = renderer[prop];\n          renderer[prop] = function () {\n            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n              args[_key] = arguments[_key];\n            }\n            var ret = extension.renderer[prop].apply(renderer, args);\n            if (ret === false) {\n              ret = prevRenderer.apply(renderer, args);\n            }\n            return ret;\n          };\n        };\n        for (var prop in extension.renderer) {\n          _loop(prop);\n        }\n        opts.renderer = renderer;\n      })();\n    }\n    if (extension.tokenizer) {\n      (function () {\n        var tokenizer = marked.defaults.tokenizer || new Tokenizer_1();\n        var _loop2 = function _loop2(prop) {\n          var prevTokenizer = tokenizer[prop];\n          tokenizer[prop] = function () {\n            for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n              args[_key2] = arguments[_key2];\n            }\n            var ret = extension.tokenizer[prop].apply(tokenizer, args);\n            if (ret === false) {\n              ret = prevTokenizer.apply(tokenizer, args);\n            }\n            return ret;\n          };\n        };\n        for (var prop in extension.tokenizer) {\n          _loop2(prop);\n        }\n        opts.tokenizer = tokenizer;\n      })();\n    }\n    if (extension.walkTokens) {\n      var walkTokens = marked.defaults.walkTokens;\n      opts.walkTokens = function (token) {\n        extension.walkTokens(token);\n        if (walkTokens) {\n          walkTokens(token);\n        }\n      };\n    }\n    marked.setOptions(opts);\n  };\n  /**\n   * Run callback for every token\n   */\n\n  marked.walkTokens = function (tokens, callback) {\n    for (var _iterator = _createForOfIteratorHelperLoose(tokens), _step; !(_step = _iterator()).done;) {\n      var token = _step.value;\n      callback(token);\n      switch (token.type) {\n        case 'table':\n          {\n            for (var _iterator2 = _createForOfIteratorHelperLoose(token.tokens.header), _step2; !(_step2 = _iterator2()).done;) {\n              var cell = _step2.value;\n              marked.walkTokens(cell, callback);\n            }\n            for (var _iterator3 = _createForOfIteratorHelperLoose(token.tokens.cells), _step3; !(_step3 = _iterator3()).done;) {\n              var row = _step3.value;\n              for (var _iterator4 = _createForOfIteratorHelperLoose(row), _step4; !(_step4 = _iterator4()).done;) {\n                var _cell = _step4.value;\n                marked.walkTokens(_cell, callback);\n              }\n            }\n            break;\n          }\n        case 'list':\n          {\n            marked.walkTokens(token.items, callback);\n            break;\n          }\n        default:\n          {\n            if (token.tokens) {\n              marked.walkTokens(token.tokens, callback);\n            }\n          }\n      }\n    }\n  };\n  /**\n   * Parse Inline\n   */\n\n  marked.parseInline = function (src, opt) {\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      throw new Error('marked.parseInline(): input parameter is undefined or null');\n    }\n    if (typeof src !== 'string') {\n      throw new Error('marked.parseInline(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');\n    }\n    opt = merge$2({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation$1(opt);\n    try {\n      var tokens = Lexer_1.lexInline(src, opt);\n      if (opt.walkTokens) {\n        marked.walkTokens(tokens, opt.walkTokens);\n      }\n      return Parser_1.parseInline(tokens, opt);\n    } catch (e) {\n      e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n      if (opt.silent) {\n        return '<p>An error occurred:</p><pre>' + escape$2(e.message + '', true) + '</pre>';\n      }\n      throw e;\n    }\n  };\n  /**\n   * Expose\n   */\n\n  marked.Parser = Parser_1;\n  marked.parser = Parser_1.parse;\n  marked.Renderer = Renderer_1;\n  marked.TextRenderer = TextRenderer_1;\n  marked.Lexer = Lexer_1;\n  marked.lexer = Lexer_1.lex;\n  marked.Tokenizer = Tokenizer_1;\n  marked.Slugger = Slugger_1;\n  marked.parse = marked;\n  var marked_1 = marked;\n  return marked_1;\n});","map":{"version":3,"names":["global","factory","exports","module","define","amd","globalThis","self","marked","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","Constructor","protoProps","staticProps","prototype","_unsupportedIterableToArray","o","minLen","_arrayLikeToArray","n","toString","call","slice","constructor","name","Array","from","test","arr","len","arr2","_createForOfIteratorHelperLoose","allowArrayLike","it","Symbol","iterator","isArray","done","value","TypeError","next","bind","createCommonjsModule","fn","defaults","getDefaults","baseUrl","breaks","gfm","headerIds","headerPrefix","highlight","langPrefix","mangle","pedantic","renderer","sanitize","sanitizer","silent","smartLists","smartypants","tokenizer","walkTokens","xhtml","changeDefaults","newDefaults","defaults_1","defaults_2","defaults_3","escapeTest","escapeReplace","escapeTestNoEncode","escapeReplaceNoEncode","escapeReplacements","getEscapeReplacement","ch","escape","html","encode","replace","unescapeTest","unescape","_","toLowerCase","charAt","String","fromCharCode","parseInt","substring","caret","edit","regex","opt","source","obj","val","getRegex","RegExp","nonWordAndColonTest","originIndependentUrl","cleanUrl","base","href","prot","decodeURIComponent","e","indexOf","resolveUrl","encodeURI","baseUrls","justDomain","protocol","domain","rtrim","relativeBase","noopTest","exec","merge","arguments","hasOwnProperty","splitCells","tableRow","count","row","match","offset","str","escaped","curr","cells","split","splice","push","trim","c","invert","l","suffLen","currChar","substr","findClosingBracket","b","level","checkSanitizeDeprecation","console","warn","repeatString","pattern","result","helpers","defaults$1","rtrim$1","splitCells$1","_escape","findClosingBracket$1","outputLink","cap","link","raw","title","text","type","indentCodeCompensation","matchIndentToCode","indentToCode","map","node","matchIndentInNode","indentInNode","join","Tokenizer_1","Tokenizer","options","_proto","space","src","rules","block","newline","code","tokens","lastToken","trimRight","codeBlockStyle","fences","lang","heading","depth","nptable","item","header","align","hr","blockquote","list","bull","isordered","isparen","ordered","start","loose","items","itemMatch","addBack","istask","ischecked","bullet","undefined","task","checked","pre","def","tag","table","lheading","paragraph","inline","inLink","inRawBlock","lastParenIndex","linkLen","token","_escapes","reflink","links","nolink","strong","maskedSrc","prevChar","punctuation","endReg","endAst","endUnd","lastIndex","middle","index","em","codespan","hasNonSpaceChars","hasSpaceCharsOnBothEnds","startsWith","endsWith","br","del","autolink","url","prevCapZero","_backpedal","inlineText","noopTest$1","edit$1","merge$1","_paragraph","_label","_title","_tag","_comment","normal","reflinkSearch","_punctuation","_blockSkip","_overlapSkip","blockSkip","overlapSkip","_scheme","_email","_attribute","_href","_extended_email","defaults$2","block$1","inline$1","repeatString$1","out","charCodeAt","Math","random","Lexer_1","Lexer","create","lex","lexer","lexInline","inlineTokens","blockTokens","top","errMsg","error","Error","j","k","l2","keys","includes","lastIndexOf","get","defaults$3","cleanUrl$1","escape$1","Renderer_1","Renderer","_code","infostring","quote","_html","slugger","slug","body","startatt","listitem","checkbox","tablerow","content","tablecell","flags","image","_text","TextRenderer_1","TextRenderer","Slugger_1","Slugger","seen","serialize","getNextSafeSlug","originalSlug","isDryRun","occurenceAccumulator","dryrun","defaults$4","unescape$1","Parser_1","Parser","textRenderer","parse","parser","parseInline","l3","cell","itemBody","unshift","merge$2","checkSanitizeDeprecation$1","escape$2","defaults$5","callback","err","pending","setTimeout","_tokens","message","setOptions","use","extension","opts","_loop","prop","prevRenderer","_len","args","_key","ret","apply","_loop2","prevTokenizer","_len2","_key2","_iterator","_step","_iterator2","_step2","_iterator3","_step3","_iterator4","_step4","_cell","marked_1"],"sources":["C:/Users/Administrator/Desktop/sqllineage-master/sqllineagejs/node_modules/monaco-editor/esm/vs/base/common/marked/marked.js"],"sourcesContent":["/**\n * marked - a markdown parser\n * Copyright (c) 2011-2020, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.marked = factory());\n}(this, (function () { 'use strict';\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n\n  function _createForOfIteratorHelperLoose(o, allowArrayLike) {\n    var it;\n\n    if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n      if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n        if (it) o = it;\n        var i = 0;\n        return function () {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        };\n      }\n\n      throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n    }\n\n    it = o[Symbol.iterator]();\n    return it.next.bind(it);\n  }\n\n  function createCommonjsModule(fn, module) {\n  \treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n  }\n\n  var defaults = createCommonjsModule(function (module) {\n    function getDefaults() {\n      return {\n        baseUrl: null,\n        breaks: false,\n        gfm: true,\n        headerIds: true,\n        headerPrefix: '',\n        highlight: null,\n        langPrefix: 'language-',\n        mangle: true,\n        pedantic: false,\n        renderer: null,\n        sanitize: false,\n        sanitizer: null,\n        silent: false,\n        smartLists: false,\n        smartypants: false,\n        tokenizer: null,\n        walkTokens: null,\n        xhtml: false\n      };\n    }\n\n    function changeDefaults(newDefaults) {\n      module.exports.defaults = newDefaults;\n    }\n\n    module.exports = {\n      defaults: getDefaults(),\n      getDefaults: getDefaults,\n      changeDefaults: changeDefaults\n    };\n  });\n  var defaults_1 = defaults.defaults;\n  var defaults_2 = defaults.getDefaults;\n  var defaults_3 = defaults.changeDefaults;\n\n  /**\n   * Helpers\n   */\n  var escapeTest = /[&<>\"']/;\n  var escapeReplace = /[&<>\"']/g;\n  var escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\n  var escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\n  var escapeReplacements = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  var getEscapeReplacement = function getEscapeReplacement(ch) {\n    return escapeReplacements[ch];\n  };\n\n  function escape(html, encode) {\n    if (encode) {\n      if (escapeTest.test(html)) {\n        return html.replace(escapeReplace, getEscapeReplacement);\n      }\n    } else {\n      if (escapeTestNoEncode.test(html)) {\n        return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n      }\n    }\n\n    return html;\n  }\n\n  var unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n\n  function unescape(html) {\n    // explicitly match decimal, hex, and named HTML entities\n    return html.replace(unescapeTest, function (_, n) {\n      n = n.toLowerCase();\n      if (n === 'colon') return ':';\n\n      if (n.charAt(0) === '#') {\n        return n.charAt(1) === 'x' ? String.fromCharCode(parseInt(n.substring(2), 16)) : String.fromCharCode(+n.substring(1));\n      }\n\n      return '';\n    });\n  }\n\n  var caret = /(^|[^\\[])\\^/g;\n\n  function edit(regex, opt) {\n    regex = regex.source || regex;\n    opt = opt || '';\n    var obj = {\n      replace: function replace(name, val) {\n        val = val.source || val;\n        val = val.replace(caret, '$1');\n        regex = regex.replace(name, val);\n        return obj;\n      },\n      getRegex: function getRegex() {\n        return new RegExp(regex, opt);\n      }\n    };\n    return obj;\n  }\n\n  var nonWordAndColonTest = /[^\\w:]/g;\n  var originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\n  function cleanUrl(sanitize, base, href) {\n    if (sanitize) {\n      var prot;\n\n      try {\n        prot = decodeURIComponent(unescape(href)).replace(nonWordAndColonTest, '').toLowerCase();\n      } catch (e) {\n        return null;\n      }\n\n      if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n        return null;\n      }\n    }\n\n    if (base && !originIndependentUrl.test(href)) {\n      href = resolveUrl(base, href);\n    }\n\n    try {\n      href = encodeURI(href).replace(/%25/g, '%');\n    } catch (e) {\n      return null;\n    }\n\n    return href;\n  }\n\n  var baseUrls = {};\n  var justDomain = /^[^:]+:\\/*[^/]*$/;\n  var protocol = /^([^:]+:)[\\s\\S]*$/;\n  var domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n\n  function resolveUrl(base, href) {\n    if (!baseUrls[' ' + base]) {\n      // we can ignore everything in base after the last slash of its path component,\n      // but we might need to add _that_\n      // https://tools.ietf.org/html/rfc3986#section-3\n      if (justDomain.test(base)) {\n        baseUrls[' ' + base] = base + '/';\n      } else {\n        baseUrls[' ' + base] = rtrim(base, '/', true);\n      }\n    }\n\n    base = baseUrls[' ' + base];\n    var relativeBase = base.indexOf(':') === -1;\n\n    if (href.substring(0, 2) === '//') {\n      if (relativeBase) {\n        return href;\n      }\n\n      return base.replace(protocol, '$1') + href;\n    } else if (href.charAt(0) === '/') {\n      if (relativeBase) {\n        return href;\n      }\n\n      return base.replace(domain, '$1') + href;\n    } else {\n      return base + href;\n    }\n  }\n\n  var noopTest = {\n    exec: function noopTest() {}\n  };\n\n  function merge(obj) {\n    var i = 1,\n        target,\n        key;\n\n    for (; i < arguments.length; i++) {\n      target = arguments[i];\n\n      for (key in target) {\n        if (Object.prototype.hasOwnProperty.call(target, key)) {\n          obj[key] = target[key];\n        }\n      }\n    }\n\n    return obj;\n  }\n\n  function splitCells(tableRow, count) {\n    // ensure that every cell-delimiting pipe has a space\n    // before it to distinguish it from an escaped pipe\n    var row = tableRow.replace(/\\|/g, function (match, offset, str) {\n      var escaped = false,\n          curr = offset;\n\n      while (--curr >= 0 && str[curr] === '\\\\') {\n        escaped = !escaped;\n      }\n\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n        cells = row.split(/ \\|/);\n    var i = 0;\n\n    if (cells.length > count) {\n      cells.splice(count);\n    } else {\n      while (cells.length < count) {\n        cells.push('');\n      }\n    }\n\n    for (; i < cells.length; i++) {\n      // leading or trailing whitespace is ignored per the gfm spec\n      cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n    }\n\n    return cells;\n  } // Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n  // /c*$/ is vulnerable to REDOS.\n  // invert: Remove suffix of non-c chars instead. Default falsey.\n\n\n  function rtrim(str, c, invert) {\n    var l = str.length;\n\n    if (l === 0) {\n      return '';\n    } // Length of suffix matching the invert condition.\n\n\n    var suffLen = 0; // Step left until we fail to match the invert condition.\n\n    while (suffLen < l) {\n      var currChar = str.charAt(l - suffLen - 1);\n\n      if (currChar === c && !invert) {\n        suffLen++;\n      } else if (currChar !== c && invert) {\n        suffLen++;\n      } else {\n        break;\n      }\n    }\n\n    return str.substr(0, l - suffLen);\n  }\n\n  function findClosingBracket(str, b) {\n    if (str.indexOf(b[1]) === -1) {\n      return -1;\n    }\n\n    var l = str.length;\n    var level = 0,\n        i = 0;\n\n    for (; i < l; i++) {\n      if (str[i] === '\\\\') {\n        i++;\n      } else if (str[i] === b[0]) {\n        level++;\n      } else if (str[i] === b[1]) {\n        level--;\n\n        if (level < 0) {\n          return i;\n        }\n      }\n    }\n\n    return -1;\n  }\n\n  function checkSanitizeDeprecation(opt) {\n    if (opt && opt.sanitize && !opt.silent) {\n      console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n    }\n  } // copied from https://stackoverflow.com/a/5450113/806777\n\n\n  function repeatString(pattern, count) {\n    if (count < 1) {\n      return '';\n    }\n\n    var result = '';\n\n    while (count > 1) {\n      if (count & 1) {\n        result += pattern;\n      }\n\n      count >>= 1;\n      pattern += pattern;\n    }\n\n    return result + pattern;\n  }\n\n  var helpers = {\n    escape: escape,\n    unescape: unescape,\n    edit: edit,\n    cleanUrl: cleanUrl,\n    resolveUrl: resolveUrl,\n    noopTest: noopTest,\n    merge: merge,\n    splitCells: splitCells,\n    rtrim: rtrim,\n    findClosingBracket: findClosingBracket,\n    checkSanitizeDeprecation: checkSanitizeDeprecation,\n    repeatString: repeatString\n  };\n\n  var defaults$1 = defaults.defaults;\n  var rtrim$1 = helpers.rtrim,\n      splitCells$1 = helpers.splitCells,\n      _escape = helpers.escape,\n      findClosingBracket$1 = helpers.findClosingBracket;\n\n  function outputLink(cap, link, raw) {\n    var href = link.href;\n    var title = link.title ? _escape(link.title) : null;\n    var text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n\n    if (cap[0].charAt(0) !== '!') {\n      return {\n        type: 'link',\n        raw: raw,\n        href: href,\n        title: title,\n        text: text\n      };\n    } else {\n      return {\n        type: 'image',\n        raw: raw,\n        href: href,\n        title: title,\n        text: _escape(text)\n      };\n    }\n  }\n\n  function indentCodeCompensation(raw, text) {\n    var matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n\n    if (matchIndentToCode === null) {\n      return text;\n    }\n\n    var indentToCode = matchIndentToCode[1];\n    return text.split('\\n').map(function (node) {\n      var matchIndentInNode = node.match(/^\\s+/);\n\n      if (matchIndentInNode === null) {\n        return node;\n      }\n\n      var indentInNode = matchIndentInNode[0];\n\n      if (indentInNode.length >= indentToCode.length) {\n        return node.slice(indentToCode.length);\n      }\n\n      return node;\n    }).join('\\n');\n  }\n  /**\n   * Tokenizer\n   */\n\n\n  var Tokenizer_1 = /*#__PURE__*/function () {\n    function Tokenizer(options) {\n      this.options = options || defaults$1;\n    }\n\n    var _proto = Tokenizer.prototype;\n\n    _proto.space = function space(src) {\n      var cap = this.rules.block.newline.exec(src);\n\n      if (cap) {\n        if (cap[0].length > 1) {\n          return {\n            type: 'space',\n            raw: cap[0]\n          };\n        }\n\n        return {\n          raw: '\\n'\n        };\n      }\n    };\n\n    _proto.code = function code(src, tokens) {\n      var cap = this.rules.block.code.exec(src);\n\n      if (cap) {\n        var lastToken = tokens[tokens.length - 1]; // An indented code block cannot interrupt a paragraph.\n\n        if (lastToken && lastToken.type === 'paragraph') {\n          return {\n            raw: cap[0],\n            text: cap[0].trimRight()\n          };\n        }\n\n        var text = cap[0].replace(/^ {4}/gm, '');\n        return {\n          type: 'code',\n          raw: cap[0],\n          codeBlockStyle: 'indented',\n          text: !this.options.pedantic ? rtrim$1(text, '\\n') : text\n        };\n      }\n    };\n\n    _proto.fences = function fences(src) {\n      var cap = this.rules.block.fences.exec(src);\n\n      if (cap) {\n        var raw = cap[0];\n        var text = indentCodeCompensation(raw, cap[3] || '');\n        return {\n          type: 'code',\n          raw: raw,\n          lang: cap[2] ? cap[2].trim() : cap[2],\n          text: text\n        };\n      }\n    };\n\n    _proto.heading = function heading(src) {\n      var cap = this.rules.block.heading.exec(src);\n\n      if (cap) {\n        return {\n          type: 'heading',\n          raw: cap[0],\n          depth: cap[1].length,\n          text: cap[2]\n        };\n      }\n    };\n\n    _proto.nptable = function nptable(src) {\n      var cap = this.rules.block.nptable.exec(src);\n\n      if (cap) {\n        var item = {\n          type: 'table',\n          header: splitCells$1(cap[1].replace(/^ *| *\\| *$/g, '')),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : [],\n          raw: cap[0]\n        };\n\n        if (item.header.length === item.align.length) {\n          var l = item.align.length;\n          var i;\n\n          for (i = 0; i < l; i++) {\n            if (/^ *-+: *$/.test(item.align[i])) {\n              item.align[i] = 'right';\n            } else if (/^ *:-+: *$/.test(item.align[i])) {\n              item.align[i] = 'center';\n            } else if (/^ *:-+ *$/.test(item.align[i])) {\n              item.align[i] = 'left';\n            } else {\n              item.align[i] = null;\n            }\n          }\n\n          l = item.cells.length;\n\n          for (i = 0; i < l; i++) {\n            item.cells[i] = splitCells$1(item.cells[i], item.header.length);\n          }\n\n          return item;\n        }\n      }\n    };\n\n    _proto.hr = function hr(src) {\n      var cap = this.rules.block.hr.exec(src);\n\n      if (cap) {\n        return {\n          type: 'hr',\n          raw: cap[0]\n        };\n      }\n    };\n\n    _proto.blockquote = function blockquote(src) {\n      var cap = this.rules.block.blockquote.exec(src);\n\n      if (cap) {\n        var text = cap[0].replace(/^ *> ?/gm, '');\n        return {\n          type: 'blockquote',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n\n    _proto.list = function list(src) {\n      var cap = this.rules.block.list.exec(src);\n\n      if (cap) {\n        var raw = cap[0];\n        var bull = cap[2];\n        var isordered = bull.length > 1;\n        var isparen = bull[bull.length - 1] === ')';\n        var list = {\n          type: 'list',\n          raw: raw,\n          ordered: isordered,\n          start: isordered ? +bull.slice(0, -1) : '',\n          loose: false,\n          items: []\n        }; // Get each top-level item.\n\n        var itemMatch = cap[0].match(this.rules.block.item);\n        var next = false,\n            item,\n            space,\n            b,\n            addBack,\n            loose,\n            istask,\n            ischecked;\n        var l = itemMatch.length;\n\n        for (var i = 0; i < l; i++) {\n          item = itemMatch[i];\n          raw = item; // Remove the list item's bullet\n          // so it is seen as the next token.\n\n          space = item.length;\n          item = item.replace(/^ *([*+-]|\\d+[.)]) ?/, ''); // Outdent whatever the\n          // list item contains. Hacky.\n\n          if (~item.indexOf('\\n ')) {\n            space -= item.length;\n            item = !this.options.pedantic ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '') : item.replace(/^ {1,4}/gm, '');\n          } // Determine whether the next list item belongs here.\n          // Backpedal if it does not belong in this list.\n\n\n          if (i !== l - 1) {\n            b = this.rules.block.bullet.exec(itemMatch[i + 1])[0];\n\n            if (isordered ? b.length === 1 || !isparen && b[b.length - 1] === ')' : b.length > 1 || this.options.smartLists && b !== bull) {\n              addBack = itemMatch.slice(i + 1).join('\\n');\n              list.raw = list.raw.substring(0, list.raw.length - addBack.length);\n              i = l - 1;\n            }\n          } // Determine whether item is loose or not.\n          // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n          // for discount behavior.\n\n\n          loose = next || /\\n\\n(?!\\s*$)/.test(item);\n\n          if (i !== l - 1) {\n            next = item.charAt(item.length - 1) === '\\n';\n            if (!loose) loose = next;\n          }\n\n          if (loose) {\n            list.loose = true;\n          } // Check for task list items\n\n\n          istask = /^\\[[ xX]\\] /.test(item);\n          ischecked = undefined;\n\n          if (istask) {\n            ischecked = item[1] !== ' ';\n            item = item.replace(/^\\[[ xX]\\] +/, '');\n          }\n\n          list.items.push({\n            type: 'list_item',\n            raw: raw,\n            task: istask,\n            checked: ischecked,\n            loose: loose,\n            text: item\n          });\n        }\n\n        return list;\n      }\n    };\n\n    _proto.html = function html(src) {\n      var cap = this.rules.block.html.exec(src);\n\n      if (cap) {\n        return {\n          type: this.options.sanitize ? 'paragraph' : 'html',\n          raw: cap[0],\n          pre: !this.options.sanitizer && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n          text: this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : _escape(cap[0]) : cap[0]\n        };\n      }\n    };\n\n    _proto.def = function def(src) {\n      var cap = this.rules.block.def.exec(src);\n\n      if (cap) {\n        if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n        var tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n        return {\n          tag: tag,\n          raw: cap[0],\n          href: cap[2],\n          title: cap[3]\n        };\n      }\n    };\n\n    _proto.table = function table(src) {\n      var cap = this.rules.block.table.exec(src);\n\n      if (cap) {\n        var item = {\n          type: 'table',\n          header: splitCells$1(cap[1].replace(/^ *| *\\| *$/g, '')),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n        };\n\n        if (item.header.length === item.align.length) {\n          item.raw = cap[0];\n          var l = item.align.length;\n          var i;\n\n          for (i = 0; i < l; i++) {\n            if (/^ *-+: *$/.test(item.align[i])) {\n              item.align[i] = 'right';\n            } else if (/^ *:-+: *$/.test(item.align[i])) {\n              item.align[i] = 'center';\n            } else if (/^ *:-+ *$/.test(item.align[i])) {\n              item.align[i] = 'left';\n            } else {\n              item.align[i] = null;\n            }\n          }\n\n          l = item.cells.length;\n\n          for (i = 0; i < l; i++) {\n            item.cells[i] = splitCells$1(item.cells[i].replace(/^ *\\| *| *\\| *$/g, ''), item.header.length);\n          }\n\n          return item;\n        }\n      }\n    };\n\n    _proto.lheading = function lheading(src) {\n      var cap = this.rules.block.lheading.exec(src);\n\n      if (cap) {\n        return {\n          type: 'heading',\n          raw: cap[0],\n          depth: cap[2].charAt(0) === '=' ? 1 : 2,\n          text: cap[1]\n        };\n      }\n    };\n\n    _proto.paragraph = function paragraph(src) {\n      var cap = this.rules.block.paragraph.exec(src);\n\n      if (cap) {\n        return {\n          type: 'paragraph',\n          raw: cap[0],\n          text: cap[1].charAt(cap[1].length - 1) === '\\n' ? cap[1].slice(0, -1) : cap[1]\n        };\n      }\n    };\n\n    _proto.text = function text(src, tokens) {\n      var cap = this.rules.block.text.exec(src);\n\n      if (cap) {\n        var lastToken = tokens[tokens.length - 1];\n\n        if (lastToken && lastToken.type === 'text') {\n          return {\n            raw: cap[0],\n            text: cap[0]\n          };\n        }\n\n        return {\n          type: 'text',\n          raw: cap[0],\n          text: cap[0]\n        };\n      }\n    };\n\n    _proto.escape = function escape(src) {\n      var cap = this.rules.inline.escape.exec(src);\n\n      if (cap) {\n        return {\n          type: 'escape',\n          raw: cap[0],\n          text: _escape(cap[1])\n        };\n      }\n    };\n\n    _proto.tag = function tag(src, inLink, inRawBlock) {\n      var cap = this.rules.inline.tag.exec(src);\n\n      if (cap) {\n        if (!inLink && /^<a /i.test(cap[0])) {\n          inLink = true;\n        } else if (inLink && /^<\\/a>/i.test(cap[0])) {\n          inLink = false;\n        }\n\n        if (!inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          inRawBlock = true;\n        } else if (inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          inRawBlock = false;\n        }\n\n        return {\n          type: this.options.sanitize ? 'text' : 'html',\n          raw: cap[0],\n          inLink: inLink,\n          inRawBlock: inRawBlock,\n          text: this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : _escape(cap[0]) : cap[0]\n        };\n      }\n    };\n\n    _proto.link = function link(src) {\n      var cap = this.rules.inline.link.exec(src);\n\n      if (cap) {\n        var lastParenIndex = findClosingBracket$1(cap[2], '()');\n\n        if (lastParenIndex > -1) {\n          var start = cap[0].indexOf('!') === 0 ? 5 : 4;\n          var linkLen = start + cap[1].length + lastParenIndex;\n          cap[2] = cap[2].substring(0, lastParenIndex);\n          cap[0] = cap[0].substring(0, linkLen).trim();\n          cap[3] = '';\n        }\n\n        var href = cap[2];\n        var title = '';\n\n        if (this.options.pedantic) {\n          var link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n          if (link) {\n            href = link[1];\n            title = link[3];\n          } else {\n            title = '';\n          }\n        } else {\n          title = cap[3] ? cap[3].slice(1, -1) : '';\n        }\n\n        href = href.trim().replace(/^<([\\s\\S]*)>$/, '$1');\n        var token = outputLink(cap, {\n          href: href ? href.replace(this.rules.inline._escapes, '$1') : href,\n          title: title ? title.replace(this.rules.inline._escapes, '$1') : title\n        }, cap[0]);\n        return token;\n      }\n    };\n\n    _proto.reflink = function reflink(src, links) {\n      var cap;\n\n      if ((cap = this.rules.inline.reflink.exec(src)) || (cap = this.rules.inline.nolink.exec(src))) {\n        var link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n        link = links[link.toLowerCase()];\n\n        if (!link || !link.href) {\n          var text = cap[0].charAt(0);\n          return {\n            type: 'text',\n            raw: text,\n            text: text\n          };\n        }\n\n        var token = outputLink(cap, link, cap[0]);\n        return token;\n      }\n    };\n\n    _proto.strong = function strong(src, maskedSrc, prevChar) {\n      if (prevChar === void 0) {\n        prevChar = '';\n      }\n\n      var match = this.rules.inline.strong.start.exec(src);\n\n      if (match && (!match[1] || match[1] && (prevChar === '' || this.rules.inline.punctuation.exec(prevChar)))) {\n        maskedSrc = maskedSrc.slice(-1 * src.length);\n        var endReg = match[0] === '**' ? this.rules.inline.strong.endAst : this.rules.inline.strong.endUnd;\n        endReg.lastIndex = 0;\n        var cap;\n\n        while ((match = endReg.exec(maskedSrc)) != null) {\n          cap = this.rules.inline.strong.middle.exec(maskedSrc.slice(0, match.index + 3));\n\n          if (cap) {\n            return {\n              type: 'strong',\n              raw: src.slice(0, cap[0].length),\n              text: src.slice(2, cap[0].length - 2)\n            };\n          }\n        }\n      }\n    };\n\n    _proto.em = function em(src, maskedSrc, prevChar) {\n      if (prevChar === void 0) {\n        prevChar = '';\n      }\n\n      var match = this.rules.inline.em.start.exec(src);\n\n      if (match && (!match[1] || match[1] && (prevChar === '' || this.rules.inline.punctuation.exec(prevChar)))) {\n        maskedSrc = maskedSrc.slice(-1 * src.length);\n        var endReg = match[0] === '*' ? this.rules.inline.em.endAst : this.rules.inline.em.endUnd;\n        endReg.lastIndex = 0;\n        var cap;\n\n        while ((match = endReg.exec(maskedSrc)) != null) {\n          cap = this.rules.inline.em.middle.exec(maskedSrc.slice(0, match.index + 2));\n\n          if (cap) {\n            return {\n              type: 'em',\n              raw: src.slice(0, cap[0].length),\n              text: src.slice(1, cap[0].length - 1)\n            };\n          }\n        }\n      }\n    };\n\n    _proto.codespan = function codespan(src) {\n      var cap = this.rules.inline.code.exec(src);\n\n      if (cap) {\n        var text = cap[2].replace(/\\n/g, ' ');\n        var hasNonSpaceChars = /[^ ]/.test(text);\n        var hasSpaceCharsOnBothEnds = text.startsWith(' ') && text.endsWith(' ');\n\n        if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n          text = text.substring(1, text.length - 1);\n        }\n\n        text = _escape(text, true);\n        return {\n          type: 'codespan',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n\n    _proto.br = function br(src) {\n      var cap = this.rules.inline.br.exec(src);\n\n      if (cap) {\n        return {\n          type: 'br',\n          raw: cap[0]\n        };\n      }\n    };\n\n    _proto.del = function del(src) {\n      var cap = this.rules.inline.del.exec(src);\n\n      if (cap) {\n        return {\n          type: 'del',\n          raw: cap[0],\n          text: cap[1]\n        };\n      }\n    };\n\n    _proto.autolink = function autolink(src, mangle) {\n      var cap = this.rules.inline.autolink.exec(src);\n\n      if (cap) {\n        var text, href;\n\n        if (cap[2] === '@') {\n          text = _escape(this.options.mangle ? mangle(cap[1]) : cap[1]);\n          href = 'mailto:' + text;\n        } else {\n          text = _escape(cap[1]);\n          href = text;\n        }\n\n        return {\n          type: 'link',\n          raw: cap[0],\n          text: text,\n          href: href,\n          tokens: [{\n            type: 'text',\n            raw: text,\n            text: text\n          }]\n        };\n      }\n    };\n\n    _proto.url = function url(src, mangle) {\n      var cap;\n\n      if (cap = this.rules.inline.url.exec(src)) {\n        var text, href;\n\n        if (cap[2] === '@') {\n          text = _escape(this.options.mangle ? mangle(cap[0]) : cap[0]);\n          href = 'mailto:' + text;\n        } else {\n          // do extended autolink path validation\n          var prevCapZero;\n\n          do {\n            prevCapZero = cap[0];\n            cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];\n          } while (prevCapZero !== cap[0]);\n\n          text = _escape(cap[0]);\n\n          if (cap[1] === 'www.') {\n            href = 'http://' + text;\n          } else {\n            href = text;\n          }\n        }\n\n        return {\n          type: 'link',\n          raw: cap[0],\n          text: text,\n          href: href,\n          tokens: [{\n            type: 'text',\n            raw: text,\n            text: text\n          }]\n        };\n      }\n    };\n\n    _proto.inlineText = function inlineText(src, inRawBlock, smartypants) {\n      var cap = this.rules.inline.text.exec(src);\n\n      if (cap) {\n        var text;\n\n        if (inRawBlock) {\n          text = this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : _escape(cap[0]) : cap[0];\n        } else {\n          text = _escape(this.options.smartypants ? smartypants(cap[0]) : cap[0]);\n        }\n\n        return {\n          type: 'text',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n\n    return Tokenizer;\n  }();\n\n  var noopTest$1 = helpers.noopTest,\n      edit$1 = helpers.edit,\n      merge$1 = helpers.merge;\n  /**\n   * Block-Level Grammar\n   */\n\n  var block = {\n    newline: /^\\n+/,\n    code: /^( {4}[^\\n]+\\n*)+/,\n    fences: /^ {0,3}(`{3,}(?=[^`\\n]*\\n)|~{3,})([^\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?:\\n+|$)|$)/,\n    hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,\n    heading: /^ {0,3}(#{1,6}) +([^\\n]*?)(?: +#+)? *(?:\\n+|$)/,\n    blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n    list: /^( {0,3})(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\n    html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (6)\n    + '|<(?!script|pre|style)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) open tag\n    + '|</(?!script|pre|style)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) closing tag\n    + ')',\n    def: /^ {0,3}\\[(label)\\]: *\\n? *<?([^\\s>]+)>?(?:(?: +\\n? *| *\\n *)(title))? *(?:\\n+|$)/,\n    nptable: noopTest$1,\n    table: noopTest$1,\n    lheading: /^([^\\n]+)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n    // regex template, placeholders will be replaced according to different paragraph\n    // interruption rules of commonmark and the original markdown spec:\n    _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html)[^\\n]+)*)/,\n    text: /^[^\\n]+/\n  };\n  block._label = /(?!\\s*\\])(?:\\\\[\\[\\]]|[^\\[\\]])+/;\n  block._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\n  block.def = edit$1(block.def).replace('label', block._label).replace('title', block._title).getRegex();\n  block.bullet = /(?:[*+-]|\\d{1,9}[.)])/;\n  block.item = /^( *)(bull) ?[^\\n]*(?:\\n(?!\\1bull ?)[^\\n]*)*/;\n  block.item = edit$1(block.item, 'gm').replace(/bull/g, block.bullet).getRegex();\n  block.list = edit$1(block.list).replace(/bull/g, block.bullet).replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))').replace('def', '\\\\n+(?=' + block.def.source + ')').getRegex();\n  block._tag = 'address|article|aside|base|basefont|blockquote|body|caption' + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption' + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe' + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option' + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr' + '|track|ul';\n  block._comment = /<!--(?!-?>)[\\s\\S]*?(?:-->|$)/;\n  block.html = edit$1(block.html, 'i').replace('comment', block._comment).replace('tag', block._tag).replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/).getRegex();\n  block.paragraph = edit$1(block._paragraph).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('blockquote', ' {0,3}>').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)').replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n  block.blockquote = edit$1(block.blockquote).replace('paragraph', block.paragraph).getRegex();\n  /**\n   * Normal Block Grammar\n   */\n\n  block.normal = merge$1({}, block);\n  /**\n   * GFM Block Grammar\n   */\n\n  block.gfm = merge$1({}, block.normal, {\n    nptable: '^ *([^|\\\\n ].*\\\\|.*)\\\\n' // Header\n    + ' {0,3}([-:]+ *\\\\|[-| :]*)' // Align\n    + '(?:\\\\n((?:(?!\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)',\n    // Cells\n    table: '^ *\\\\|(.+)\\\\n' // Header\n    + ' {0,3}\\\\|?( *[-:]+[-| :]*)' // Align\n    + '(?:\\\\n *((?:(?!\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n\n  });\n  block.gfm.nptable = edit$1(block.gfm.nptable).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('blockquote', ' {0,3}>').replace('code', ' {4}[^\\\\n]').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)').replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n  block.gfm.table = edit$1(block.gfm.table).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('blockquote', ' {0,3}>').replace('code', ' {4}[^\\\\n]').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)').replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n  /**\n   * Pedantic grammar (original John Gruber's loose markdown specification)\n   */\n\n  block.pedantic = merge$1({}, block.normal, {\n    html: edit$1('^ *(?:comment *(?:\\\\n|\\\\s*$)' + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))').replace('comment', block._comment).replace(/tag/g, '(?!(?:' + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub' + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)' + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b').getRegex(),\n    def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n    heading: /^ *(#{1,6}) *([^\\n]+?) *(?:#+ *)?(?:\\n+|$)/,\n    fences: noopTest$1,\n    // fences not supported\n    paragraph: edit$1(block.normal._paragraph).replace('hr', block.hr).replace('heading', ' *#{1,6} *[^\\n]').replace('lheading', block.lheading).replace('blockquote', ' {0,3}>').replace('|fences', '').replace('|list', '').replace('|html', '').getRegex()\n  });\n  /**\n   * Inline-Level Grammar\n   */\n\n  var inline = {\n    escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n    autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n    url: noopTest$1,\n    tag: '^comment' + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>',\n    // CDATA section\n    link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n    reflink: /^!?\\[(label)\\]\\[(?!\\s*\\])((?:\\\\[\\[\\]]?|[^\\[\\]\\\\])+)\\]/,\n    nolink: /^!?\\[(?!\\s*\\])((?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]])*)\\](?:\\[\\])?/,\n    reflinkSearch: 'reflink|nolink(?!\\\\()',\n    strong: {\n      start: /^(?:(\\*\\*(?=[*punctuation]))|\\*\\*)(?![\\s])|__/,\n      // (1) returns if starts w/ punctuation\n      middle: /^\\*\\*(?:(?:(?!overlapSkip)(?:[^*]|\\\\\\*)|overlapSkip)|\\*(?:(?!overlapSkip)(?:[^*]|\\\\\\*)|overlapSkip)*?\\*)+?\\*\\*$|^__(?![\\s])((?:(?:(?!overlapSkip)(?:[^_]|\\\\_)|overlapSkip)|_(?:(?!overlapSkip)(?:[^_]|\\\\_)|overlapSkip)*?_)+?)__$/,\n      endAst: /[^punctuation\\s]\\*\\*(?!\\*)|[punctuation]\\*\\*(?!\\*)(?:(?=[punctuation_\\s]|$))/,\n      // last char can't be punct, or final * must also be followed by punct (or endline)\n      endUnd: /[^\\s]__(?!_)(?:(?=[punctuation*\\s])|$)/ // last char can't be a space, and final _ must preceed punct or \\s (or endline)\n\n    },\n    em: {\n      start: /^(?:(\\*(?=[punctuation]))|\\*)(?![*\\s])|_/,\n      // (1) returns if starts w/ punctuation\n      middle: /^\\*(?:(?:(?!overlapSkip)(?:[^*]|\\\\\\*)|overlapSkip)|\\*(?:(?!overlapSkip)(?:[^*]|\\\\\\*)|overlapSkip)*?\\*)+?\\*$|^_(?![_\\s])(?:(?:(?!overlapSkip)(?:[^_]|\\\\_)|overlapSkip)|_(?:(?!overlapSkip)(?:[^_]|\\\\_)|overlapSkip)*?_)+?_$/,\n      endAst: /[^punctuation\\s]\\*(?!\\*)|[punctuation]\\*(?!\\*)(?:(?=[punctuation_\\s]|$))/,\n      // last char can't be punct, or final * must also be followed by punct (or endline)\n      endUnd: /[^\\s]_(?!_)(?:(?=[punctuation*\\s])|$)/ // last char can't be a space, and final _ must preceed punct or \\s (or endline)\n\n    },\n    code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n    br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n    del: noopTest$1,\n    text: /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*]|\\b_|$)|[^ ](?= {2,}\\n)))/,\n    punctuation: /^([\\s*punctuation])/\n  }; // list of punctuation marks from common mark spec\n  // without * and _ to workaround cases with double emphasis\n\n  inline._punctuation = '!\"#$%&\\'()+\\\\-.,/:;<=>?@\\\\[\\\\]`^{|}~';\n  inline.punctuation = edit$1(inline.punctuation).replace(/punctuation/g, inline._punctuation).getRegex(); // sequences em should skip over [title](link), `code`, <html>\n\n  inline._blockSkip = '\\\\[[^\\\\]]*?\\\\]\\\\([^\\\\)]*?\\\\)|`[^`]*?`|<[^>]*?>';\n  inline._overlapSkip = '__[^_]*?__|\\\\*\\\\*\\\\[^\\\\*\\\\]*?\\\\*\\\\*';\n  inline._comment = edit$1(block._comment).replace('(?:-->|$)', '-->').getRegex();\n  inline.em.start = edit$1(inline.em.start).replace(/punctuation/g, inline._punctuation).getRegex();\n  inline.em.middle = edit$1(inline.em.middle).replace(/punctuation/g, inline._punctuation).replace(/overlapSkip/g, inline._overlapSkip).getRegex();\n  inline.em.endAst = edit$1(inline.em.endAst, 'g').replace(/punctuation/g, inline._punctuation).getRegex();\n  inline.em.endUnd = edit$1(inline.em.endUnd, 'g').replace(/punctuation/g, inline._punctuation).getRegex();\n  inline.strong.start = edit$1(inline.strong.start).replace(/punctuation/g, inline._punctuation).getRegex();\n  inline.strong.middle = edit$1(inline.strong.middle).replace(/punctuation/g, inline._punctuation).replace(/overlapSkip/g, inline._overlapSkip).getRegex();\n  inline.strong.endAst = edit$1(inline.strong.endAst, 'g').replace(/punctuation/g, inline._punctuation).getRegex();\n  inline.strong.endUnd = edit$1(inline.strong.endUnd, 'g').replace(/punctuation/g, inline._punctuation).getRegex();\n  inline.blockSkip = edit$1(inline._blockSkip, 'g').getRegex();\n  inline.overlapSkip = edit$1(inline._overlapSkip, 'g').getRegex();\n  inline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n  inline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\n  inline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\n  inline.autolink = edit$1(inline.autolink).replace('scheme', inline._scheme).replace('email', inline._email).getRegex();\n  inline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n  inline.tag = edit$1(inline.tag).replace('comment', inline._comment).replace('attribute', inline._attribute).getRegex();\n  inline._label = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\n  inline._href = /<(?:\\\\[<>]?|[^\\s<>\\\\])*>|[^\\s\\x00-\\x1f]*/;\n  inline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n  inline.link = edit$1(inline.link).replace('label', inline._label).replace('href', inline._href).replace('title', inline._title).getRegex();\n  inline.reflink = edit$1(inline.reflink).replace('label', inline._label).getRegex();\n  inline.reflinkSearch = edit$1(inline.reflinkSearch, 'g').replace('reflink', inline.reflink).replace('nolink', inline.nolink).getRegex();\n  /**\n   * Normal Inline Grammar\n   */\n\n  inline.normal = merge$1({}, inline);\n  /**\n   * Pedantic Inline Grammar\n   */\n\n  inline.pedantic = merge$1({}, inline.normal, {\n    strong: {\n      start: /^__|\\*\\*/,\n      middle: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n      endAst: /\\*\\*(?!\\*)/g,\n      endUnd: /__(?!_)/g\n    },\n    em: {\n      start: /^_|\\*/,\n      middle: /^()\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/,\n      endAst: /\\*(?!\\*)/g,\n      endUnd: /_(?!_)/g\n    },\n    link: edit$1(/^!?\\[(label)\\]\\((.*?)\\)/).replace('label', inline._label).getRegex(),\n    reflink: edit$1(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/).replace('label', inline._label).getRegex()\n  });\n  /**\n   * GFM Inline Grammar\n   */\n\n  inline.gfm = merge$1({}, inline.normal, {\n    escape: edit$1(inline.escape).replace('])', '~|])').getRegex(),\n    _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n    url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n    _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n    del: /^~+(?=\\S)([\\s\\S]*?\\S)~+/,\n    text: /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))/\n  });\n  inline.gfm.url = edit$1(inline.gfm.url, 'i').replace('email', inline.gfm._extended_email).getRegex();\n  /**\n   * GFM + Line Breaks Inline Grammar\n   */\n\n  inline.breaks = merge$1({}, inline.gfm, {\n    br: edit$1(inline.br).replace('{2,}', '*').getRegex(),\n    text: edit$1(inline.gfm.text).replace('\\\\b_', '\\\\b_| {2,}\\\\n').replace(/\\{2,\\}/g, '*').getRegex()\n  });\n  var rules = {\n    block: block,\n    inline: inline\n  };\n\n  var defaults$2 = defaults.defaults;\n  var block$1 = rules.block,\n      inline$1 = rules.inline;\n  var repeatString$1 = helpers.repeatString;\n  /**\n   * smartypants text replacement\n   */\n\n  function smartypants(text) {\n    return text // em-dashes\n    .replace(/---/g, \"\\u2014\") // en-dashes\n    .replace(/--/g, \"\\u2013\") // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, \"$1\\u2018\") // closing singles & apostrophes\n    .replace(/'/g, \"\\u2019\") // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, \"$1\\u201C\") // closing doubles\n    .replace(/\"/g, \"\\u201D\") // ellipses\n    .replace(/\\.{3}/g, \"\\u2026\");\n  }\n  /**\n   * mangle email addresses\n   */\n\n\n  function mangle(text) {\n    var out = '',\n        i,\n        ch;\n    var l = text.length;\n\n    for (i = 0; i < l; i++) {\n      ch = text.charCodeAt(i);\n\n      if (Math.random() > 0.5) {\n        ch = 'x' + ch.toString(16);\n      }\n\n      out += '&#' + ch + ';';\n    }\n\n    return out;\n  }\n  /**\n   * Block Lexer\n   */\n\n\n  var Lexer_1 = /*#__PURE__*/function () {\n    function Lexer(options) {\n      this.tokens = [];\n      this.tokens.links = Object.create(null);\n      this.options = options || defaults$2;\n      this.options.tokenizer = this.options.tokenizer || new Tokenizer_1();\n      this.tokenizer = this.options.tokenizer;\n      this.tokenizer.options = this.options;\n      var rules = {\n        block: block$1.normal,\n        inline: inline$1.normal\n      };\n\n      if (this.options.pedantic) {\n        rules.block = block$1.pedantic;\n        rules.inline = inline$1.pedantic;\n      } else if (this.options.gfm) {\n        rules.block = block$1.gfm;\n\n        if (this.options.breaks) {\n          rules.inline = inline$1.breaks;\n        } else {\n          rules.inline = inline$1.gfm;\n        }\n      }\n\n      this.tokenizer.rules = rules;\n    }\n    /**\n     * Expose Rules\n     */\n\n\n    /**\n     * Static Lex Method\n     */\n    Lexer.lex = function lex(src, options) {\n      var lexer = new Lexer(options);\n      return lexer.lex(src);\n    }\n    /**\n     * Static Lex Inline Method\n     */\n    ;\n\n    Lexer.lexInline = function lexInline(src, options) {\n      var lexer = new Lexer(options);\n      return lexer.inlineTokens(src);\n    }\n    /**\n     * Preprocessing\n     */\n    ;\n\n    var _proto = Lexer.prototype;\n\n    _proto.lex = function lex(src) {\n      src = src.replace(/\\r\\n|\\r/g, '\\n').replace(/\\t/g, '    ');\n      this.blockTokens(src, this.tokens, true);\n      this.inline(this.tokens);\n      return this.tokens;\n    }\n    /**\n     * Lexing\n     */\n    ;\n\n    _proto.blockTokens = function blockTokens(src, tokens, top) {\n      if (tokens === void 0) {\n        tokens = [];\n      }\n\n      if (top === void 0) {\n        top = true;\n      }\n\n      src = src.replace(/^ +$/gm, '');\n      var token, i, l, lastToken;\n\n      while (src) {\n        // newline\n        if (token = this.tokenizer.space(src)) {\n          src = src.substring(token.raw.length);\n\n          if (token.type) {\n            tokens.push(token);\n          }\n\n          continue;\n        } // code\n\n\n        if (token = this.tokenizer.code(src, tokens)) {\n          src = src.substring(token.raw.length);\n\n          if (token.type) {\n            tokens.push(token);\n          } else {\n            lastToken = tokens[tokens.length - 1];\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n          }\n\n          continue;\n        } // fences\n\n\n        if (token = this.tokenizer.fences(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // heading\n\n\n        if (token = this.tokenizer.heading(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // table no leading pipe (gfm)\n\n\n        if (token = this.tokenizer.nptable(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // hr\n\n\n        if (token = this.tokenizer.hr(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // blockquote\n\n\n        if (token = this.tokenizer.blockquote(src)) {\n          src = src.substring(token.raw.length);\n          token.tokens = this.blockTokens(token.text, [], top);\n          tokens.push(token);\n          continue;\n        } // list\n\n\n        if (token = this.tokenizer.list(src)) {\n          src = src.substring(token.raw.length);\n          l = token.items.length;\n\n          for (i = 0; i < l; i++) {\n            token.items[i].tokens = this.blockTokens(token.items[i].text, [], false);\n          }\n\n          tokens.push(token);\n          continue;\n        } // html\n\n\n        if (token = this.tokenizer.html(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // def\n\n\n        if (top && (token = this.tokenizer.def(src))) {\n          src = src.substring(token.raw.length);\n\n          if (!this.tokens.links[token.tag]) {\n            this.tokens.links[token.tag] = {\n              href: token.href,\n              title: token.title\n            };\n          }\n\n          continue;\n        } // table (gfm)\n\n\n        if (token = this.tokenizer.table(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // lheading\n\n\n        if (token = this.tokenizer.lheading(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // top-level paragraph\n\n\n        if (top && (token = this.tokenizer.paragraph(src))) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // text\n\n\n        if (token = this.tokenizer.text(src, tokens)) {\n          src = src.substring(token.raw.length);\n\n          if (token.type) {\n            tokens.push(token);\n          } else {\n            lastToken = tokens[tokens.length - 1];\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n          }\n\n          continue;\n        }\n\n        if (src) {\n          var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n\n          if (this.options.silent) {\n            console.error(errMsg);\n            break;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n\n      return tokens;\n    };\n\n    _proto.inline = function inline(tokens) {\n      var i, j, k, l2, row, token;\n      var l = tokens.length;\n\n      for (i = 0; i < l; i++) {\n        token = tokens[i];\n\n        switch (token.type) {\n          case 'paragraph':\n          case 'text':\n          case 'heading':\n            {\n              token.tokens = [];\n              this.inlineTokens(token.text, token.tokens);\n              break;\n            }\n\n          case 'table':\n            {\n              token.tokens = {\n                header: [],\n                cells: []\n              }; // header\n\n              l2 = token.header.length;\n\n              for (j = 0; j < l2; j++) {\n                token.tokens.header[j] = [];\n                this.inlineTokens(token.header[j], token.tokens.header[j]);\n              } // cells\n\n\n              l2 = token.cells.length;\n\n              for (j = 0; j < l2; j++) {\n                row = token.cells[j];\n                token.tokens.cells[j] = [];\n\n                for (k = 0; k < row.length; k++) {\n                  token.tokens.cells[j][k] = [];\n                  this.inlineTokens(row[k], token.tokens.cells[j][k]);\n                }\n              }\n\n              break;\n            }\n\n          case 'blockquote':\n            {\n              this.inline(token.tokens);\n              break;\n            }\n\n          case 'list':\n            {\n              l2 = token.items.length;\n\n              for (j = 0; j < l2; j++) {\n                this.inline(token.items[j].tokens);\n              }\n\n              break;\n            }\n        }\n      }\n\n      return tokens;\n    }\n    /**\n     * Lexing/Compiling\n     */\n    ;\n\n    _proto.inlineTokens = function inlineTokens(src, tokens, inLink, inRawBlock, prevChar) {\n      if (tokens === void 0) {\n        tokens = [];\n      }\n\n      if (inLink === void 0) {\n        inLink = false;\n      }\n\n      if (inRawBlock === void 0) {\n        inRawBlock = false;\n      }\n\n      if (prevChar === void 0) {\n        prevChar = '';\n      }\n\n      var token; // String with links masked to avoid interference with em and strong\n\n      var maskedSrc = src;\n      var match; // Mask out reflinks\n\n      if (this.tokens.links) {\n        var links = Object.keys(this.tokens.links);\n\n        if (links.length > 0) {\n          while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n            if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n              maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString$1('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n            }\n          }\n        }\n      } // Mask out other blocks\n\n\n      while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n        maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString$1('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n      }\n\n      while (src) {\n        // escape\n        if (token = this.tokenizer.escape(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // tag\n\n\n        if (token = this.tokenizer.tag(src, inLink, inRawBlock)) {\n          src = src.substring(token.raw.length);\n          inLink = token.inLink;\n          inRawBlock = token.inRawBlock;\n          tokens.push(token);\n          continue;\n        } // link\n\n\n        if (token = this.tokenizer.link(src)) {\n          src = src.substring(token.raw.length);\n\n          if (token.type === 'link') {\n            token.tokens = this.inlineTokens(token.text, [], true, inRawBlock);\n          }\n\n          tokens.push(token);\n          continue;\n        } // reflink, nolink\n\n\n        if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n          src = src.substring(token.raw.length);\n\n          if (token.type === 'link') {\n            token.tokens = this.inlineTokens(token.text, [], true, inRawBlock);\n          }\n\n          tokens.push(token);\n          continue;\n        } // strong\n\n\n        if (token = this.tokenizer.strong(src, maskedSrc, prevChar)) {\n          src = src.substring(token.raw.length);\n          token.tokens = this.inlineTokens(token.text, [], inLink, inRawBlock);\n          tokens.push(token);\n          continue;\n        } // em\n\n\n        if (token = this.tokenizer.em(src, maskedSrc, prevChar)) {\n          src = src.substring(token.raw.length);\n          token.tokens = this.inlineTokens(token.text, [], inLink, inRawBlock);\n          tokens.push(token);\n          continue;\n        } // code\n\n\n        if (token = this.tokenizer.codespan(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // br\n\n\n        if (token = this.tokenizer.br(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // del (gfm)\n\n\n        if (token = this.tokenizer.del(src)) {\n          src = src.substring(token.raw.length);\n          token.tokens = this.inlineTokens(token.text, [], inLink, inRawBlock);\n          tokens.push(token);\n          continue;\n        } // autolink\n\n\n        if (token = this.tokenizer.autolink(src, mangle)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // url (gfm)\n\n\n        if (!inLink && (token = this.tokenizer.url(src, mangle))) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // text\n\n\n        if (token = this.tokenizer.inlineText(src, inRawBlock, smartypants)) {\n          src = src.substring(token.raw.length);\n          prevChar = token.raw.slice(-1);\n          tokens.push(token);\n          continue;\n        }\n\n        if (src) {\n          var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n\n          if (this.options.silent) {\n            console.error(errMsg);\n            break;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n\n      return tokens;\n    };\n\n    _createClass(Lexer, null, [{\n      key: \"rules\",\n      get: function get() {\n        return {\n          block: block$1,\n          inline: inline$1\n        };\n      }\n    }]);\n\n    return Lexer;\n  }();\n\n  var defaults$3 = defaults.defaults;\n  var cleanUrl$1 = helpers.cleanUrl,\n      escape$1 = helpers.escape;\n  /**\n   * Renderer\n   */\n\n  var Renderer_1 = /*#__PURE__*/function () {\n    function Renderer(options) {\n      this.options = options || defaults$3;\n    }\n\n    var _proto = Renderer.prototype;\n\n    _proto.code = function code(_code, infostring, escaped) {\n      var lang = (infostring || '').match(/\\S*/)[0];\n\n      if (this.options.highlight) {\n        var out = this.options.highlight(_code, lang);\n\n        if (out != null && out !== _code) {\n          escaped = true;\n          _code = out;\n        }\n      }\n\n      if (!lang) {\n        return '<pre><code>' + (escaped ? _code : escape$1(_code, true)) + '</code></pre>\\n';\n      }\n\n      return '<pre><code class=\"' + this.options.langPrefix + escape$1(lang, true) + '\">' + (escaped ? _code : escape$1(_code, true)) + '</code></pre>\\n';\n    };\n\n    _proto.blockquote = function blockquote(quote) {\n      return '<blockquote>\\n' + quote + '</blockquote>\\n';\n    };\n\n    _proto.html = function html(_html) {\n      return _html;\n    };\n\n    _proto.heading = function heading(text, level, raw, slugger) {\n      if (this.options.headerIds) {\n        return '<h' + level + ' id=\"' + this.options.headerPrefix + slugger.slug(raw) + '\">' + text + '</h' + level + '>\\n';\n      } // ignore IDs\n\n\n      return '<h' + level + '>' + text + '</h' + level + '>\\n';\n    };\n\n    _proto.hr = function hr() {\n      return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n    };\n\n    _proto.list = function list(body, ordered, start) {\n      var type = ordered ? 'ol' : 'ul',\n          startatt = ordered && start !== 1 ? ' start=\"' + start + '\"' : '';\n      return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n    };\n\n    _proto.listitem = function listitem(text) {\n      return '<li>' + text + '</li>\\n';\n    };\n\n    _proto.checkbox = function checkbox(checked) {\n      return '<input ' + (checked ? 'checked=\"\" ' : '') + 'disabled=\"\" type=\"checkbox\"' + (this.options.xhtml ? ' /' : '') + '> ';\n    };\n\n    _proto.paragraph = function paragraph(text) {\n      return '<p>' + text + '</p>\\n';\n    };\n\n    _proto.table = function table(header, body) {\n      if (body) body = '<tbody>' + body + '</tbody>';\n      return '<table>\\n' + '<thead>\\n' + header + '</thead>\\n' + body + '</table>\\n';\n    };\n\n    _proto.tablerow = function tablerow(content) {\n      return '<tr>\\n' + content + '</tr>\\n';\n    };\n\n    _proto.tablecell = function tablecell(content, flags) {\n      var type = flags.header ? 'th' : 'td';\n      var tag = flags.align ? '<' + type + ' align=\"' + flags.align + '\">' : '<' + type + '>';\n      return tag + content + '</' + type + '>\\n';\n    } // span level renderer\n    ;\n\n    _proto.strong = function strong(text) {\n      return '<strong>' + text + '</strong>';\n    };\n\n    _proto.em = function em(text) {\n      return '<em>' + text + '</em>';\n    };\n\n    _proto.codespan = function codespan(text) {\n      return '<code>' + text + '</code>';\n    };\n\n    _proto.br = function br() {\n      return this.options.xhtml ? '<br/>' : '<br>';\n    };\n\n    _proto.del = function del(text) {\n      return '<del>' + text + '</del>';\n    };\n\n    _proto.link = function link(href, title, text) {\n      href = cleanUrl$1(this.options.sanitize, this.options.baseUrl, href);\n\n      if (href === null) {\n        return text;\n      }\n\n      var out = '<a href=\"' + escape$1(href) + '\"';\n\n      if (title) {\n        out += ' title=\"' + title + '\"';\n      }\n\n      out += '>' + text + '</a>';\n      return out;\n    };\n\n    _proto.image = function image(href, title, text) {\n      href = cleanUrl$1(this.options.sanitize, this.options.baseUrl, href);\n\n      if (href === null) {\n        return text;\n      }\n\n      var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n\n      if (title) {\n        out += ' title=\"' + title + '\"';\n      }\n\n      out += this.options.xhtml ? '/>' : '>';\n      return out;\n    };\n\n    _proto.text = function text(_text) {\n      return _text;\n    };\n\n    return Renderer;\n  }();\n\n  /**\n   * TextRenderer\n   * returns only the textual part of the token\n   */\n  var TextRenderer_1 = /*#__PURE__*/function () {\n    function TextRenderer() {}\n\n    var _proto = TextRenderer.prototype;\n\n    // no need for block level renderers\n    _proto.strong = function strong(text) {\n      return text;\n    };\n\n    _proto.em = function em(text) {\n      return text;\n    };\n\n    _proto.codespan = function codespan(text) {\n      return text;\n    };\n\n    _proto.del = function del(text) {\n      return text;\n    };\n\n    _proto.html = function html(text) {\n      return text;\n    };\n\n    _proto.text = function text(_text) {\n      return _text;\n    };\n\n    _proto.link = function link(href, title, text) {\n      return '' + text;\n    };\n\n    _proto.image = function image(href, title, text) {\n      return '' + text;\n    };\n\n    _proto.br = function br() {\n      return '';\n    };\n\n    return TextRenderer;\n  }();\n\n  /**\n   * Slugger generates header id\n   */\n  var Slugger_1 = /*#__PURE__*/function () {\n    function Slugger() {\n      this.seen = {};\n    }\n\n    var _proto = Slugger.prototype;\n\n    _proto.serialize = function serialize(value) {\n      return value.toLowerCase().trim() // remove html tags\n      .replace(/<[!\\/a-z].*?>/ig, '') // remove unwanted chars\n      .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '').replace(/\\s/g, '-');\n    }\n    /**\n     * Finds the next safe (unique) slug to use\n     */\n    ;\n\n    _proto.getNextSafeSlug = function getNextSafeSlug(originalSlug, isDryRun) {\n      var slug = originalSlug;\n      var occurenceAccumulator = 0;\n\n      if (this.seen.hasOwnProperty(slug)) {\n        occurenceAccumulator = this.seen[originalSlug];\n\n        do {\n          occurenceAccumulator++;\n          slug = originalSlug + '-' + occurenceAccumulator;\n        } while (this.seen.hasOwnProperty(slug));\n      }\n\n      if (!isDryRun) {\n        this.seen[originalSlug] = occurenceAccumulator;\n        this.seen[slug] = 0;\n      }\n\n      return slug;\n    }\n    /**\n     * Convert string to unique id\n     * @param {object} options\n     * @param {boolean} options.dryrun Generates the next unique slug without updating the internal accumulator.\n     */\n    ;\n\n    _proto.slug = function slug(value, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      var slug = this.serialize(value);\n      return this.getNextSafeSlug(slug, options.dryrun);\n    };\n\n    return Slugger;\n  }();\n\n  var defaults$4 = defaults.defaults;\n  var unescape$1 = helpers.unescape;\n  /**\n   * Parsing & Compiling\n   */\n\n  var Parser_1 = /*#__PURE__*/function () {\n    function Parser(options) {\n      this.options = options || defaults$4;\n      this.options.renderer = this.options.renderer || new Renderer_1();\n      this.renderer = this.options.renderer;\n      this.renderer.options = this.options;\n      this.textRenderer = new TextRenderer_1();\n      this.slugger = new Slugger_1();\n    }\n    /**\n     * Static Parse Method\n     */\n\n\n    Parser.parse = function parse(tokens, options) {\n      var parser = new Parser(options);\n      return parser.parse(tokens);\n    }\n    /**\n     * Static Parse Inline Method\n     */\n    ;\n\n    Parser.parseInline = function parseInline(tokens, options) {\n      var parser = new Parser(options);\n      return parser.parseInline(tokens);\n    }\n    /**\n     * Parse Loop\n     */\n    ;\n\n    var _proto = Parser.prototype;\n\n    _proto.parse = function parse(tokens, top) {\n      if (top === void 0) {\n        top = true;\n      }\n\n      var out = '',\n          i,\n          j,\n          k,\n          l2,\n          l3,\n          row,\n          cell,\n          header,\n          body,\n          token,\n          ordered,\n          start,\n          loose,\n          itemBody,\n          item,\n          checked,\n          task,\n          checkbox;\n      var l = tokens.length;\n\n      for (i = 0; i < l; i++) {\n        token = tokens[i];\n\n        switch (token.type) {\n          case 'space':\n            {\n              continue;\n            }\n\n          case 'hr':\n            {\n              out += this.renderer.hr();\n              continue;\n            }\n\n          case 'heading':\n            {\n              out += this.renderer.heading(this.parseInline(token.tokens), token.depth, unescape$1(this.parseInline(token.tokens, this.textRenderer)), this.slugger);\n              continue;\n            }\n\n          case 'code':\n            {\n              out += this.renderer.code(token.text, token.lang, token.escaped);\n              continue;\n            }\n\n          case 'table':\n            {\n              header = ''; // header\n\n              cell = '';\n              l2 = token.header.length;\n\n              for (j = 0; j < l2; j++) {\n                cell += this.renderer.tablecell(this.parseInline(token.tokens.header[j]), {\n                  header: true,\n                  align: token.align[j]\n                });\n              }\n\n              header += this.renderer.tablerow(cell);\n              body = '';\n              l2 = token.cells.length;\n\n              for (j = 0; j < l2; j++) {\n                row = token.tokens.cells[j];\n                cell = '';\n                l3 = row.length;\n\n                for (k = 0; k < l3; k++) {\n                  cell += this.renderer.tablecell(this.parseInline(row[k]), {\n                    header: false,\n                    align: token.align[k]\n                  });\n                }\n\n                body += this.renderer.tablerow(cell);\n              }\n\n              out += this.renderer.table(header, body);\n              continue;\n            }\n\n          case 'blockquote':\n            {\n              body = this.parse(token.tokens);\n              out += this.renderer.blockquote(body);\n              continue;\n            }\n\n          case 'list':\n            {\n              ordered = token.ordered;\n              start = token.start;\n              loose = token.loose;\n              l2 = token.items.length;\n              body = '';\n\n              for (j = 0; j < l2; j++) {\n                item = token.items[j];\n                checked = item.checked;\n                task = item.task;\n                itemBody = '';\n\n                if (item.task) {\n                  checkbox = this.renderer.checkbox(checked);\n\n                  if (loose) {\n                    if (item.tokens.length > 0 && item.tokens[0].type === 'text') {\n                      item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n\n                      if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                        item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                      }\n                    } else {\n                      item.tokens.unshift({\n                        type: 'text',\n                        text: checkbox\n                      });\n                    }\n                  } else {\n                    itemBody += checkbox;\n                  }\n                }\n\n                itemBody += this.parse(item.tokens, loose);\n                body += this.renderer.listitem(itemBody, task, checked);\n              }\n\n              out += this.renderer.list(body, ordered, start);\n              continue;\n            }\n\n          case 'html':\n            {\n              // TODO parse inline content if parameter markdown=1\n              out += this.renderer.html(token.text);\n              continue;\n            }\n\n          case 'paragraph':\n            {\n              out += this.renderer.paragraph(this.parseInline(token.tokens));\n              continue;\n            }\n\n          case 'text':\n            {\n              body = token.tokens ? this.parseInline(token.tokens) : token.text;\n\n              while (i + 1 < l && tokens[i + 1].type === 'text') {\n                token = tokens[++i];\n                body += '\\n' + (token.tokens ? this.parseInline(token.tokens) : token.text);\n              }\n\n              out += top ? this.renderer.paragraph(body) : body;\n              continue;\n            }\n\n          default:\n            {\n              var errMsg = 'Token with \"' + token.type + '\" type was not found.';\n\n              if (this.options.silent) {\n                console.error(errMsg);\n                return;\n              } else {\n                throw new Error(errMsg);\n              }\n            }\n        }\n      }\n\n      return out;\n    }\n    /**\n     * Parse Inline Tokens\n     */\n    ;\n\n    _proto.parseInline = function parseInline(tokens, renderer) {\n      renderer = renderer || this.renderer;\n      var out = '',\n          i,\n          token;\n      var l = tokens.length;\n\n      for (i = 0; i < l; i++) {\n        token = tokens[i];\n\n        switch (token.type) {\n          case 'escape':\n            {\n              out += renderer.text(token.text);\n              break;\n            }\n\n          case 'html':\n            {\n              out += renderer.html(token.text);\n              break;\n            }\n\n          case 'link':\n            {\n              out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'image':\n            {\n              out += renderer.image(token.href, token.title, token.text);\n              break;\n            }\n\n          case 'strong':\n            {\n              out += renderer.strong(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'em':\n            {\n              out += renderer.em(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'codespan':\n            {\n              out += renderer.codespan(token.text);\n              break;\n            }\n\n          case 'br':\n            {\n              out += renderer.br();\n              break;\n            }\n\n          case 'del':\n            {\n              out += renderer.del(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'text':\n            {\n              out += renderer.text(token.text);\n              break;\n            }\n\n          default:\n            {\n              var errMsg = 'Token with \"' + token.type + '\" type was not found.';\n\n              if (this.options.silent) {\n                console.error(errMsg);\n                return;\n              } else {\n                throw new Error(errMsg);\n              }\n            }\n        }\n      }\n\n      return out;\n    };\n\n    return Parser;\n  }();\n\n  var merge$2 = helpers.merge,\n      checkSanitizeDeprecation$1 = helpers.checkSanitizeDeprecation,\n      escape$2 = helpers.escape;\n  var getDefaults = defaults.getDefaults,\n      changeDefaults = defaults.changeDefaults,\n      defaults$5 = defaults.defaults;\n  /**\n   * Marked\n   */\n\n  function marked(src, opt, callback) {\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      throw new Error('marked(): input parameter is undefined or null');\n    }\n\n    if (typeof src !== 'string') {\n      throw new Error('marked(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');\n    }\n\n    if (typeof opt === 'function') {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge$2({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation$1(opt);\n\n    if (callback) {\n      var highlight = opt.highlight;\n      var tokens;\n\n      try {\n        tokens = Lexer_1.lex(src, opt);\n      } catch (e) {\n        return callback(e);\n      }\n\n      var done = function done(err) {\n        var out;\n\n        if (!err) {\n          try {\n            out = Parser_1.parse(tokens, opt);\n          } catch (e) {\n            err = e;\n          }\n        }\n\n        opt.highlight = highlight;\n        return err ? callback(err) : callback(null, out);\n      };\n\n      if (!highlight || highlight.length < 3) {\n        return done();\n      }\n\n      delete opt.highlight;\n      if (!tokens.length) return done();\n      var pending = 0;\n      marked.walkTokens(tokens, function (token) {\n        if (token.type === 'code') {\n          pending++;\n          setTimeout(function () {\n            highlight(token.text, token.lang, function (err, code) {\n              if (err) {\n                return done(err);\n              }\n\n              if (code != null && code !== token.text) {\n                token.text = code;\n                token.escaped = true;\n              }\n\n              pending--;\n\n              if (pending === 0) {\n                done();\n              }\n            });\n          }, 0);\n        }\n      });\n\n      if (pending === 0) {\n        done();\n      }\n\n      return;\n    }\n\n    try {\n      var _tokens = Lexer_1.lex(src, opt);\n\n      if (opt.walkTokens) {\n        marked.walkTokens(_tokens, opt.walkTokens);\n      }\n\n      return Parser_1.parse(_tokens, opt);\n    } catch (e) {\n      e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n      if (opt.silent) {\n        return '<p>An error occurred:</p><pre>' + escape$2(e.message + '', true) + '</pre>';\n      }\n\n      throw e;\n    }\n  }\n  /**\n   * Options\n   */\n\n\n  marked.options = marked.setOptions = function (opt) {\n    merge$2(marked.defaults, opt);\n    changeDefaults(marked.defaults);\n    return marked;\n  };\n\n  marked.getDefaults = getDefaults;\n  marked.defaults = defaults$5;\n  /**\n   * Use Extension\n   */\n\n  marked.use = function (extension) {\n    var opts = merge$2({}, extension);\n\n    if (extension.renderer) {\n      (function () {\n        var renderer = marked.defaults.renderer || new Renderer_1();\n\n        var _loop = function _loop(prop) {\n          var prevRenderer = renderer[prop];\n\n          renderer[prop] = function () {\n            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n              args[_key] = arguments[_key];\n            }\n\n            var ret = extension.renderer[prop].apply(renderer, args);\n\n            if (ret === false) {\n              ret = prevRenderer.apply(renderer, args);\n            }\n\n            return ret;\n          };\n        };\n\n        for (var prop in extension.renderer) {\n          _loop(prop);\n        }\n\n        opts.renderer = renderer;\n      })();\n    }\n\n    if (extension.tokenizer) {\n      (function () {\n        var tokenizer = marked.defaults.tokenizer || new Tokenizer_1();\n\n        var _loop2 = function _loop2(prop) {\n          var prevTokenizer = tokenizer[prop];\n\n          tokenizer[prop] = function () {\n            for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n              args[_key2] = arguments[_key2];\n            }\n\n            var ret = extension.tokenizer[prop].apply(tokenizer, args);\n\n            if (ret === false) {\n              ret = prevTokenizer.apply(tokenizer, args);\n            }\n\n            return ret;\n          };\n        };\n\n        for (var prop in extension.tokenizer) {\n          _loop2(prop);\n        }\n\n        opts.tokenizer = tokenizer;\n      })();\n    }\n\n    if (extension.walkTokens) {\n      var walkTokens = marked.defaults.walkTokens;\n\n      opts.walkTokens = function (token) {\n        extension.walkTokens(token);\n\n        if (walkTokens) {\n          walkTokens(token);\n        }\n      };\n    }\n\n    marked.setOptions(opts);\n  };\n  /**\n   * Run callback for every token\n   */\n\n\n  marked.walkTokens = function (tokens, callback) {\n    for (var _iterator = _createForOfIteratorHelperLoose(tokens), _step; !(_step = _iterator()).done;) {\n      var token = _step.value;\n      callback(token);\n\n      switch (token.type) {\n        case 'table':\n          {\n            for (var _iterator2 = _createForOfIteratorHelperLoose(token.tokens.header), _step2; !(_step2 = _iterator2()).done;) {\n              var cell = _step2.value;\n              marked.walkTokens(cell, callback);\n            }\n\n            for (var _iterator3 = _createForOfIteratorHelperLoose(token.tokens.cells), _step3; !(_step3 = _iterator3()).done;) {\n              var row = _step3.value;\n\n              for (var _iterator4 = _createForOfIteratorHelperLoose(row), _step4; !(_step4 = _iterator4()).done;) {\n                var _cell = _step4.value;\n                marked.walkTokens(_cell, callback);\n              }\n            }\n\n            break;\n          }\n\n        case 'list':\n          {\n            marked.walkTokens(token.items, callback);\n            break;\n          }\n\n        default:\n          {\n            if (token.tokens) {\n              marked.walkTokens(token.tokens, callback);\n            }\n          }\n      }\n    }\n  };\n  /**\n   * Parse Inline\n   */\n\n\n  marked.parseInline = function (src, opt) {\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      throw new Error('marked.parseInline(): input parameter is undefined or null');\n    }\n\n    if (typeof src !== 'string') {\n      throw new Error('marked.parseInline(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');\n    }\n\n    opt = merge$2({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation$1(opt);\n\n    try {\n      var tokens = Lexer_1.lexInline(src, opt);\n\n      if (opt.walkTokens) {\n        marked.walkTokens(tokens, opt.walkTokens);\n      }\n\n      return Parser_1.parseInline(tokens, opt);\n    } catch (e) {\n      e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n      if (opt.silent) {\n        return '<p>An error occurred:</p><pre>' + escape$2(e.message + '', true) + '</pre>';\n      }\n\n      throw e;\n    }\n  };\n  /**\n   * Expose\n   */\n\n\n  marked.Parser = Parser_1;\n  marked.parser = Parser_1.parse;\n  marked.Renderer = Renderer_1;\n  marked.TextRenderer = TextRenderer_1;\n  marked.Lexer = Lexer_1;\n  marked.lexer = Lexer_1.lex;\n  marked.Tokenizer = Tokenizer_1;\n  marked.Slugger = Slugger_1;\n  marked.parse = marked;\n  var marked_1 = marked;\n\n  return marked_1;\n\n})));\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEC,WAAUA,MAAM,EAAEC,OAAO,EAAE;EAC1B,OAAOC,OAAO,KAAK,QAAQ,IAAI,OAAOC,MAAM,KAAK,WAAW,GAAGA,MAAM,CAACD,OAAO,GAAGD,OAAO,CAAC,CAAC,GACzF,OAAOG,MAAM,KAAK,UAAU,IAAIA,MAAM,CAACC,GAAG,GAAGD,MAAM,CAACH,OAAO,CAAC,IAC3DD,MAAM,GAAG,OAAOM,UAAU,KAAK,WAAW,GAAGA,UAAU,GAAGN,MAAM,IAAIO,IAAI,EAAEP,MAAM,CAACQ,MAAM,GAAGP,OAAO,CAAC,CAAC,CAAC;AACvG,CAAC,EAAC,IAAI,EAAG,YAAY;EAAE,YAAY;;EAEjC,SAASQ,iBAAiBA,CAACC,MAAM,EAAEC,KAAK,EAAE;IACxC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,KAAK,CAACE,MAAM,EAAED,CAAC,EAAE,EAAE;MACrC,IAAIE,UAAU,GAAGH,KAAK,CAACC,CAAC,CAAC;MACzBE,UAAU,CAACC,UAAU,GAAGD,UAAU,CAACC,UAAU,IAAI,KAAK;MACtDD,UAAU,CAACE,YAAY,GAAG,IAAI;MAC9B,IAAI,OAAO,IAAIF,UAAU,EAAEA,UAAU,CAACG,QAAQ,GAAG,IAAI;MACrDC,MAAM,CAACC,cAAc,CAACT,MAAM,EAAEI,UAAU,CAACM,GAAG,EAAEN,UAAU,CAAC;IAC3D;EACF;EAEA,SAASO,YAAYA,CAACC,WAAW,EAAEC,UAAU,EAAEC,WAAW,EAAE;IAC1D,IAAID,UAAU,EAAEd,iBAAiB,CAACa,WAAW,CAACG,SAAS,EAAEF,UAAU,CAAC;IACpE,IAAIC,WAAW,EAAEf,iBAAiB,CAACa,WAAW,EAAEE,WAAW,CAAC;IAC5D,OAAOF,WAAW;EACpB;EAEA,SAASI,2BAA2BA,CAACC,CAAC,EAAEC,MAAM,EAAE;IAC9C,IAAI,CAACD,CAAC,EAAE;IACR,IAAI,OAAOA,CAAC,KAAK,QAAQ,EAAE,OAAOE,iBAAiB,CAACF,CAAC,EAAEC,MAAM,CAAC;IAC9D,IAAIE,CAAC,GAAGZ,MAAM,CAACO,SAAS,CAACM,QAAQ,CAACC,IAAI,CAACL,CAAC,CAAC,CAACM,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACtD,IAAIH,CAAC,KAAK,QAAQ,IAAIH,CAAC,CAACO,WAAW,EAAEJ,CAAC,GAAGH,CAAC,CAACO,WAAW,CAACC,IAAI;IAC3D,IAAIL,CAAC,KAAK,KAAK,IAAIA,CAAC,KAAK,KAAK,EAAE,OAAOM,KAAK,CAACC,IAAI,CAACV,CAAC,CAAC;IACpD,IAAIG,CAAC,KAAK,WAAW,IAAI,0CAA0C,CAACQ,IAAI,CAACR,CAAC,CAAC,EAAE,OAAOD,iBAAiB,CAACF,CAAC,EAAEC,MAAM,CAAC;EAClH;EAEA,SAASC,iBAAiBA,CAACU,GAAG,EAAEC,GAAG,EAAE;IACnC,IAAIA,GAAG,IAAI,IAAI,IAAIA,GAAG,GAAGD,GAAG,CAAC1B,MAAM,EAAE2B,GAAG,GAAGD,GAAG,CAAC1B,MAAM;IAErD,KAAK,IAAID,CAAC,GAAG,CAAC,EAAE6B,IAAI,GAAG,IAAIL,KAAK,CAACI,GAAG,CAAC,EAAE5B,CAAC,GAAG4B,GAAG,EAAE5B,CAAC,EAAE,EAAE6B,IAAI,CAAC7B,CAAC,CAAC,GAAG2B,GAAG,CAAC3B,CAAC,CAAC;IAErE,OAAO6B,IAAI;EACb;EAEA,SAASC,+BAA+BA,CAACf,CAAC,EAAEgB,cAAc,EAAE;IAC1D,IAAIC,EAAE;IAEN,IAAI,OAAOC,MAAM,KAAK,WAAW,IAAIlB,CAAC,CAACkB,MAAM,CAACC,QAAQ,CAAC,IAAI,IAAI,EAAE;MAC/D,IAAIV,KAAK,CAACW,OAAO,CAACpB,CAAC,CAAC,KAAKiB,EAAE,GAAGlB,2BAA2B,CAACC,CAAC,CAAC,CAAC,IAAIgB,cAAc,IAAIhB,CAAC,IAAI,OAAOA,CAAC,CAACd,MAAM,KAAK,QAAQ,EAAE;QACpH,IAAI+B,EAAE,EAAEjB,CAAC,GAAGiB,EAAE;QACd,IAAIhC,CAAC,GAAG,CAAC;QACT,OAAO,YAAY;UACjB,IAAIA,CAAC,IAAIe,CAAC,CAACd,MAAM,EAAE,OAAO;YACxBmC,IAAI,EAAE;UACR,CAAC;UACD,OAAO;YACLA,IAAI,EAAE,KAAK;YACXC,KAAK,EAAEtB,CAAC,CAACf,CAAC,EAAE;UACd,CAAC;QACH,CAAC;MACH;MAEA,MAAM,IAAIsC,SAAS,CAAC,uIAAuI,CAAC;IAC9J;IAEAN,EAAE,GAAGjB,CAAC,CAACkB,MAAM,CAACC,QAAQ,CAAC,CAAC,CAAC;IACzB,OAAOF,EAAE,CAACO,IAAI,CAACC,IAAI,CAACR,EAAE,CAAC;EACzB;EAEA,SAASS,oBAAoBA,CAACC,EAAE,EAAEnD,MAAM,EAAE;IACzC,OAAOA,MAAM,GAAG;MAAED,OAAO,EAAE,CAAC;IAAE,CAAC,EAAEoD,EAAE,CAACnD,MAAM,EAAEA,MAAM,CAACD,OAAO,CAAC,EAAEC,MAAM,CAACD,OAAO;EAC5E;EAEA,IAAIqD,QAAQ,GAAGF,oBAAoB,CAAC,UAAUlD,MAAM,EAAE;IACpD,SAASqD,WAAWA,CAAA,EAAG;MACrB,OAAO;QACLC,OAAO,EAAE,IAAI;QACbC,MAAM,EAAE,KAAK;QACbC,GAAG,EAAE,IAAI;QACTC,SAAS,EAAE,IAAI;QACfC,YAAY,EAAE,EAAE;QAChBC,SAAS,EAAE,IAAI;QACfC,UAAU,EAAE,WAAW;QACvBC,MAAM,EAAE,IAAI;QACZC,QAAQ,EAAE,KAAK;QACfC,QAAQ,EAAE,IAAI;QACdC,QAAQ,EAAE,KAAK;QACfC,SAAS,EAAE,IAAI;QACfC,MAAM,EAAE,KAAK;QACbC,UAAU,EAAE,KAAK;QACjBC,WAAW,EAAE,KAAK;QAClBC,SAAS,EAAE,IAAI;QACfC,UAAU,EAAE,IAAI;QAChBC,KAAK,EAAE;MACT,CAAC;IACH;IAEA,SAASC,cAAcA,CAACC,WAAW,EAAE;MACnCzE,MAAM,CAACD,OAAO,CAACqD,QAAQ,GAAGqB,WAAW;IACvC;IAEAzE,MAAM,CAACD,OAAO,GAAG;MACfqD,QAAQ,EAAEC,WAAW,CAAC,CAAC;MACvBA,WAAW,EAAEA,WAAW;MACxBmB,cAAc,EAAEA;IAClB,CAAC;EACH,CAAC,CAAC;EACF,IAAIE,UAAU,GAAGtB,QAAQ,CAACA,QAAQ;EAClC,IAAIuB,UAAU,GAAGvB,QAAQ,CAACC,WAAW;EACrC,IAAIuB,UAAU,GAAGxB,QAAQ,CAACoB,cAAc;;EAExC;AACF;AACA;EACE,IAAIK,UAAU,GAAG,SAAS;EAC1B,IAAIC,aAAa,GAAG,UAAU;EAC9B,IAAIC,kBAAkB,GAAG,oBAAoB;EAC7C,IAAIC,qBAAqB,GAAG,qBAAqB;EACjD,IAAIC,kBAAkB,GAAG;IACvB,GAAG,EAAE,OAAO;IACZ,GAAG,EAAE,MAAM;IACX,GAAG,EAAE,MAAM;IACX,GAAG,EAAE,QAAQ;IACb,GAAG,EAAE;EACP,CAAC;EAED,IAAIC,oBAAoB,GAAG,SAASA,oBAAoBA,CAACC,EAAE,EAAE;IAC3D,OAAOF,kBAAkB,CAACE,EAAE,CAAC;EAC/B,CAAC;EAED,SAASC,MAAMA,CAACC,IAAI,EAAEC,MAAM,EAAE;IAC5B,IAAIA,MAAM,EAAE;MACV,IAAIT,UAAU,CAAC1C,IAAI,CAACkD,IAAI,CAAC,EAAE;QACzB,OAAOA,IAAI,CAACE,OAAO,CAACT,aAAa,EAAEI,oBAAoB,CAAC;MAC1D;IACF,CAAC,MAAM;MACL,IAAIH,kBAAkB,CAAC5C,IAAI,CAACkD,IAAI,CAAC,EAAE;QACjC,OAAOA,IAAI,CAACE,OAAO,CAACP,qBAAqB,EAAEE,oBAAoB,CAAC;MAClE;IACF;IAEA,OAAOG,IAAI;EACb;EAEA,IAAIG,YAAY,GAAG,4CAA4C;EAE/D,SAASC,QAAQA,CAACJ,IAAI,EAAE;IACtB;IACA,OAAOA,IAAI,CAACE,OAAO,CAACC,YAAY,EAAE,UAAUE,CAAC,EAAE/D,CAAC,EAAE;MAChDA,CAAC,GAAGA,CAAC,CAACgE,WAAW,CAAC,CAAC;MACnB,IAAIhE,CAAC,KAAK,OAAO,EAAE,OAAO,GAAG;MAE7B,IAAIA,CAAC,CAACiE,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;QACvB,OAAOjE,CAAC,CAACiE,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,GAAGC,MAAM,CAACC,YAAY,CAACC,QAAQ,CAACpE,CAAC,CAACqE,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,GAAGH,MAAM,CAACC,YAAY,CAAC,CAACnE,CAAC,CAACqE,SAAS,CAAC,CAAC,CAAC,CAAC;MACvH;MAEA,OAAO,EAAE;IACX,CAAC,CAAC;EACJ;EAEA,IAAIC,KAAK,GAAG,cAAc;EAE1B,SAASC,IAAIA,CAACC,KAAK,EAAEC,GAAG,EAAE;IACxBD,KAAK,GAAGA,KAAK,CAACE,MAAM,IAAIF,KAAK;IAC7BC,GAAG,GAAGA,GAAG,IAAI,EAAE;IACf,IAAIE,GAAG,GAAG;MACRf,OAAO,EAAE,SAASA,OAAOA,CAACvD,IAAI,EAAEuE,GAAG,EAAE;QACnCA,GAAG,GAAGA,GAAG,CAACF,MAAM,IAAIE,GAAG;QACvBA,GAAG,GAAGA,GAAG,CAAChB,OAAO,CAACU,KAAK,EAAE,IAAI,CAAC;QAC9BE,KAAK,GAAGA,KAAK,CAACZ,OAAO,CAACvD,IAAI,EAAEuE,GAAG,CAAC;QAChC,OAAOD,GAAG;MACZ,CAAC;MACDE,QAAQ,EAAE,SAASA,QAAQA,CAAA,EAAG;QAC5B,OAAO,IAAIC,MAAM,CAACN,KAAK,EAAEC,GAAG,CAAC;MAC/B;IACF,CAAC;IACD,OAAOE,GAAG;EACZ;EAEA,IAAII,mBAAmB,GAAG,SAAS;EACnC,IAAIC,oBAAoB,GAAG,+BAA+B;EAE1D,SAASC,QAAQA,CAAC5C,QAAQ,EAAE6C,IAAI,EAAEC,IAAI,EAAE;IACtC,IAAI9C,QAAQ,EAAE;MACZ,IAAI+C,IAAI;MAER,IAAI;QACFA,IAAI,GAAGC,kBAAkB,CAACvB,QAAQ,CAACqB,IAAI,CAAC,CAAC,CAACvB,OAAO,CAACmB,mBAAmB,EAAE,EAAE,CAAC,CAACf,WAAW,CAAC,CAAC;MAC1F,CAAC,CAAC,OAAOsB,CAAC,EAAE;QACV,OAAO,IAAI;MACb;MAEA,IAAIF,IAAI,CAACG,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC,IAAIH,IAAI,CAACG,OAAO,CAAC,WAAW,CAAC,KAAK,CAAC,IAAIH,IAAI,CAACG,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;QACvG,OAAO,IAAI;MACb;IACF;IAEA,IAAIL,IAAI,IAAI,CAACF,oBAAoB,CAACxE,IAAI,CAAC2E,IAAI,CAAC,EAAE;MAC5CA,IAAI,GAAGK,UAAU,CAACN,IAAI,EAAEC,IAAI,CAAC;IAC/B;IAEA,IAAI;MACFA,IAAI,GAAGM,SAAS,CAACN,IAAI,CAAC,CAACvB,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC;IAC7C,CAAC,CAAC,OAAO0B,CAAC,EAAE;MACV,OAAO,IAAI;IACb;IAEA,OAAOH,IAAI;EACb;EAEA,IAAIO,QAAQ,GAAG,CAAC,CAAC;EACjB,IAAIC,UAAU,GAAG,kBAAkB;EACnC,IAAIC,QAAQ,GAAG,mBAAmB;EAClC,IAAIC,MAAM,GAAG,2BAA2B;EAExC,SAASL,UAAUA,CAACN,IAAI,EAAEC,IAAI,EAAE;IAC9B,IAAI,CAACO,QAAQ,CAAC,GAAG,GAAGR,IAAI,CAAC,EAAE;MACzB;MACA;MACA;MACA,IAAIS,UAAU,CAACnF,IAAI,CAAC0E,IAAI,CAAC,EAAE;QACzBQ,QAAQ,CAAC,GAAG,GAAGR,IAAI,CAAC,GAAGA,IAAI,GAAG,GAAG;MACnC,CAAC,MAAM;QACLQ,QAAQ,CAAC,GAAG,GAAGR,IAAI,CAAC,GAAGY,KAAK,CAACZ,IAAI,EAAE,GAAG,EAAE,IAAI,CAAC;MAC/C;IACF;IAEAA,IAAI,GAAGQ,QAAQ,CAAC,GAAG,GAAGR,IAAI,CAAC;IAC3B,IAAIa,YAAY,GAAGb,IAAI,CAACK,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IAE3C,IAAIJ,IAAI,CAACd,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE;MACjC,IAAI0B,YAAY,EAAE;QAChB,OAAOZ,IAAI;MACb;MAEA,OAAOD,IAAI,CAACtB,OAAO,CAACgC,QAAQ,EAAE,IAAI,CAAC,GAAGT,IAAI;IAC5C,CAAC,MAAM,IAAIA,IAAI,CAAClB,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;MACjC,IAAI8B,YAAY,EAAE;QAChB,OAAOZ,IAAI;MACb;MAEA,OAAOD,IAAI,CAACtB,OAAO,CAACiC,MAAM,EAAE,IAAI,CAAC,GAAGV,IAAI;IAC1C,CAAC,MAAM;MACL,OAAOD,IAAI,GAAGC,IAAI;IACpB;EACF;EAEA,IAAIa,QAAQ,GAAG;IACbC,IAAI,EAAE,SAASD,QAAQA,CAAA,EAAG,CAAC;EAC7B,CAAC;EAED,SAASE,KAAKA,CAACvB,GAAG,EAAE;IAClB,IAAI7F,CAAC,GAAG,CAAC;MACLF,MAAM;MACNU,GAAG;IAEP,OAAOR,CAAC,GAAGqH,SAAS,CAACpH,MAAM,EAAED,CAAC,EAAE,EAAE;MAChCF,MAAM,GAAGuH,SAAS,CAACrH,CAAC,CAAC;MAErB,KAAKQ,GAAG,IAAIV,MAAM,EAAE;QAClB,IAAIQ,MAAM,CAACO,SAAS,CAACyG,cAAc,CAAClG,IAAI,CAACtB,MAAM,EAAEU,GAAG,CAAC,EAAE;UACrDqF,GAAG,CAACrF,GAAG,CAAC,GAAGV,MAAM,CAACU,GAAG,CAAC;QACxB;MACF;IACF;IAEA,OAAOqF,GAAG;EACZ;EAEA,SAAS0B,UAAUA,CAACC,QAAQ,EAAEC,KAAK,EAAE;IACnC;IACA;IACA,IAAIC,GAAG,GAAGF,QAAQ,CAAC1C,OAAO,CAAC,KAAK,EAAE,UAAU6C,KAAK,EAAEC,MAAM,EAAEC,GAAG,EAAE;QAC9D,IAAIC,OAAO,GAAG,KAAK;UACfC,IAAI,GAAGH,MAAM;QAEjB,OAAO,EAAEG,IAAI,IAAI,CAAC,IAAIF,GAAG,CAACE,IAAI,CAAC,KAAK,IAAI,EAAE;UACxCD,OAAO,GAAG,CAACA,OAAO;QACpB;QAEA,IAAIA,OAAO,EAAE;UACX;UACA;UACA,OAAO,GAAG;QACZ,CAAC,MAAM;UACL;UACA,OAAO,IAAI;QACb;MACF,CAAC,CAAC;MACEE,KAAK,GAAGN,GAAG,CAACO,KAAK,CAAC,KAAK,CAAC;IAC5B,IAAIjI,CAAC,GAAG,CAAC;IAET,IAAIgI,KAAK,CAAC/H,MAAM,GAAGwH,KAAK,EAAE;MACxBO,KAAK,CAACE,MAAM,CAACT,KAAK,CAAC;IACrB,CAAC,MAAM;MACL,OAAOO,KAAK,CAAC/H,MAAM,GAAGwH,KAAK,EAAE;QAC3BO,KAAK,CAACG,IAAI,CAAC,EAAE,CAAC;MAChB;IACF;IAEA,OAAOnI,CAAC,GAAGgI,KAAK,CAAC/H,MAAM,EAAED,CAAC,EAAE,EAAE;MAC5B;MACAgI,KAAK,CAAChI,CAAC,CAAC,GAAGgI,KAAK,CAAChI,CAAC,CAAC,CAACoI,IAAI,CAAC,CAAC,CAACtD,OAAO,CAAC,OAAO,EAAE,GAAG,CAAC;IAClD;IAEA,OAAOkD,KAAK;EACd,CAAC,CAAC;EACF;EACA;;EAGA,SAAShB,KAAKA,CAACa,GAAG,EAAEQ,CAAC,EAAEC,MAAM,EAAE;IAC7B,IAAIC,CAAC,GAAGV,GAAG,CAAC5H,MAAM;IAElB,IAAIsI,CAAC,KAAK,CAAC,EAAE;MACX,OAAO,EAAE;IACX,CAAC,CAAC;;IAGF,IAAIC,OAAO,GAAG,CAAC,CAAC,CAAC;;IAEjB,OAAOA,OAAO,GAAGD,CAAC,EAAE;MAClB,IAAIE,QAAQ,GAAGZ,GAAG,CAAC1C,MAAM,CAACoD,CAAC,GAAGC,OAAO,GAAG,CAAC,CAAC;MAE1C,IAAIC,QAAQ,KAAKJ,CAAC,IAAI,CAACC,MAAM,EAAE;QAC7BE,OAAO,EAAE;MACX,CAAC,MAAM,IAAIC,QAAQ,KAAKJ,CAAC,IAAIC,MAAM,EAAE;QACnCE,OAAO,EAAE;MACX,CAAC,MAAM;QACL;MACF;IACF;IAEA,OAAOX,GAAG,CAACa,MAAM,CAAC,CAAC,EAAEH,CAAC,GAAGC,OAAO,CAAC;EACnC;EAEA,SAASG,kBAAkBA,CAACd,GAAG,EAAEe,CAAC,EAAE;IAClC,IAAIf,GAAG,CAACpB,OAAO,CAACmC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE;MAC5B,OAAO,CAAC,CAAC;IACX;IAEA,IAAIL,CAAC,GAAGV,GAAG,CAAC5H,MAAM;IAClB,IAAI4I,KAAK,GAAG,CAAC;MACT7I,CAAC,GAAG,CAAC;IAET,OAAOA,CAAC,GAAGuI,CAAC,EAAEvI,CAAC,EAAE,EAAE;MACjB,IAAI6H,GAAG,CAAC7H,CAAC,CAAC,KAAK,IAAI,EAAE;QACnBA,CAAC,EAAE;MACL,CAAC,MAAM,IAAI6H,GAAG,CAAC7H,CAAC,CAAC,KAAK4I,CAAC,CAAC,CAAC,CAAC,EAAE;QAC1BC,KAAK,EAAE;MACT,CAAC,MAAM,IAAIhB,GAAG,CAAC7H,CAAC,CAAC,KAAK4I,CAAC,CAAC,CAAC,CAAC,EAAE;QAC1BC,KAAK,EAAE;QAEP,IAAIA,KAAK,GAAG,CAAC,EAAE;UACb,OAAO7I,CAAC;QACV;MACF;IACF;IAEA,OAAO,CAAC,CAAC;EACX;EAEA,SAAS8I,wBAAwBA,CAACnD,GAAG,EAAE;IACrC,IAAIA,GAAG,IAAIA,GAAG,CAACpC,QAAQ,IAAI,CAACoC,GAAG,CAAClC,MAAM,EAAE;MACtCsF,OAAO,CAACC,IAAI,CAAC,yMAAyM,CAAC;IACzN;EACF,CAAC,CAAC;;EAGF,SAASC,YAAYA,CAACC,OAAO,EAAEzB,KAAK,EAAE;IACpC,IAAIA,KAAK,GAAG,CAAC,EAAE;MACb,OAAO,EAAE;IACX;IAEA,IAAI0B,MAAM,GAAG,EAAE;IAEf,OAAO1B,KAAK,GAAG,CAAC,EAAE;MAChB,IAAIA,KAAK,GAAG,CAAC,EAAE;QACb0B,MAAM,IAAID,OAAO;MACnB;MAEAzB,KAAK,KAAK,CAAC;MACXyB,OAAO,IAAIA,OAAO;IACpB;IAEA,OAAOC,MAAM,GAAGD,OAAO;EACzB;EAEA,IAAIE,OAAO,GAAG;IACZzE,MAAM,EAAEA,MAAM;IACdK,QAAQ,EAAEA,QAAQ;IAClBS,IAAI,EAAEA,IAAI;IACVU,QAAQ,EAAEA,QAAQ;IAClBO,UAAU,EAAEA,UAAU;IACtBQ,QAAQ,EAAEA,QAAQ;IAClBE,KAAK,EAAEA,KAAK;IACZG,UAAU,EAAEA,UAAU;IACtBP,KAAK,EAAEA,KAAK;IACZ2B,kBAAkB,EAAEA,kBAAkB;IACtCG,wBAAwB,EAAEA,wBAAwB;IAClDG,YAAY,EAAEA;EAChB,CAAC;EAED,IAAII,UAAU,GAAG1G,QAAQ,CAACA,QAAQ;EAClC,IAAI2G,OAAO,GAAGF,OAAO,CAACpC,KAAK;IACvBuC,YAAY,GAAGH,OAAO,CAAC7B,UAAU;IACjCiC,OAAO,GAAGJ,OAAO,CAACzE,MAAM;IACxB8E,oBAAoB,GAAGL,OAAO,CAACT,kBAAkB;EAErD,SAASe,UAAUA,CAACC,GAAG,EAAEC,IAAI,EAAEC,GAAG,EAAE;IAClC,IAAIxD,IAAI,GAAGuD,IAAI,CAACvD,IAAI;IACpB,IAAIyD,KAAK,GAAGF,IAAI,CAACE,KAAK,GAAGN,OAAO,CAACI,IAAI,CAACE,KAAK,CAAC,GAAG,IAAI;IACnD,IAAIC,IAAI,GAAGJ,GAAG,CAAC,CAAC,CAAC,CAAC7E,OAAO,CAAC,aAAa,EAAE,IAAI,CAAC;IAE9C,IAAI6E,GAAG,CAAC,CAAC,CAAC,CAACxE,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;MAC5B,OAAO;QACL6E,IAAI,EAAE,MAAM;QACZH,GAAG,EAAEA,GAAG;QACRxD,IAAI,EAAEA,IAAI;QACVyD,KAAK,EAAEA,KAAK;QACZC,IAAI,EAAEA;MACR,CAAC;IACH,CAAC,MAAM;MACL,OAAO;QACLC,IAAI,EAAE,OAAO;QACbH,GAAG,EAAEA,GAAG;QACRxD,IAAI,EAAEA,IAAI;QACVyD,KAAK,EAAEA,KAAK;QACZC,IAAI,EAAEP,OAAO,CAACO,IAAI;MACpB,CAAC;IACH;EACF;EAEA,SAASE,sBAAsBA,CAACJ,GAAG,EAAEE,IAAI,EAAE;IACzC,IAAIG,iBAAiB,GAAGL,GAAG,CAAClC,KAAK,CAAC,eAAe,CAAC;IAElD,IAAIuC,iBAAiB,KAAK,IAAI,EAAE;MAC9B,OAAOH,IAAI;IACb;IAEA,IAAII,YAAY,GAAGD,iBAAiB,CAAC,CAAC,CAAC;IACvC,OAAOH,IAAI,CAAC9B,KAAK,CAAC,IAAI,CAAC,CAACmC,GAAG,CAAC,UAAUC,IAAI,EAAE;MAC1C,IAAIC,iBAAiB,GAAGD,IAAI,CAAC1C,KAAK,CAAC,MAAM,CAAC;MAE1C,IAAI2C,iBAAiB,KAAK,IAAI,EAAE;QAC9B,OAAOD,IAAI;MACb;MAEA,IAAIE,YAAY,GAAGD,iBAAiB,CAAC,CAAC,CAAC;MAEvC,IAAIC,YAAY,CAACtK,MAAM,IAAIkK,YAAY,CAAClK,MAAM,EAAE;QAC9C,OAAOoK,IAAI,CAAChJ,KAAK,CAAC8I,YAAY,CAAClK,MAAM,CAAC;MACxC;MAEA,OAAOoK,IAAI;IACb,CAAC,CAAC,CAACG,IAAI,CAAC,IAAI,CAAC;EACf;EACA;AACF;AACA;;EAGE,IAAIC,WAAW,GAAG,aAAa,YAAY;IACzC,SAASC,SAASA,CAACC,OAAO,EAAE;MAC1B,IAAI,CAACA,OAAO,GAAGA,OAAO,IAAItB,UAAU;IACtC;IAEA,IAAIuB,MAAM,GAAGF,SAAS,CAAC7J,SAAS;IAEhC+J,MAAM,CAACC,KAAK,GAAG,SAASA,KAAKA,CAACC,GAAG,EAAE;MACjC,IAAInB,GAAG,GAAG,IAAI,CAACoB,KAAK,CAACC,KAAK,CAACC,OAAO,CAAC9D,IAAI,CAAC2D,GAAG,CAAC;MAE5C,IAAInB,GAAG,EAAE;QACP,IAAIA,GAAG,CAAC,CAAC,CAAC,CAAC1J,MAAM,GAAG,CAAC,EAAE;UACrB,OAAO;YACL+J,IAAI,EAAE,OAAO;YACbH,GAAG,EAAEF,GAAG,CAAC,CAAC;UACZ,CAAC;QACH;QAEA,OAAO;UACLE,GAAG,EAAE;QACP,CAAC;MACH;IACF,CAAC;IAEDe,MAAM,CAACM,IAAI,GAAG,SAASA,IAAIA,CAACJ,GAAG,EAAEK,MAAM,EAAE;MACvC,IAAIxB,GAAG,GAAG,IAAI,CAACoB,KAAK,CAACC,KAAK,CAACE,IAAI,CAAC/D,IAAI,CAAC2D,GAAG,CAAC;MAEzC,IAAInB,GAAG,EAAE;QACP,IAAIyB,SAAS,GAAGD,MAAM,CAACA,MAAM,CAAClL,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;;QAE3C,IAAImL,SAAS,IAAIA,SAAS,CAACpB,IAAI,KAAK,WAAW,EAAE;UAC/C,OAAO;YACLH,GAAG,EAAEF,GAAG,CAAC,CAAC,CAAC;YACXI,IAAI,EAAEJ,GAAG,CAAC,CAAC,CAAC,CAAC0B,SAAS,CAAC;UACzB,CAAC;QACH;QAEA,IAAItB,IAAI,GAAGJ,GAAG,CAAC,CAAC,CAAC,CAAC7E,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC;QACxC,OAAO;UACLkF,IAAI,EAAE,MAAM;UACZH,GAAG,EAAEF,GAAG,CAAC,CAAC,CAAC;UACX2B,cAAc,EAAE,UAAU;UAC1BvB,IAAI,EAAE,CAAC,IAAI,CAACY,OAAO,CAACtH,QAAQ,GAAGiG,OAAO,CAACS,IAAI,EAAE,IAAI,CAAC,GAAGA;QACvD,CAAC;MACH;IACF,CAAC;IAEDa,MAAM,CAACW,MAAM,GAAG,SAASA,MAAMA,CAACT,GAAG,EAAE;MACnC,IAAInB,GAAG,GAAG,IAAI,CAACoB,KAAK,CAACC,KAAK,CAACO,MAAM,CAACpE,IAAI,CAAC2D,GAAG,CAAC;MAE3C,IAAInB,GAAG,EAAE;QACP,IAAIE,GAAG,GAAGF,GAAG,CAAC,CAAC,CAAC;QAChB,IAAII,IAAI,GAAGE,sBAAsB,CAACJ,GAAG,EAAEF,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;QACpD,OAAO;UACLK,IAAI,EAAE,MAAM;UACZH,GAAG,EAAEA,GAAG;UACR2B,IAAI,EAAE7B,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG,CAAC,CAAC,CAAC,CAACvB,IAAI,CAAC,CAAC,GAAGuB,GAAG,CAAC,CAAC,CAAC;UACrCI,IAAI,EAAEA;QACR,CAAC;MACH;IACF,CAAC;IAEDa,MAAM,CAACa,OAAO,GAAG,SAASA,OAAOA,CAACX,GAAG,EAAE;MACrC,IAAInB,GAAG,GAAG,IAAI,CAACoB,KAAK,CAACC,KAAK,CAACS,OAAO,CAACtE,IAAI,CAAC2D,GAAG,CAAC;MAE5C,IAAInB,GAAG,EAAE;QACP,OAAO;UACLK,IAAI,EAAE,SAAS;UACfH,GAAG,EAAEF,GAAG,CAAC,CAAC,CAAC;UACX+B,KAAK,EAAE/B,GAAG,CAAC,CAAC,CAAC,CAAC1J,MAAM;UACpB8J,IAAI,EAAEJ,GAAG,CAAC,CAAC;QACb,CAAC;MACH;IACF,CAAC;IAEDiB,MAAM,CAACe,OAAO,GAAG,SAASA,OAAOA,CAACb,GAAG,EAAE;MACrC,IAAInB,GAAG,GAAG,IAAI,CAACoB,KAAK,CAACC,KAAK,CAACW,OAAO,CAACxE,IAAI,CAAC2D,GAAG,CAAC;MAE5C,IAAInB,GAAG,EAAE;QACP,IAAIiC,IAAI,GAAG;UACT5B,IAAI,EAAE,OAAO;UACb6B,MAAM,EAAEtC,YAAY,CAACI,GAAG,CAAC,CAAC,CAAC,CAAC7E,OAAO,CAAC,cAAc,EAAE,EAAE,CAAC,CAAC;UACxDgH,KAAK,EAAEnC,GAAG,CAAC,CAAC,CAAC,CAAC7E,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC,CAACmD,KAAK,CAAC,QAAQ,CAAC;UACvDD,KAAK,EAAE2B,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG,CAAC,CAAC,CAAC,CAAC7E,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAACmD,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE;UAC1D4B,GAAG,EAAEF,GAAG,CAAC,CAAC;QACZ,CAAC;QAED,IAAIiC,IAAI,CAACC,MAAM,CAAC5L,MAAM,KAAK2L,IAAI,CAACE,KAAK,CAAC7L,MAAM,EAAE;UAC5C,IAAIsI,CAAC,GAAGqD,IAAI,CAACE,KAAK,CAAC7L,MAAM;UACzB,IAAID,CAAC;UAEL,KAAKA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGuI,CAAC,EAAEvI,CAAC,EAAE,EAAE;YACtB,IAAI,WAAW,CAAC0B,IAAI,CAACkK,IAAI,CAACE,KAAK,CAAC9L,CAAC,CAAC,CAAC,EAAE;cACnC4L,IAAI,CAACE,KAAK,CAAC9L,CAAC,CAAC,GAAG,OAAO;YACzB,CAAC,MAAM,IAAI,YAAY,CAAC0B,IAAI,CAACkK,IAAI,CAACE,KAAK,CAAC9L,CAAC,CAAC,CAAC,EAAE;cAC3C4L,IAAI,CAACE,KAAK,CAAC9L,CAAC,CAAC,GAAG,QAAQ;YAC1B,CAAC,MAAM,IAAI,WAAW,CAAC0B,IAAI,CAACkK,IAAI,CAACE,KAAK,CAAC9L,CAAC,CAAC,CAAC,EAAE;cAC1C4L,IAAI,CAACE,KAAK,CAAC9L,CAAC,CAAC,GAAG,MAAM;YACxB,CAAC,MAAM;cACL4L,IAAI,CAACE,KAAK,CAAC9L,CAAC,CAAC,GAAG,IAAI;YACtB;UACF;UAEAuI,CAAC,GAAGqD,IAAI,CAAC5D,KAAK,CAAC/H,MAAM;UAErB,KAAKD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGuI,CAAC,EAAEvI,CAAC,EAAE,EAAE;YACtB4L,IAAI,CAAC5D,KAAK,CAAChI,CAAC,CAAC,GAAGuJ,YAAY,CAACqC,IAAI,CAAC5D,KAAK,CAAChI,CAAC,CAAC,EAAE4L,IAAI,CAACC,MAAM,CAAC5L,MAAM,CAAC;UACjE;UAEA,OAAO2L,IAAI;QACb;MACF;IACF,CAAC;IAEDhB,MAAM,CAACmB,EAAE,GAAG,SAASA,EAAEA,CAACjB,GAAG,EAAE;MAC3B,IAAInB,GAAG,GAAG,IAAI,CAACoB,KAAK,CAACC,KAAK,CAACe,EAAE,CAAC5E,IAAI,CAAC2D,GAAG,CAAC;MAEvC,IAAInB,GAAG,EAAE;QACP,OAAO;UACLK,IAAI,EAAE,IAAI;UACVH,GAAG,EAAEF,GAAG,CAAC,CAAC;QACZ,CAAC;MACH;IACF,CAAC;IAEDiB,MAAM,CAACoB,UAAU,GAAG,SAASA,UAAUA,CAAClB,GAAG,EAAE;MAC3C,IAAInB,GAAG,GAAG,IAAI,CAACoB,KAAK,CAACC,KAAK,CAACgB,UAAU,CAAC7E,IAAI,CAAC2D,GAAG,CAAC;MAE/C,IAAInB,GAAG,EAAE;QACP,IAAII,IAAI,GAAGJ,GAAG,CAAC,CAAC,CAAC,CAAC7E,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC;QACzC,OAAO;UACLkF,IAAI,EAAE,YAAY;UAClBH,GAAG,EAAEF,GAAG,CAAC,CAAC,CAAC;UACXI,IAAI,EAAEA;QACR,CAAC;MACH;IACF,CAAC;IAEDa,MAAM,CAACqB,IAAI,GAAG,SAASA,IAAIA,CAACnB,GAAG,EAAE;MAC/B,IAAInB,GAAG,GAAG,IAAI,CAACoB,KAAK,CAACC,KAAK,CAACiB,IAAI,CAAC9E,IAAI,CAAC2D,GAAG,CAAC;MAEzC,IAAInB,GAAG,EAAE;QACP,IAAIE,GAAG,GAAGF,GAAG,CAAC,CAAC,CAAC;QAChB,IAAIuC,IAAI,GAAGvC,GAAG,CAAC,CAAC,CAAC;QACjB,IAAIwC,SAAS,GAAGD,IAAI,CAACjM,MAAM,GAAG,CAAC;QAC/B,IAAImM,OAAO,GAAGF,IAAI,CAACA,IAAI,CAACjM,MAAM,GAAG,CAAC,CAAC,KAAK,GAAG;QAC3C,IAAIgM,IAAI,GAAG;UACTjC,IAAI,EAAE,MAAM;UACZH,GAAG,EAAEA,GAAG;UACRwC,OAAO,EAAEF,SAAS;UAClBG,KAAK,EAAEH,SAAS,GAAG,CAACD,IAAI,CAAC7K,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE;UAC1CkL,KAAK,EAAE,KAAK;UACZC,KAAK,EAAE;QACT,CAAC,CAAC,CAAC;;QAEH,IAAIC,SAAS,GAAG9C,GAAG,CAAC,CAAC,CAAC,CAAChC,KAAK,CAAC,IAAI,CAACoD,KAAK,CAACC,KAAK,CAACY,IAAI,CAAC;QACnD,IAAIrJ,IAAI,GAAG,KAAK;UACZqJ,IAAI;UACJf,KAAK;UACLjC,CAAC;UACD8D,OAAO;UACPH,KAAK;UACLI,MAAM;UACNC,SAAS;QACb,IAAIrE,CAAC,GAAGkE,SAAS,CAACxM,MAAM;QAExB,KAAK,IAAID,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGuI,CAAC,EAAEvI,CAAC,EAAE,EAAE;UAC1B4L,IAAI,GAAGa,SAAS,CAACzM,CAAC,CAAC;UACnB6J,GAAG,GAAG+B,IAAI,CAAC,CAAC;UACZ;;UAEAf,KAAK,GAAGe,IAAI,CAAC3L,MAAM;UACnB2L,IAAI,GAAGA,IAAI,CAAC9G,OAAO,CAAC,sBAAsB,EAAE,EAAE,CAAC,CAAC,CAAC;UACjD;;UAEA,IAAI,CAAC8G,IAAI,CAACnF,OAAO,CAAC,KAAK,CAAC,EAAE;YACxBoE,KAAK,IAAIe,IAAI,CAAC3L,MAAM;YACpB2L,IAAI,GAAG,CAAC,IAAI,CAACjB,OAAO,CAACtH,QAAQ,GAAGuI,IAAI,CAAC9G,OAAO,CAAC,IAAIkB,MAAM,CAAC,OAAO,GAAG6E,KAAK,GAAG,GAAG,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,GAAGe,IAAI,CAAC9G,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC;UAC3H,CAAC,CAAC;UACF;;UAGA,IAAI9E,CAAC,KAAKuI,CAAC,GAAG,CAAC,EAAE;YACfK,CAAC,GAAG,IAAI,CAACmC,KAAK,CAACC,KAAK,CAAC6B,MAAM,CAAC1F,IAAI,CAACsF,SAAS,CAACzM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAErD,IAAImM,SAAS,GAAGvD,CAAC,CAAC3I,MAAM,KAAK,CAAC,IAAI,CAACmM,OAAO,IAAIxD,CAAC,CAACA,CAAC,CAAC3I,MAAM,GAAG,CAAC,CAAC,KAAK,GAAG,GAAG2I,CAAC,CAAC3I,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC0K,OAAO,CAACjH,UAAU,IAAIkF,CAAC,KAAKsD,IAAI,EAAE;cAC7HQ,OAAO,GAAGD,SAAS,CAACpL,KAAK,CAACrB,CAAC,GAAG,CAAC,CAAC,CAACwK,IAAI,CAAC,IAAI,CAAC;cAC3CyB,IAAI,CAACpC,GAAG,GAAGoC,IAAI,CAACpC,GAAG,CAACtE,SAAS,CAAC,CAAC,EAAE0G,IAAI,CAACpC,GAAG,CAAC5J,MAAM,GAAGyM,OAAO,CAACzM,MAAM,CAAC;cAClED,CAAC,GAAGuI,CAAC,GAAG,CAAC;YACX;UACF,CAAC,CAAC;UACF;UACA;;UAGAgE,KAAK,GAAGhK,IAAI,IAAI,cAAc,CAACb,IAAI,CAACkK,IAAI,CAAC;UAEzC,IAAI5L,CAAC,KAAKuI,CAAC,GAAG,CAAC,EAAE;YACfhG,IAAI,GAAGqJ,IAAI,CAACzG,MAAM,CAACyG,IAAI,CAAC3L,MAAM,GAAG,CAAC,CAAC,KAAK,IAAI;YAC5C,IAAI,CAACsM,KAAK,EAAEA,KAAK,GAAGhK,IAAI;UAC1B;UAEA,IAAIgK,KAAK,EAAE;YACTN,IAAI,CAACM,KAAK,GAAG,IAAI;UACnB,CAAC,CAAC;;UAGFI,MAAM,GAAG,aAAa,CAACjL,IAAI,CAACkK,IAAI,CAAC;UACjCgB,SAAS,GAAGE,SAAS;UAErB,IAAIH,MAAM,EAAE;YACVC,SAAS,GAAGhB,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG;YAC3BA,IAAI,GAAGA,IAAI,CAAC9G,OAAO,CAAC,cAAc,EAAE,EAAE,CAAC;UACzC;UAEAmH,IAAI,CAACO,KAAK,CAACrE,IAAI,CAAC;YACd6B,IAAI,EAAE,WAAW;YACjBH,GAAG,EAAEA,GAAG;YACRkD,IAAI,EAAEJ,MAAM;YACZK,OAAO,EAAEJ,SAAS;YAClBL,KAAK,EAAEA,KAAK;YACZxC,IAAI,EAAE6B;UACR,CAAC,CAAC;QACJ;QAEA,OAAOK,IAAI;MACb;IACF,CAAC;IAEDrB,MAAM,CAAChG,IAAI,GAAG,SAASA,IAAIA,CAACkG,GAAG,EAAE;MAC/B,IAAInB,GAAG,GAAG,IAAI,CAACoB,KAAK,CAACC,KAAK,CAACpG,IAAI,CAACuC,IAAI,CAAC2D,GAAG,CAAC;MAEzC,IAAInB,GAAG,EAAE;QACP,OAAO;UACLK,IAAI,EAAE,IAAI,CAACW,OAAO,CAACpH,QAAQ,GAAG,WAAW,GAAG,MAAM;UAClDsG,GAAG,EAAEF,GAAG,CAAC,CAAC,CAAC;UACXsD,GAAG,EAAE,CAAC,IAAI,CAACtC,OAAO,CAACnH,SAAS,KAAKmG,GAAG,CAAC,CAAC,CAAC,KAAK,KAAK,IAAIA,GAAG,CAAC,CAAC,CAAC,KAAK,QAAQ,IAAIA,GAAG,CAAC,CAAC,CAAC,KAAK,OAAO,CAAC;UAC/FI,IAAI,EAAE,IAAI,CAACY,OAAO,CAACpH,QAAQ,GAAG,IAAI,CAACoH,OAAO,CAACnH,SAAS,GAAG,IAAI,CAACmH,OAAO,CAACnH,SAAS,CAACmG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAGH,OAAO,CAACG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAGA,GAAG,CAAC,CAAC;QACjH,CAAC;MACH;IACF,CAAC;IAEDiB,MAAM,CAACsC,GAAG,GAAG,SAASA,GAAGA,CAACpC,GAAG,EAAE;MAC7B,IAAInB,GAAG,GAAG,IAAI,CAACoB,KAAK,CAACC,KAAK,CAACkC,GAAG,CAAC/F,IAAI,CAAC2D,GAAG,CAAC;MAExC,IAAInB,GAAG,EAAE;QACP,IAAIA,GAAG,CAAC,CAAC,CAAC,EAAEA,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG,CAAC,CAAC,CAAC,CAACpE,SAAS,CAAC,CAAC,EAAEoE,GAAG,CAAC,CAAC,CAAC,CAAC1J,MAAM,GAAG,CAAC,CAAC;QAC3D,IAAIkN,GAAG,GAAGxD,GAAG,CAAC,CAAC,CAAC,CAACzE,WAAW,CAAC,CAAC,CAACJ,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC;QACnD,OAAO;UACLqI,GAAG,EAAEA,GAAG;UACRtD,GAAG,EAAEF,GAAG,CAAC,CAAC,CAAC;UACXtD,IAAI,EAAEsD,GAAG,CAAC,CAAC,CAAC;UACZG,KAAK,EAAEH,GAAG,CAAC,CAAC;QACd,CAAC;MACH;IACF,CAAC;IAEDiB,MAAM,CAACwC,KAAK,GAAG,SAASA,KAAKA,CAACtC,GAAG,EAAE;MACjC,IAAInB,GAAG,GAAG,IAAI,CAACoB,KAAK,CAACC,KAAK,CAACoC,KAAK,CAACjG,IAAI,CAAC2D,GAAG,CAAC;MAE1C,IAAInB,GAAG,EAAE;QACP,IAAIiC,IAAI,GAAG;UACT5B,IAAI,EAAE,OAAO;UACb6B,MAAM,EAAEtC,YAAY,CAACI,GAAG,CAAC,CAAC,CAAC,CAAC7E,OAAO,CAAC,cAAc,EAAE,EAAE,CAAC,CAAC;UACxDgH,KAAK,EAAEnC,GAAG,CAAC,CAAC,CAAC,CAAC7E,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC,CAACmD,KAAK,CAAC,QAAQ,CAAC;UACvDD,KAAK,EAAE2B,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG,CAAC,CAAC,CAAC,CAAC7E,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAACmD,KAAK,CAAC,IAAI,CAAC,GAAG;QAC1D,CAAC;QAED,IAAI2D,IAAI,CAACC,MAAM,CAAC5L,MAAM,KAAK2L,IAAI,CAACE,KAAK,CAAC7L,MAAM,EAAE;UAC5C2L,IAAI,CAAC/B,GAAG,GAAGF,GAAG,CAAC,CAAC,CAAC;UACjB,IAAIpB,CAAC,GAAGqD,IAAI,CAACE,KAAK,CAAC7L,MAAM;UACzB,IAAID,CAAC;UAEL,KAAKA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGuI,CAAC,EAAEvI,CAAC,EAAE,EAAE;YACtB,IAAI,WAAW,CAAC0B,IAAI,CAACkK,IAAI,CAACE,KAAK,CAAC9L,CAAC,CAAC,CAAC,EAAE;cACnC4L,IAAI,CAACE,KAAK,CAAC9L,CAAC,CAAC,GAAG,OAAO;YACzB,CAAC,MAAM,IAAI,YAAY,CAAC0B,IAAI,CAACkK,IAAI,CAACE,KAAK,CAAC9L,CAAC,CAAC,CAAC,EAAE;cAC3C4L,IAAI,CAACE,KAAK,CAAC9L,CAAC,CAAC,GAAG,QAAQ;YAC1B,CAAC,MAAM,IAAI,WAAW,CAAC0B,IAAI,CAACkK,IAAI,CAACE,KAAK,CAAC9L,CAAC,CAAC,CAAC,EAAE;cAC1C4L,IAAI,CAACE,KAAK,CAAC9L,CAAC,CAAC,GAAG,MAAM;YACxB,CAAC,MAAM;cACL4L,IAAI,CAACE,KAAK,CAAC9L,CAAC,CAAC,GAAG,IAAI;YACtB;UACF;UAEAuI,CAAC,GAAGqD,IAAI,CAAC5D,KAAK,CAAC/H,MAAM;UAErB,KAAKD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGuI,CAAC,EAAEvI,CAAC,EAAE,EAAE;YACtB4L,IAAI,CAAC5D,KAAK,CAAChI,CAAC,CAAC,GAAGuJ,YAAY,CAACqC,IAAI,CAAC5D,KAAK,CAAChI,CAAC,CAAC,CAAC8E,OAAO,CAAC,kBAAkB,EAAE,EAAE,CAAC,EAAE8G,IAAI,CAACC,MAAM,CAAC5L,MAAM,CAAC;UACjG;UAEA,OAAO2L,IAAI;QACb;MACF;IACF,CAAC;IAEDhB,MAAM,CAACyC,QAAQ,GAAG,SAASA,QAAQA,CAACvC,GAAG,EAAE;MACvC,IAAInB,GAAG,GAAG,IAAI,CAACoB,KAAK,CAACC,KAAK,CAACqC,QAAQ,CAAClG,IAAI,CAAC2D,GAAG,CAAC;MAE7C,IAAInB,GAAG,EAAE;QACP,OAAO;UACLK,IAAI,EAAE,SAAS;UACfH,GAAG,EAAEF,GAAG,CAAC,CAAC,CAAC;UACX+B,KAAK,EAAE/B,GAAG,CAAC,CAAC,CAAC,CAACxE,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,GAAG,CAAC,GAAG,CAAC;UACvC4E,IAAI,EAAEJ,GAAG,CAAC,CAAC;QACb,CAAC;MACH;IACF,CAAC;IAEDiB,MAAM,CAAC0C,SAAS,GAAG,SAASA,SAASA,CAACxC,GAAG,EAAE;MACzC,IAAInB,GAAG,GAAG,IAAI,CAACoB,KAAK,CAACC,KAAK,CAACsC,SAAS,CAACnG,IAAI,CAAC2D,GAAG,CAAC;MAE9C,IAAInB,GAAG,EAAE;QACP,OAAO;UACLK,IAAI,EAAE,WAAW;UACjBH,GAAG,EAAEF,GAAG,CAAC,CAAC,CAAC;UACXI,IAAI,EAAEJ,GAAG,CAAC,CAAC,CAAC,CAACxE,MAAM,CAACwE,GAAG,CAAC,CAAC,CAAC,CAAC1J,MAAM,GAAG,CAAC,CAAC,KAAK,IAAI,GAAG0J,GAAG,CAAC,CAAC,CAAC,CAACtI,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAGsI,GAAG,CAAC,CAAC;QAC/E,CAAC;MACH;IACF,CAAC;IAEDiB,MAAM,CAACb,IAAI,GAAG,SAASA,IAAIA,CAACe,GAAG,EAAEK,MAAM,EAAE;MACvC,IAAIxB,GAAG,GAAG,IAAI,CAACoB,KAAK,CAACC,KAAK,CAACjB,IAAI,CAAC5C,IAAI,CAAC2D,GAAG,CAAC;MAEzC,IAAInB,GAAG,EAAE;QACP,IAAIyB,SAAS,GAAGD,MAAM,CAACA,MAAM,CAAClL,MAAM,GAAG,CAAC,CAAC;QAEzC,IAAImL,SAAS,IAAIA,SAAS,CAACpB,IAAI,KAAK,MAAM,EAAE;UAC1C,OAAO;YACLH,GAAG,EAAEF,GAAG,CAAC,CAAC,CAAC;YACXI,IAAI,EAAEJ,GAAG,CAAC,CAAC;UACb,CAAC;QACH;QAEA,OAAO;UACLK,IAAI,EAAE,MAAM;UACZH,GAAG,EAAEF,GAAG,CAAC,CAAC,CAAC;UACXI,IAAI,EAAEJ,GAAG,CAAC,CAAC;QACb,CAAC;MACH;IACF,CAAC;IAEDiB,MAAM,CAACjG,MAAM,GAAG,SAASA,MAAMA,CAACmG,GAAG,EAAE;MACnC,IAAInB,GAAG,GAAG,IAAI,CAACoB,KAAK,CAACwC,MAAM,CAAC5I,MAAM,CAACwC,IAAI,CAAC2D,GAAG,CAAC;MAE5C,IAAInB,GAAG,EAAE;QACP,OAAO;UACLK,IAAI,EAAE,QAAQ;UACdH,GAAG,EAAEF,GAAG,CAAC,CAAC,CAAC;UACXI,IAAI,EAAEP,OAAO,CAACG,GAAG,CAAC,CAAC,CAAC;QACtB,CAAC;MACH;IACF,CAAC;IAEDiB,MAAM,CAACuC,GAAG,GAAG,SAASA,GAAGA,CAACrC,GAAG,EAAE0C,MAAM,EAAEC,UAAU,EAAE;MACjD,IAAI9D,GAAG,GAAG,IAAI,CAACoB,KAAK,CAACwC,MAAM,CAACJ,GAAG,CAAChG,IAAI,CAAC2D,GAAG,CAAC;MAEzC,IAAInB,GAAG,EAAE;QACP,IAAI,CAAC6D,MAAM,IAAI,OAAO,CAAC9L,IAAI,CAACiI,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE;UACnC6D,MAAM,GAAG,IAAI;QACf,CAAC,MAAM,IAAIA,MAAM,IAAI,SAAS,CAAC9L,IAAI,CAACiI,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE;UAC3C6D,MAAM,GAAG,KAAK;QAChB;QAEA,IAAI,CAACC,UAAU,IAAI,gCAAgC,CAAC/L,IAAI,CAACiI,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE;UAChE8D,UAAU,GAAG,IAAI;QACnB,CAAC,MAAM,IAAIA,UAAU,IAAI,kCAAkC,CAAC/L,IAAI,CAACiI,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE;UACxE8D,UAAU,GAAG,KAAK;QACpB;QAEA,OAAO;UACLzD,IAAI,EAAE,IAAI,CAACW,OAAO,CAACpH,QAAQ,GAAG,MAAM,GAAG,MAAM;UAC7CsG,GAAG,EAAEF,GAAG,CAAC,CAAC,CAAC;UACX6D,MAAM,EAAEA,MAAM;UACdC,UAAU,EAAEA,UAAU;UACtB1D,IAAI,EAAE,IAAI,CAACY,OAAO,CAACpH,QAAQ,GAAG,IAAI,CAACoH,OAAO,CAACnH,SAAS,GAAG,IAAI,CAACmH,OAAO,CAACnH,SAAS,CAACmG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAGH,OAAO,CAACG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAGA,GAAG,CAAC,CAAC;QACjH,CAAC;MACH;IACF,CAAC;IAEDiB,MAAM,CAAChB,IAAI,GAAG,SAASA,IAAIA,CAACkB,GAAG,EAAE;MAC/B,IAAInB,GAAG,GAAG,IAAI,CAACoB,KAAK,CAACwC,MAAM,CAAC3D,IAAI,CAACzC,IAAI,CAAC2D,GAAG,CAAC;MAE1C,IAAInB,GAAG,EAAE;QACP,IAAI+D,cAAc,GAAGjE,oBAAoB,CAACE,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC;QAEvD,IAAI+D,cAAc,GAAG,CAAC,CAAC,EAAE;UACvB,IAAIpB,KAAK,GAAG3C,GAAG,CAAC,CAAC,CAAC,CAAClD,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC;UAC7C,IAAIkH,OAAO,GAAGrB,KAAK,GAAG3C,GAAG,CAAC,CAAC,CAAC,CAAC1J,MAAM,GAAGyN,cAAc;UACpD/D,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG,CAAC,CAAC,CAAC,CAACpE,SAAS,CAAC,CAAC,EAAEmI,cAAc,CAAC;UAC5C/D,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG,CAAC,CAAC,CAAC,CAACpE,SAAS,CAAC,CAAC,EAAEoI,OAAO,CAAC,CAACvF,IAAI,CAAC,CAAC;UAC5CuB,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE;QACb;QAEA,IAAItD,IAAI,GAAGsD,GAAG,CAAC,CAAC,CAAC;QACjB,IAAIG,KAAK,GAAG,EAAE;QAEd,IAAI,IAAI,CAACa,OAAO,CAACtH,QAAQ,EAAE;UACzB,IAAIuG,IAAI,GAAG,+BAA+B,CAACzC,IAAI,CAACd,IAAI,CAAC;UAErD,IAAIuD,IAAI,EAAE;YACRvD,IAAI,GAAGuD,IAAI,CAAC,CAAC,CAAC;YACdE,KAAK,GAAGF,IAAI,CAAC,CAAC,CAAC;UACjB,CAAC,MAAM;YACLE,KAAK,GAAG,EAAE;UACZ;QACF,CAAC,MAAM;UACLA,KAAK,GAAGH,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG,CAAC,CAAC,CAAC,CAACtI,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE;QAC3C;QAEAgF,IAAI,GAAGA,IAAI,CAAC+B,IAAI,CAAC,CAAC,CAACtD,OAAO,CAAC,eAAe,EAAE,IAAI,CAAC;QACjD,IAAI8I,KAAK,GAAGlE,UAAU,CAACC,GAAG,EAAE;UAC1BtD,IAAI,EAAEA,IAAI,GAAGA,IAAI,CAACvB,OAAO,CAAC,IAAI,CAACiG,KAAK,CAACwC,MAAM,CAACM,QAAQ,EAAE,IAAI,CAAC,GAAGxH,IAAI;UAClEyD,KAAK,EAAEA,KAAK,GAAGA,KAAK,CAAChF,OAAO,CAAC,IAAI,CAACiG,KAAK,CAACwC,MAAM,CAACM,QAAQ,EAAE,IAAI,CAAC,GAAG/D;QACnE,CAAC,EAAEH,GAAG,CAAC,CAAC,CAAC,CAAC;QACV,OAAOiE,KAAK;MACd;IACF,CAAC;IAEDhD,MAAM,CAACkD,OAAO,GAAG,SAASA,OAAOA,CAAChD,GAAG,EAAEiD,KAAK,EAAE;MAC5C,IAAIpE,GAAG;MAEP,IAAI,CAACA,GAAG,GAAG,IAAI,CAACoB,KAAK,CAACwC,MAAM,CAACO,OAAO,CAAC3G,IAAI,CAAC2D,GAAG,CAAC,MAAMnB,GAAG,GAAG,IAAI,CAACoB,KAAK,CAACwC,MAAM,CAACS,MAAM,CAAC7G,IAAI,CAAC2D,GAAG,CAAC,CAAC,EAAE;QAC7F,IAAIlB,IAAI,GAAG,CAACD,GAAG,CAAC,CAAC,CAAC,IAAIA,GAAG,CAAC,CAAC,CAAC,EAAE7E,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC;QAClD8E,IAAI,GAAGmE,KAAK,CAACnE,IAAI,CAAC1E,WAAW,CAAC,CAAC,CAAC;QAEhC,IAAI,CAAC0E,IAAI,IAAI,CAACA,IAAI,CAACvD,IAAI,EAAE;UACvB,IAAI0D,IAAI,GAAGJ,GAAG,CAAC,CAAC,CAAC,CAACxE,MAAM,CAAC,CAAC,CAAC;UAC3B,OAAO;YACL6E,IAAI,EAAE,MAAM;YACZH,GAAG,EAAEE,IAAI;YACTA,IAAI,EAAEA;UACR,CAAC;QACH;QAEA,IAAI6D,KAAK,GAAGlE,UAAU,CAACC,GAAG,EAAEC,IAAI,EAAED,GAAG,CAAC,CAAC,CAAC,CAAC;QACzC,OAAOiE,KAAK;MACd;IACF,CAAC;IAEDhD,MAAM,CAACqD,MAAM,GAAG,SAASA,MAAMA,CAACnD,GAAG,EAAEoD,SAAS,EAAEC,QAAQ,EAAE;MACxD,IAAIA,QAAQ,KAAK,KAAK,CAAC,EAAE;QACvBA,QAAQ,GAAG,EAAE;MACf;MAEA,IAAIxG,KAAK,GAAG,IAAI,CAACoD,KAAK,CAACwC,MAAM,CAACU,MAAM,CAAC3B,KAAK,CAACnF,IAAI,CAAC2D,GAAG,CAAC;MAEpD,IAAInD,KAAK,KAAK,CAACA,KAAK,CAAC,CAAC,CAAC,IAAIA,KAAK,CAAC,CAAC,CAAC,KAAKwG,QAAQ,KAAK,EAAE,IAAI,IAAI,CAACpD,KAAK,CAACwC,MAAM,CAACa,WAAW,CAACjH,IAAI,CAACgH,QAAQ,CAAC,CAAC,CAAC,EAAE;QACzGD,SAAS,GAAGA,SAAS,CAAC7M,KAAK,CAAC,CAAC,CAAC,GAAGyJ,GAAG,CAAC7K,MAAM,CAAC;QAC5C,IAAIoO,MAAM,GAAG1G,KAAK,CAAC,CAAC,CAAC,KAAK,IAAI,GAAG,IAAI,CAACoD,KAAK,CAACwC,MAAM,CAACU,MAAM,CAACK,MAAM,GAAG,IAAI,CAACvD,KAAK,CAACwC,MAAM,CAACU,MAAM,CAACM,MAAM;QAClGF,MAAM,CAACG,SAAS,GAAG,CAAC;QACpB,IAAI7E,GAAG;QAEP,OAAO,CAAChC,KAAK,GAAG0G,MAAM,CAAClH,IAAI,CAAC+G,SAAS,CAAC,KAAK,IAAI,EAAE;UAC/CvE,GAAG,GAAG,IAAI,CAACoB,KAAK,CAACwC,MAAM,CAACU,MAAM,CAACQ,MAAM,CAACtH,IAAI,CAAC+G,SAAS,CAAC7M,KAAK,CAAC,CAAC,EAAEsG,KAAK,CAAC+G,KAAK,GAAG,CAAC,CAAC,CAAC;UAE/E,IAAI/E,GAAG,EAAE;YACP,OAAO;cACLK,IAAI,EAAE,QAAQ;cACdH,GAAG,EAAEiB,GAAG,CAACzJ,KAAK,CAAC,CAAC,EAAEsI,GAAG,CAAC,CAAC,CAAC,CAAC1J,MAAM,CAAC;cAChC8J,IAAI,EAAEe,GAAG,CAACzJ,KAAK,CAAC,CAAC,EAAEsI,GAAG,CAAC,CAAC,CAAC,CAAC1J,MAAM,GAAG,CAAC;YACtC,CAAC;UACH;QACF;MACF;IACF,CAAC;IAED2K,MAAM,CAAC+D,EAAE,GAAG,SAASA,EAAEA,CAAC7D,GAAG,EAAEoD,SAAS,EAAEC,QAAQ,EAAE;MAChD,IAAIA,QAAQ,KAAK,KAAK,CAAC,EAAE;QACvBA,QAAQ,GAAG,EAAE;MACf;MAEA,IAAIxG,KAAK,GAAG,IAAI,CAACoD,KAAK,CAACwC,MAAM,CAACoB,EAAE,CAACrC,KAAK,CAACnF,IAAI,CAAC2D,GAAG,CAAC;MAEhD,IAAInD,KAAK,KAAK,CAACA,KAAK,CAAC,CAAC,CAAC,IAAIA,KAAK,CAAC,CAAC,CAAC,KAAKwG,QAAQ,KAAK,EAAE,IAAI,IAAI,CAACpD,KAAK,CAACwC,MAAM,CAACa,WAAW,CAACjH,IAAI,CAACgH,QAAQ,CAAC,CAAC,CAAC,EAAE;QACzGD,SAAS,GAAGA,SAAS,CAAC7M,KAAK,CAAC,CAAC,CAAC,GAAGyJ,GAAG,CAAC7K,MAAM,CAAC;QAC5C,IAAIoO,MAAM,GAAG1G,KAAK,CAAC,CAAC,CAAC,KAAK,GAAG,GAAG,IAAI,CAACoD,KAAK,CAACwC,MAAM,CAACoB,EAAE,CAACL,MAAM,GAAG,IAAI,CAACvD,KAAK,CAACwC,MAAM,CAACoB,EAAE,CAACJ,MAAM;QACzFF,MAAM,CAACG,SAAS,GAAG,CAAC;QACpB,IAAI7E,GAAG;QAEP,OAAO,CAAChC,KAAK,GAAG0G,MAAM,CAAClH,IAAI,CAAC+G,SAAS,CAAC,KAAK,IAAI,EAAE;UAC/CvE,GAAG,GAAG,IAAI,CAACoB,KAAK,CAACwC,MAAM,CAACoB,EAAE,CAACF,MAAM,CAACtH,IAAI,CAAC+G,SAAS,CAAC7M,KAAK,CAAC,CAAC,EAAEsG,KAAK,CAAC+G,KAAK,GAAG,CAAC,CAAC,CAAC;UAE3E,IAAI/E,GAAG,EAAE;YACP,OAAO;cACLK,IAAI,EAAE,IAAI;cACVH,GAAG,EAAEiB,GAAG,CAACzJ,KAAK,CAAC,CAAC,EAAEsI,GAAG,CAAC,CAAC,CAAC,CAAC1J,MAAM,CAAC;cAChC8J,IAAI,EAAEe,GAAG,CAACzJ,KAAK,CAAC,CAAC,EAAEsI,GAAG,CAAC,CAAC,CAAC,CAAC1J,MAAM,GAAG,CAAC;YACtC,CAAC;UACH;QACF;MACF;IACF,CAAC;IAED2K,MAAM,CAACgE,QAAQ,GAAG,SAASA,QAAQA,CAAC9D,GAAG,EAAE;MACvC,IAAInB,GAAG,GAAG,IAAI,CAACoB,KAAK,CAACwC,MAAM,CAACrC,IAAI,CAAC/D,IAAI,CAAC2D,GAAG,CAAC;MAE1C,IAAInB,GAAG,EAAE;QACP,IAAII,IAAI,GAAGJ,GAAG,CAAC,CAAC,CAAC,CAAC7E,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC;QACrC,IAAI+J,gBAAgB,GAAG,MAAM,CAACnN,IAAI,CAACqI,IAAI,CAAC;QACxC,IAAI+E,uBAAuB,GAAG/E,IAAI,CAACgF,UAAU,CAAC,GAAG,CAAC,IAAIhF,IAAI,CAACiF,QAAQ,CAAC,GAAG,CAAC;QAExE,IAAIH,gBAAgB,IAAIC,uBAAuB,EAAE;UAC/C/E,IAAI,GAAGA,IAAI,CAACxE,SAAS,CAAC,CAAC,EAAEwE,IAAI,CAAC9J,MAAM,GAAG,CAAC,CAAC;QAC3C;QAEA8J,IAAI,GAAGP,OAAO,CAACO,IAAI,EAAE,IAAI,CAAC;QAC1B,OAAO;UACLC,IAAI,EAAE,UAAU;UAChBH,GAAG,EAAEF,GAAG,CAAC,CAAC,CAAC;UACXI,IAAI,EAAEA;QACR,CAAC;MACH;IACF,CAAC;IAEDa,MAAM,CAACqE,EAAE,GAAG,SAASA,EAAEA,CAACnE,GAAG,EAAE;MAC3B,IAAInB,GAAG,GAAG,IAAI,CAACoB,KAAK,CAACwC,MAAM,CAAC0B,EAAE,CAAC9H,IAAI,CAAC2D,GAAG,CAAC;MAExC,IAAInB,GAAG,EAAE;QACP,OAAO;UACLK,IAAI,EAAE,IAAI;UACVH,GAAG,EAAEF,GAAG,CAAC,CAAC;QACZ,CAAC;MACH;IACF,CAAC;IAEDiB,MAAM,CAACsE,GAAG,GAAG,SAASA,GAAGA,CAACpE,GAAG,EAAE;MAC7B,IAAInB,GAAG,GAAG,IAAI,CAACoB,KAAK,CAACwC,MAAM,CAAC2B,GAAG,CAAC/H,IAAI,CAAC2D,GAAG,CAAC;MAEzC,IAAInB,GAAG,EAAE;QACP,OAAO;UACLK,IAAI,EAAE,KAAK;UACXH,GAAG,EAAEF,GAAG,CAAC,CAAC,CAAC;UACXI,IAAI,EAAEJ,GAAG,CAAC,CAAC;QACb,CAAC;MACH;IACF,CAAC;IAEDiB,MAAM,CAACuE,QAAQ,GAAG,SAASA,QAAQA,CAACrE,GAAG,EAAE1H,MAAM,EAAE;MAC/C,IAAIuG,GAAG,GAAG,IAAI,CAACoB,KAAK,CAACwC,MAAM,CAAC4B,QAAQ,CAAChI,IAAI,CAAC2D,GAAG,CAAC;MAE9C,IAAInB,GAAG,EAAE;QACP,IAAII,IAAI,EAAE1D,IAAI;QAEd,IAAIsD,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;UAClBI,IAAI,GAAGP,OAAO,CAAC,IAAI,CAACmB,OAAO,CAACvH,MAAM,GAAGA,MAAM,CAACuG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAGA,GAAG,CAAC,CAAC,CAAC,CAAC;UAC7DtD,IAAI,GAAG,SAAS,GAAG0D,IAAI;QACzB,CAAC,MAAM;UACLA,IAAI,GAAGP,OAAO,CAACG,GAAG,CAAC,CAAC,CAAC,CAAC;UACtBtD,IAAI,GAAG0D,IAAI;QACb;QAEA,OAAO;UACLC,IAAI,EAAE,MAAM;UACZH,GAAG,EAAEF,GAAG,CAAC,CAAC,CAAC;UACXI,IAAI,EAAEA,IAAI;UACV1D,IAAI,EAAEA,IAAI;UACV8E,MAAM,EAAE,CAAC;YACPnB,IAAI,EAAE,MAAM;YACZH,GAAG,EAAEE,IAAI;YACTA,IAAI,EAAEA;UACR,CAAC;QACH,CAAC;MACH;IACF,CAAC;IAEDa,MAAM,CAACwE,GAAG,GAAG,SAASA,GAAGA,CAACtE,GAAG,EAAE1H,MAAM,EAAE;MACrC,IAAIuG,GAAG;MAEP,IAAIA,GAAG,GAAG,IAAI,CAACoB,KAAK,CAACwC,MAAM,CAAC6B,GAAG,CAACjI,IAAI,CAAC2D,GAAG,CAAC,EAAE;QACzC,IAAIf,IAAI,EAAE1D,IAAI;QAEd,IAAIsD,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;UAClBI,IAAI,GAAGP,OAAO,CAAC,IAAI,CAACmB,OAAO,CAACvH,MAAM,GAAGA,MAAM,CAACuG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAGA,GAAG,CAAC,CAAC,CAAC,CAAC;UAC7DtD,IAAI,GAAG,SAAS,GAAG0D,IAAI;QACzB,CAAC,MAAM;UACL;UACA,IAAIsF,WAAW;UAEf,GAAG;YACDA,WAAW,GAAG1F,GAAG,CAAC,CAAC,CAAC;YACpBA,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAACoB,KAAK,CAACwC,MAAM,CAAC+B,UAAU,CAACnI,IAAI,CAACwC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACvD,CAAC,QAAQ0F,WAAW,KAAK1F,GAAG,CAAC,CAAC,CAAC;UAE/BI,IAAI,GAAGP,OAAO,CAACG,GAAG,CAAC,CAAC,CAAC,CAAC;UAEtB,IAAIA,GAAG,CAAC,CAAC,CAAC,KAAK,MAAM,EAAE;YACrBtD,IAAI,GAAG,SAAS,GAAG0D,IAAI;UACzB,CAAC,MAAM;YACL1D,IAAI,GAAG0D,IAAI;UACb;QACF;QAEA,OAAO;UACLC,IAAI,EAAE,MAAM;UACZH,GAAG,EAAEF,GAAG,CAAC,CAAC,CAAC;UACXI,IAAI,EAAEA,IAAI;UACV1D,IAAI,EAAEA,IAAI;UACV8E,MAAM,EAAE,CAAC;YACPnB,IAAI,EAAE,MAAM;YACZH,GAAG,EAAEE,IAAI;YACTA,IAAI,EAAEA;UACR,CAAC;QACH,CAAC;MACH;IACF,CAAC;IAEDa,MAAM,CAAC2E,UAAU,GAAG,SAASA,UAAUA,CAACzE,GAAG,EAAE2C,UAAU,EAAE9J,WAAW,EAAE;MACpE,IAAIgG,GAAG,GAAG,IAAI,CAACoB,KAAK,CAACwC,MAAM,CAACxD,IAAI,CAAC5C,IAAI,CAAC2D,GAAG,CAAC;MAE1C,IAAInB,GAAG,EAAE;QACP,IAAII,IAAI;QAER,IAAI0D,UAAU,EAAE;UACd1D,IAAI,GAAG,IAAI,CAACY,OAAO,CAACpH,QAAQ,GAAG,IAAI,CAACoH,OAAO,CAACnH,SAAS,GAAG,IAAI,CAACmH,OAAO,CAACnH,SAAS,CAACmG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAGH,OAAO,CAACG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAGA,GAAG,CAAC,CAAC,CAAC;QACnH,CAAC,MAAM;UACLI,IAAI,GAAGP,OAAO,CAAC,IAAI,CAACmB,OAAO,CAAChH,WAAW,GAAGA,WAAW,CAACgG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAGA,GAAG,CAAC,CAAC,CAAC,CAAC;QACzE;QAEA,OAAO;UACLK,IAAI,EAAE,MAAM;UACZH,GAAG,EAAEF,GAAG,CAAC,CAAC,CAAC;UACXI,IAAI,EAAEA;QACR,CAAC;MACH;IACF,CAAC;IAED,OAAOW,SAAS;EAClB,CAAC,CAAC,CAAC;EAEH,IAAI8E,UAAU,GAAGpG,OAAO,CAAClC,QAAQ;IAC7BuI,MAAM,GAAGrG,OAAO,CAAC3D,IAAI;IACrBiK,OAAO,GAAGtG,OAAO,CAAChC,KAAK;EAC3B;AACF;AACA;;EAEE,IAAI4D,KAAK,GAAG;IACVC,OAAO,EAAE,MAAM;IACfC,IAAI,EAAE,mBAAmB;IACzBK,MAAM,EAAE,4FAA4F;IACpGQ,EAAE,EAAE,wDAAwD;IAC5DN,OAAO,EAAE,gDAAgD;IACzDO,UAAU,EAAE,yCAAyC;IACrDC,IAAI,EAAE,mEAAmE;IACzErH,IAAI,EAAE,YAAY,CAAC;IAAA,EACjB,4DAA4D,CAAC;IAAA,EAC7D,yBAAyB,CAAC;IAAA,EAC1B,+BAA+B,CAAC;IAAA,EAChC,+BAA+B,CAAC;IAAA,EAChC,2CAA2C,CAAC;IAAA,EAC5C,gDAAgD,CAAC;IAAA,EACjD,qGAAqG,CAAC;IAAA,EACtG,qFAAqF,CAAC;IAAA,EACtF,GAAG;IACLsI,GAAG,EAAE,kFAAkF;IACvFvB,OAAO,EAAE6D,UAAU;IACnBpC,KAAK,EAAEoC,UAAU;IACjBnC,QAAQ,EAAE,qCAAqC;IAC/C;IACA;IACAsC,UAAU,EAAE,2EAA2E;IACvF5F,IAAI,EAAE;EACR,CAAC;EACDiB,KAAK,CAAC4E,MAAM,GAAG,gCAAgC;EAC/C5E,KAAK,CAAC6E,MAAM,GAAG,8DAA8D;EAC7E7E,KAAK,CAACkC,GAAG,GAAGuC,MAAM,CAACzE,KAAK,CAACkC,GAAG,CAAC,CAACpI,OAAO,CAAC,OAAO,EAAEkG,KAAK,CAAC4E,MAAM,CAAC,CAAC9K,OAAO,CAAC,OAAO,EAAEkG,KAAK,CAAC6E,MAAM,CAAC,CAAC9J,QAAQ,CAAC,CAAC;EACtGiF,KAAK,CAAC6B,MAAM,GAAG,uBAAuB;EACtC7B,KAAK,CAACY,IAAI,GAAG,8CAA8C;EAC3DZ,KAAK,CAACY,IAAI,GAAG6D,MAAM,CAACzE,KAAK,CAACY,IAAI,EAAE,IAAI,CAAC,CAAC9G,OAAO,CAAC,OAAO,EAAEkG,KAAK,CAAC6B,MAAM,CAAC,CAAC9G,QAAQ,CAAC,CAAC;EAC/EiF,KAAK,CAACiB,IAAI,GAAGwD,MAAM,CAACzE,KAAK,CAACiB,IAAI,CAAC,CAACnH,OAAO,CAAC,OAAO,EAAEkG,KAAK,CAAC6B,MAAM,CAAC,CAAC/H,OAAO,CAAC,IAAI,EAAE,iEAAiE,CAAC,CAACA,OAAO,CAAC,KAAK,EAAE,SAAS,GAAGkG,KAAK,CAACkC,GAAG,CAACtH,MAAM,GAAG,GAAG,CAAC,CAACG,QAAQ,CAAC,CAAC;EAC7MiF,KAAK,CAAC8E,IAAI,GAAG,6DAA6D,GAAG,0EAA0E,GAAG,sEAAsE,GAAG,yEAAyE,GAAG,wEAAwE,GAAG,WAAW;EACrY9E,KAAK,CAAC+E,QAAQ,GAAG,8BAA8B;EAC/C/E,KAAK,CAACpG,IAAI,GAAG6K,MAAM,CAACzE,KAAK,CAACpG,IAAI,EAAE,GAAG,CAAC,CAACE,OAAO,CAAC,SAAS,EAAEkG,KAAK,CAAC+E,QAAQ,CAAC,CAACjL,OAAO,CAAC,KAAK,EAAEkG,KAAK,CAAC8E,IAAI,CAAC,CAAChL,OAAO,CAAC,WAAW,EAAE,0EAA0E,CAAC,CAACiB,QAAQ,CAAC,CAAC;EAC9MiF,KAAK,CAACsC,SAAS,GAAGmC,MAAM,CAACzE,KAAK,CAAC2E,UAAU,CAAC,CAAC7K,OAAO,CAAC,IAAI,EAAEkG,KAAK,CAACe,EAAE,CAAC,CAACjH,OAAO,CAAC,SAAS,EAAE,eAAe,CAAC,CAACA,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;EAAA,CAC/HA,OAAO,CAAC,YAAY,EAAE,SAAS,CAAC,CAACA,OAAO,CAAC,QAAQ,EAAE,gDAAgD,CAAC,CAACA,OAAO,CAAC,MAAM,EAAE,wBAAwB,CAAC,CAAC;EAAA,CAC/IA,OAAO,CAAC,MAAM,EAAE,oDAAoD,CAAC,CAACA,OAAO,CAAC,KAAK,EAAEkG,KAAK,CAAC8E,IAAI,CAAC,CAAC;EAAA,CACjG/J,QAAQ,CAAC,CAAC;EACXiF,KAAK,CAACgB,UAAU,GAAGyD,MAAM,CAACzE,KAAK,CAACgB,UAAU,CAAC,CAAClH,OAAO,CAAC,WAAW,EAAEkG,KAAK,CAACsC,SAAS,CAAC,CAACvH,QAAQ,CAAC,CAAC;EAC5F;AACF;AACA;;EAEEiF,KAAK,CAACgF,MAAM,GAAGN,OAAO,CAAC,CAAC,CAAC,EAAE1E,KAAK,CAAC;EACjC;AACF;AACA;;EAEEA,KAAK,CAACjI,GAAG,GAAG2M,OAAO,CAAC,CAAC,CAAC,EAAE1E,KAAK,CAACgF,MAAM,EAAE;IACpCrE,OAAO,EAAE,yBAAyB,CAAC;IAAA,EACjC,2BAA2B,CAAC;IAAA,EAC5B,oFAAoF;IACtF;IACAyB,KAAK,EAAE,eAAe,CAAC;IAAA,EACrB,4BAA4B,CAAC;IAAA,EAC7B,sFAAsF,CAAC;EAE3F,CAAC,CAAC;;EACFpC,KAAK,CAACjI,GAAG,CAAC4I,OAAO,GAAG8D,MAAM,CAACzE,KAAK,CAACjI,GAAG,CAAC4I,OAAO,CAAC,CAAC7G,OAAO,CAAC,IAAI,EAAEkG,KAAK,CAACe,EAAE,CAAC,CAACjH,OAAO,CAAC,SAAS,EAAE,eAAe,CAAC,CAACA,OAAO,CAAC,YAAY,EAAE,SAAS,CAAC,CAACA,OAAO,CAAC,MAAM,EAAE,YAAY,CAAC,CAACA,OAAO,CAAC,QAAQ,EAAE,gDAAgD,CAAC,CAACA,OAAO,CAAC,MAAM,EAAE,wBAAwB,CAAC,CAAC;EAAA,CACtRA,OAAO,CAAC,MAAM,EAAE,oDAAoD,CAAC,CAACA,OAAO,CAAC,KAAK,EAAEkG,KAAK,CAAC8E,IAAI,CAAC,CAAC;EAAA,CACjG/J,QAAQ,CAAC,CAAC;EACXiF,KAAK,CAACjI,GAAG,CAACqK,KAAK,GAAGqC,MAAM,CAACzE,KAAK,CAACjI,GAAG,CAACqK,KAAK,CAAC,CAACtI,OAAO,CAAC,IAAI,EAAEkG,KAAK,CAACe,EAAE,CAAC,CAACjH,OAAO,CAAC,SAAS,EAAE,eAAe,CAAC,CAACA,OAAO,CAAC,YAAY,EAAE,SAAS,CAAC,CAACA,OAAO,CAAC,MAAM,EAAE,YAAY,CAAC,CAACA,OAAO,CAAC,QAAQ,EAAE,gDAAgD,CAAC,CAACA,OAAO,CAAC,MAAM,EAAE,wBAAwB,CAAC,CAAC;EAAA,CAClRA,OAAO,CAAC,MAAM,EAAE,oDAAoD,CAAC,CAACA,OAAO,CAAC,KAAK,EAAEkG,KAAK,CAAC8E,IAAI,CAAC,CAAC;EAAA,CACjG/J,QAAQ,CAAC,CAAC;EACX;AACF;AACA;;EAEEiF,KAAK,CAAC3H,QAAQ,GAAGqM,OAAO,CAAC,CAAC,CAAC,EAAE1E,KAAK,CAACgF,MAAM,EAAE;IACzCpL,IAAI,EAAE6K,MAAM,CAAC,8BAA8B,GAAG,4CAA4C,CAAC;IAAA,EACzF,sEAAsE,CAAC,CAAC3K,OAAO,CAAC,SAAS,EAAEkG,KAAK,CAAC+E,QAAQ,CAAC,CAACjL,OAAO,CAAC,MAAM,EAAE,QAAQ,GAAG,qEAAqE,GAAG,6DAA6D,GAAG,+BAA+B,CAAC,CAACiB,QAAQ,CAAC,CAAC;IAC3TmH,GAAG,EAAE,mEAAmE;IACxEzB,OAAO,EAAE,4CAA4C;IACrDF,MAAM,EAAEiE,UAAU;IAClB;IACAlC,SAAS,EAAEmC,MAAM,CAACzE,KAAK,CAACgF,MAAM,CAACL,UAAU,CAAC,CAAC7K,OAAO,CAAC,IAAI,EAAEkG,KAAK,CAACe,EAAE,CAAC,CAACjH,OAAO,CAAC,SAAS,EAAE,iBAAiB,CAAC,CAACA,OAAO,CAAC,UAAU,EAAEkG,KAAK,CAACqC,QAAQ,CAAC,CAACvI,OAAO,CAAC,YAAY,EAAE,SAAS,CAAC,CAACA,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,CAACA,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAACA,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAACiB,QAAQ,CAAC;EAC1P,CAAC,CAAC;EACF;AACF;AACA;;EAEE,IAAIwH,MAAM,GAAG;IACX5I,MAAM,EAAE,6CAA6C;IACrDwK,QAAQ,EAAE,qCAAqC;IAC/CC,GAAG,EAAEI,UAAU;IACfrC,GAAG,EAAE,UAAU,GAAG,2BAA2B,CAAC;IAAA,EAC5C,0CAA0C,CAAC;IAAA,EAC3C,sBAAsB,CAAC;IAAA,EACvB,6BAA6B,CAAC;IAAA,EAC9B,kCAAkC;IACpC;IACAvD,IAAI,EAAE,+CAA+C;IACrDkE,OAAO,EAAE,uDAAuD;IAChEE,MAAM,EAAE,+DAA+D;IACvEiC,aAAa,EAAE,uBAAuB;IACtChC,MAAM,EAAE;MACN3B,KAAK,EAAE,+CAA+C;MACtD;MACAmC,MAAM,EAAE,mOAAmO;MAC3OH,MAAM,EAAE,8EAA8E;MACtF;MACAC,MAAM,EAAE,wCAAwC,CAAC;IAEnD,CAAC;;IACDI,EAAE,EAAE;MACFrC,KAAK,EAAE,0CAA0C;MACjD;MACAmC,MAAM,EAAE,4NAA4N;MACpOH,MAAM,EAAE,0EAA0E;MAClF;MACAC,MAAM,EAAE,uCAAuC,CAAC;IAElD,CAAC;;IACDrD,IAAI,EAAE,qCAAqC;IAC3C+D,EAAE,EAAE,uBAAuB;IAC3BC,GAAG,EAAEM,UAAU;IACfzF,IAAI,EAAE,4EAA4E;IAClFqE,WAAW,EAAE;EACf,CAAC,CAAC,CAAC;EACH;;EAEAb,MAAM,CAAC2C,YAAY,GAAG,sCAAsC;EAC5D3C,MAAM,CAACa,WAAW,GAAGqB,MAAM,CAAClC,MAAM,CAACa,WAAW,CAAC,CAACtJ,OAAO,CAAC,cAAc,EAAEyI,MAAM,CAAC2C,YAAY,CAAC,CAACnK,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAEzGwH,MAAM,CAAC4C,UAAU,GAAG,gDAAgD;EACpE5C,MAAM,CAAC6C,YAAY,GAAG,qCAAqC;EAC3D7C,MAAM,CAACwC,QAAQ,GAAGN,MAAM,CAACzE,KAAK,CAAC+E,QAAQ,CAAC,CAACjL,OAAO,CAAC,WAAW,EAAE,KAAK,CAAC,CAACiB,QAAQ,CAAC,CAAC;EAC/EwH,MAAM,CAACoB,EAAE,CAACrC,KAAK,GAAGmD,MAAM,CAAClC,MAAM,CAACoB,EAAE,CAACrC,KAAK,CAAC,CAACxH,OAAO,CAAC,cAAc,EAAEyI,MAAM,CAAC2C,YAAY,CAAC,CAACnK,QAAQ,CAAC,CAAC;EACjGwH,MAAM,CAACoB,EAAE,CAACF,MAAM,GAAGgB,MAAM,CAAClC,MAAM,CAACoB,EAAE,CAACF,MAAM,CAAC,CAAC3J,OAAO,CAAC,cAAc,EAAEyI,MAAM,CAAC2C,YAAY,CAAC,CAACpL,OAAO,CAAC,cAAc,EAAEyI,MAAM,CAAC6C,YAAY,CAAC,CAACrK,QAAQ,CAAC,CAAC;EAChJwH,MAAM,CAACoB,EAAE,CAACL,MAAM,GAAGmB,MAAM,CAAClC,MAAM,CAACoB,EAAE,CAACL,MAAM,EAAE,GAAG,CAAC,CAACxJ,OAAO,CAAC,cAAc,EAAEyI,MAAM,CAAC2C,YAAY,CAAC,CAACnK,QAAQ,CAAC,CAAC;EACxGwH,MAAM,CAACoB,EAAE,CAACJ,MAAM,GAAGkB,MAAM,CAAClC,MAAM,CAACoB,EAAE,CAACJ,MAAM,EAAE,GAAG,CAAC,CAACzJ,OAAO,CAAC,cAAc,EAAEyI,MAAM,CAAC2C,YAAY,CAAC,CAACnK,QAAQ,CAAC,CAAC;EACxGwH,MAAM,CAACU,MAAM,CAAC3B,KAAK,GAAGmD,MAAM,CAAClC,MAAM,CAACU,MAAM,CAAC3B,KAAK,CAAC,CAACxH,OAAO,CAAC,cAAc,EAAEyI,MAAM,CAAC2C,YAAY,CAAC,CAACnK,QAAQ,CAAC,CAAC;EACzGwH,MAAM,CAACU,MAAM,CAACQ,MAAM,GAAGgB,MAAM,CAAClC,MAAM,CAACU,MAAM,CAACQ,MAAM,CAAC,CAAC3J,OAAO,CAAC,cAAc,EAAEyI,MAAM,CAAC2C,YAAY,CAAC,CAACpL,OAAO,CAAC,cAAc,EAAEyI,MAAM,CAAC6C,YAAY,CAAC,CAACrK,QAAQ,CAAC,CAAC;EACxJwH,MAAM,CAACU,MAAM,CAACK,MAAM,GAAGmB,MAAM,CAAClC,MAAM,CAACU,MAAM,CAACK,MAAM,EAAE,GAAG,CAAC,CAACxJ,OAAO,CAAC,cAAc,EAAEyI,MAAM,CAAC2C,YAAY,CAAC,CAACnK,QAAQ,CAAC,CAAC;EAChHwH,MAAM,CAACU,MAAM,CAACM,MAAM,GAAGkB,MAAM,CAAClC,MAAM,CAACU,MAAM,CAACM,MAAM,EAAE,GAAG,CAAC,CAACzJ,OAAO,CAAC,cAAc,EAAEyI,MAAM,CAAC2C,YAAY,CAAC,CAACnK,QAAQ,CAAC,CAAC;EAChHwH,MAAM,CAAC8C,SAAS,GAAGZ,MAAM,CAAClC,MAAM,CAAC4C,UAAU,EAAE,GAAG,CAAC,CAACpK,QAAQ,CAAC,CAAC;EAC5DwH,MAAM,CAAC+C,WAAW,GAAGb,MAAM,CAAClC,MAAM,CAAC6C,YAAY,EAAE,GAAG,CAAC,CAACrK,QAAQ,CAAC,CAAC;EAChEwH,MAAM,CAACM,QAAQ,GAAG,6CAA6C;EAC/DN,MAAM,CAACgD,OAAO,GAAG,8BAA8B;EAC/ChD,MAAM,CAACiD,MAAM,GAAG,8IAA8I;EAC9JjD,MAAM,CAAC4B,QAAQ,GAAGM,MAAM,CAAClC,MAAM,CAAC4B,QAAQ,CAAC,CAACrK,OAAO,CAAC,QAAQ,EAAEyI,MAAM,CAACgD,OAAO,CAAC,CAACzL,OAAO,CAAC,OAAO,EAAEyI,MAAM,CAACiD,MAAM,CAAC,CAACzK,QAAQ,CAAC,CAAC;EACtHwH,MAAM,CAACkD,UAAU,GAAG,6EAA6E;EACjGlD,MAAM,CAACJ,GAAG,GAAGsC,MAAM,CAAClC,MAAM,CAACJ,GAAG,CAAC,CAACrI,OAAO,CAAC,SAAS,EAAEyI,MAAM,CAACwC,QAAQ,CAAC,CAACjL,OAAO,CAAC,WAAW,EAAEyI,MAAM,CAACkD,UAAU,CAAC,CAAC1K,QAAQ,CAAC,CAAC;EACtHwH,MAAM,CAACqC,MAAM,GAAG,qDAAqD;EACrErC,MAAM,CAACmD,KAAK,GAAG,0CAA0C;EACzDnD,MAAM,CAACsC,MAAM,GAAG,6DAA6D;EAC7EtC,MAAM,CAAC3D,IAAI,GAAG6F,MAAM,CAAClC,MAAM,CAAC3D,IAAI,CAAC,CAAC9E,OAAO,CAAC,OAAO,EAAEyI,MAAM,CAACqC,MAAM,CAAC,CAAC9K,OAAO,CAAC,MAAM,EAAEyI,MAAM,CAACmD,KAAK,CAAC,CAAC5L,OAAO,CAAC,OAAO,EAAEyI,MAAM,CAACsC,MAAM,CAAC,CAAC9J,QAAQ,CAAC,CAAC;EAC1IwH,MAAM,CAACO,OAAO,GAAG2B,MAAM,CAAClC,MAAM,CAACO,OAAO,CAAC,CAAChJ,OAAO,CAAC,OAAO,EAAEyI,MAAM,CAACqC,MAAM,CAAC,CAAC7J,QAAQ,CAAC,CAAC;EAClFwH,MAAM,CAAC0C,aAAa,GAAGR,MAAM,CAAClC,MAAM,CAAC0C,aAAa,EAAE,GAAG,CAAC,CAACnL,OAAO,CAAC,SAAS,EAAEyI,MAAM,CAACO,OAAO,CAAC,CAAChJ,OAAO,CAAC,QAAQ,EAAEyI,MAAM,CAACS,MAAM,CAAC,CAACjI,QAAQ,CAAC,CAAC;EACvI;AACF;AACA;;EAEEwH,MAAM,CAACyC,MAAM,GAAGN,OAAO,CAAC,CAAC,CAAC,EAAEnC,MAAM,CAAC;EACnC;AACF;AACA;;EAEEA,MAAM,CAAClK,QAAQ,GAAGqM,OAAO,CAAC,CAAC,CAAC,EAAEnC,MAAM,CAACyC,MAAM,EAAE;IAC3C/B,MAAM,EAAE;MACN3B,KAAK,EAAE,UAAU;MACjBmC,MAAM,EAAE,gEAAgE;MACxEH,MAAM,EAAE,aAAa;MACrBC,MAAM,EAAE;IACV,CAAC;IACDI,EAAE,EAAE;MACFrC,KAAK,EAAE,OAAO;MACdmC,MAAM,EAAE,4DAA4D;MACpEH,MAAM,EAAE,WAAW;MACnBC,MAAM,EAAE;IACV,CAAC;IACD3E,IAAI,EAAE6F,MAAM,CAAC,yBAAyB,CAAC,CAAC3K,OAAO,CAAC,OAAO,EAAEyI,MAAM,CAACqC,MAAM,CAAC,CAAC7J,QAAQ,CAAC,CAAC;IAClF+H,OAAO,EAAE2B,MAAM,CAAC,+BAA+B,CAAC,CAAC3K,OAAO,CAAC,OAAO,EAAEyI,MAAM,CAACqC,MAAM,CAAC,CAAC7J,QAAQ,CAAC;EAC5F,CAAC,CAAC;EACF;AACF;AACA;;EAEEwH,MAAM,CAACxK,GAAG,GAAG2M,OAAO,CAAC,CAAC,CAAC,EAAEnC,MAAM,CAACyC,MAAM,EAAE;IACtCrL,MAAM,EAAE8K,MAAM,CAAClC,MAAM,CAAC5I,MAAM,CAAC,CAACG,OAAO,CAAC,IAAI,EAAE,MAAM,CAAC,CAACiB,QAAQ,CAAC,CAAC;IAC9D4K,eAAe,EAAE,2EAA2E;IAC5FvB,GAAG,EAAE,kEAAkE;IACvEE,UAAU,EAAE,wEAAwE;IACpFJ,GAAG,EAAE,yBAAyB;IAC9BnF,IAAI,EAAE;EACR,CAAC,CAAC;EACFwD,MAAM,CAACxK,GAAG,CAACqM,GAAG,GAAGK,MAAM,CAAClC,MAAM,CAACxK,GAAG,CAACqM,GAAG,EAAE,GAAG,CAAC,CAACtK,OAAO,CAAC,OAAO,EAAEyI,MAAM,CAACxK,GAAG,CAAC4N,eAAe,CAAC,CAAC5K,QAAQ,CAAC,CAAC;EACpG;AACF;AACA;;EAEEwH,MAAM,CAACzK,MAAM,GAAG4M,OAAO,CAAC,CAAC,CAAC,EAAEnC,MAAM,CAACxK,GAAG,EAAE;IACtCkM,EAAE,EAAEQ,MAAM,CAAClC,MAAM,CAAC0B,EAAE,CAAC,CAACnK,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAACiB,QAAQ,CAAC,CAAC;IACrDgE,IAAI,EAAE0F,MAAM,CAAClC,MAAM,CAACxK,GAAG,CAACgH,IAAI,CAAC,CAACjF,OAAO,CAAC,MAAM,EAAE,eAAe,CAAC,CAACA,OAAO,CAAC,SAAS,EAAE,GAAG,CAAC,CAACiB,QAAQ,CAAC;EAClG,CAAC,CAAC;EACF,IAAIgF,KAAK,GAAG;IACVC,KAAK,EAAEA,KAAK;IACZuC,MAAM,EAAEA;EACV,CAAC;EAED,IAAIqD,UAAU,GAAGjO,QAAQ,CAACA,QAAQ;EAClC,IAAIkO,OAAO,GAAG9F,KAAK,CAACC,KAAK;IACrB8F,QAAQ,GAAG/F,KAAK,CAACwC,MAAM;EAC3B,IAAIwD,cAAc,GAAG3H,OAAO,CAACH,YAAY;EACzC;AACF;AACA;;EAEE,SAAStF,WAAWA,CAACoG,IAAI,EAAE;IACzB,OAAOA,IAAI,CAAC;IAAA,CACXjF,OAAO,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;IAAA,CAC1BA,OAAO,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;IAAA,CACzBA,OAAO,CAAC,yBAAyB,EAAE,UAAU,CAAC,CAAC;IAAA,CAC/CA,OAAO,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;IAAA,CACxBA,OAAO,CAAC,8BAA8B,EAAE,UAAU,CAAC,CAAC;IAAA,CACpDA,OAAO,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;IAAA,CACxBA,OAAO,CAAC,QAAQ,EAAE,QAAQ,CAAC;EAC9B;EACA;AACF;AACA;;EAGE,SAAS1B,MAAMA,CAAC2G,IAAI,EAAE;IACpB,IAAIiH,GAAG,GAAG,EAAE;MACRhR,CAAC;MACD0E,EAAE;IACN,IAAI6D,CAAC,GAAGwB,IAAI,CAAC9J,MAAM;IAEnB,KAAKD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGuI,CAAC,EAAEvI,CAAC,EAAE,EAAE;MACtB0E,EAAE,GAAGqF,IAAI,CAACkH,UAAU,CAACjR,CAAC,CAAC;MAEvB,IAAIkR,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,EAAE;QACvBzM,EAAE,GAAG,GAAG,GAAGA,EAAE,CAACvD,QAAQ,CAAC,EAAE,CAAC;MAC5B;MAEA6P,GAAG,IAAI,IAAI,GAAGtM,EAAE,GAAG,GAAG;IACxB;IAEA,OAAOsM,GAAG;EACZ;EACA;AACF;AACA;;EAGE,IAAII,OAAO,GAAG,aAAa,YAAY;IACrC,SAASC,KAAKA,CAAC1G,OAAO,EAAE;MACtB,IAAI,CAACQ,MAAM,GAAG,EAAE;MAChB,IAAI,CAACA,MAAM,CAAC4C,KAAK,GAAGzN,MAAM,CAACgR,MAAM,CAAC,IAAI,CAAC;MACvC,IAAI,CAAC3G,OAAO,GAAGA,OAAO,IAAIiG,UAAU;MACpC,IAAI,CAACjG,OAAO,CAAC/G,SAAS,GAAG,IAAI,CAAC+G,OAAO,CAAC/G,SAAS,IAAI,IAAI6G,WAAW,CAAC,CAAC;MACpE,IAAI,CAAC7G,SAAS,GAAG,IAAI,CAAC+G,OAAO,CAAC/G,SAAS;MACvC,IAAI,CAACA,SAAS,CAAC+G,OAAO,GAAG,IAAI,CAACA,OAAO;MACrC,IAAII,KAAK,GAAG;QACVC,KAAK,EAAE6F,OAAO,CAACb,MAAM;QACrBzC,MAAM,EAAEuD,QAAQ,CAACd;MACnB,CAAC;MAED,IAAI,IAAI,CAACrF,OAAO,CAACtH,QAAQ,EAAE;QACzB0H,KAAK,CAACC,KAAK,GAAG6F,OAAO,CAACxN,QAAQ;QAC9B0H,KAAK,CAACwC,MAAM,GAAGuD,QAAQ,CAACzN,QAAQ;MAClC,CAAC,MAAM,IAAI,IAAI,CAACsH,OAAO,CAAC5H,GAAG,EAAE;QAC3BgI,KAAK,CAACC,KAAK,GAAG6F,OAAO,CAAC9N,GAAG;QAEzB,IAAI,IAAI,CAAC4H,OAAO,CAAC7H,MAAM,EAAE;UACvBiI,KAAK,CAACwC,MAAM,GAAGuD,QAAQ,CAAChO,MAAM;QAChC,CAAC,MAAM;UACLiI,KAAK,CAACwC,MAAM,GAAGuD,QAAQ,CAAC/N,GAAG;QAC7B;MACF;MAEA,IAAI,CAACa,SAAS,CAACmH,KAAK,GAAGA,KAAK;IAC9B;IACA;AACJ;AACA;;IAGI;AACJ;AACA;IACIsG,KAAK,CAACE,GAAG,GAAG,SAASA,GAAGA,CAACzG,GAAG,EAAEH,OAAO,EAAE;MACrC,IAAI6G,KAAK,GAAG,IAAIH,KAAK,CAAC1G,OAAO,CAAC;MAC9B,OAAO6G,KAAK,CAACD,GAAG,CAACzG,GAAG,CAAC;IACvB;IACA;AACJ;AACA,OAFI;;IAKAuG,KAAK,CAACI,SAAS,GAAG,SAASA,SAASA,CAAC3G,GAAG,EAAEH,OAAO,EAAE;MACjD,IAAI6G,KAAK,GAAG,IAAIH,KAAK,CAAC1G,OAAO,CAAC;MAC9B,OAAO6G,KAAK,CAACE,YAAY,CAAC5G,GAAG,CAAC;IAChC;IACA;AACJ;AACA,OAFI;;IAKA,IAAIF,MAAM,GAAGyG,KAAK,CAACxQ,SAAS;IAE5B+J,MAAM,CAAC2G,GAAG,GAAG,SAASA,GAAGA,CAACzG,GAAG,EAAE;MAC7BA,GAAG,GAAGA,GAAG,CAAChG,OAAO,CAAC,UAAU,EAAE,IAAI,CAAC,CAACA,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC;MAC1D,IAAI,CAAC6M,WAAW,CAAC7G,GAAG,EAAE,IAAI,CAACK,MAAM,EAAE,IAAI,CAAC;MACxC,IAAI,CAACoC,MAAM,CAAC,IAAI,CAACpC,MAAM,CAAC;MACxB,OAAO,IAAI,CAACA,MAAM;IACpB;IACA;AACJ;AACA,OAFI;;IAKAP,MAAM,CAAC+G,WAAW,GAAG,SAASA,WAAWA,CAAC7G,GAAG,EAAEK,MAAM,EAAEyG,GAAG,EAAE;MAC1D,IAAIzG,MAAM,KAAK,KAAK,CAAC,EAAE;QACrBA,MAAM,GAAG,EAAE;MACb;MAEA,IAAIyG,GAAG,KAAK,KAAK,CAAC,EAAE;QAClBA,GAAG,GAAG,IAAI;MACZ;MAEA9G,GAAG,GAAGA,GAAG,CAAChG,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC;MAC/B,IAAI8I,KAAK,EAAE5N,CAAC,EAAEuI,CAAC,EAAE6C,SAAS;MAE1B,OAAON,GAAG,EAAE;QACV;QACA,IAAI8C,KAAK,GAAG,IAAI,CAAChK,SAAS,CAACiH,KAAK,CAACC,GAAG,CAAC,EAAE;UACrCA,GAAG,GAAGA,GAAG,CAACvF,SAAS,CAACqI,KAAK,CAAC/D,GAAG,CAAC5J,MAAM,CAAC;UAErC,IAAI2N,KAAK,CAAC5D,IAAI,EAAE;YACdmB,MAAM,CAAChD,IAAI,CAACyF,KAAK,CAAC;UACpB;UAEA;QACF,CAAC,CAAC;;QAGF,IAAIA,KAAK,GAAG,IAAI,CAAChK,SAAS,CAACsH,IAAI,CAACJ,GAAG,EAAEK,MAAM,CAAC,EAAE;UAC5CL,GAAG,GAAGA,GAAG,CAACvF,SAAS,CAACqI,KAAK,CAAC/D,GAAG,CAAC5J,MAAM,CAAC;UAErC,IAAI2N,KAAK,CAAC5D,IAAI,EAAE;YACdmB,MAAM,CAAChD,IAAI,CAACyF,KAAK,CAAC;UACpB,CAAC,MAAM;YACLxC,SAAS,GAAGD,MAAM,CAACA,MAAM,CAAClL,MAAM,GAAG,CAAC,CAAC;YACrCmL,SAAS,CAACvB,GAAG,IAAI,IAAI,GAAG+D,KAAK,CAAC/D,GAAG;YACjCuB,SAAS,CAACrB,IAAI,IAAI,IAAI,GAAG6D,KAAK,CAAC7D,IAAI;UACrC;UAEA;QACF,CAAC,CAAC;;QAGF,IAAI6D,KAAK,GAAG,IAAI,CAAChK,SAAS,CAAC2H,MAAM,CAACT,GAAG,CAAC,EAAE;UACtCA,GAAG,GAAGA,GAAG,CAACvF,SAAS,CAACqI,KAAK,CAAC/D,GAAG,CAAC5J,MAAM,CAAC;UACrCkL,MAAM,CAAChD,IAAI,CAACyF,KAAK,CAAC;UAClB;QACF,CAAC,CAAC;;QAGF,IAAIA,KAAK,GAAG,IAAI,CAAChK,SAAS,CAAC6H,OAAO,CAACX,GAAG,CAAC,EAAE;UACvCA,GAAG,GAAGA,GAAG,CAACvF,SAAS,CAACqI,KAAK,CAAC/D,GAAG,CAAC5J,MAAM,CAAC;UACrCkL,MAAM,CAAChD,IAAI,CAACyF,KAAK,CAAC;UAClB;QACF,CAAC,CAAC;;QAGF,IAAIA,KAAK,GAAG,IAAI,CAAChK,SAAS,CAAC+H,OAAO,CAACb,GAAG,CAAC,EAAE;UACvCA,GAAG,GAAGA,GAAG,CAACvF,SAAS,CAACqI,KAAK,CAAC/D,GAAG,CAAC5J,MAAM,CAAC;UACrCkL,MAAM,CAAChD,IAAI,CAACyF,KAAK,CAAC;UAClB;QACF,CAAC,CAAC;;QAGF,IAAIA,KAAK,GAAG,IAAI,CAAChK,SAAS,CAACmI,EAAE,CAACjB,GAAG,CAAC,EAAE;UAClCA,GAAG,GAAGA,GAAG,CAACvF,SAAS,CAACqI,KAAK,CAAC/D,GAAG,CAAC5J,MAAM,CAAC;UACrCkL,MAAM,CAAChD,IAAI,CAACyF,KAAK,CAAC;UAClB;QACF,CAAC,CAAC;;QAGF,IAAIA,KAAK,GAAG,IAAI,CAAChK,SAAS,CAACoI,UAAU,CAAClB,GAAG,CAAC,EAAE;UAC1CA,GAAG,GAAGA,GAAG,CAACvF,SAAS,CAACqI,KAAK,CAAC/D,GAAG,CAAC5J,MAAM,CAAC;UACrC2N,KAAK,CAACzC,MAAM,GAAG,IAAI,CAACwG,WAAW,CAAC/D,KAAK,CAAC7D,IAAI,EAAE,EAAE,EAAE6H,GAAG,CAAC;UACpDzG,MAAM,CAAChD,IAAI,CAACyF,KAAK,CAAC;UAClB;QACF,CAAC,CAAC;;QAGF,IAAIA,KAAK,GAAG,IAAI,CAAChK,SAAS,CAACqI,IAAI,CAACnB,GAAG,CAAC,EAAE;UACpCA,GAAG,GAAGA,GAAG,CAACvF,SAAS,CAACqI,KAAK,CAAC/D,GAAG,CAAC5J,MAAM,CAAC;UACrCsI,CAAC,GAAGqF,KAAK,CAACpB,KAAK,CAACvM,MAAM;UAEtB,KAAKD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGuI,CAAC,EAAEvI,CAAC,EAAE,EAAE;YACtB4N,KAAK,CAACpB,KAAK,CAACxM,CAAC,CAAC,CAACmL,MAAM,GAAG,IAAI,CAACwG,WAAW,CAAC/D,KAAK,CAACpB,KAAK,CAACxM,CAAC,CAAC,CAAC+J,IAAI,EAAE,EAAE,EAAE,KAAK,CAAC;UAC1E;UAEAoB,MAAM,CAAChD,IAAI,CAACyF,KAAK,CAAC;UAClB;QACF,CAAC,CAAC;;QAGF,IAAIA,KAAK,GAAG,IAAI,CAAChK,SAAS,CAACgB,IAAI,CAACkG,GAAG,CAAC,EAAE;UACpCA,GAAG,GAAGA,GAAG,CAACvF,SAAS,CAACqI,KAAK,CAAC/D,GAAG,CAAC5J,MAAM,CAAC;UACrCkL,MAAM,CAAChD,IAAI,CAACyF,KAAK,CAAC;UAClB;QACF,CAAC,CAAC;;QAGF,IAAIgE,GAAG,KAAKhE,KAAK,GAAG,IAAI,CAAChK,SAAS,CAACsJ,GAAG,CAACpC,GAAG,CAAC,CAAC,EAAE;UAC5CA,GAAG,GAAGA,GAAG,CAACvF,SAAS,CAACqI,KAAK,CAAC/D,GAAG,CAAC5J,MAAM,CAAC;UAErC,IAAI,CAAC,IAAI,CAACkL,MAAM,CAAC4C,KAAK,CAACH,KAAK,CAACT,GAAG,CAAC,EAAE;YACjC,IAAI,CAAChC,MAAM,CAAC4C,KAAK,CAACH,KAAK,CAACT,GAAG,CAAC,GAAG;cAC7B9G,IAAI,EAAEuH,KAAK,CAACvH,IAAI;cAChByD,KAAK,EAAE8D,KAAK,CAAC9D;YACf,CAAC;UACH;UAEA;QACF,CAAC,CAAC;;QAGF,IAAI8D,KAAK,GAAG,IAAI,CAAChK,SAAS,CAACwJ,KAAK,CAACtC,GAAG,CAAC,EAAE;UACrCA,GAAG,GAAGA,GAAG,CAACvF,SAAS,CAACqI,KAAK,CAAC/D,GAAG,CAAC5J,MAAM,CAAC;UACrCkL,MAAM,CAAChD,IAAI,CAACyF,KAAK,CAAC;UAClB;QACF,CAAC,CAAC;;QAGF,IAAIA,KAAK,GAAG,IAAI,CAAChK,SAAS,CAACyJ,QAAQ,CAACvC,GAAG,CAAC,EAAE;UACxCA,GAAG,GAAGA,GAAG,CAACvF,SAAS,CAACqI,KAAK,CAAC/D,GAAG,CAAC5J,MAAM,CAAC;UACrCkL,MAAM,CAAChD,IAAI,CAACyF,KAAK,CAAC;UAClB;QACF,CAAC,CAAC;;QAGF,IAAIgE,GAAG,KAAKhE,KAAK,GAAG,IAAI,CAAChK,SAAS,CAAC0J,SAAS,CAACxC,GAAG,CAAC,CAAC,EAAE;UAClDA,GAAG,GAAGA,GAAG,CAACvF,SAAS,CAACqI,KAAK,CAAC/D,GAAG,CAAC5J,MAAM,CAAC;UACrCkL,MAAM,CAAChD,IAAI,CAACyF,KAAK,CAAC;UAClB;QACF,CAAC,CAAC;;QAGF,IAAIA,KAAK,GAAG,IAAI,CAAChK,SAAS,CAACmG,IAAI,CAACe,GAAG,EAAEK,MAAM,CAAC,EAAE;UAC5CL,GAAG,GAAGA,GAAG,CAACvF,SAAS,CAACqI,KAAK,CAAC/D,GAAG,CAAC5J,MAAM,CAAC;UAErC,IAAI2N,KAAK,CAAC5D,IAAI,EAAE;YACdmB,MAAM,CAAChD,IAAI,CAACyF,KAAK,CAAC;UACpB,CAAC,MAAM;YACLxC,SAAS,GAAGD,MAAM,CAACA,MAAM,CAAClL,MAAM,GAAG,CAAC,CAAC;YACrCmL,SAAS,CAACvB,GAAG,IAAI,IAAI,GAAG+D,KAAK,CAAC/D,GAAG;YACjCuB,SAAS,CAACrB,IAAI,IAAI,IAAI,GAAG6D,KAAK,CAAC7D,IAAI;UACrC;UAEA;QACF;QAEA,IAAIe,GAAG,EAAE;UACP,IAAI+G,MAAM,GAAG,yBAAyB,GAAG/G,GAAG,CAACmG,UAAU,CAAC,CAAC,CAAC;UAE1D,IAAI,IAAI,CAACtG,OAAO,CAAClH,MAAM,EAAE;YACvBsF,OAAO,CAAC+I,KAAK,CAACD,MAAM,CAAC;YACrB;UACF,CAAC,MAAM;YACL,MAAM,IAAIE,KAAK,CAACF,MAAM,CAAC;UACzB;QACF;MACF;MAEA,OAAO1G,MAAM;IACf,CAAC;IAEDP,MAAM,CAAC2C,MAAM,GAAG,SAASA,MAAMA,CAACpC,MAAM,EAAE;MACtC,IAAInL,CAAC,EAAEgS,CAAC,EAAEC,CAAC,EAAEC,EAAE,EAAExK,GAAG,EAAEkG,KAAK;MAC3B,IAAIrF,CAAC,GAAG4C,MAAM,CAAClL,MAAM;MAErB,KAAKD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGuI,CAAC,EAAEvI,CAAC,EAAE,EAAE;QACtB4N,KAAK,GAAGzC,MAAM,CAACnL,CAAC,CAAC;QAEjB,QAAQ4N,KAAK,CAAC5D,IAAI;UAChB,KAAK,WAAW;UAChB,KAAK,MAAM;UACX,KAAK,SAAS;YACZ;cACE4D,KAAK,CAACzC,MAAM,GAAG,EAAE;cACjB,IAAI,CAACuG,YAAY,CAAC9D,KAAK,CAAC7D,IAAI,EAAE6D,KAAK,CAACzC,MAAM,CAAC;cAC3C;YACF;UAEF,KAAK,OAAO;YACV;cACEyC,KAAK,CAACzC,MAAM,GAAG;gBACbU,MAAM,EAAE,EAAE;gBACV7D,KAAK,EAAE;cACT,CAAC,CAAC,CAAC;;cAEHkK,EAAE,GAAGtE,KAAK,CAAC/B,MAAM,CAAC5L,MAAM;cAExB,KAAK+R,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGE,EAAE,EAAEF,CAAC,EAAE,EAAE;gBACvBpE,KAAK,CAACzC,MAAM,CAACU,MAAM,CAACmG,CAAC,CAAC,GAAG,EAAE;gBAC3B,IAAI,CAACN,YAAY,CAAC9D,KAAK,CAAC/B,MAAM,CAACmG,CAAC,CAAC,EAAEpE,KAAK,CAACzC,MAAM,CAACU,MAAM,CAACmG,CAAC,CAAC,CAAC;cAC5D,CAAC,CAAC;;cAGFE,EAAE,GAAGtE,KAAK,CAAC5F,KAAK,CAAC/H,MAAM;cAEvB,KAAK+R,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGE,EAAE,EAAEF,CAAC,EAAE,EAAE;gBACvBtK,GAAG,GAAGkG,KAAK,CAAC5F,KAAK,CAACgK,CAAC,CAAC;gBACpBpE,KAAK,CAACzC,MAAM,CAACnD,KAAK,CAACgK,CAAC,CAAC,GAAG,EAAE;gBAE1B,KAAKC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGvK,GAAG,CAACzH,MAAM,EAAEgS,CAAC,EAAE,EAAE;kBAC/BrE,KAAK,CAACzC,MAAM,CAACnD,KAAK,CAACgK,CAAC,CAAC,CAACC,CAAC,CAAC,GAAG,EAAE;kBAC7B,IAAI,CAACP,YAAY,CAAChK,GAAG,CAACuK,CAAC,CAAC,EAAErE,KAAK,CAACzC,MAAM,CAACnD,KAAK,CAACgK,CAAC,CAAC,CAACC,CAAC,CAAC,CAAC;gBACrD;cACF;cAEA;YACF;UAEF,KAAK,YAAY;YACf;cACE,IAAI,CAAC1E,MAAM,CAACK,KAAK,CAACzC,MAAM,CAAC;cACzB;YACF;UAEF,KAAK,MAAM;YACT;cACE+G,EAAE,GAAGtE,KAAK,CAACpB,KAAK,CAACvM,MAAM;cAEvB,KAAK+R,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGE,EAAE,EAAEF,CAAC,EAAE,EAAE;gBACvB,IAAI,CAACzE,MAAM,CAACK,KAAK,CAACpB,KAAK,CAACwF,CAAC,CAAC,CAAC7G,MAAM,CAAC;cACpC;cAEA;YACF;QACJ;MACF;MAEA,OAAOA,MAAM;IACf;IACA;AACJ;AACA,OAFI;;IAKAP,MAAM,CAAC8G,YAAY,GAAG,SAASA,YAAYA,CAAC5G,GAAG,EAAEK,MAAM,EAAEqC,MAAM,EAAEC,UAAU,EAAEU,QAAQ,EAAE;MACrF,IAAIhD,MAAM,KAAK,KAAK,CAAC,EAAE;QACrBA,MAAM,GAAG,EAAE;MACb;MAEA,IAAIqC,MAAM,KAAK,KAAK,CAAC,EAAE;QACrBA,MAAM,GAAG,KAAK;MAChB;MAEA,IAAIC,UAAU,KAAK,KAAK,CAAC,EAAE;QACzBA,UAAU,GAAG,KAAK;MACpB;MAEA,IAAIU,QAAQ,KAAK,KAAK,CAAC,EAAE;QACvBA,QAAQ,GAAG,EAAE;MACf;MAEA,IAAIP,KAAK,CAAC,CAAC;;MAEX,IAAIM,SAAS,GAAGpD,GAAG;MACnB,IAAInD,KAAK,CAAC,CAAC;;MAEX,IAAI,IAAI,CAACwD,MAAM,CAAC4C,KAAK,EAAE;QACrB,IAAIA,KAAK,GAAGzN,MAAM,CAAC6R,IAAI,CAAC,IAAI,CAAChH,MAAM,CAAC4C,KAAK,CAAC;QAE1C,IAAIA,KAAK,CAAC9N,MAAM,GAAG,CAAC,EAAE;UACpB,OAAO,CAAC0H,KAAK,GAAG,IAAI,CAAC/D,SAAS,CAACmH,KAAK,CAACwC,MAAM,CAAC0C,aAAa,CAAC9I,IAAI,CAAC+G,SAAS,CAAC,KAAK,IAAI,EAAE;YAClF,IAAIH,KAAK,CAACqE,QAAQ,CAACzK,KAAK,CAAC,CAAC,CAAC,CAACtG,KAAK,CAACsG,KAAK,CAAC,CAAC,CAAC,CAAC0K,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE;cACrEnE,SAAS,GAAGA,SAAS,CAAC7M,KAAK,CAAC,CAAC,EAAEsG,KAAK,CAAC+G,KAAK,CAAC,GAAG,GAAG,GAAGqC,cAAc,CAAC,GAAG,EAAEpJ,KAAK,CAAC,CAAC,CAAC,CAAC1H,MAAM,GAAG,CAAC,CAAC,GAAG,GAAG,GAAGiO,SAAS,CAAC7M,KAAK,CAAC,IAAI,CAACuC,SAAS,CAACmH,KAAK,CAACwC,MAAM,CAAC0C,aAAa,CAACzB,SAAS,CAAC;YAC3K;UACF;QACF;MACF,CAAC,CAAC;;MAGF,OAAO,CAAC7G,KAAK,GAAG,IAAI,CAAC/D,SAAS,CAACmH,KAAK,CAACwC,MAAM,CAAC8C,SAAS,CAAClJ,IAAI,CAAC+G,SAAS,CAAC,KAAK,IAAI,EAAE;QAC9EA,SAAS,GAAGA,SAAS,CAAC7M,KAAK,CAAC,CAAC,EAAEsG,KAAK,CAAC+G,KAAK,CAAC,GAAG,GAAG,GAAGqC,cAAc,CAAC,GAAG,EAAEpJ,KAAK,CAAC,CAAC,CAAC,CAAC1H,MAAM,GAAG,CAAC,CAAC,GAAG,GAAG,GAAGiO,SAAS,CAAC7M,KAAK,CAAC,IAAI,CAACuC,SAAS,CAACmH,KAAK,CAACwC,MAAM,CAAC8C,SAAS,CAAC7B,SAAS,CAAC;MACvK;MAEA,OAAO1D,GAAG,EAAE;QACV;QACA,IAAI8C,KAAK,GAAG,IAAI,CAAChK,SAAS,CAACe,MAAM,CAACmG,GAAG,CAAC,EAAE;UACtCA,GAAG,GAAGA,GAAG,CAACvF,SAAS,CAACqI,KAAK,CAAC/D,GAAG,CAAC5J,MAAM,CAAC;UACrCkL,MAAM,CAAChD,IAAI,CAACyF,KAAK,CAAC;UAClB;QACF,CAAC,CAAC;;QAGF,IAAIA,KAAK,GAAG,IAAI,CAAChK,SAAS,CAACuJ,GAAG,CAACrC,GAAG,EAAE0C,MAAM,EAAEC,UAAU,CAAC,EAAE;UACvD3C,GAAG,GAAGA,GAAG,CAACvF,SAAS,CAACqI,KAAK,CAAC/D,GAAG,CAAC5J,MAAM,CAAC;UACrCuN,MAAM,GAAGI,KAAK,CAACJ,MAAM;UACrBC,UAAU,GAAGG,KAAK,CAACH,UAAU;UAC7BtC,MAAM,CAAChD,IAAI,CAACyF,KAAK,CAAC;UAClB;QACF,CAAC,CAAC;;QAGF,IAAIA,KAAK,GAAG,IAAI,CAAChK,SAAS,CAACgG,IAAI,CAACkB,GAAG,CAAC,EAAE;UACpCA,GAAG,GAAGA,GAAG,CAACvF,SAAS,CAACqI,KAAK,CAAC/D,GAAG,CAAC5J,MAAM,CAAC;UAErC,IAAI2N,KAAK,CAAC5D,IAAI,KAAK,MAAM,EAAE;YACzB4D,KAAK,CAACzC,MAAM,GAAG,IAAI,CAACuG,YAAY,CAAC9D,KAAK,CAAC7D,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE0D,UAAU,CAAC;UACpE;UAEAtC,MAAM,CAAChD,IAAI,CAACyF,KAAK,CAAC;UAClB;QACF,CAAC,CAAC;;QAGF,IAAIA,KAAK,GAAG,IAAI,CAAChK,SAAS,CAACkK,OAAO,CAAChD,GAAG,EAAE,IAAI,CAACK,MAAM,CAAC4C,KAAK,CAAC,EAAE;UAC1DjD,GAAG,GAAGA,GAAG,CAACvF,SAAS,CAACqI,KAAK,CAAC/D,GAAG,CAAC5J,MAAM,CAAC;UAErC,IAAI2N,KAAK,CAAC5D,IAAI,KAAK,MAAM,EAAE;YACzB4D,KAAK,CAACzC,MAAM,GAAG,IAAI,CAACuG,YAAY,CAAC9D,KAAK,CAAC7D,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE0D,UAAU,CAAC;UACpE;UAEAtC,MAAM,CAAChD,IAAI,CAACyF,KAAK,CAAC;UAClB;QACF,CAAC,CAAC;;QAGF,IAAIA,KAAK,GAAG,IAAI,CAAChK,SAAS,CAACqK,MAAM,CAACnD,GAAG,EAAEoD,SAAS,EAAEC,QAAQ,CAAC,EAAE;UAC3DrD,GAAG,GAAGA,GAAG,CAACvF,SAAS,CAACqI,KAAK,CAAC/D,GAAG,CAAC5J,MAAM,CAAC;UACrC2N,KAAK,CAACzC,MAAM,GAAG,IAAI,CAACuG,YAAY,CAAC9D,KAAK,CAAC7D,IAAI,EAAE,EAAE,EAAEyD,MAAM,EAAEC,UAAU,CAAC;UACpEtC,MAAM,CAAChD,IAAI,CAACyF,KAAK,CAAC;UAClB;QACF,CAAC,CAAC;;QAGF,IAAIA,KAAK,GAAG,IAAI,CAAChK,SAAS,CAAC+K,EAAE,CAAC7D,GAAG,EAAEoD,SAAS,EAAEC,QAAQ,CAAC,EAAE;UACvDrD,GAAG,GAAGA,GAAG,CAACvF,SAAS,CAACqI,KAAK,CAAC/D,GAAG,CAAC5J,MAAM,CAAC;UACrC2N,KAAK,CAACzC,MAAM,GAAG,IAAI,CAACuG,YAAY,CAAC9D,KAAK,CAAC7D,IAAI,EAAE,EAAE,EAAEyD,MAAM,EAAEC,UAAU,CAAC;UACpEtC,MAAM,CAAChD,IAAI,CAACyF,KAAK,CAAC;UAClB;QACF,CAAC,CAAC;;QAGF,IAAIA,KAAK,GAAG,IAAI,CAAChK,SAAS,CAACgL,QAAQ,CAAC9D,GAAG,CAAC,EAAE;UACxCA,GAAG,GAAGA,GAAG,CAACvF,SAAS,CAACqI,KAAK,CAAC/D,GAAG,CAAC5J,MAAM,CAAC;UACrCkL,MAAM,CAAChD,IAAI,CAACyF,KAAK,CAAC;UAClB;QACF,CAAC,CAAC;;QAGF,IAAIA,KAAK,GAAG,IAAI,CAAChK,SAAS,CAACqL,EAAE,CAACnE,GAAG,CAAC,EAAE;UAClCA,GAAG,GAAGA,GAAG,CAACvF,SAAS,CAACqI,KAAK,CAAC/D,GAAG,CAAC5J,MAAM,CAAC;UACrCkL,MAAM,CAAChD,IAAI,CAACyF,KAAK,CAAC;UAClB;QACF,CAAC,CAAC;;QAGF,IAAIA,KAAK,GAAG,IAAI,CAAChK,SAAS,CAACsL,GAAG,CAACpE,GAAG,CAAC,EAAE;UACnCA,GAAG,GAAGA,GAAG,CAACvF,SAAS,CAACqI,KAAK,CAAC/D,GAAG,CAAC5J,MAAM,CAAC;UACrC2N,KAAK,CAACzC,MAAM,GAAG,IAAI,CAACuG,YAAY,CAAC9D,KAAK,CAAC7D,IAAI,EAAE,EAAE,EAAEyD,MAAM,EAAEC,UAAU,CAAC;UACpEtC,MAAM,CAAChD,IAAI,CAACyF,KAAK,CAAC;UAClB;QACF,CAAC,CAAC;;QAGF,IAAIA,KAAK,GAAG,IAAI,CAAChK,SAAS,CAACuL,QAAQ,CAACrE,GAAG,EAAE1H,MAAM,CAAC,EAAE;UAChD0H,GAAG,GAAGA,GAAG,CAACvF,SAAS,CAACqI,KAAK,CAAC/D,GAAG,CAAC5J,MAAM,CAAC;UACrCkL,MAAM,CAAChD,IAAI,CAACyF,KAAK,CAAC;UAClB;QACF,CAAC,CAAC;;QAGF,IAAI,CAACJ,MAAM,KAAKI,KAAK,GAAG,IAAI,CAAChK,SAAS,CAACwL,GAAG,CAACtE,GAAG,EAAE1H,MAAM,CAAC,CAAC,EAAE;UACxD0H,GAAG,GAAGA,GAAG,CAACvF,SAAS,CAACqI,KAAK,CAAC/D,GAAG,CAAC5J,MAAM,CAAC;UACrCkL,MAAM,CAAChD,IAAI,CAACyF,KAAK,CAAC;UAClB;QACF,CAAC,CAAC;;QAGF,IAAIA,KAAK,GAAG,IAAI,CAAChK,SAAS,CAAC2L,UAAU,CAACzE,GAAG,EAAE2C,UAAU,EAAE9J,WAAW,CAAC,EAAE;UACnEmH,GAAG,GAAGA,GAAG,CAACvF,SAAS,CAACqI,KAAK,CAAC/D,GAAG,CAAC5J,MAAM,CAAC;UACrCkO,QAAQ,GAAGP,KAAK,CAAC/D,GAAG,CAACxI,KAAK,CAAC,CAAC,CAAC,CAAC;UAC9B8J,MAAM,CAAChD,IAAI,CAACyF,KAAK,CAAC;UAClB;QACF;QAEA,IAAI9C,GAAG,EAAE;UACP,IAAI+G,MAAM,GAAG,yBAAyB,GAAG/G,GAAG,CAACmG,UAAU,CAAC,CAAC,CAAC;UAE1D,IAAI,IAAI,CAACtG,OAAO,CAAClH,MAAM,EAAE;YACvBsF,OAAO,CAAC+I,KAAK,CAACD,MAAM,CAAC;YACrB;UACF,CAAC,MAAM;YACL,MAAM,IAAIE,KAAK,CAACF,MAAM,CAAC;UACzB;QACF;MACF;MAEA,OAAO1G,MAAM;IACf,CAAC;IAED1K,YAAY,CAAC4Q,KAAK,EAAE,IAAI,EAAE,CAAC;MACzB7Q,GAAG,EAAE,OAAO;MACZ8R,GAAG,EAAE,SAASA,GAAGA,CAAA,EAAG;QAClB,OAAO;UACLtH,KAAK,EAAE6F,OAAO;UACdtD,MAAM,EAAEuD;QACV,CAAC;MACH;IACF,CAAC,CAAC,CAAC;IAEH,OAAOO,KAAK;EACd,CAAC,CAAC,CAAC;EAEH,IAAIkB,UAAU,GAAG5P,QAAQ,CAACA,QAAQ;EAClC,IAAI6P,UAAU,GAAGpJ,OAAO,CAACjD,QAAQ;IAC7BsM,QAAQ,GAAGrJ,OAAO,CAACzE,MAAM;EAC7B;AACF;AACA;;EAEE,IAAI+N,UAAU,GAAG,aAAa,YAAY;IACxC,SAASC,QAAQA,CAAChI,OAAO,EAAE;MACzB,IAAI,CAACA,OAAO,GAAGA,OAAO,IAAI4H,UAAU;IACtC;IAEA,IAAI3H,MAAM,GAAG+H,QAAQ,CAAC9R,SAAS;IAE/B+J,MAAM,CAACM,IAAI,GAAG,SAASA,IAAIA,CAAC0H,KAAK,EAAEC,UAAU,EAAE/K,OAAO,EAAE;MACtD,IAAI0D,IAAI,GAAG,CAACqH,UAAU,IAAI,EAAE,EAAElL,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;MAE7C,IAAI,IAAI,CAACgD,OAAO,CAACzH,SAAS,EAAE;QAC1B,IAAI8N,GAAG,GAAG,IAAI,CAACrG,OAAO,CAACzH,SAAS,CAAC0P,KAAK,EAAEpH,IAAI,CAAC;QAE7C,IAAIwF,GAAG,IAAI,IAAI,IAAIA,GAAG,KAAK4B,KAAK,EAAE;UAChC9K,OAAO,GAAG,IAAI;UACd8K,KAAK,GAAG5B,GAAG;QACb;MACF;MAEA,IAAI,CAACxF,IAAI,EAAE;QACT,OAAO,aAAa,IAAI1D,OAAO,GAAG8K,KAAK,GAAGH,QAAQ,CAACG,KAAK,EAAE,IAAI,CAAC,CAAC,GAAG,iBAAiB;MACtF;MAEA,OAAO,oBAAoB,GAAG,IAAI,CAACjI,OAAO,CAACxH,UAAU,GAAGsP,QAAQ,CAACjH,IAAI,EAAE,IAAI,CAAC,GAAG,IAAI,IAAI1D,OAAO,GAAG8K,KAAK,GAAGH,QAAQ,CAACG,KAAK,EAAE,IAAI,CAAC,CAAC,GAAG,iBAAiB;IACrJ,CAAC;IAEDhI,MAAM,CAACoB,UAAU,GAAG,SAASA,UAAUA,CAAC8G,KAAK,EAAE;MAC7C,OAAO,gBAAgB,GAAGA,KAAK,GAAG,iBAAiB;IACrD,CAAC;IAEDlI,MAAM,CAAChG,IAAI,GAAG,SAASA,IAAIA,CAACmO,KAAK,EAAE;MACjC,OAAOA,KAAK;IACd,CAAC;IAEDnI,MAAM,CAACa,OAAO,GAAG,SAASA,OAAOA,CAAC1B,IAAI,EAAElB,KAAK,EAAEgB,GAAG,EAAEmJ,OAAO,EAAE;MAC3D,IAAI,IAAI,CAACrI,OAAO,CAAC3H,SAAS,EAAE;QAC1B,OAAO,IAAI,GAAG6F,KAAK,GAAG,OAAO,GAAG,IAAI,CAAC8B,OAAO,CAAC1H,YAAY,GAAG+P,OAAO,CAACC,IAAI,CAACpJ,GAAG,CAAC,GAAG,IAAI,GAAGE,IAAI,GAAG,KAAK,GAAGlB,KAAK,GAAG,KAAK;MACrH,CAAC,CAAC;;MAGF,OAAO,IAAI,GAAGA,KAAK,GAAG,GAAG,GAAGkB,IAAI,GAAG,KAAK,GAAGlB,KAAK,GAAG,KAAK;IAC1D,CAAC;IAED+B,MAAM,CAACmB,EAAE,GAAG,SAASA,EAAEA,CAAA,EAAG;MACxB,OAAO,IAAI,CAACpB,OAAO,CAAC7G,KAAK,GAAG,SAAS,GAAG,QAAQ;IAClD,CAAC;IAED8G,MAAM,CAACqB,IAAI,GAAG,SAASA,IAAIA,CAACiH,IAAI,EAAE7G,OAAO,EAAEC,KAAK,EAAE;MAChD,IAAItC,IAAI,GAAGqC,OAAO,GAAG,IAAI,GAAG,IAAI;QAC5B8G,QAAQ,GAAG9G,OAAO,IAAIC,KAAK,KAAK,CAAC,GAAG,UAAU,GAAGA,KAAK,GAAG,GAAG,GAAG,EAAE;MACrE,OAAO,GAAG,GAAGtC,IAAI,GAAGmJ,QAAQ,GAAG,KAAK,GAAGD,IAAI,GAAG,IAAI,GAAGlJ,IAAI,GAAG,KAAK;IACnE,CAAC;IAEDY,MAAM,CAACwI,QAAQ,GAAG,SAASA,QAAQA,CAACrJ,IAAI,EAAE;MACxC,OAAO,MAAM,GAAGA,IAAI,GAAG,SAAS;IAClC,CAAC;IAEDa,MAAM,CAACyI,QAAQ,GAAG,SAASA,QAAQA,CAACrG,OAAO,EAAE;MAC3C,OAAO,SAAS,IAAIA,OAAO,GAAG,aAAa,GAAG,EAAE,CAAC,GAAG,6BAA6B,IAAI,IAAI,CAACrC,OAAO,CAAC7G,KAAK,GAAG,IAAI,GAAG,EAAE,CAAC,GAAG,IAAI;IAC7H,CAAC;IAED8G,MAAM,CAAC0C,SAAS,GAAG,SAASA,SAASA,CAACvD,IAAI,EAAE;MAC1C,OAAO,KAAK,GAAGA,IAAI,GAAG,QAAQ;IAChC,CAAC;IAEDa,MAAM,CAACwC,KAAK,GAAG,SAASA,KAAKA,CAACvB,MAAM,EAAEqH,IAAI,EAAE;MAC1C,IAAIA,IAAI,EAAEA,IAAI,GAAG,SAAS,GAAGA,IAAI,GAAG,UAAU;MAC9C,OAAO,WAAW,GAAG,WAAW,GAAGrH,MAAM,GAAG,YAAY,GAAGqH,IAAI,GAAG,YAAY;IAChF,CAAC;IAEDtI,MAAM,CAAC0I,QAAQ,GAAG,SAASA,QAAQA,CAACC,OAAO,EAAE;MAC3C,OAAO,QAAQ,GAAGA,OAAO,GAAG,SAAS;IACvC,CAAC;IAED3I,MAAM,CAAC4I,SAAS,GAAG,SAASA,SAASA,CAACD,OAAO,EAAEE,KAAK,EAAE;MACpD,IAAIzJ,IAAI,GAAGyJ,KAAK,CAAC5H,MAAM,GAAG,IAAI,GAAG,IAAI;MACrC,IAAIsB,GAAG,GAAGsG,KAAK,CAAC3H,KAAK,GAAG,GAAG,GAAG9B,IAAI,GAAG,UAAU,GAAGyJ,KAAK,CAAC3H,KAAK,GAAG,IAAI,GAAG,GAAG,GAAG9B,IAAI,GAAG,GAAG;MACvF,OAAOmD,GAAG,GAAGoG,OAAO,GAAG,IAAI,GAAGvJ,IAAI,GAAG,KAAK;IAC5C,CAAC,CAAC;IAAA;;IAGFY,MAAM,CAACqD,MAAM,GAAG,SAASA,MAAMA,CAAClE,IAAI,EAAE;MACpC,OAAO,UAAU,GAAGA,IAAI,GAAG,WAAW;IACxC,CAAC;IAEDa,MAAM,CAAC+D,EAAE,GAAG,SAASA,EAAEA,CAAC5E,IAAI,EAAE;MAC5B,OAAO,MAAM,GAAGA,IAAI,GAAG,OAAO;IAChC,CAAC;IAEDa,MAAM,CAACgE,QAAQ,GAAG,SAASA,QAAQA,CAAC7E,IAAI,EAAE;MACxC,OAAO,QAAQ,GAAGA,IAAI,GAAG,SAAS;IACpC,CAAC;IAEDa,MAAM,CAACqE,EAAE,GAAG,SAASA,EAAEA,CAAA,EAAG;MACxB,OAAO,IAAI,CAACtE,OAAO,CAAC7G,KAAK,GAAG,OAAO,GAAG,MAAM;IAC9C,CAAC;IAED8G,MAAM,CAACsE,GAAG,GAAG,SAASA,GAAGA,CAACnF,IAAI,EAAE;MAC9B,OAAO,OAAO,GAAGA,IAAI,GAAG,QAAQ;IAClC,CAAC;IAEDa,MAAM,CAAChB,IAAI,GAAG,SAASA,IAAIA,CAACvD,IAAI,EAAEyD,KAAK,EAAEC,IAAI,EAAE;MAC7C1D,IAAI,GAAGmM,UAAU,CAAC,IAAI,CAAC7H,OAAO,CAACpH,QAAQ,EAAE,IAAI,CAACoH,OAAO,CAAC9H,OAAO,EAAEwD,IAAI,CAAC;MAEpE,IAAIA,IAAI,KAAK,IAAI,EAAE;QACjB,OAAO0D,IAAI;MACb;MAEA,IAAIiH,GAAG,GAAG,WAAW,GAAGyB,QAAQ,CAACpM,IAAI,CAAC,GAAG,GAAG;MAE5C,IAAIyD,KAAK,EAAE;QACTkH,GAAG,IAAI,UAAU,GAAGlH,KAAK,GAAG,GAAG;MACjC;MAEAkH,GAAG,IAAI,GAAG,GAAGjH,IAAI,GAAG,MAAM;MAC1B,OAAOiH,GAAG;IACZ,CAAC;IAEDpG,MAAM,CAAC8I,KAAK,GAAG,SAASA,KAAKA,CAACrN,IAAI,EAAEyD,KAAK,EAAEC,IAAI,EAAE;MAC/C1D,IAAI,GAAGmM,UAAU,CAAC,IAAI,CAAC7H,OAAO,CAACpH,QAAQ,EAAE,IAAI,CAACoH,OAAO,CAAC9H,OAAO,EAAEwD,IAAI,CAAC;MAEpE,IAAIA,IAAI,KAAK,IAAI,EAAE;QACjB,OAAO0D,IAAI;MACb;MAEA,IAAIiH,GAAG,GAAG,YAAY,GAAG3K,IAAI,GAAG,SAAS,GAAG0D,IAAI,GAAG,GAAG;MAEtD,IAAID,KAAK,EAAE;QACTkH,GAAG,IAAI,UAAU,GAAGlH,KAAK,GAAG,GAAG;MACjC;MAEAkH,GAAG,IAAI,IAAI,CAACrG,OAAO,CAAC7G,KAAK,GAAG,IAAI,GAAG,GAAG;MACtC,OAAOkN,GAAG;IACZ,CAAC;IAEDpG,MAAM,CAACb,IAAI,GAAG,SAASA,IAAIA,CAAC4J,KAAK,EAAE;MACjC,OAAOA,KAAK;IACd,CAAC;IAED,OAAOhB,QAAQ;EACjB,CAAC,CAAC,CAAC;;EAEH;AACF;AACA;AACA;EACE,IAAIiB,cAAc,GAAG,aAAa,YAAY;IAC5C,SAASC,YAAYA,CAAA,EAAG,CAAC;IAEzB,IAAIjJ,MAAM,GAAGiJ,YAAY,CAAChT,SAAS;;IAEnC;IACA+J,MAAM,CAACqD,MAAM,GAAG,SAASA,MAAMA,CAAClE,IAAI,EAAE;MACpC,OAAOA,IAAI;IACb,CAAC;IAEDa,MAAM,CAAC+D,EAAE,GAAG,SAASA,EAAEA,CAAC5E,IAAI,EAAE;MAC5B,OAAOA,IAAI;IACb,CAAC;IAEDa,MAAM,CAACgE,QAAQ,GAAG,SAASA,QAAQA,CAAC7E,IAAI,EAAE;MACxC,OAAOA,IAAI;IACb,CAAC;IAEDa,MAAM,CAACsE,GAAG,GAAG,SAASA,GAAGA,CAACnF,IAAI,EAAE;MAC9B,OAAOA,IAAI;IACb,CAAC;IAEDa,MAAM,CAAChG,IAAI,GAAG,SAASA,IAAIA,CAACmF,IAAI,EAAE;MAChC,OAAOA,IAAI;IACb,CAAC;IAEDa,MAAM,CAACb,IAAI,GAAG,SAASA,IAAIA,CAAC4J,KAAK,EAAE;MACjC,OAAOA,KAAK;IACd,CAAC;IAED/I,MAAM,CAAChB,IAAI,GAAG,SAASA,IAAIA,CAACvD,IAAI,EAAEyD,KAAK,EAAEC,IAAI,EAAE;MAC7C,OAAO,EAAE,GAAGA,IAAI;IAClB,CAAC;IAEDa,MAAM,CAAC8I,KAAK,GAAG,SAASA,KAAKA,CAACrN,IAAI,EAAEyD,KAAK,EAAEC,IAAI,EAAE;MAC/C,OAAO,EAAE,GAAGA,IAAI;IAClB,CAAC;IAEDa,MAAM,CAACqE,EAAE,GAAG,SAASA,EAAEA,CAAA,EAAG;MACxB,OAAO,EAAE;IACX,CAAC;IAED,OAAO4E,YAAY;EACrB,CAAC,CAAC,CAAC;;EAEH;AACF;AACA;EACE,IAAIC,SAAS,GAAG,aAAa,YAAY;IACvC,SAASC,OAAOA,CAAA,EAAG;MACjB,IAAI,CAACC,IAAI,GAAG,CAAC,CAAC;IAChB;IAEA,IAAIpJ,MAAM,GAAGmJ,OAAO,CAAClT,SAAS;IAE9B+J,MAAM,CAACqJ,SAAS,GAAG,SAASA,SAASA,CAAC5R,KAAK,EAAE;MAC3C,OAAOA,KAAK,CAAC6C,WAAW,CAAC,CAAC,CAACkD,IAAI,CAAC,CAAC,CAAC;MAAA,CACjCtD,OAAO,CAAC,iBAAiB,EAAE,EAAE,CAAC,CAAC;MAAA,CAC/BA,OAAO,CAAC,+DAA+D,EAAE,EAAE,CAAC,CAACA,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC;IACnG;IACA;AACJ;AACA,OAFI;;IAKA8F,MAAM,CAACsJ,eAAe,GAAG,SAASA,eAAeA,CAACC,YAAY,EAAEC,QAAQ,EAAE;MACxE,IAAInB,IAAI,GAAGkB,YAAY;MACvB,IAAIE,oBAAoB,GAAG,CAAC;MAE5B,IAAI,IAAI,CAACL,IAAI,CAAC1M,cAAc,CAAC2L,IAAI,CAAC,EAAE;QAClCoB,oBAAoB,GAAG,IAAI,CAACL,IAAI,CAACG,YAAY,CAAC;QAE9C,GAAG;UACDE,oBAAoB,EAAE;UACtBpB,IAAI,GAAGkB,YAAY,GAAG,GAAG,GAAGE,oBAAoB;QAClD,CAAC,QAAQ,IAAI,CAACL,IAAI,CAAC1M,cAAc,CAAC2L,IAAI,CAAC;MACzC;MAEA,IAAI,CAACmB,QAAQ,EAAE;QACb,IAAI,CAACJ,IAAI,CAACG,YAAY,CAAC,GAAGE,oBAAoB;QAC9C,IAAI,CAACL,IAAI,CAACf,IAAI,CAAC,GAAG,CAAC;MACrB;MAEA,OAAOA,IAAI;IACb;IACA;AACJ;AACA;AACA;AACA,OAJI;;IAOArI,MAAM,CAACqI,IAAI,GAAG,SAASA,IAAIA,CAAC5Q,KAAK,EAAEsI,OAAO,EAAE;MAC1C,IAAIA,OAAO,KAAK,KAAK,CAAC,EAAE;QACtBA,OAAO,GAAG,CAAC,CAAC;MACd;MAEA,IAAIsI,IAAI,GAAG,IAAI,CAACgB,SAAS,CAAC5R,KAAK,CAAC;MAChC,OAAO,IAAI,CAAC6R,eAAe,CAACjB,IAAI,EAAEtI,OAAO,CAAC2J,MAAM,CAAC;IACnD,CAAC;IAED,OAAOP,OAAO;EAChB,CAAC,CAAC,CAAC;EAEH,IAAIQ,UAAU,GAAG5R,QAAQ,CAACA,QAAQ;EAClC,IAAI6R,UAAU,GAAGpL,OAAO,CAACpE,QAAQ;EACjC;AACF;AACA;;EAEE,IAAIyP,QAAQ,GAAG,aAAa,YAAY;IACtC,SAASC,MAAMA,CAAC/J,OAAO,EAAE;MACvB,IAAI,CAACA,OAAO,GAAGA,OAAO,IAAI4J,UAAU;MACpC,IAAI,CAAC5J,OAAO,CAACrH,QAAQ,GAAG,IAAI,CAACqH,OAAO,CAACrH,QAAQ,IAAI,IAAIoP,UAAU,CAAC,CAAC;MACjE,IAAI,CAACpP,QAAQ,GAAG,IAAI,CAACqH,OAAO,CAACrH,QAAQ;MACrC,IAAI,CAACA,QAAQ,CAACqH,OAAO,GAAG,IAAI,CAACA,OAAO;MACpC,IAAI,CAACgK,YAAY,GAAG,IAAIf,cAAc,CAAC,CAAC;MACxC,IAAI,CAACZ,OAAO,GAAG,IAAIc,SAAS,CAAC,CAAC;IAChC;IACA;AACJ;AACA;;IAGIY,MAAM,CAACE,KAAK,GAAG,SAASA,KAAKA,CAACzJ,MAAM,EAAER,OAAO,EAAE;MAC7C,IAAIkK,MAAM,GAAG,IAAIH,MAAM,CAAC/J,OAAO,CAAC;MAChC,OAAOkK,MAAM,CAACD,KAAK,CAACzJ,MAAM,CAAC;IAC7B;IACA;AACJ;AACA,OAFI;;IAKAuJ,MAAM,CAACI,WAAW,GAAG,SAASA,WAAWA,CAAC3J,MAAM,EAAER,OAAO,EAAE;MACzD,IAAIkK,MAAM,GAAG,IAAIH,MAAM,CAAC/J,OAAO,CAAC;MAChC,OAAOkK,MAAM,CAACC,WAAW,CAAC3J,MAAM,CAAC;IACnC;IACA;AACJ;AACA,OAFI;;IAKA,IAAIP,MAAM,GAAG8J,MAAM,CAAC7T,SAAS;IAE7B+J,MAAM,CAACgK,KAAK,GAAG,SAASA,KAAKA,CAACzJ,MAAM,EAAEyG,GAAG,EAAE;MACzC,IAAIA,GAAG,KAAK,KAAK,CAAC,EAAE;QAClBA,GAAG,GAAG,IAAI;MACZ;MAEA,IAAIZ,GAAG,GAAG,EAAE;QACRhR,CAAC;QACDgS,CAAC;QACDC,CAAC;QACDC,EAAE;QACF6C,EAAE;QACFrN,GAAG;QACHsN,IAAI;QACJnJ,MAAM;QACNqH,IAAI;QACJtF,KAAK;QACLvB,OAAO;QACPC,KAAK;QACLC,KAAK;QACL0I,QAAQ;QACRrJ,IAAI;QACJoB,OAAO;QACPD,IAAI;QACJsG,QAAQ;MACZ,IAAI9K,CAAC,GAAG4C,MAAM,CAAClL,MAAM;MAErB,KAAKD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGuI,CAAC,EAAEvI,CAAC,EAAE,EAAE;QACtB4N,KAAK,GAAGzC,MAAM,CAACnL,CAAC,CAAC;QAEjB,QAAQ4N,KAAK,CAAC5D,IAAI;UAChB,KAAK,OAAO;YACV;cACE;YACF;UAEF,KAAK,IAAI;YACP;cACEgH,GAAG,IAAI,IAAI,CAAC1N,QAAQ,CAACyI,EAAE,CAAC,CAAC;cACzB;YACF;UAEF,KAAK,SAAS;YACZ;cACEiF,GAAG,IAAI,IAAI,CAAC1N,QAAQ,CAACmI,OAAO,CAAC,IAAI,CAACqJ,WAAW,CAAClH,KAAK,CAACzC,MAAM,CAAC,EAAEyC,KAAK,CAAClC,KAAK,EAAE8I,UAAU,CAAC,IAAI,CAACM,WAAW,CAAClH,KAAK,CAACzC,MAAM,EAAE,IAAI,CAACwJ,YAAY,CAAC,CAAC,EAAE,IAAI,CAAC3B,OAAO,CAAC;cACtJ;YACF;UAEF,KAAK,MAAM;YACT;cACEhC,GAAG,IAAI,IAAI,CAAC1N,QAAQ,CAAC4H,IAAI,CAAC0C,KAAK,CAAC7D,IAAI,EAAE6D,KAAK,CAACpC,IAAI,EAAEoC,KAAK,CAAC9F,OAAO,CAAC;cAChE;YACF;UAEF,KAAK,OAAO;YACV;cACE+D,MAAM,GAAG,EAAE,CAAC,CAAC;;cAEbmJ,IAAI,GAAG,EAAE;cACT9C,EAAE,GAAGtE,KAAK,CAAC/B,MAAM,CAAC5L,MAAM;cAExB,KAAK+R,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGE,EAAE,EAAEF,CAAC,EAAE,EAAE;gBACvBgD,IAAI,IAAI,IAAI,CAAC1R,QAAQ,CAACkQ,SAAS,CAAC,IAAI,CAACsB,WAAW,CAAClH,KAAK,CAACzC,MAAM,CAACU,MAAM,CAACmG,CAAC,CAAC,CAAC,EAAE;kBACxEnG,MAAM,EAAE,IAAI;kBACZC,KAAK,EAAE8B,KAAK,CAAC9B,KAAK,CAACkG,CAAC;gBACtB,CAAC,CAAC;cACJ;cAEAnG,MAAM,IAAI,IAAI,CAACvI,QAAQ,CAACgQ,QAAQ,CAAC0B,IAAI,CAAC;cACtC9B,IAAI,GAAG,EAAE;cACThB,EAAE,GAAGtE,KAAK,CAAC5F,KAAK,CAAC/H,MAAM;cAEvB,KAAK+R,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGE,EAAE,EAAEF,CAAC,EAAE,EAAE;gBACvBtK,GAAG,GAAGkG,KAAK,CAACzC,MAAM,CAACnD,KAAK,CAACgK,CAAC,CAAC;gBAC3BgD,IAAI,GAAG,EAAE;gBACTD,EAAE,GAAGrN,GAAG,CAACzH,MAAM;gBAEf,KAAKgS,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG8C,EAAE,EAAE9C,CAAC,EAAE,EAAE;kBACvB+C,IAAI,IAAI,IAAI,CAAC1R,QAAQ,CAACkQ,SAAS,CAAC,IAAI,CAACsB,WAAW,CAACpN,GAAG,CAACuK,CAAC,CAAC,CAAC,EAAE;oBACxDpG,MAAM,EAAE,KAAK;oBACbC,KAAK,EAAE8B,KAAK,CAAC9B,KAAK,CAACmG,CAAC;kBACtB,CAAC,CAAC;gBACJ;gBAEAiB,IAAI,IAAI,IAAI,CAAC5P,QAAQ,CAACgQ,QAAQ,CAAC0B,IAAI,CAAC;cACtC;cAEAhE,GAAG,IAAI,IAAI,CAAC1N,QAAQ,CAAC8J,KAAK,CAACvB,MAAM,EAAEqH,IAAI,CAAC;cACxC;YACF;UAEF,KAAK,YAAY;YACf;cACEA,IAAI,GAAG,IAAI,CAAC0B,KAAK,CAAChH,KAAK,CAACzC,MAAM,CAAC;cAC/B6F,GAAG,IAAI,IAAI,CAAC1N,QAAQ,CAAC0I,UAAU,CAACkH,IAAI,CAAC;cACrC;YACF;UAEF,KAAK,MAAM;YACT;cACE7G,OAAO,GAAGuB,KAAK,CAACvB,OAAO;cACvBC,KAAK,GAAGsB,KAAK,CAACtB,KAAK;cACnBC,KAAK,GAAGqB,KAAK,CAACrB,KAAK;cACnB2F,EAAE,GAAGtE,KAAK,CAACpB,KAAK,CAACvM,MAAM;cACvBiT,IAAI,GAAG,EAAE;cAET,KAAKlB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGE,EAAE,EAAEF,CAAC,EAAE,EAAE;gBACvBpG,IAAI,GAAGgC,KAAK,CAACpB,KAAK,CAACwF,CAAC,CAAC;gBACrBhF,OAAO,GAAGpB,IAAI,CAACoB,OAAO;gBACtBD,IAAI,GAAGnB,IAAI,CAACmB,IAAI;gBAChBkI,QAAQ,GAAG,EAAE;gBAEb,IAAIrJ,IAAI,CAACmB,IAAI,EAAE;kBACbsG,QAAQ,GAAG,IAAI,CAAC/P,QAAQ,CAAC+P,QAAQ,CAACrG,OAAO,CAAC;kBAE1C,IAAIT,KAAK,EAAE;oBACT,IAAIX,IAAI,CAACT,MAAM,CAAClL,MAAM,GAAG,CAAC,IAAI2L,IAAI,CAACT,MAAM,CAAC,CAAC,CAAC,CAACnB,IAAI,KAAK,MAAM,EAAE;sBAC5D4B,IAAI,CAACT,MAAM,CAAC,CAAC,CAAC,CAACpB,IAAI,GAAGsJ,QAAQ,GAAG,GAAG,GAAGzH,IAAI,CAACT,MAAM,CAAC,CAAC,CAAC,CAACpB,IAAI;sBAE1D,IAAI6B,IAAI,CAACT,MAAM,CAAC,CAAC,CAAC,CAACA,MAAM,IAAIS,IAAI,CAACT,MAAM,CAAC,CAAC,CAAC,CAACA,MAAM,CAAClL,MAAM,GAAG,CAAC,IAAI2L,IAAI,CAACT,MAAM,CAAC,CAAC,CAAC,CAACA,MAAM,CAAC,CAAC,CAAC,CAACnB,IAAI,KAAK,MAAM,EAAE;wBACzG4B,IAAI,CAACT,MAAM,CAAC,CAAC,CAAC,CAACA,MAAM,CAAC,CAAC,CAAC,CAACpB,IAAI,GAAGsJ,QAAQ,GAAG,GAAG,GAAGzH,IAAI,CAACT,MAAM,CAAC,CAAC,CAAC,CAACA,MAAM,CAAC,CAAC,CAAC,CAACpB,IAAI;sBAChF;oBACF,CAAC,MAAM;sBACL6B,IAAI,CAACT,MAAM,CAAC+J,OAAO,CAAC;wBAClBlL,IAAI,EAAE,MAAM;wBACZD,IAAI,EAAEsJ;sBACR,CAAC,CAAC;oBACJ;kBACF,CAAC,MAAM;oBACL4B,QAAQ,IAAI5B,QAAQ;kBACtB;gBACF;gBAEA4B,QAAQ,IAAI,IAAI,CAACL,KAAK,CAAChJ,IAAI,CAACT,MAAM,EAAEoB,KAAK,CAAC;gBAC1C2G,IAAI,IAAI,IAAI,CAAC5P,QAAQ,CAAC8P,QAAQ,CAAC6B,QAAQ,EAAElI,IAAI,EAAEC,OAAO,CAAC;cACzD;cAEAgE,GAAG,IAAI,IAAI,CAAC1N,QAAQ,CAAC2I,IAAI,CAACiH,IAAI,EAAE7G,OAAO,EAAEC,KAAK,CAAC;cAC/C;YACF;UAEF,KAAK,MAAM;YACT;cACE;cACA0E,GAAG,IAAI,IAAI,CAAC1N,QAAQ,CAACsB,IAAI,CAACgJ,KAAK,CAAC7D,IAAI,CAAC;cACrC;YACF;UAEF,KAAK,WAAW;YACd;cACEiH,GAAG,IAAI,IAAI,CAAC1N,QAAQ,CAACgK,SAAS,CAAC,IAAI,CAACwH,WAAW,CAAClH,KAAK,CAACzC,MAAM,CAAC,CAAC;cAC9D;YACF;UAEF,KAAK,MAAM;YACT;cACE+H,IAAI,GAAGtF,KAAK,CAACzC,MAAM,GAAG,IAAI,CAAC2J,WAAW,CAAClH,KAAK,CAACzC,MAAM,CAAC,GAAGyC,KAAK,CAAC7D,IAAI;cAEjE,OAAO/J,CAAC,GAAG,CAAC,GAAGuI,CAAC,IAAI4C,MAAM,CAACnL,CAAC,GAAG,CAAC,CAAC,CAACgK,IAAI,KAAK,MAAM,EAAE;gBACjD4D,KAAK,GAAGzC,MAAM,CAAC,EAAEnL,CAAC,CAAC;gBACnBkT,IAAI,IAAI,IAAI,IAAItF,KAAK,CAACzC,MAAM,GAAG,IAAI,CAAC2J,WAAW,CAAClH,KAAK,CAACzC,MAAM,CAAC,GAAGyC,KAAK,CAAC7D,IAAI,CAAC;cAC7E;cAEAiH,GAAG,IAAIY,GAAG,GAAG,IAAI,CAACtO,QAAQ,CAACgK,SAAS,CAAC4F,IAAI,CAAC,GAAGA,IAAI;cACjD;YACF;UAEF;YACE;cACE,IAAIrB,MAAM,GAAG,cAAc,GAAGjE,KAAK,CAAC5D,IAAI,GAAG,uBAAuB;cAElE,IAAI,IAAI,CAACW,OAAO,CAAClH,MAAM,EAAE;gBACvBsF,OAAO,CAAC+I,KAAK,CAACD,MAAM,CAAC;gBACrB;cACF,CAAC,MAAM;gBACL,MAAM,IAAIE,KAAK,CAACF,MAAM,CAAC;cACzB;YACF;QACJ;MACF;MAEA,OAAOb,GAAG;IACZ;IACA;AACJ;AACA,OAFI;;IAKApG,MAAM,CAACkK,WAAW,GAAG,SAASA,WAAWA,CAAC3J,MAAM,EAAE7H,QAAQ,EAAE;MAC1DA,QAAQ,GAAGA,QAAQ,IAAI,IAAI,CAACA,QAAQ;MACpC,IAAI0N,GAAG,GAAG,EAAE;QACRhR,CAAC;QACD4N,KAAK;MACT,IAAIrF,CAAC,GAAG4C,MAAM,CAAClL,MAAM;MAErB,KAAKD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGuI,CAAC,EAAEvI,CAAC,EAAE,EAAE;QACtB4N,KAAK,GAAGzC,MAAM,CAACnL,CAAC,CAAC;QAEjB,QAAQ4N,KAAK,CAAC5D,IAAI;UAChB,KAAK,QAAQ;YACX;cACEgH,GAAG,IAAI1N,QAAQ,CAACyG,IAAI,CAAC6D,KAAK,CAAC7D,IAAI,CAAC;cAChC;YACF;UAEF,KAAK,MAAM;YACT;cACEiH,GAAG,IAAI1N,QAAQ,CAACsB,IAAI,CAACgJ,KAAK,CAAC7D,IAAI,CAAC;cAChC;YACF;UAEF,KAAK,MAAM;YACT;cACEiH,GAAG,IAAI1N,QAAQ,CAACsG,IAAI,CAACgE,KAAK,CAACvH,IAAI,EAAEuH,KAAK,CAAC9D,KAAK,EAAE,IAAI,CAACgL,WAAW,CAAClH,KAAK,CAACzC,MAAM,EAAE7H,QAAQ,CAAC,CAAC;cACvF;YACF;UAEF,KAAK,OAAO;YACV;cACE0N,GAAG,IAAI1N,QAAQ,CAACoQ,KAAK,CAAC9F,KAAK,CAACvH,IAAI,EAAEuH,KAAK,CAAC9D,KAAK,EAAE8D,KAAK,CAAC7D,IAAI,CAAC;cAC1D;YACF;UAEF,KAAK,QAAQ;YACX;cACEiH,GAAG,IAAI1N,QAAQ,CAAC2K,MAAM,CAAC,IAAI,CAAC6G,WAAW,CAAClH,KAAK,CAACzC,MAAM,EAAE7H,QAAQ,CAAC,CAAC;cAChE;YACF;UAEF,KAAK,IAAI;YACP;cACE0N,GAAG,IAAI1N,QAAQ,CAACqL,EAAE,CAAC,IAAI,CAACmG,WAAW,CAAClH,KAAK,CAACzC,MAAM,EAAE7H,QAAQ,CAAC,CAAC;cAC5D;YACF;UAEF,KAAK,UAAU;YACb;cACE0N,GAAG,IAAI1N,QAAQ,CAACsL,QAAQ,CAAChB,KAAK,CAAC7D,IAAI,CAAC;cACpC;YACF;UAEF,KAAK,IAAI;YACP;cACEiH,GAAG,IAAI1N,QAAQ,CAAC2L,EAAE,CAAC,CAAC;cACpB;YACF;UAEF,KAAK,KAAK;YACR;cACE+B,GAAG,IAAI1N,QAAQ,CAAC4L,GAAG,CAAC,IAAI,CAAC4F,WAAW,CAAClH,KAAK,CAACzC,MAAM,EAAE7H,QAAQ,CAAC,CAAC;cAC7D;YACF;UAEF,KAAK,MAAM;YACT;cACE0N,GAAG,IAAI1N,QAAQ,CAACyG,IAAI,CAAC6D,KAAK,CAAC7D,IAAI,CAAC;cAChC;YACF;UAEF;YACE;cACE,IAAI8H,MAAM,GAAG,cAAc,GAAGjE,KAAK,CAAC5D,IAAI,GAAG,uBAAuB;cAElE,IAAI,IAAI,CAACW,OAAO,CAAClH,MAAM,EAAE;gBACvBsF,OAAO,CAAC+I,KAAK,CAACD,MAAM,CAAC;gBACrB;cACF,CAAC,MAAM;gBACL,MAAM,IAAIE,KAAK,CAACF,MAAM,CAAC;cACzB;YACF;QACJ;MACF;MAEA,OAAOb,GAAG;IACZ,CAAC;IAED,OAAO0D,MAAM;EACf,CAAC,CAAC,CAAC;EAEH,IAAIS,OAAO,GAAG/L,OAAO,CAAChC,KAAK;IACvBgO,0BAA0B,GAAGhM,OAAO,CAACN,wBAAwB;IAC7DuM,QAAQ,GAAGjM,OAAO,CAACzE,MAAM;EAC7B,IAAI/B,WAAW,GAAGD,QAAQ,CAACC,WAAW;IAClCmB,cAAc,GAAGpB,QAAQ,CAACoB,cAAc;IACxCuR,UAAU,GAAG3S,QAAQ,CAACA,QAAQ;EAClC;AACF;AACA;;EAEE,SAAS/C,MAAMA,CAACkL,GAAG,EAAEnF,GAAG,EAAE4P,QAAQ,EAAE;IAClC;IACA,IAAI,OAAOzK,GAAG,KAAK,WAAW,IAAIA,GAAG,KAAK,IAAI,EAAE;MAC9C,MAAM,IAAIiH,KAAK,CAAC,gDAAgD,CAAC;IACnE;IAEA,IAAI,OAAOjH,GAAG,KAAK,QAAQ,EAAE;MAC3B,MAAM,IAAIiH,KAAK,CAAC,uCAAuC,GAAGzR,MAAM,CAACO,SAAS,CAACM,QAAQ,CAACC,IAAI,CAAC0J,GAAG,CAAC,GAAG,mBAAmB,CAAC;IACtH;IAEA,IAAI,OAAOnF,GAAG,KAAK,UAAU,EAAE;MAC7B4P,QAAQ,GAAG5P,GAAG;MACdA,GAAG,GAAG,IAAI;IACZ;IAEAA,GAAG,GAAGwP,OAAO,CAAC,CAAC,CAAC,EAAEvV,MAAM,CAAC+C,QAAQ,EAAEgD,GAAG,IAAI,CAAC,CAAC,CAAC;IAC7CyP,0BAA0B,CAACzP,GAAG,CAAC;IAE/B,IAAI4P,QAAQ,EAAE;MACZ,IAAIrS,SAAS,GAAGyC,GAAG,CAACzC,SAAS;MAC7B,IAAIiI,MAAM;MAEV,IAAI;QACFA,MAAM,GAAGiG,OAAO,CAACG,GAAG,CAACzG,GAAG,EAAEnF,GAAG,CAAC;MAChC,CAAC,CAAC,OAAOa,CAAC,EAAE;QACV,OAAO+O,QAAQ,CAAC/O,CAAC,CAAC;MACpB;MAEA,IAAIpE,IAAI,GAAG,SAASA,IAAIA,CAACoT,GAAG,EAAE;QAC5B,IAAIxE,GAAG;QAEP,IAAI,CAACwE,GAAG,EAAE;UACR,IAAI;YACFxE,GAAG,GAAGyD,QAAQ,CAACG,KAAK,CAACzJ,MAAM,EAAExF,GAAG,CAAC;UACnC,CAAC,CAAC,OAAOa,CAAC,EAAE;YACVgP,GAAG,GAAGhP,CAAC;UACT;QACF;QAEAb,GAAG,CAACzC,SAAS,GAAGA,SAAS;QACzB,OAAOsS,GAAG,GAAGD,QAAQ,CAACC,GAAG,CAAC,GAAGD,QAAQ,CAAC,IAAI,EAAEvE,GAAG,CAAC;MAClD,CAAC;MAED,IAAI,CAAC9N,SAAS,IAAIA,SAAS,CAACjD,MAAM,GAAG,CAAC,EAAE;QACtC,OAAOmC,IAAI,CAAC,CAAC;MACf;MAEA,OAAOuD,GAAG,CAACzC,SAAS;MACpB,IAAI,CAACiI,MAAM,CAAClL,MAAM,EAAE,OAAOmC,IAAI,CAAC,CAAC;MACjC,IAAIqT,OAAO,GAAG,CAAC;MACf7V,MAAM,CAACiE,UAAU,CAACsH,MAAM,EAAE,UAAUyC,KAAK,EAAE;QACzC,IAAIA,KAAK,CAAC5D,IAAI,KAAK,MAAM,EAAE;UACzByL,OAAO,EAAE;UACTC,UAAU,CAAC,YAAY;YACrBxS,SAAS,CAAC0K,KAAK,CAAC7D,IAAI,EAAE6D,KAAK,CAACpC,IAAI,EAAE,UAAUgK,GAAG,EAAEtK,IAAI,EAAE;cACrD,IAAIsK,GAAG,EAAE;gBACP,OAAOpT,IAAI,CAACoT,GAAG,CAAC;cAClB;cAEA,IAAItK,IAAI,IAAI,IAAI,IAAIA,IAAI,KAAK0C,KAAK,CAAC7D,IAAI,EAAE;gBACvC6D,KAAK,CAAC7D,IAAI,GAAGmB,IAAI;gBACjB0C,KAAK,CAAC9F,OAAO,GAAG,IAAI;cACtB;cAEA2N,OAAO,EAAE;cAET,IAAIA,OAAO,KAAK,CAAC,EAAE;gBACjBrT,IAAI,CAAC,CAAC;cACR;YACF,CAAC,CAAC;UACJ,CAAC,EAAE,CAAC,CAAC;QACP;MACF,CAAC,CAAC;MAEF,IAAIqT,OAAO,KAAK,CAAC,EAAE;QACjBrT,IAAI,CAAC,CAAC;MACR;MAEA;IACF;IAEA,IAAI;MACF,IAAIuT,OAAO,GAAGvE,OAAO,CAACG,GAAG,CAACzG,GAAG,EAAEnF,GAAG,CAAC;MAEnC,IAAIA,GAAG,CAAC9B,UAAU,EAAE;QAClBjE,MAAM,CAACiE,UAAU,CAAC8R,OAAO,EAAEhQ,GAAG,CAAC9B,UAAU,CAAC;MAC5C;MAEA,OAAO4Q,QAAQ,CAACG,KAAK,CAACe,OAAO,EAAEhQ,GAAG,CAAC;IACrC,CAAC,CAAC,OAAOa,CAAC,EAAE;MACVA,CAAC,CAACoP,OAAO,IAAI,6DAA6D;MAE1E,IAAIjQ,GAAG,CAAClC,MAAM,EAAE;QACd,OAAO,gCAAgC,GAAG4R,QAAQ,CAAC7O,CAAC,CAACoP,OAAO,GAAG,EAAE,EAAE,IAAI,CAAC,GAAG,QAAQ;MACrF;MAEA,MAAMpP,CAAC;IACT;EACF;EACA;AACF;AACA;;EAGE5G,MAAM,CAAC+K,OAAO,GAAG/K,MAAM,CAACiW,UAAU,GAAG,UAAUlQ,GAAG,EAAE;IAClDwP,OAAO,CAACvV,MAAM,CAAC+C,QAAQ,EAAEgD,GAAG,CAAC;IAC7B5B,cAAc,CAACnE,MAAM,CAAC+C,QAAQ,CAAC;IAC/B,OAAO/C,MAAM;EACf,CAAC;EAEDA,MAAM,CAACgD,WAAW,GAAGA,WAAW;EAChChD,MAAM,CAAC+C,QAAQ,GAAG2S,UAAU;EAC5B;AACF;AACA;;EAEE1V,MAAM,CAACkW,GAAG,GAAG,UAAUC,SAAS,EAAE;IAChC,IAAIC,IAAI,GAAGb,OAAO,CAAC,CAAC,CAAC,EAAEY,SAAS,CAAC;IAEjC,IAAIA,SAAS,CAACzS,QAAQ,EAAE;MACtB,CAAC,YAAY;QACX,IAAIA,QAAQ,GAAG1D,MAAM,CAAC+C,QAAQ,CAACW,QAAQ,IAAI,IAAIoP,UAAU,CAAC,CAAC;QAE3D,IAAIuD,KAAK,GAAG,SAASA,KAAKA,CAACC,IAAI,EAAE;UAC/B,IAAIC,YAAY,GAAG7S,QAAQ,CAAC4S,IAAI,CAAC;UAEjC5S,QAAQ,CAAC4S,IAAI,CAAC,GAAG,YAAY;YAC3B,KAAK,IAAIE,IAAI,GAAG/O,SAAS,CAACpH,MAAM,EAAEoW,IAAI,GAAG,IAAI7U,KAAK,CAAC4U,IAAI,CAAC,EAAEE,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAGF,IAAI,EAAEE,IAAI,EAAE,EAAE;cACvFD,IAAI,CAACC,IAAI,CAAC,GAAGjP,SAAS,CAACiP,IAAI,CAAC;YAC9B;YAEA,IAAIC,GAAG,GAAGR,SAAS,CAACzS,QAAQ,CAAC4S,IAAI,CAAC,CAACM,KAAK,CAAClT,QAAQ,EAAE+S,IAAI,CAAC;YAExD,IAAIE,GAAG,KAAK,KAAK,EAAE;cACjBA,GAAG,GAAGJ,YAAY,CAACK,KAAK,CAAClT,QAAQ,EAAE+S,IAAI,CAAC;YAC1C;YAEA,OAAOE,GAAG;UACZ,CAAC;QACH,CAAC;QAED,KAAK,IAAIL,IAAI,IAAIH,SAAS,CAACzS,QAAQ,EAAE;UACnC2S,KAAK,CAACC,IAAI,CAAC;QACb;QAEAF,IAAI,CAAC1S,QAAQ,GAAGA,QAAQ;MAC1B,CAAC,EAAE,CAAC;IACN;IAEA,IAAIyS,SAAS,CAACnS,SAAS,EAAE;MACvB,CAAC,YAAY;QACX,IAAIA,SAAS,GAAGhE,MAAM,CAAC+C,QAAQ,CAACiB,SAAS,IAAI,IAAI6G,WAAW,CAAC,CAAC;QAE9D,IAAIgM,MAAM,GAAG,SAASA,MAAMA,CAACP,IAAI,EAAE;UACjC,IAAIQ,aAAa,GAAG9S,SAAS,CAACsS,IAAI,CAAC;UAEnCtS,SAAS,CAACsS,IAAI,CAAC,GAAG,YAAY;YAC5B,KAAK,IAAIS,KAAK,GAAGtP,SAAS,CAACpH,MAAM,EAAEoW,IAAI,GAAG,IAAI7U,KAAK,CAACmV,KAAK,CAAC,EAAEC,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGD,KAAK,EAAEC,KAAK,EAAE,EAAE;cAC7FP,IAAI,CAACO,KAAK,CAAC,GAAGvP,SAAS,CAACuP,KAAK,CAAC;YAChC;YAEA,IAAIL,GAAG,GAAGR,SAAS,CAACnS,SAAS,CAACsS,IAAI,CAAC,CAACM,KAAK,CAAC5S,SAAS,EAAEyS,IAAI,CAAC;YAE1D,IAAIE,GAAG,KAAK,KAAK,EAAE;cACjBA,GAAG,GAAGG,aAAa,CAACF,KAAK,CAAC5S,SAAS,EAAEyS,IAAI,CAAC;YAC5C;YAEA,OAAOE,GAAG;UACZ,CAAC;QACH,CAAC;QAED,KAAK,IAAIL,IAAI,IAAIH,SAAS,CAACnS,SAAS,EAAE;UACpC6S,MAAM,CAACP,IAAI,CAAC;QACd;QAEAF,IAAI,CAACpS,SAAS,GAAGA,SAAS;MAC5B,CAAC,EAAE,CAAC;IACN;IAEA,IAAImS,SAAS,CAAClS,UAAU,EAAE;MACxB,IAAIA,UAAU,GAAGjE,MAAM,CAAC+C,QAAQ,CAACkB,UAAU;MAE3CmS,IAAI,CAACnS,UAAU,GAAG,UAAU+J,KAAK,EAAE;QACjCmI,SAAS,CAAClS,UAAU,CAAC+J,KAAK,CAAC;QAE3B,IAAI/J,UAAU,EAAE;UACdA,UAAU,CAAC+J,KAAK,CAAC;QACnB;MACF,CAAC;IACH;IAEAhO,MAAM,CAACiW,UAAU,CAACG,IAAI,CAAC;EACzB,CAAC;EACD;AACF;AACA;;EAGEpW,MAAM,CAACiE,UAAU,GAAG,UAAUsH,MAAM,EAAEoK,QAAQ,EAAE;IAC9C,KAAK,IAAIsB,SAAS,GAAG/U,+BAA+B,CAACqJ,MAAM,CAAC,EAAE2L,KAAK,EAAE,CAAC,CAACA,KAAK,GAAGD,SAAS,CAAC,CAAC,EAAEzU,IAAI,GAAG;MACjG,IAAIwL,KAAK,GAAGkJ,KAAK,CAACzU,KAAK;MACvBkT,QAAQ,CAAC3H,KAAK,CAAC;MAEf,QAAQA,KAAK,CAAC5D,IAAI;QAChB,KAAK,OAAO;UACV;YACE,KAAK,IAAI+M,UAAU,GAAGjV,+BAA+B,CAAC8L,KAAK,CAACzC,MAAM,CAACU,MAAM,CAAC,EAAEmL,MAAM,EAAE,CAAC,CAACA,MAAM,GAAGD,UAAU,CAAC,CAAC,EAAE3U,IAAI,GAAG;cAClH,IAAI4S,IAAI,GAAGgC,MAAM,CAAC3U,KAAK;cACvBzC,MAAM,CAACiE,UAAU,CAACmR,IAAI,EAAEO,QAAQ,CAAC;YACnC;YAEA,KAAK,IAAI0B,UAAU,GAAGnV,+BAA+B,CAAC8L,KAAK,CAACzC,MAAM,CAACnD,KAAK,CAAC,EAAEkP,MAAM,EAAE,CAAC,CAACA,MAAM,GAAGD,UAAU,CAAC,CAAC,EAAE7U,IAAI,GAAG;cACjH,IAAIsF,GAAG,GAAGwP,MAAM,CAAC7U,KAAK;cAEtB,KAAK,IAAI8U,UAAU,GAAGrV,+BAA+B,CAAC4F,GAAG,CAAC,EAAE0P,MAAM,EAAE,CAAC,CAACA,MAAM,GAAGD,UAAU,CAAC,CAAC,EAAE/U,IAAI,GAAG;gBAClG,IAAIiV,KAAK,GAAGD,MAAM,CAAC/U,KAAK;gBACxBzC,MAAM,CAACiE,UAAU,CAACwT,KAAK,EAAE9B,QAAQ,CAAC;cACpC;YACF;YAEA;UACF;QAEF,KAAK,MAAM;UACT;YACE3V,MAAM,CAACiE,UAAU,CAAC+J,KAAK,CAACpB,KAAK,EAAE+I,QAAQ,CAAC;YACxC;UACF;QAEF;UACE;YACE,IAAI3H,KAAK,CAACzC,MAAM,EAAE;cAChBvL,MAAM,CAACiE,UAAU,CAAC+J,KAAK,CAACzC,MAAM,EAAEoK,QAAQ,CAAC;YAC3C;UACF;MACJ;IACF;EACF,CAAC;EACD;AACF;AACA;;EAGE3V,MAAM,CAACkV,WAAW,GAAG,UAAUhK,GAAG,EAAEnF,GAAG,EAAE;IACvC;IACA,IAAI,OAAOmF,GAAG,KAAK,WAAW,IAAIA,GAAG,KAAK,IAAI,EAAE;MAC9C,MAAM,IAAIiH,KAAK,CAAC,4DAA4D,CAAC;IAC/E;IAEA,IAAI,OAAOjH,GAAG,KAAK,QAAQ,EAAE;MAC3B,MAAM,IAAIiH,KAAK,CAAC,mDAAmD,GAAGzR,MAAM,CAACO,SAAS,CAACM,QAAQ,CAACC,IAAI,CAAC0J,GAAG,CAAC,GAAG,mBAAmB,CAAC;IAClI;IAEAnF,GAAG,GAAGwP,OAAO,CAAC,CAAC,CAAC,EAAEvV,MAAM,CAAC+C,QAAQ,EAAEgD,GAAG,IAAI,CAAC,CAAC,CAAC;IAC7CyP,0BAA0B,CAACzP,GAAG,CAAC;IAE/B,IAAI;MACF,IAAIwF,MAAM,GAAGiG,OAAO,CAACK,SAAS,CAAC3G,GAAG,EAAEnF,GAAG,CAAC;MAExC,IAAIA,GAAG,CAAC9B,UAAU,EAAE;QAClBjE,MAAM,CAACiE,UAAU,CAACsH,MAAM,EAAExF,GAAG,CAAC9B,UAAU,CAAC;MAC3C;MAEA,OAAO4Q,QAAQ,CAACK,WAAW,CAAC3J,MAAM,EAAExF,GAAG,CAAC;IAC1C,CAAC,CAAC,OAAOa,CAAC,EAAE;MACVA,CAAC,CAACoP,OAAO,IAAI,6DAA6D;MAE1E,IAAIjQ,GAAG,CAAClC,MAAM,EAAE;QACd,OAAO,gCAAgC,GAAG4R,QAAQ,CAAC7O,CAAC,CAACoP,OAAO,GAAG,EAAE,EAAE,IAAI,CAAC,GAAG,QAAQ;MACrF;MAEA,MAAMpP,CAAC;IACT;EACF,CAAC;EACD;AACF;AACA;;EAGE5G,MAAM,CAAC8U,MAAM,GAAGD,QAAQ;EACxB7U,MAAM,CAACiV,MAAM,GAAGJ,QAAQ,CAACG,KAAK;EAC9BhV,MAAM,CAAC+S,QAAQ,GAAGD,UAAU;EAC5B9S,MAAM,CAACiU,YAAY,GAAGD,cAAc;EACpChU,MAAM,CAACyR,KAAK,GAAGD,OAAO;EACtBxR,MAAM,CAAC4R,KAAK,GAAGJ,OAAO,CAACG,GAAG;EAC1B3R,MAAM,CAAC8K,SAAS,GAAGD,WAAW;EAC9B7K,MAAM,CAACmU,OAAO,GAAGD,SAAS;EAC1BlU,MAAM,CAACgV,KAAK,GAAGhV,MAAM;EACrB,IAAI0X,QAAQ,GAAG1X,MAAM;EAErB,OAAO0X,QAAQ;AAEjB,CAAE,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}