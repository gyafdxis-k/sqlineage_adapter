{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nclass Node {\n  constructor(element) {\n    this.element = element;\n    this.next = Node.Undefined;\n    this.prev = Node.Undefined;\n  }\n}\nNode.Undefined = new Node(undefined);\nexport class LinkedList {\n  constructor() {\n    this._first = Node.Undefined;\n    this._last = Node.Undefined;\n    this._size = 0;\n  }\n  get size() {\n    return this._size;\n  }\n  isEmpty() {\n    return this._first === Node.Undefined;\n  }\n  clear() {\n    this._first = Node.Undefined;\n    this._last = Node.Undefined;\n    this._size = 0;\n  }\n  unshift(element) {\n    return this._insert(element, false);\n  }\n  push(element) {\n    return this._insert(element, true);\n  }\n  _insert(element, atTheEnd) {\n    const newNode = new Node(element);\n    if (this._first === Node.Undefined) {\n      this._first = newNode;\n      this._last = newNode;\n    } else if (atTheEnd) {\n      // push\n      const oldLast = this._last;\n      this._last = newNode;\n      newNode.prev = oldLast;\n      oldLast.next = newNode;\n    } else {\n      // unshift\n      const oldFirst = this._first;\n      this._first = newNode;\n      newNode.next = oldFirst;\n      oldFirst.prev = newNode;\n    }\n    this._size += 1;\n    let didRemove = false;\n    return () => {\n      if (!didRemove) {\n        didRemove = true;\n        this._remove(newNode);\n      }\n    };\n  }\n  shift() {\n    if (this._first === Node.Undefined) {\n      return undefined;\n    } else {\n      const res = this._first.element;\n      this._remove(this._first);\n      return res;\n    }\n  }\n  pop() {\n    if (this._last === Node.Undefined) {\n      return undefined;\n    } else {\n      const res = this._last.element;\n      this._remove(this._last);\n      return res;\n    }\n  }\n  _remove(node) {\n    if (node.prev !== Node.Undefined && node.next !== Node.Undefined) {\n      // middle\n      const anchor = node.prev;\n      anchor.next = node.next;\n      node.next.prev = anchor;\n    } else if (node.prev === Node.Undefined && node.next === Node.Undefined) {\n      // only node\n      this._first = Node.Undefined;\n      this._last = Node.Undefined;\n    } else if (node.next === Node.Undefined) {\n      // last\n      this._last = this._last.prev;\n      this._last.next = Node.Undefined;\n    } else if (node.prev === Node.Undefined) {\n      // first\n      this._first = this._first.next;\n      this._first.prev = Node.Undefined;\n    }\n    // done\n    this._size -= 1;\n  }\n  *[Symbol.iterator]() {\n    let node = this._first;\n    while (node !== Node.Undefined) {\n      yield node.element;\n      node = node.next;\n    }\n  }\n}","map":{"version":3,"names":["Node","constructor","element","next","Undefined","prev","undefined","LinkedList","_first","_last","_size","size","isEmpty","clear","unshift","_insert","push","atTheEnd","newNode","oldLast","oldFirst","didRemove","_remove","shift","res","pop","node","anchor","Symbol","iterator"],"sources":["C:/Users/Administrator/Desktop/sqllineage-master/sqllineagejs/node_modules/monaco-editor/esm/vs/base/common/linkedList.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nclass Node {\r\n    constructor(element) {\r\n        this.element = element;\r\n        this.next = Node.Undefined;\r\n        this.prev = Node.Undefined;\r\n    }\r\n}\r\nNode.Undefined = new Node(undefined);\r\nexport class LinkedList {\r\n    constructor() {\r\n        this._first = Node.Undefined;\r\n        this._last = Node.Undefined;\r\n        this._size = 0;\r\n    }\r\n    get size() {\r\n        return this._size;\r\n    }\r\n    isEmpty() {\r\n        return this._first === Node.Undefined;\r\n    }\r\n    clear() {\r\n        this._first = Node.Undefined;\r\n        this._last = Node.Undefined;\r\n        this._size = 0;\r\n    }\r\n    unshift(element) {\r\n        return this._insert(element, false);\r\n    }\r\n    push(element) {\r\n        return this._insert(element, true);\r\n    }\r\n    _insert(element, atTheEnd) {\r\n        const newNode = new Node(element);\r\n        if (this._first === Node.Undefined) {\r\n            this._first = newNode;\r\n            this._last = newNode;\r\n        }\r\n        else if (atTheEnd) {\r\n            // push\r\n            const oldLast = this._last;\r\n            this._last = newNode;\r\n            newNode.prev = oldLast;\r\n            oldLast.next = newNode;\r\n        }\r\n        else {\r\n            // unshift\r\n            const oldFirst = this._first;\r\n            this._first = newNode;\r\n            newNode.next = oldFirst;\r\n            oldFirst.prev = newNode;\r\n        }\r\n        this._size += 1;\r\n        let didRemove = false;\r\n        return () => {\r\n            if (!didRemove) {\r\n                didRemove = true;\r\n                this._remove(newNode);\r\n            }\r\n        };\r\n    }\r\n    shift() {\r\n        if (this._first === Node.Undefined) {\r\n            return undefined;\r\n        }\r\n        else {\r\n            const res = this._first.element;\r\n            this._remove(this._first);\r\n            return res;\r\n        }\r\n    }\r\n    pop() {\r\n        if (this._last === Node.Undefined) {\r\n            return undefined;\r\n        }\r\n        else {\r\n            const res = this._last.element;\r\n            this._remove(this._last);\r\n            return res;\r\n        }\r\n    }\r\n    _remove(node) {\r\n        if (node.prev !== Node.Undefined && node.next !== Node.Undefined) {\r\n            // middle\r\n            const anchor = node.prev;\r\n            anchor.next = node.next;\r\n            node.next.prev = anchor;\r\n        }\r\n        else if (node.prev === Node.Undefined && node.next === Node.Undefined) {\r\n            // only node\r\n            this._first = Node.Undefined;\r\n            this._last = Node.Undefined;\r\n        }\r\n        else if (node.next === Node.Undefined) {\r\n            // last\r\n            this._last = this._last.prev;\r\n            this._last.next = Node.Undefined;\r\n        }\r\n        else if (node.prev === Node.Undefined) {\r\n            // first\r\n            this._first = this._first.next;\r\n            this._first.prev = Node.Undefined;\r\n        }\r\n        // done\r\n        this._size -= 1;\r\n    }\r\n    *[Symbol.iterator]() {\r\n        let node = this._first;\r\n        while (node !== Node.Undefined) {\r\n            yield node.element;\r\n            node = node.next;\r\n        }\r\n    }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}