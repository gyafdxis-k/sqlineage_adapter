{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nimport { toDisposable, Disposable } from '../../../base/common/lifecycle.js';\nimport * as platform from '../../registry/common/platform.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { ColorScheme } from './theme.js';\nimport { CSSIcon } from '../../../base/common/codicons.js';\nexport const IThemeService = createDecorator('themeService');\nexport var ThemeColor;\n(function (ThemeColor) {\n  function isThemeColor(obj) {\n    return obj && typeof obj === 'object' && typeof obj.id === 'string';\n  }\n  ThemeColor.isThemeColor = isThemeColor;\n})(ThemeColor || (ThemeColor = {}));\nexport function themeColorFromId(id) {\n  return {\n    id\n  };\n}\nexport var ThemeIcon;\n(function (ThemeIcon) {\n  function isThemeIcon(obj) {\n    return obj && typeof obj === 'object' && typeof obj.id === 'string' && (typeof obj.color === 'undefined' || ThemeColor.isThemeColor(obj.color));\n  }\n  ThemeIcon.isThemeIcon = isThemeIcon;\n  const _regexFromString = /^\\$\\(([a-z.]+\\/)?([a-z-~]+)\\)$/i;\n  function fromString(str) {\n    const match = _regexFromString.exec(str);\n    if (!match) {\n      return undefined;\n    }\n    let [, owner, name] = match;\n    if (!owner || owner === 'codicon/') {\n      return {\n        id: name\n      };\n    }\n    return {\n      id: owner + name\n    };\n  }\n  ThemeIcon.fromString = fromString;\n  function modify(icon, modifier) {\n    let id = icon.id;\n    const tildeIndex = id.lastIndexOf('~');\n    if (tildeIndex !== -1) {\n      id = id.substring(0, tildeIndex);\n    }\n    if (modifier) {\n      id = \"\".concat(id, \"~\").concat(modifier);\n    }\n    return {\n      id\n    };\n  }\n  ThemeIcon.modify = modify;\n  function isEqual(ti1, ti2) {\n    var _a, _b;\n    return ti1.id === ti2.id && ((_a = ti1.color) === null || _a === void 0 ? void 0 : _a.id) === ((_b = ti2.color) === null || _b === void 0 ? void 0 : _b.id);\n  }\n  ThemeIcon.isEqual = isEqual;\n  ThemeIcon.asClassNameArray = CSSIcon.asClassNameArray;\n  ThemeIcon.asClassName = CSSIcon.asClassName;\n  ThemeIcon.asCSSSelector = CSSIcon.asCSSSelector;\n})(ThemeIcon || (ThemeIcon = {}));\nexport function getThemeTypeSelector(type) {\n  switch (type) {\n    case ColorScheme.DARK:\n      return 'vs-dark';\n    case ColorScheme.HIGH_CONTRAST:\n      return 'hc-black';\n    default:\n      return 'vs';\n  }\n}\n// static theming participant\nexport const Extensions = {\n  ThemingContribution: 'base.contributions.theming'\n};\nclass ThemingRegistry {\n  constructor() {\n    this.themingParticipants = [];\n    this.themingParticipants = [];\n    this.onThemingParticipantAddedEmitter = new Emitter();\n  }\n  onColorThemeChange(participant) {\n    this.themingParticipants.push(participant);\n    this.onThemingParticipantAddedEmitter.fire(participant);\n    return toDisposable(() => {\n      const idx = this.themingParticipants.indexOf(participant);\n      this.themingParticipants.splice(idx, 1);\n    });\n  }\n  getThemingParticipants() {\n    return this.themingParticipants;\n  }\n}\nlet themingRegistry = new ThemingRegistry();\nplatform.Registry.add(Extensions.ThemingContribution, themingRegistry);\nexport function registerThemingParticipant(participant) {\n  return themingRegistry.onColorThemeChange(participant);\n}\n/**\r\n * Utility base class for all themable components.\r\n */\nexport class Themable extends Disposable {\n  constructor(themeService) {\n    super();\n    this.themeService = themeService;\n    this.theme = themeService.getColorTheme();\n    // Hook up to theme changes\n    this._register(this.themeService.onDidColorThemeChange(theme => this.onThemeChange(theme)));\n  }\n  onThemeChange(theme) {\n    this.theme = theme;\n    this.updateStyles();\n  }\n  updateStyles() {\n    // Subclasses to override\n  }\n}","map":{"version":3,"names":["createDecorator","toDisposable","Disposable","platform","Emitter","ColorScheme","CSSIcon","IThemeService","ThemeColor","isThemeColor","obj","id","themeColorFromId","ThemeIcon","isThemeIcon","color","_regexFromString","fromString","str","match","exec","undefined","owner","name","modify","icon","modifier","tildeIndex","lastIndexOf","substring","concat","isEqual","ti1","ti2","_a","_b","asClassNameArray","asClassName","asCSSSelector","getThemeTypeSelector","type","DARK","HIGH_CONTRAST","Extensions","ThemingContribution","ThemingRegistry","constructor","themingParticipants","onThemingParticipantAddedEmitter","onColorThemeChange","participant","push","fire","idx","indexOf","splice","getThemingParticipants","themingRegistry","Registry","add","registerThemingParticipant","Themable","themeService","theme","getColorTheme","_register","onDidColorThemeChange","onThemeChange","updateStyles"],"sources":["C:/Users/Administrator/Desktop/sqllineage-master/sqllineagejs/node_modules/monaco-editor/esm/vs/platform/theme/common/themeService.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\r\nimport { toDisposable, Disposable } from '../../../base/common/lifecycle.js';\r\nimport * as platform from '../../registry/common/platform.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { ColorScheme } from './theme.js';\r\nimport { CSSIcon } from '../../../base/common/codicons.js';\r\nexport const IThemeService = createDecorator('themeService');\r\nexport var ThemeColor;\r\n(function (ThemeColor) {\r\n    function isThemeColor(obj) {\r\n        return obj && typeof obj === 'object' && typeof obj.id === 'string';\r\n    }\r\n    ThemeColor.isThemeColor = isThemeColor;\r\n})(ThemeColor || (ThemeColor = {}));\r\nexport function themeColorFromId(id) {\r\n    return { id };\r\n}\r\nexport var ThemeIcon;\r\n(function (ThemeIcon) {\r\n    function isThemeIcon(obj) {\r\n        return obj && typeof obj === 'object' && typeof obj.id === 'string' && (typeof obj.color === 'undefined' || ThemeColor.isThemeColor(obj.color));\r\n    }\r\n    ThemeIcon.isThemeIcon = isThemeIcon;\r\n    const _regexFromString = /^\\$\\(([a-z.]+\\/)?([a-z-~]+)\\)$/i;\r\n    function fromString(str) {\r\n        const match = _regexFromString.exec(str);\r\n        if (!match) {\r\n            return undefined;\r\n        }\r\n        let [, owner, name] = match;\r\n        if (!owner || owner === 'codicon/') {\r\n            return { id: name };\r\n        }\r\n        return { id: owner + name };\r\n    }\r\n    ThemeIcon.fromString = fromString;\r\n    function modify(icon, modifier) {\r\n        let id = icon.id;\r\n        const tildeIndex = id.lastIndexOf('~');\r\n        if (tildeIndex !== -1) {\r\n            id = id.substring(0, tildeIndex);\r\n        }\r\n        if (modifier) {\r\n            id = `${id}~${modifier}`;\r\n        }\r\n        return { id };\r\n    }\r\n    ThemeIcon.modify = modify;\r\n    function isEqual(ti1, ti2) {\r\n        var _a, _b;\r\n        return ti1.id === ti2.id && ((_a = ti1.color) === null || _a === void 0 ? void 0 : _a.id) === ((_b = ti2.color) === null || _b === void 0 ? void 0 : _b.id);\r\n    }\r\n    ThemeIcon.isEqual = isEqual;\r\n    ThemeIcon.asClassNameArray = CSSIcon.asClassNameArray;\r\n    ThemeIcon.asClassName = CSSIcon.asClassName;\r\n    ThemeIcon.asCSSSelector = CSSIcon.asCSSSelector;\r\n})(ThemeIcon || (ThemeIcon = {}));\r\nexport function getThemeTypeSelector(type) {\r\n    switch (type) {\r\n        case ColorScheme.DARK: return 'vs-dark';\r\n        case ColorScheme.HIGH_CONTRAST: return 'hc-black';\r\n        default: return 'vs';\r\n    }\r\n}\r\n// static theming participant\r\nexport const Extensions = {\r\n    ThemingContribution: 'base.contributions.theming'\r\n};\r\nclass ThemingRegistry {\r\n    constructor() {\r\n        this.themingParticipants = [];\r\n        this.themingParticipants = [];\r\n        this.onThemingParticipantAddedEmitter = new Emitter();\r\n    }\r\n    onColorThemeChange(participant) {\r\n        this.themingParticipants.push(participant);\r\n        this.onThemingParticipantAddedEmitter.fire(participant);\r\n        return toDisposable(() => {\r\n            const idx = this.themingParticipants.indexOf(participant);\r\n            this.themingParticipants.splice(idx, 1);\r\n        });\r\n    }\r\n    getThemingParticipants() {\r\n        return this.themingParticipants;\r\n    }\r\n}\r\nlet themingRegistry = new ThemingRegistry();\r\nplatform.Registry.add(Extensions.ThemingContribution, themingRegistry);\r\nexport function registerThemingParticipant(participant) {\r\n    return themingRegistry.onColorThemeChange(participant);\r\n}\r\n/**\r\n * Utility base class for all themable components.\r\n */\r\nexport class Themable extends Disposable {\r\n    constructor(themeService) {\r\n        super();\r\n        this.themeService = themeService;\r\n        this.theme = themeService.getColorTheme();\r\n        // Hook up to theme changes\r\n        this._register(this.themeService.onDidColorThemeChange(theme => this.onThemeChange(theme)));\r\n    }\r\n    onThemeChange(theme) {\r\n        this.theme = theme;\r\n        this.updateStyles();\r\n    }\r\n    updateStyles() {\r\n        // Subclasses to override\r\n    }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}