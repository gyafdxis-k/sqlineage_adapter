{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nvar _a;\nimport './media/diffEditor.css';\nimport * as nls from '../../../nls.js';\nimport * as dom from '../../../base/browser/dom.js';\nimport { createFastDomNode } from '../../../base/browser/fastDomNode.js';\nimport { Sash } from '../../../base/browser/ui/sash/sash.js';\nimport { RunOnceScheduler } from '../../../base/common/async.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { Configuration } from '../config/configuration.js';\nimport { StableEditorScrollState } from '../core/editorState.js';\nimport { ICodeEditorService } from '../services/codeEditorService.js';\nimport { CodeEditorWidget } from './codeEditorWidget.js';\nimport { DiffReview } from './diffReview.js';\nimport { EditorOptions, EditorFontLigatures, stringSet as validateStringSetOption, boolean as validateBooleanOption } from '../../common/config/editorOptions.js';\nimport { Range } from '../../common/core/range.js';\nimport { createStringBuilder } from '../../common/core/stringBuilder.js';\nimport * as editorCommon from '../../common/editorCommon.js';\nimport { ModelDecorationOptions } from '../../common/model/textModel.js';\nimport { IEditorWorkerService } from '../../common/services/editorWorkerService.js';\nimport { OverviewRulerZone } from '../../common/view/overviewZoneManager.js';\nimport { LineDecoration } from '../../common/viewLayout/lineDecorations.js';\nimport { RenderLineInput, renderViewLine } from '../../common/viewLayout/viewLineRenderer.js';\nimport { InlineDecoration, ViewLineRenderingData } from '../../common/viewModel/viewModel.js';\nimport { IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\nimport { ServiceCollection } from '../../../platform/instantiation/common/serviceCollection.js';\nimport { INotificationService } from '../../../platform/notification/common/notification.js';\nimport { defaultInsertColor, defaultRemoveColor, diffBorder, diffInserted, diffInsertedOutline, diffRemoved, diffRemovedOutline, scrollbarShadow, scrollbarSliderBackground, scrollbarSliderHoverBackground, scrollbarSliderActiveBackground, diffDiagonalFill } from '../../../platform/theme/common/colorRegistry.js';\nimport { IThemeService, getThemeTypeSelector, registerThemingParticipant, ThemeIcon } from '../../../platform/theme/common/themeService.js';\nimport { IContextMenuService } from '../../../platform/contextview/browser/contextView.js';\nimport { InlineDiffMargin } from './inlineDiffMargin.js';\nimport { IClipboardService } from '../../../platform/clipboard/common/clipboardService.js';\nimport { EditorExtensionsRegistry } from '../editorExtensions.js';\nimport { onUnexpectedError } from '../../../base/common/errors.js';\nimport { IEditorProgressService } from '../../../platform/progress/common/progress.js';\nimport { ElementSizeObserver } from '../config/elementSizeObserver.js';\nimport { Codicon } from '../../../base/common/codicons.js';\nimport { MOUSE_CURSOR_TEXT_CSS_CLASS_NAME } from '../../../base/browser/ui/mouseCursor/mouseCursor.js';\nimport { registerIcon } from '../../../platform/theme/common/iconRegistry.js';\nclass VisualEditorState {\n  constructor(_contextMenuService, _clipboardService) {\n    this._contextMenuService = _contextMenuService;\n    this._clipboardService = _clipboardService;\n    this._zones = [];\n    this._inlineDiffMargins = [];\n    this._zonesMap = {};\n    this._decorations = [];\n  }\n  getForeignViewZones(allViewZones) {\n    return allViewZones.filter(z => !this._zonesMap[String(z.id)]);\n  }\n  clean(editor) {\n    // (1) View zones\n    if (this._zones.length > 0) {\n      editor.changeViewZones(viewChangeAccessor => {\n        for (const zoneId of this._zones) {\n          viewChangeAccessor.removeZone(zoneId);\n        }\n      });\n    }\n    this._zones = [];\n    this._zonesMap = {};\n    // (2) Model decorations\n    this._decorations = editor.deltaDecorations(this._decorations, []);\n  }\n  apply(editor, overviewRuler, newDecorations, restoreScrollState) {\n    const scrollState = restoreScrollState ? StableEditorScrollState.capture(editor) : null;\n    // view zones\n    editor.changeViewZones(viewChangeAccessor => {\n      for (const zoneId of this._zones) {\n        viewChangeAccessor.removeZone(zoneId);\n      }\n      for (const inlineDiffMargin of this._inlineDiffMargins) {\n        inlineDiffMargin.dispose();\n      }\n      this._zones = [];\n      this._zonesMap = {};\n      this._inlineDiffMargins = [];\n      for (let i = 0, length = newDecorations.zones.length; i < length; i++) {\n        const viewZone = newDecorations.zones[i];\n        viewZone.suppressMouseDown = true;\n        const zoneId = viewChangeAccessor.addZone(viewZone);\n        this._zones.push(zoneId);\n        this._zonesMap[String(zoneId)] = true;\n        if (newDecorations.zones[i].diff && viewZone.marginDomNode) {\n          viewZone.suppressMouseDown = false;\n          this._inlineDiffMargins.push(new InlineDiffMargin(zoneId, viewZone.marginDomNode, editor, newDecorations.zones[i].diff, this._contextMenuService, this._clipboardService));\n        }\n      }\n    });\n    if (scrollState) {\n      scrollState.restore(editor);\n    }\n    // decorations\n    this._decorations = editor.deltaDecorations(this._decorations, newDecorations.decorations);\n    // overview ruler\n    if (overviewRuler) {\n      overviewRuler.setZones(newDecorations.overviewZones);\n    }\n  }\n}\nlet DIFF_EDITOR_ID = 0;\nconst diffInsertIcon = registerIcon('diff-insert', Codicon.add, nls.localize('diffInsertIcon', 'Line decoration for inserts in the diff editor.'));\nconst diffRemoveIcon = registerIcon('diff-remove', Codicon.remove, nls.localize('diffRemoveIcon', 'Line decoration for removals in the diff editor.'));\nconst ttPolicy = (_a = window.trustedTypes) === null || _a === void 0 ? void 0 : _a.createPolicy('diffEditorWidget', {\n  createHTML: value => value\n});\nlet DiffEditorWidget = class DiffEditorWidget extends Disposable {\n  constructor(domElement, options, codeEditorWidgetOptions, clipboardService, editorWorkerService, contextKeyService, instantiationService, codeEditorService, themeService, notificationService, contextMenuService, _editorProgressService) {\n    super();\n    this._editorProgressService = _editorProgressService;\n    this._onDidDispose = this._register(new Emitter());\n    this.onDidDispose = this._onDidDispose.event;\n    this._onDidUpdateDiff = this._register(new Emitter());\n    this.onDidUpdateDiff = this._onDidUpdateDiff.event;\n    this._onDidContentSizeChange = this._register(new Emitter());\n    this._lastOriginalWarning = null;\n    this._lastModifiedWarning = null;\n    this._editorWorkerService = editorWorkerService;\n    this._codeEditorService = codeEditorService;\n    this._contextKeyService = this._register(contextKeyService.createScoped(domElement));\n    this._contextKeyService.createKey('isInDiffEditor', true);\n    this._themeService = themeService;\n    this._notificationService = notificationService;\n    this._id = ++DIFF_EDITOR_ID;\n    this._state = 0 /* Idle */;\n    this._updatingDiffProgress = null;\n    this._domElement = domElement;\n    options = options || {};\n    // renderSideBySide\n    this._renderSideBySide = true;\n    if (typeof options.renderSideBySide !== 'undefined') {\n      this._renderSideBySide = options.renderSideBySide;\n    }\n    // maxComputationTime\n    this._maxComputationTime = 5000;\n    if (typeof options.maxComputationTime !== 'undefined') {\n      this._maxComputationTime = options.maxComputationTime;\n    }\n    // ignoreTrimWhitespace\n    this._ignoreTrimWhitespace = true;\n    if (typeof options.ignoreTrimWhitespace !== 'undefined') {\n      this._ignoreTrimWhitespace = options.ignoreTrimWhitespace;\n    }\n    // renderIndicators\n    this._renderIndicators = true;\n    if (typeof options.renderIndicators !== 'undefined') {\n      this._renderIndicators = options.renderIndicators;\n    }\n    this._originalIsEditable = validateBooleanOption(options.originalEditable, false);\n    this._diffCodeLens = validateBooleanOption(options.diffCodeLens, false);\n    this._diffWordWrap = validateDiffWordWrap(options.diffWordWrap, 'inherit');\n    if (typeof options.isInEmbeddedEditor !== 'undefined') {\n      this._contextKeyService.createKey('isInEmbeddedDiffEditor', options.isInEmbeddedEditor);\n    } else {\n      this._contextKeyService.createKey('isInEmbeddedDiffEditor', false);\n    }\n    this._renderOverviewRuler = true;\n    if (typeof options.renderOverviewRuler !== 'undefined') {\n      this._renderOverviewRuler = Boolean(options.renderOverviewRuler);\n    }\n    this._updateDecorationsRunner = this._register(new RunOnceScheduler(() => this._updateDecorations(), 0));\n    this._containerDomElement = document.createElement('div');\n    this._containerDomElement.className = DiffEditorWidget._getClassName(this._themeService.getColorTheme(), this._renderSideBySide);\n    this._containerDomElement.style.position = 'relative';\n    this._containerDomElement.style.height = '100%';\n    this._domElement.appendChild(this._containerDomElement);\n    this._overviewViewportDomElement = createFastDomNode(document.createElement('div'));\n    this._overviewViewportDomElement.setClassName('diffViewport');\n    this._overviewViewportDomElement.setPosition('absolute');\n    this._overviewDomElement = document.createElement('div');\n    this._overviewDomElement.className = 'diffOverview';\n    this._overviewDomElement.style.position = 'absolute';\n    this._overviewDomElement.appendChild(this._overviewViewportDomElement.domNode);\n    this._register(dom.addStandardDisposableListener(this._overviewDomElement, 'mousedown', e => {\n      this._modifiedEditor.delegateVerticalScrollbarMouseDown(e);\n    }));\n    if (this._renderOverviewRuler) {\n      this._containerDomElement.appendChild(this._overviewDomElement);\n    }\n    // Create left side\n    this._originalDomNode = document.createElement('div');\n    this._originalDomNode.className = 'editor original';\n    this._originalDomNode.style.position = 'absolute';\n    this._originalDomNode.style.height = '100%';\n    this._containerDomElement.appendChild(this._originalDomNode);\n    // Create right side\n    this._modifiedDomNode = document.createElement('div');\n    this._modifiedDomNode.className = 'editor modified';\n    this._modifiedDomNode.style.position = 'absolute';\n    this._modifiedDomNode.style.height = '100%';\n    this._containerDomElement.appendChild(this._modifiedDomNode);\n    this._beginUpdateDecorationsTimeout = -1;\n    this._currentlyChangingViewZones = false;\n    this._diffComputationToken = 0;\n    this._originalEditorState = new VisualEditorState(contextMenuService, clipboardService);\n    this._modifiedEditorState = new VisualEditorState(contextMenuService, clipboardService);\n    this._isVisible = true;\n    this._isHandlingScrollEvent = false;\n    this._elementSizeObserver = this._register(new ElementSizeObserver(this._containerDomElement, options.dimension, () => this._onDidContainerSizeChanged()));\n    if (options.automaticLayout) {\n      this._elementSizeObserver.startObserving();\n    }\n    this._diffComputationResult = null;\n    const leftContextKeyService = this._contextKeyService.createScoped();\n    const leftServices = new ServiceCollection();\n    leftServices.set(IContextKeyService, leftContextKeyService);\n    const leftScopedInstantiationService = instantiationService.createChild(leftServices);\n    const rightContextKeyService = this._contextKeyService.createScoped();\n    const rightServices = new ServiceCollection();\n    rightServices.set(IContextKeyService, rightContextKeyService);\n    const rightScopedInstantiationService = instantiationService.createChild(rightServices);\n    this._originalEditor = this._createLeftHandSideEditor(options, codeEditorWidgetOptions.originalEditor || {}, leftScopedInstantiationService, leftContextKeyService);\n    this._modifiedEditor = this._createRightHandSideEditor(options, codeEditorWidgetOptions.modifiedEditor || {}, rightScopedInstantiationService, rightContextKeyService);\n    this._originalOverviewRuler = null;\n    this._modifiedOverviewRuler = null;\n    this._reviewPane = new DiffReview(this);\n    this._containerDomElement.appendChild(this._reviewPane.domNode.domNode);\n    this._containerDomElement.appendChild(this._reviewPane.shadow.domNode);\n    this._containerDomElement.appendChild(this._reviewPane.actionBarContainer.domNode);\n    // enableSplitViewResizing\n    this._enableSplitViewResizing = true;\n    if (typeof options.enableSplitViewResizing !== 'undefined') {\n      this._enableSplitViewResizing = options.enableSplitViewResizing;\n    }\n    if (this._renderSideBySide) {\n      this._setStrategy(new DiffEditorWidgetSideBySide(this._createDataSource(), this._enableSplitViewResizing));\n    } else {\n      this._setStrategy(new DiffEditorWidgetInline(this._createDataSource(), this._enableSplitViewResizing));\n    }\n    this._register(themeService.onDidColorThemeChange(t => {\n      if (this._strategy && this._strategy.applyColors(t)) {\n        this._updateDecorationsRunner.schedule();\n      }\n      this._containerDomElement.className = DiffEditorWidget._getClassName(this._themeService.getColorTheme(), this._renderSideBySide);\n    }));\n    const contributions = EditorExtensionsRegistry.getDiffEditorContributions();\n    for (const desc of contributions) {\n      try {\n        this._register(instantiationService.createInstance(desc.ctor, this));\n      } catch (err) {\n        onUnexpectedError(err);\n      }\n    }\n    this._codeEditorService.addDiffEditor(this);\n  }\n  _setState(newState) {\n    if (this._state === newState) {\n      return;\n    }\n    this._state = newState;\n    if (this._updatingDiffProgress) {\n      this._updatingDiffProgress.done();\n      this._updatingDiffProgress = null;\n    }\n    if (this._state === 1 /* ComputingDiff */) {\n      this._updatingDiffProgress = this._editorProgressService.show(true, 1000);\n    }\n  }\n  diffReviewNext() {\n    this._reviewPane.next();\n  }\n  diffReviewPrev() {\n    this._reviewPane.prev();\n  }\n  static _getClassName(theme, renderSideBySide) {\n    let result = 'monaco-diff-editor monaco-editor-background ';\n    if (renderSideBySide) {\n      result += 'side-by-side ';\n    }\n    result += getThemeTypeSelector(theme.type);\n    return result;\n  }\n  _recreateOverviewRulers() {\n    if (!this._renderOverviewRuler) {\n      return;\n    }\n    if (this._originalOverviewRuler) {\n      this._overviewDomElement.removeChild(this._originalOverviewRuler.getDomNode());\n      this._originalOverviewRuler.dispose();\n    }\n    if (this._originalEditor.hasModel()) {\n      this._originalOverviewRuler = this._originalEditor.createOverviewRuler('original diffOverviewRuler');\n      this._overviewDomElement.appendChild(this._originalOverviewRuler.getDomNode());\n    }\n    if (this._modifiedOverviewRuler) {\n      this._overviewDomElement.removeChild(this._modifiedOverviewRuler.getDomNode());\n      this._modifiedOverviewRuler.dispose();\n    }\n    if (this._modifiedEditor.hasModel()) {\n      this._modifiedOverviewRuler = this._modifiedEditor.createOverviewRuler('modified diffOverviewRuler');\n      this._overviewDomElement.appendChild(this._modifiedOverviewRuler.getDomNode());\n    }\n    this._layoutOverviewRulers();\n  }\n  _createLeftHandSideEditor(options, codeEditorWidgetOptions, instantiationService, contextKeyService) {\n    const editor = this._createInnerEditor(instantiationService, this._originalDomNode, this._adjustOptionsForLeftHandSide(options), codeEditorWidgetOptions);\n    this._register(editor.onDidScrollChange(e => {\n      if (this._isHandlingScrollEvent) {\n        return;\n      }\n      if (!e.scrollTopChanged && !e.scrollLeftChanged && !e.scrollHeightChanged) {\n        return;\n      }\n      this._isHandlingScrollEvent = true;\n      this._modifiedEditor.setScrollPosition({\n        scrollLeft: e.scrollLeft,\n        scrollTop: e.scrollTop\n      });\n      this._isHandlingScrollEvent = false;\n      this._layoutOverviewViewport();\n    }));\n    this._register(editor.onDidChangeViewZones(() => {\n      this._onViewZonesChanged();\n    }));\n    this._register(editor.onDidChangeConfiguration(e => {\n      if (!editor.getModel()) {\n        return;\n      }\n      if (e.hasChanged(38 /* fontInfo */)) {\n        this._updateDecorationsRunner.schedule();\n      }\n      if (e.hasChanged(125 /* wrappingInfo */)) {\n        this._updateDecorationsRunner.cancel();\n        this._updateDecorations();\n      }\n    }));\n    this._register(editor.onDidChangeModelContent(() => {\n      if (this._isVisible) {\n        this._beginUpdateDecorationsSoon();\n      }\n    }));\n    const isInDiffLeftEditorKey = contextKeyService.createKey('isInDiffLeftEditor', undefined);\n    this._register(editor.onDidFocusEditorWidget(() => isInDiffLeftEditorKey.set(true)));\n    this._register(editor.onDidBlurEditorWidget(() => isInDiffLeftEditorKey.set(false)));\n    this._register(editor.onDidContentSizeChange(e => {\n      const width = this._originalEditor.getContentWidth() + this._modifiedEditor.getContentWidth() + DiffEditorWidget.ONE_OVERVIEW_WIDTH;\n      const height = Math.max(this._modifiedEditor.getContentHeight(), this._originalEditor.getContentHeight());\n      this._onDidContentSizeChange.fire({\n        contentHeight: height,\n        contentWidth: width,\n        contentHeightChanged: e.contentHeightChanged,\n        contentWidthChanged: e.contentWidthChanged\n      });\n    }));\n    return editor;\n  }\n  _createRightHandSideEditor(options, codeEditorWidgetOptions, instantiationService, contextKeyService) {\n    const editor = this._createInnerEditor(instantiationService, this._modifiedDomNode, this._adjustOptionsForRightHandSide(options), codeEditorWidgetOptions);\n    this._register(editor.onDidScrollChange(e => {\n      if (this._isHandlingScrollEvent) {\n        return;\n      }\n      if (!e.scrollTopChanged && !e.scrollLeftChanged && !e.scrollHeightChanged) {\n        return;\n      }\n      this._isHandlingScrollEvent = true;\n      this._originalEditor.setScrollPosition({\n        scrollLeft: e.scrollLeft,\n        scrollTop: e.scrollTop\n      });\n      this._isHandlingScrollEvent = false;\n      this._layoutOverviewViewport();\n    }));\n    this._register(editor.onDidChangeViewZones(() => {\n      this._onViewZonesChanged();\n    }));\n    this._register(editor.onDidChangeConfiguration(e => {\n      if (!editor.getModel()) {\n        return;\n      }\n      if (e.hasChanged(38 /* fontInfo */)) {\n        this._updateDecorationsRunner.schedule();\n      }\n      if (e.hasChanged(125 /* wrappingInfo */)) {\n        this._updateDecorationsRunner.cancel();\n        this._updateDecorations();\n      }\n    }));\n    this._register(editor.onDidChangeModelContent(() => {\n      if (this._isVisible) {\n        this._beginUpdateDecorationsSoon();\n      }\n    }));\n    this._register(editor.onDidChangeModelOptions(e => {\n      if (e.tabSize) {\n        this._updateDecorationsRunner.schedule();\n      }\n    }));\n    const isInDiffRightEditorKey = contextKeyService.createKey('isInDiffRightEditor', undefined);\n    this._register(editor.onDidFocusEditorWidget(() => isInDiffRightEditorKey.set(true)));\n    this._register(editor.onDidBlurEditorWidget(() => isInDiffRightEditorKey.set(false)));\n    this._register(editor.onDidContentSizeChange(e => {\n      const width = this._originalEditor.getContentWidth() + this._modifiedEditor.getContentWidth() + DiffEditorWidget.ONE_OVERVIEW_WIDTH;\n      const height = Math.max(this._modifiedEditor.getContentHeight(), this._originalEditor.getContentHeight());\n      this._onDidContentSizeChange.fire({\n        contentHeight: height,\n        contentWidth: width,\n        contentHeightChanged: e.contentHeightChanged,\n        contentWidthChanged: e.contentWidthChanged\n      });\n    }));\n    return editor;\n  }\n  _createInnerEditor(instantiationService, container, options, editorWidgetOptions) {\n    return instantiationService.createInstance(CodeEditorWidget, container, options, editorWidgetOptions);\n  }\n  dispose() {\n    this._codeEditorService.removeDiffEditor(this);\n    if (this._beginUpdateDecorationsTimeout !== -1) {\n      window.clearTimeout(this._beginUpdateDecorationsTimeout);\n      this._beginUpdateDecorationsTimeout = -1;\n    }\n    this._cleanViewZonesAndDecorations();\n    if (this._originalOverviewRuler) {\n      this._overviewDomElement.removeChild(this._originalOverviewRuler.getDomNode());\n      this._originalOverviewRuler.dispose();\n    }\n    if (this._modifiedOverviewRuler) {\n      this._overviewDomElement.removeChild(this._modifiedOverviewRuler.getDomNode());\n      this._modifiedOverviewRuler.dispose();\n    }\n    this._overviewDomElement.removeChild(this._overviewViewportDomElement.domNode);\n    if (this._renderOverviewRuler) {\n      this._containerDomElement.removeChild(this._overviewDomElement);\n    }\n    this._containerDomElement.removeChild(this._originalDomNode);\n    this._originalEditor.dispose();\n    this._containerDomElement.removeChild(this._modifiedDomNode);\n    this._modifiedEditor.dispose();\n    this._strategy.dispose();\n    this._containerDomElement.removeChild(this._reviewPane.domNode.domNode);\n    this._containerDomElement.removeChild(this._reviewPane.shadow.domNode);\n    this._containerDomElement.removeChild(this._reviewPane.actionBarContainer.domNode);\n    this._reviewPane.dispose();\n    this._domElement.removeChild(this._containerDomElement);\n    this._onDidDispose.fire();\n    super.dispose();\n  }\n  //------------ begin IDiffEditor methods\n  getId() {\n    return this.getEditorType() + ':' + this._id;\n  }\n  getEditorType() {\n    return editorCommon.EditorType.IDiffEditor;\n  }\n  getLineChanges() {\n    if (!this._diffComputationResult) {\n      return null;\n    }\n    return this._diffComputationResult.changes;\n  }\n  getOriginalEditor() {\n    return this._originalEditor;\n  }\n  getModifiedEditor() {\n    return this._modifiedEditor;\n  }\n  updateOptions(newOptions) {\n    // Handle side by side\n    let renderSideBySideChanged = false;\n    if (typeof newOptions.renderSideBySide !== 'undefined') {\n      if (this._renderSideBySide !== newOptions.renderSideBySide) {\n        this._renderSideBySide = newOptions.renderSideBySide;\n        renderSideBySideChanged = true;\n      }\n    }\n    if (typeof newOptions.maxComputationTime !== 'undefined') {\n      this._maxComputationTime = newOptions.maxComputationTime;\n      if (this._isVisible) {\n        this._beginUpdateDecorationsSoon();\n      }\n    }\n    let beginUpdateDecorations = false;\n    if (typeof newOptions.ignoreTrimWhitespace !== 'undefined') {\n      if (this._ignoreTrimWhitespace !== newOptions.ignoreTrimWhitespace) {\n        this._ignoreTrimWhitespace = newOptions.ignoreTrimWhitespace;\n        // Begin comparing\n        beginUpdateDecorations = true;\n      }\n    }\n    if (typeof newOptions.renderIndicators !== 'undefined') {\n      if (this._renderIndicators !== newOptions.renderIndicators) {\n        this._renderIndicators = newOptions.renderIndicators;\n        beginUpdateDecorations = true;\n      }\n    }\n    if (beginUpdateDecorations) {\n      this._beginUpdateDecorations();\n    }\n    this._originalIsEditable = validateBooleanOption(newOptions.originalEditable, this._originalIsEditable);\n    this._diffCodeLens = validateBooleanOption(newOptions.diffCodeLens, this._diffCodeLens);\n    this._diffWordWrap = validateDiffWordWrap(newOptions.diffWordWrap, this._diffWordWrap);\n    this._modifiedEditor.updateOptions(this._adjustOptionsForRightHandSide(newOptions));\n    this._originalEditor.updateOptions(this._adjustOptionsForLeftHandSide(newOptions));\n    // enableSplitViewResizing\n    if (typeof newOptions.enableSplitViewResizing !== 'undefined') {\n      this._enableSplitViewResizing = newOptions.enableSplitViewResizing;\n    }\n    this._strategy.setEnableSplitViewResizing(this._enableSplitViewResizing);\n    // renderSideBySide\n    if (renderSideBySideChanged) {\n      if (this._renderSideBySide) {\n        this._setStrategy(new DiffEditorWidgetSideBySide(this._createDataSource(), this._enableSplitViewResizing));\n      } else {\n        this._setStrategy(new DiffEditorWidgetInline(this._createDataSource(), this._enableSplitViewResizing));\n      }\n      // Update class name\n      this._containerDomElement.className = DiffEditorWidget._getClassName(this._themeService.getColorTheme(), this._renderSideBySide);\n    }\n    // renderOverviewRuler\n    if (typeof newOptions.renderOverviewRuler !== 'undefined' && this._renderOverviewRuler !== newOptions.renderOverviewRuler) {\n      this._renderOverviewRuler = newOptions.renderOverviewRuler;\n      if (this._renderOverviewRuler) {\n        this._containerDomElement.appendChild(this._overviewDomElement);\n      } else {\n        this._containerDomElement.removeChild(this._overviewDomElement);\n      }\n    }\n  }\n  getModel() {\n    return {\n      original: this._originalEditor.getModel(),\n      modified: this._modifiedEditor.getModel()\n    };\n  }\n  setModel(model) {\n    // Guard us against partial null model\n    if (model && (!model.original || !model.modified)) {\n      throw new Error(!model.original ? 'DiffEditorWidget.setModel: Original model is null' : 'DiffEditorWidget.setModel: Modified model is null');\n    }\n    // Remove all view zones & decorations\n    this._cleanViewZonesAndDecorations();\n    // Update code editor models\n    this._originalEditor.setModel(model ? model.original : null);\n    this._modifiedEditor.setModel(model ? model.modified : null);\n    this._updateDecorationsRunner.cancel();\n    // this.originalEditor.onDidChangeModelOptions\n    if (model) {\n      this._originalEditor.setScrollTop(0);\n      this._modifiedEditor.setScrollTop(0);\n    }\n    // Disable any diff computations that will come in\n    this._diffComputationResult = null;\n    this._diffComputationToken++;\n    this._setState(0 /* Idle */);\n    if (model) {\n      this._recreateOverviewRulers();\n      // Begin comparing\n      this._beginUpdateDecorations();\n    }\n    this._layoutOverviewViewport();\n  }\n  getDomNode() {\n    return this._domElement;\n  }\n  getVisibleColumnFromPosition(position) {\n    return this._modifiedEditor.getVisibleColumnFromPosition(position);\n  }\n  getPosition() {\n    return this._modifiedEditor.getPosition();\n  }\n  setPosition(position) {\n    this._modifiedEditor.setPosition(position);\n  }\n  revealLine(lineNumber) {\n    let scrollType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    this._modifiedEditor.revealLine(lineNumber, scrollType);\n  }\n  revealLineInCenter(lineNumber) {\n    let scrollType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    this._modifiedEditor.revealLineInCenter(lineNumber, scrollType);\n  }\n  revealLineInCenterIfOutsideViewport(lineNumber) {\n    let scrollType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    this._modifiedEditor.revealLineInCenterIfOutsideViewport(lineNumber, scrollType);\n  }\n  revealLineNearTop(lineNumber) {\n    let scrollType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    this._modifiedEditor.revealLineNearTop(lineNumber, scrollType);\n  }\n  revealPosition(position) {\n    let scrollType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    this._modifiedEditor.revealPosition(position, scrollType);\n  }\n  revealPositionInCenter(position) {\n    let scrollType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    this._modifiedEditor.revealPositionInCenter(position, scrollType);\n  }\n  revealPositionInCenterIfOutsideViewport(position) {\n    let scrollType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    this._modifiedEditor.revealPositionInCenterIfOutsideViewport(position, scrollType);\n  }\n  revealPositionNearTop(position) {\n    let scrollType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    this._modifiedEditor.revealPositionNearTop(position, scrollType);\n  }\n  getSelection() {\n    return this._modifiedEditor.getSelection();\n  }\n  getSelections() {\n    return this._modifiedEditor.getSelections();\n  }\n  setSelection(something) {\n    this._modifiedEditor.setSelection(something);\n  }\n  setSelections(ranges) {\n    this._modifiedEditor.setSelections(ranges);\n  }\n  revealLines(startLineNumber, endLineNumber) {\n    let scrollType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    this._modifiedEditor.revealLines(startLineNumber, endLineNumber, scrollType);\n  }\n  revealLinesInCenter(startLineNumber, endLineNumber) {\n    let scrollType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    this._modifiedEditor.revealLinesInCenter(startLineNumber, endLineNumber, scrollType);\n  }\n  revealLinesInCenterIfOutsideViewport(startLineNumber, endLineNumber) {\n    let scrollType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    this._modifiedEditor.revealLinesInCenterIfOutsideViewport(startLineNumber, endLineNumber, scrollType);\n  }\n  revealLinesNearTop(startLineNumber, endLineNumber) {\n    let scrollType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    this._modifiedEditor.revealLinesNearTop(startLineNumber, endLineNumber, scrollType);\n  }\n  revealRange(range) {\n    let scrollType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    let revealVerticalInCenter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    let revealHorizontal = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n    this._modifiedEditor.revealRange(range, scrollType, revealVerticalInCenter, revealHorizontal);\n  }\n  revealRangeInCenter(range) {\n    let scrollType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    this._modifiedEditor.revealRangeInCenter(range, scrollType);\n  }\n  revealRangeInCenterIfOutsideViewport(range) {\n    let scrollType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    this._modifiedEditor.revealRangeInCenterIfOutsideViewport(range, scrollType);\n  }\n  revealRangeNearTop(range) {\n    let scrollType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    this._modifiedEditor.revealRangeNearTop(range, scrollType);\n  }\n  revealRangeNearTopIfOutsideViewport(range) {\n    let scrollType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    this._modifiedEditor.revealRangeNearTopIfOutsideViewport(range, scrollType);\n  }\n  revealRangeAtTop(range) {\n    let scrollType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    this._modifiedEditor.revealRangeAtTop(range, scrollType);\n  }\n  getSupportedActions() {\n    return this._modifiedEditor.getSupportedActions();\n  }\n  saveViewState() {\n    const originalViewState = this._originalEditor.saveViewState();\n    const modifiedViewState = this._modifiedEditor.saveViewState();\n    return {\n      original: originalViewState,\n      modified: modifiedViewState\n    };\n  }\n  restoreViewState(s) {\n    if (s && s.original && s.modified) {\n      const diffEditorState = s;\n      this._originalEditor.restoreViewState(diffEditorState.original);\n      this._modifiedEditor.restoreViewState(diffEditorState.modified);\n    }\n  }\n  layout(dimension) {\n    this._elementSizeObserver.observe(dimension);\n  }\n  focus() {\n    this._modifiedEditor.focus();\n  }\n  hasTextFocus() {\n    return this._originalEditor.hasTextFocus() || this._modifiedEditor.hasTextFocus();\n  }\n  trigger(source, handlerId, payload) {\n    this._modifiedEditor.trigger(source, handlerId, payload);\n  }\n  changeDecorations(callback) {\n    return this._modifiedEditor.changeDecorations(callback);\n  }\n  //------------ end IDiffEditor methods\n  //------------ begin layouting methods\n  _onDidContainerSizeChanged() {\n    this._doLayout();\n  }\n  _getReviewHeight() {\n    return this._reviewPane.isVisible() ? this._elementSizeObserver.getHeight() : 0;\n  }\n  _layoutOverviewRulers() {\n    if (!this._renderOverviewRuler) {\n      return;\n    }\n    if (!this._originalOverviewRuler || !this._modifiedOverviewRuler) {\n      return;\n    }\n    const height = this._elementSizeObserver.getHeight();\n    const reviewHeight = this._getReviewHeight();\n    const freeSpace = DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH - 2 * DiffEditorWidget.ONE_OVERVIEW_WIDTH;\n    const layoutInfo = this._modifiedEditor.getLayoutInfo();\n    if (layoutInfo) {\n      this._originalOverviewRuler.setLayout({\n        top: 0,\n        width: DiffEditorWidget.ONE_OVERVIEW_WIDTH,\n        right: freeSpace + DiffEditorWidget.ONE_OVERVIEW_WIDTH,\n        height: height - reviewHeight\n      });\n      this._modifiedOverviewRuler.setLayout({\n        top: 0,\n        right: 0,\n        width: DiffEditorWidget.ONE_OVERVIEW_WIDTH,\n        height: height - reviewHeight\n      });\n    }\n  }\n  //------------ end layouting methods\n  _onViewZonesChanged() {\n    if (this._currentlyChangingViewZones) {\n      return;\n    }\n    this._updateDecorationsRunner.schedule();\n  }\n  _beginUpdateDecorationsSoon() {\n    // Clear previous timeout if necessary\n    if (this._beginUpdateDecorationsTimeout !== -1) {\n      window.clearTimeout(this._beginUpdateDecorationsTimeout);\n      this._beginUpdateDecorationsTimeout = -1;\n    }\n    this._beginUpdateDecorationsTimeout = window.setTimeout(() => this._beginUpdateDecorations(), DiffEditorWidget.UPDATE_DIFF_DECORATIONS_DELAY);\n  }\n  static _equals(a, b) {\n    if (!a && !b) {\n      return true;\n    }\n    if (!a || !b) {\n      return false;\n    }\n    return a.toString() === b.toString();\n  }\n  _beginUpdateDecorations() {\n    this._beginUpdateDecorationsTimeout = -1;\n    const currentOriginalModel = this._originalEditor.getModel();\n    const currentModifiedModel = this._modifiedEditor.getModel();\n    if (!currentOriginalModel || !currentModifiedModel) {\n      return;\n    }\n    // Prevent old diff requests to come if a new request has been initiated\n    // The best method would be to call cancel on the Promise, but this is not\n    // yet supported, so using tokens for now.\n    this._diffComputationToken++;\n    const currentToken = this._diffComputationToken;\n    this._setState(1 /* ComputingDiff */);\n    if (!this._editorWorkerService.canComputeDiff(currentOriginalModel.uri, currentModifiedModel.uri)) {\n      if (!DiffEditorWidget._equals(currentOriginalModel.uri, this._lastOriginalWarning) || !DiffEditorWidget._equals(currentModifiedModel.uri, this._lastModifiedWarning)) {\n        this._lastOriginalWarning = currentOriginalModel.uri;\n        this._lastModifiedWarning = currentModifiedModel.uri;\n        this._notificationService.warn(nls.localize(\"diff.tooLarge\", \"Cannot compare files because one file is too large.\"));\n      }\n      return;\n    }\n    this._editorWorkerService.computeDiff(currentOriginalModel.uri, currentModifiedModel.uri, this._ignoreTrimWhitespace, this._maxComputationTime).then(result => {\n      if (currentToken === this._diffComputationToken && currentOriginalModel === this._originalEditor.getModel() && currentModifiedModel === this._modifiedEditor.getModel()) {\n        this._setState(2 /* DiffComputed */);\n        this._diffComputationResult = result;\n        this._updateDecorationsRunner.schedule();\n        this._onDidUpdateDiff.fire();\n      }\n    }, error => {\n      if (currentToken === this._diffComputationToken && currentOriginalModel === this._originalEditor.getModel() && currentModifiedModel === this._modifiedEditor.getModel()) {\n        this._setState(2 /* DiffComputed */);\n        this._diffComputationResult = null;\n        this._updateDecorationsRunner.schedule();\n      }\n    });\n  }\n  _cleanViewZonesAndDecorations() {\n    this._originalEditorState.clean(this._originalEditor);\n    this._modifiedEditorState.clean(this._modifiedEditor);\n  }\n  _updateDecorations() {\n    if (!this._originalEditor.getModel() || !this._modifiedEditor.getModel()) {\n      return;\n    }\n    const lineChanges = this._diffComputationResult ? this._diffComputationResult.changes : [];\n    const foreignOriginal = this._originalEditorState.getForeignViewZones(this._originalEditor.getWhitespaces());\n    const foreignModified = this._modifiedEditorState.getForeignViewZones(this._modifiedEditor.getWhitespaces());\n    const diffDecorations = this._strategy.getEditorsDiffDecorations(lineChanges, this._ignoreTrimWhitespace, this._renderIndicators, foreignOriginal, foreignModified);\n    try {\n      this._currentlyChangingViewZones = true;\n      this._originalEditorState.apply(this._originalEditor, this._originalOverviewRuler, diffDecorations.original, false);\n      this._modifiedEditorState.apply(this._modifiedEditor, this._modifiedOverviewRuler, diffDecorations.modified, true);\n    } finally {\n      this._currentlyChangingViewZones = false;\n    }\n  }\n  _adjustOptionsForSubEditor(options) {\n    const clonedOptions = Object.assign({}, options);\n    clonedOptions.inDiffEditor = true;\n    clonedOptions.automaticLayout = false;\n    clonedOptions.scrollbar = clonedOptions.scrollbar || {};\n    clonedOptions.scrollbar.vertical = 'visible';\n    clonedOptions.folding = false;\n    clonedOptions.codeLens = this._diffCodeLens;\n    clonedOptions.fixedOverflowWidgets = true;\n    // clonedOptions.lineDecorationsWidth = '2ch';\n    if (!clonedOptions.minimap) {\n      clonedOptions.minimap = {};\n    }\n    clonedOptions.minimap.enabled = false;\n    return clonedOptions;\n  }\n  _adjustOptionsForLeftHandSide(options) {\n    const result = this._adjustOptionsForSubEditor(options);\n    if (!this._renderSideBySide) {\n      // never wrap hidden editor\n      result.wordWrapOverride1 = 'off';\n    } else {\n      result.wordWrapOverride1 = this._diffWordWrap;\n    }\n    result.readOnly = !this._originalIsEditable;\n    result.extraEditorClassName = 'original-in-monaco-diff-editor';\n    return Object.assign(Object.assign({}, result), {\n      dimension: {\n        height: 0,\n        width: 0\n      }\n    });\n  }\n  _adjustOptionsForRightHandSide(options) {\n    const result = this._adjustOptionsForSubEditor(options);\n    result.wordWrapOverride1 = this._diffWordWrap;\n    result.revealHorizontalRightPadding = EditorOptions.revealHorizontalRightPadding.defaultValue + DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH;\n    result.scrollbar.verticalHasArrows = false;\n    result.extraEditorClassName = 'modified-in-monaco-diff-editor';\n    return Object.assign(Object.assign({}, result), {\n      dimension: {\n        height: 0,\n        width: 0\n      }\n    });\n  }\n  doLayout() {\n    this._elementSizeObserver.observe();\n    this._doLayout();\n  }\n  _doLayout() {\n    const width = this._elementSizeObserver.getWidth();\n    const height = this._elementSizeObserver.getHeight();\n    const reviewHeight = this._getReviewHeight();\n    const splitPoint = this._strategy.layout();\n    this._originalDomNode.style.width = splitPoint + 'px';\n    this._originalDomNode.style.left = '0px';\n    this._modifiedDomNode.style.width = width - splitPoint + 'px';\n    this._modifiedDomNode.style.left = splitPoint + 'px';\n    this._overviewDomElement.style.top = '0px';\n    this._overviewDomElement.style.height = height - reviewHeight + 'px';\n    this._overviewDomElement.style.width = DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH + 'px';\n    this._overviewDomElement.style.left = width - DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH + 'px';\n    this._overviewViewportDomElement.setWidth(DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH);\n    this._overviewViewportDomElement.setHeight(30);\n    this._originalEditor.layout({\n      width: splitPoint,\n      height: height - reviewHeight\n    });\n    this._modifiedEditor.layout({\n      width: width - splitPoint - (this._renderOverviewRuler ? DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH : 0),\n      height: height - reviewHeight\n    });\n    if (this._originalOverviewRuler || this._modifiedOverviewRuler) {\n      this._layoutOverviewRulers();\n    }\n    this._reviewPane.layout(height - reviewHeight, width, reviewHeight);\n    this._layoutOverviewViewport();\n  }\n  _layoutOverviewViewport() {\n    const layout = this._computeOverviewViewport();\n    if (!layout) {\n      this._overviewViewportDomElement.setTop(0);\n      this._overviewViewportDomElement.setHeight(0);\n    } else {\n      this._overviewViewportDomElement.setTop(layout.top);\n      this._overviewViewportDomElement.setHeight(layout.height);\n    }\n  }\n  _computeOverviewViewport() {\n    const layoutInfo = this._modifiedEditor.getLayoutInfo();\n    if (!layoutInfo) {\n      return null;\n    }\n    const scrollTop = this._modifiedEditor.getScrollTop();\n    const scrollHeight = this._modifiedEditor.getScrollHeight();\n    const computedAvailableSize = Math.max(0, layoutInfo.height);\n    const computedRepresentableSize = Math.max(0, computedAvailableSize - 2 * 0);\n    const computedRatio = scrollHeight > 0 ? computedRepresentableSize / scrollHeight : 0;\n    const computedSliderSize = Math.max(0, Math.floor(layoutInfo.height * computedRatio));\n    const computedSliderPosition = Math.floor(scrollTop * computedRatio);\n    return {\n      height: computedSliderSize,\n      top: computedSliderPosition\n    };\n  }\n  _createDataSource() {\n    return {\n      getWidth: () => {\n        return this._elementSizeObserver.getWidth();\n      },\n      getHeight: () => {\n        return this._elementSizeObserver.getHeight() - this._getReviewHeight();\n      },\n      getOptions: () => {\n        return {\n          renderOverviewRuler: this._renderOverviewRuler\n        };\n      },\n      getContainerDomNode: () => {\n        return this._containerDomElement;\n      },\n      relayoutEditors: () => {\n        this._doLayout();\n      },\n      getOriginalEditor: () => {\n        return this._originalEditor;\n      },\n      getModifiedEditor: () => {\n        return this._modifiedEditor;\n      }\n    };\n  }\n  _setStrategy(newStrategy) {\n    if (this._strategy) {\n      this._strategy.dispose();\n    }\n    this._strategy = newStrategy;\n    newStrategy.applyColors(this._themeService.getColorTheme());\n    if (this._diffComputationResult) {\n      this._updateDecorations();\n    }\n    // Just do a layout, the strategy might need it\n    this._doLayout();\n  }\n  _getLineChangeAtOrBeforeLineNumber(lineNumber, startLineNumberExtractor) {\n    const lineChanges = this._diffComputationResult ? this._diffComputationResult.changes : [];\n    if (lineChanges.length === 0 || lineNumber < startLineNumberExtractor(lineChanges[0])) {\n      // There are no changes or `lineNumber` is before the first change\n      return null;\n    }\n    let min = 0;\n    let max = lineChanges.length - 1;\n    while (min < max) {\n      const mid = Math.floor((min + max) / 2);\n      const midStart = startLineNumberExtractor(lineChanges[mid]);\n      const midEnd = mid + 1 <= max ? startLineNumberExtractor(lineChanges[mid + 1]) : 1073741824 /* MAX_SAFE_SMALL_INTEGER */;\n      if (lineNumber < midStart) {\n        max = mid - 1;\n      } else if (lineNumber >= midEnd) {\n        min = mid + 1;\n      } else {\n        // HIT!\n        min = mid;\n        max = mid;\n      }\n    }\n    return lineChanges[min];\n  }\n  _getEquivalentLineForOriginalLineNumber(lineNumber) {\n    const lineChange = this._getLineChangeAtOrBeforeLineNumber(lineNumber, lineChange => lineChange.originalStartLineNumber);\n    if (!lineChange) {\n      return lineNumber;\n    }\n    const originalEquivalentLineNumber = lineChange.originalStartLineNumber + (lineChange.originalEndLineNumber > 0 ? -1 : 0);\n    const modifiedEquivalentLineNumber = lineChange.modifiedStartLineNumber + (lineChange.modifiedEndLineNumber > 0 ? -1 : 0);\n    const lineChangeOriginalLength = lineChange.originalEndLineNumber > 0 ? lineChange.originalEndLineNumber - lineChange.originalStartLineNumber + 1 : 0;\n    const lineChangeModifiedLength = lineChange.modifiedEndLineNumber > 0 ? lineChange.modifiedEndLineNumber - lineChange.modifiedStartLineNumber + 1 : 0;\n    const delta = lineNumber - originalEquivalentLineNumber;\n    if (delta <= lineChangeOriginalLength) {\n      return modifiedEquivalentLineNumber + Math.min(delta, lineChangeModifiedLength);\n    }\n    return modifiedEquivalentLineNumber + lineChangeModifiedLength - lineChangeOriginalLength + delta;\n  }\n  _getEquivalentLineForModifiedLineNumber(lineNumber) {\n    const lineChange = this._getLineChangeAtOrBeforeLineNumber(lineNumber, lineChange => lineChange.modifiedStartLineNumber);\n    if (!lineChange) {\n      return lineNumber;\n    }\n    const originalEquivalentLineNumber = lineChange.originalStartLineNumber + (lineChange.originalEndLineNumber > 0 ? -1 : 0);\n    const modifiedEquivalentLineNumber = lineChange.modifiedStartLineNumber + (lineChange.modifiedEndLineNumber > 0 ? -1 : 0);\n    const lineChangeOriginalLength = lineChange.originalEndLineNumber > 0 ? lineChange.originalEndLineNumber - lineChange.originalStartLineNumber + 1 : 0;\n    const lineChangeModifiedLength = lineChange.modifiedEndLineNumber > 0 ? lineChange.modifiedEndLineNumber - lineChange.modifiedStartLineNumber + 1 : 0;\n    const delta = lineNumber - modifiedEquivalentLineNumber;\n    if (delta <= lineChangeModifiedLength) {\n      return originalEquivalentLineNumber + Math.min(delta, lineChangeOriginalLength);\n    }\n    return originalEquivalentLineNumber + lineChangeOriginalLength - lineChangeModifiedLength + delta;\n  }\n  getDiffLineInformationForOriginal(lineNumber) {\n    if (!this._diffComputationResult) {\n      // Cannot answer that which I don't know\n      return null;\n    }\n    return {\n      equivalentLineNumber: this._getEquivalentLineForOriginalLineNumber(lineNumber)\n    };\n  }\n  getDiffLineInformationForModified(lineNumber) {\n    if (!this._diffComputationResult) {\n      // Cannot answer that which I don't know\n      return null;\n    }\n    return {\n      equivalentLineNumber: this._getEquivalentLineForModifiedLineNumber(lineNumber)\n    };\n  }\n};\nDiffEditorWidget.ONE_OVERVIEW_WIDTH = 15;\nDiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH = 30;\nDiffEditorWidget.UPDATE_DIFF_DECORATIONS_DELAY = 200; // ms\nDiffEditorWidget = __decorate([__param(3, IClipboardService), __param(4, IEditorWorkerService), __param(5, IContextKeyService), __param(6, IInstantiationService), __param(7, ICodeEditorService), __param(8, IThemeService), __param(9, INotificationService), __param(10, IContextMenuService), __param(11, IEditorProgressService)], DiffEditorWidget);\nexport { DiffEditorWidget };\nclass DiffEditorWidgetStyle extends Disposable {\n  constructor(dataSource) {\n    super();\n    this._dataSource = dataSource;\n    this._insertColor = null;\n    this._removeColor = null;\n  }\n  applyColors(theme) {\n    const newInsertColor = (theme.getColor(diffInserted) || defaultInsertColor).transparent(2);\n    const newRemoveColor = (theme.getColor(diffRemoved) || defaultRemoveColor).transparent(2);\n    const hasChanges = !newInsertColor.equals(this._insertColor) || !newRemoveColor.equals(this._removeColor);\n    this._insertColor = newInsertColor;\n    this._removeColor = newRemoveColor;\n    return hasChanges;\n  }\n  getEditorsDiffDecorations(lineChanges, ignoreTrimWhitespace, renderIndicators, originalWhitespaces, modifiedWhitespaces) {\n    // Get view zones\n    modifiedWhitespaces = modifiedWhitespaces.sort((a, b) => {\n      return a.afterLineNumber - b.afterLineNumber;\n    });\n    originalWhitespaces = originalWhitespaces.sort((a, b) => {\n      return a.afterLineNumber - b.afterLineNumber;\n    });\n    const zones = this._getViewZones(lineChanges, originalWhitespaces, modifiedWhitespaces, renderIndicators);\n    // Get decorations & overview ruler zones\n    const originalDecorations = this._getOriginalEditorDecorations(lineChanges, ignoreTrimWhitespace, renderIndicators);\n    const modifiedDecorations = this._getModifiedEditorDecorations(lineChanges, ignoreTrimWhitespace, renderIndicators);\n    return {\n      original: {\n        decorations: originalDecorations.decorations,\n        overviewZones: originalDecorations.overviewZones,\n        zones: zones.original\n      },\n      modified: {\n        decorations: modifiedDecorations.decorations,\n        overviewZones: modifiedDecorations.overviewZones,\n        zones: zones.modified\n      }\n    };\n  }\n}\nclass ForeignViewZonesIterator {\n  constructor(source) {\n    this._source = source;\n    this._index = -1;\n    this.current = null;\n    this.advance();\n  }\n  advance() {\n    this._index++;\n    if (this._index < this._source.length) {\n      this.current = this._source[this._index];\n    } else {\n      this.current = null;\n    }\n  }\n}\nclass ViewZonesComputer {\n  constructor(_lineChanges, _originalForeignVZ, _modifiedForeignVZ, _originalEditor, _modifiedEditor) {\n    this._lineChanges = _lineChanges;\n    this._originalForeignVZ = _originalForeignVZ;\n    this._modifiedForeignVZ = _modifiedForeignVZ;\n    this._originalEditor = _originalEditor;\n    this._modifiedEditor = _modifiedEditor;\n  }\n  static _getViewLineCount(editor, startLineNumber, endLineNumber) {\n    const model = editor.getModel();\n    const viewModel = editor._getViewModel();\n    if (model && viewModel) {\n      const viewRange = getViewRange(model, viewModel, startLineNumber, endLineNumber);\n      return viewRange.endLineNumber - viewRange.startLineNumber + 1;\n    }\n    return endLineNumber - startLineNumber + 1;\n  }\n  getViewZones() {\n    const originalLineHeight = this._originalEditor.getOption(53 /* lineHeight */);\n    const modifiedLineHeight = this._modifiedEditor.getOption(53 /* lineHeight */);\n    const originalHasWrapping = this._originalEditor.getOption(125 /* wrappingInfo */).wrappingColumn !== -1;\n    const modifiedHasWrapping = this._modifiedEditor.getOption(125 /* wrappingInfo */).wrappingColumn !== -1;\n    const hasWrapping = originalHasWrapping || modifiedHasWrapping;\n    const originalModel = this._originalEditor.getModel();\n    const originalCoordinatesConverter = this._originalEditor._getViewModel().coordinatesConverter;\n    const modifiedCoordinatesConverter = this._modifiedEditor._getViewModel().coordinatesConverter;\n    const result = {\n      original: [],\n      modified: []\n    };\n    let lineChangeModifiedLength = 0;\n    let lineChangeOriginalLength = 0;\n    let originalEquivalentLineNumber = 0;\n    let modifiedEquivalentLineNumber = 0;\n    let originalEndEquivalentLineNumber = 0;\n    let modifiedEndEquivalentLineNumber = 0;\n    const sortMyViewZones = (a, b) => {\n      return a.afterLineNumber - b.afterLineNumber;\n    };\n    const addAndCombineIfPossible = (destination, item) => {\n      if (item.domNode === null && destination.length > 0) {\n        const lastItem = destination[destination.length - 1];\n        if (lastItem.afterLineNumber === item.afterLineNumber && lastItem.domNode === null) {\n          lastItem.heightInLines += item.heightInLines;\n          return;\n        }\n      }\n      destination.push(item);\n    };\n    const modifiedForeignVZ = new ForeignViewZonesIterator(this._modifiedForeignVZ);\n    const originalForeignVZ = new ForeignViewZonesIterator(this._originalForeignVZ);\n    let lastOriginalLineNumber = 1;\n    let lastModifiedLineNumber = 1;\n    // In order to include foreign view zones after the last line change, the for loop will iterate once more after the end of the `lineChanges` array\n    for (let i = 0, length = this._lineChanges.length; i <= length; i++) {\n      const lineChange = i < length ? this._lineChanges[i] : null;\n      if (lineChange !== null) {\n        originalEquivalentLineNumber = lineChange.originalStartLineNumber + (lineChange.originalEndLineNumber > 0 ? -1 : 0);\n        modifiedEquivalentLineNumber = lineChange.modifiedStartLineNumber + (lineChange.modifiedEndLineNumber > 0 ? -1 : 0);\n        lineChangeOriginalLength = lineChange.originalEndLineNumber > 0 ? ViewZonesComputer._getViewLineCount(this._originalEditor, lineChange.originalStartLineNumber, lineChange.originalEndLineNumber) : 0;\n        lineChangeModifiedLength = lineChange.modifiedEndLineNumber > 0 ? ViewZonesComputer._getViewLineCount(this._modifiedEditor, lineChange.modifiedStartLineNumber, lineChange.modifiedEndLineNumber) : 0;\n        originalEndEquivalentLineNumber = Math.max(lineChange.originalStartLineNumber, lineChange.originalEndLineNumber);\n        modifiedEndEquivalentLineNumber = Math.max(lineChange.modifiedStartLineNumber, lineChange.modifiedEndLineNumber);\n      } else {\n        // Increase to very large value to get the producing tests of foreign view zones running\n        originalEquivalentLineNumber += 10000000 + lineChangeOriginalLength;\n        modifiedEquivalentLineNumber += 10000000 + lineChangeModifiedLength;\n        originalEndEquivalentLineNumber = originalEquivalentLineNumber;\n        modifiedEndEquivalentLineNumber = modifiedEquivalentLineNumber;\n      }\n      // Each step produces view zones, and after producing them, we try to cancel them out, to avoid empty-empty view zone cases\n      let stepOriginal = [];\n      let stepModified = [];\n      // ---------------------------- PRODUCE VIEW ZONES\n      // [PRODUCE] View zones due to line mapping differences (equal lines but wrapped differently)\n      if (hasWrapping) {\n        let count;\n        if (lineChange) {\n          if (lineChange.originalEndLineNumber > 0) {\n            count = lineChange.originalStartLineNumber - lastOriginalLineNumber;\n          } else {\n            count = lineChange.modifiedStartLineNumber - lastModifiedLineNumber;\n          }\n        } else {\n          count = originalModel.getLineCount() - lastOriginalLineNumber;\n        }\n        for (let i = 0; i < count; i++) {\n          const originalLineNumber = lastOriginalLineNumber + i;\n          const modifiedLineNumber = lastModifiedLineNumber + i;\n          const originalViewLineCount = originalCoordinatesConverter.getModelLineViewLineCount(originalLineNumber);\n          const modifiedViewLineCount = modifiedCoordinatesConverter.getModelLineViewLineCount(modifiedLineNumber);\n          if (originalViewLineCount < modifiedViewLineCount) {\n            stepOriginal.push({\n              afterLineNumber: originalLineNumber,\n              heightInLines: modifiedViewLineCount - originalViewLineCount,\n              domNode: null,\n              marginDomNode: null\n            });\n          } else if (originalViewLineCount > modifiedViewLineCount) {\n            stepModified.push({\n              afterLineNumber: modifiedLineNumber,\n              heightInLines: originalViewLineCount - modifiedViewLineCount,\n              domNode: null,\n              marginDomNode: null\n            });\n          }\n        }\n        if (lineChange) {\n          lastOriginalLineNumber = (lineChange.originalEndLineNumber > 0 ? lineChange.originalEndLineNumber : lineChange.originalStartLineNumber) + 1;\n          lastModifiedLineNumber = (lineChange.modifiedEndLineNumber > 0 ? lineChange.modifiedEndLineNumber : lineChange.modifiedStartLineNumber) + 1;\n        }\n      }\n      // [PRODUCE] View zone(s) in original-side due to foreign view zone(s) in modified-side\n      while (modifiedForeignVZ.current && modifiedForeignVZ.current.afterLineNumber <= modifiedEndEquivalentLineNumber) {\n        let viewZoneLineNumber;\n        if (modifiedForeignVZ.current.afterLineNumber <= modifiedEquivalentLineNumber) {\n          viewZoneLineNumber = originalEquivalentLineNumber - modifiedEquivalentLineNumber + modifiedForeignVZ.current.afterLineNumber;\n        } else {\n          viewZoneLineNumber = originalEndEquivalentLineNumber;\n        }\n        let marginDomNode = null;\n        if (lineChange && lineChange.modifiedStartLineNumber <= modifiedForeignVZ.current.afterLineNumber && modifiedForeignVZ.current.afterLineNumber <= lineChange.modifiedEndLineNumber) {\n          marginDomNode = this._createOriginalMarginDomNodeForModifiedForeignViewZoneInAddedRegion();\n        }\n        stepOriginal.push({\n          afterLineNumber: viewZoneLineNumber,\n          heightInLines: modifiedForeignVZ.current.height / modifiedLineHeight,\n          domNode: null,\n          marginDomNode: marginDomNode\n        });\n        modifiedForeignVZ.advance();\n      }\n      // [PRODUCE] View zone(s) in modified-side due to foreign view zone(s) in original-side\n      while (originalForeignVZ.current && originalForeignVZ.current.afterLineNumber <= originalEndEquivalentLineNumber) {\n        let viewZoneLineNumber;\n        if (originalForeignVZ.current.afterLineNumber <= originalEquivalentLineNumber) {\n          viewZoneLineNumber = modifiedEquivalentLineNumber - originalEquivalentLineNumber + originalForeignVZ.current.afterLineNumber;\n        } else {\n          viewZoneLineNumber = modifiedEndEquivalentLineNumber;\n        }\n        stepModified.push({\n          afterLineNumber: viewZoneLineNumber,\n          heightInLines: originalForeignVZ.current.height / originalLineHeight,\n          domNode: null\n        });\n        originalForeignVZ.advance();\n      }\n      if (lineChange !== null && isChangeOrInsert(lineChange)) {\n        const r = this._produceOriginalFromDiff(lineChange, lineChangeOriginalLength, lineChangeModifiedLength);\n        if (r) {\n          stepOriginal.push(r);\n        }\n      }\n      if (lineChange !== null && isChangeOrDelete(lineChange)) {\n        const r = this._produceModifiedFromDiff(lineChange, lineChangeOriginalLength, lineChangeModifiedLength);\n        if (r) {\n          stepModified.push(r);\n        }\n      }\n      // ---------------------------- END PRODUCE VIEW ZONES\n      // ---------------------------- EMIT MINIMAL VIEW ZONES\n      // [CANCEL & EMIT] Try to cancel view zones out\n      let stepOriginalIndex = 0;\n      let stepModifiedIndex = 0;\n      stepOriginal = stepOriginal.sort(sortMyViewZones);\n      stepModified = stepModified.sort(sortMyViewZones);\n      while (stepOriginalIndex < stepOriginal.length && stepModifiedIndex < stepModified.length) {\n        const original = stepOriginal[stepOriginalIndex];\n        const modified = stepModified[stepModifiedIndex];\n        const originalDelta = original.afterLineNumber - originalEquivalentLineNumber;\n        const modifiedDelta = modified.afterLineNumber - modifiedEquivalentLineNumber;\n        if (originalDelta < modifiedDelta) {\n          addAndCombineIfPossible(result.original, original);\n          stepOriginalIndex++;\n        } else if (modifiedDelta < originalDelta) {\n          addAndCombineIfPossible(result.modified, modified);\n          stepModifiedIndex++;\n        } else if (original.shouldNotShrink) {\n          addAndCombineIfPossible(result.original, original);\n          stepOriginalIndex++;\n        } else if (modified.shouldNotShrink) {\n          addAndCombineIfPossible(result.modified, modified);\n          stepModifiedIndex++;\n        } else {\n          if (original.heightInLines >= modified.heightInLines) {\n            // modified view zone gets removed\n            original.heightInLines -= modified.heightInLines;\n            stepModifiedIndex++;\n          } else {\n            // original view zone gets removed\n            modified.heightInLines -= original.heightInLines;\n            stepOriginalIndex++;\n          }\n        }\n      }\n      // [EMIT] Remaining original view zones\n      while (stepOriginalIndex < stepOriginal.length) {\n        addAndCombineIfPossible(result.original, stepOriginal[stepOriginalIndex]);\n        stepOriginalIndex++;\n      }\n      // [EMIT] Remaining modified view zones\n      while (stepModifiedIndex < stepModified.length) {\n        addAndCombineIfPossible(result.modified, stepModified[stepModifiedIndex]);\n        stepModifiedIndex++;\n      }\n      // ---------------------------- END EMIT MINIMAL VIEW ZONES\n    }\n\n    return {\n      original: ViewZonesComputer._ensureDomNodes(result.original),\n      modified: ViewZonesComputer._ensureDomNodes(result.modified)\n    };\n  }\n  static _ensureDomNodes(zones) {\n    return zones.map(z => {\n      if (!z.domNode) {\n        z.domNode = createFakeLinesDiv();\n      }\n      return z;\n    });\n  }\n}\nfunction createDecoration(startLineNumber, startColumn, endLineNumber, endColumn, options) {\n  return {\n    range: new Range(startLineNumber, startColumn, endLineNumber, endColumn),\n    options: options\n  };\n}\nconst DECORATIONS = {\n  charDelete: ModelDecorationOptions.register({\n    className: 'char-delete'\n  }),\n  charDeleteWholeLine: ModelDecorationOptions.register({\n    className: 'char-delete',\n    isWholeLine: true\n  }),\n  charInsert: ModelDecorationOptions.register({\n    className: 'char-insert'\n  }),\n  charInsertWholeLine: ModelDecorationOptions.register({\n    className: 'char-insert',\n    isWholeLine: true\n  }),\n  lineInsert: ModelDecorationOptions.register({\n    className: 'line-insert',\n    marginClassName: 'line-insert',\n    isWholeLine: true\n  }),\n  lineInsertWithSign: ModelDecorationOptions.register({\n    className: 'line-insert',\n    linesDecorationsClassName: 'insert-sign ' + ThemeIcon.asClassName(diffInsertIcon),\n    marginClassName: 'line-insert',\n    isWholeLine: true\n  }),\n  lineDelete: ModelDecorationOptions.register({\n    className: 'line-delete',\n    marginClassName: 'line-delete',\n    isWholeLine: true\n  }),\n  lineDeleteWithSign: ModelDecorationOptions.register({\n    className: 'line-delete',\n    linesDecorationsClassName: 'delete-sign ' + ThemeIcon.asClassName(diffRemoveIcon),\n    marginClassName: 'line-delete',\n    isWholeLine: true\n  }),\n  lineDeleteMargin: ModelDecorationOptions.register({\n    marginClassName: 'line-delete'\n  })\n};\nclass DiffEditorWidgetSideBySide extends DiffEditorWidgetStyle {\n  constructor(dataSource, enableSplitViewResizing) {\n    super(dataSource);\n    this._disableSash = enableSplitViewResizing === false;\n    this._sashRatio = null;\n    this._sashPosition = null;\n    this._startSashPosition = null;\n    this._sash = this._register(new Sash(this._dataSource.getContainerDomNode(), this, {\n      orientation: 0 /* VERTICAL */\n    }));\n    if (this._disableSash) {\n      this._sash.state = 0 /* Disabled */;\n    }\n\n    this._sash.onDidStart(() => this._onSashDragStart());\n    this._sash.onDidChange(e => this._onSashDrag(e));\n    this._sash.onDidEnd(() => this._onSashDragEnd());\n    this._sash.onDidReset(() => this._onSashReset());\n  }\n  setEnableSplitViewResizing(enableSplitViewResizing) {\n    const newDisableSash = enableSplitViewResizing === false;\n    if (this._disableSash !== newDisableSash) {\n      this._disableSash = newDisableSash;\n      this._sash.state = this._disableSash ? 0 /* Disabled */ : 3 /* Enabled */;\n    }\n  }\n\n  layout() {\n    let sashRatio = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._sashRatio;\n    const w = this._dataSource.getWidth();\n    const contentWidth = w - (this._dataSource.getOptions().renderOverviewRuler ? DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH : 0);\n    let sashPosition = Math.floor((sashRatio || 0.5) * contentWidth);\n    const midPoint = Math.floor(0.5 * contentWidth);\n    sashPosition = this._disableSash ? midPoint : sashPosition || midPoint;\n    if (contentWidth > DiffEditorWidgetSideBySide.MINIMUM_EDITOR_WIDTH * 2) {\n      if (sashPosition < DiffEditorWidgetSideBySide.MINIMUM_EDITOR_WIDTH) {\n        sashPosition = DiffEditorWidgetSideBySide.MINIMUM_EDITOR_WIDTH;\n      }\n      if (sashPosition > contentWidth - DiffEditorWidgetSideBySide.MINIMUM_EDITOR_WIDTH) {\n        sashPosition = contentWidth - DiffEditorWidgetSideBySide.MINIMUM_EDITOR_WIDTH;\n      }\n    } else {\n      sashPosition = midPoint;\n    }\n    if (this._sashPosition !== sashPosition) {\n      this._sashPosition = sashPosition;\n      this._sash.layout();\n    }\n    return this._sashPosition;\n  }\n  _onSashDragStart() {\n    this._startSashPosition = this._sashPosition;\n  }\n  _onSashDrag(e) {\n    const w = this._dataSource.getWidth();\n    const contentWidth = w - (this._dataSource.getOptions().renderOverviewRuler ? DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH : 0);\n    const sashPosition = this.layout((this._startSashPosition + (e.currentX - e.startX)) / contentWidth);\n    this._sashRatio = sashPosition / contentWidth;\n    this._dataSource.relayoutEditors();\n  }\n  _onSashDragEnd() {\n    this._sash.layout();\n  }\n  _onSashReset() {\n    this._sashRatio = 0.5;\n    this._dataSource.relayoutEditors();\n    this._sash.layout();\n  }\n  getVerticalSashTop(sash) {\n    return 0;\n  }\n  getVerticalSashLeft(sash) {\n    return this._sashPosition;\n  }\n  getVerticalSashHeight(sash) {\n    return this._dataSource.getHeight();\n  }\n  _getViewZones(lineChanges, originalForeignVZ, modifiedForeignVZ) {\n    const originalEditor = this._dataSource.getOriginalEditor();\n    const modifiedEditor = this._dataSource.getModifiedEditor();\n    const c = new SideBySideViewZonesComputer(lineChanges, originalForeignVZ, modifiedForeignVZ, originalEditor, modifiedEditor);\n    return c.getViewZones();\n  }\n  _getOriginalEditorDecorations(lineChanges, ignoreTrimWhitespace, renderIndicators) {\n    const originalEditor = this._dataSource.getOriginalEditor();\n    const overviewZoneColor = String(this._removeColor);\n    const result = {\n      decorations: [],\n      overviewZones: []\n    };\n    const originalModel = originalEditor.getModel();\n    const originalViewModel = originalEditor._getViewModel();\n    for (const lineChange of lineChanges) {\n      if (isChangeOrDelete(lineChange)) {\n        result.decorations.push({\n          range: new Range(lineChange.originalStartLineNumber, 1, lineChange.originalEndLineNumber, 1073741824 /* MAX_SAFE_SMALL_INTEGER */),\n          options: renderIndicators ? DECORATIONS.lineDeleteWithSign : DECORATIONS.lineDelete\n        });\n        if (!isChangeOrInsert(lineChange) || !lineChange.charChanges) {\n          result.decorations.push(createDecoration(lineChange.originalStartLineNumber, 1, lineChange.originalEndLineNumber, 1073741824 /* MAX_SAFE_SMALL_INTEGER */, DECORATIONS.charDeleteWholeLine));\n        }\n        const viewRange = getViewRange(originalModel, originalViewModel, lineChange.originalStartLineNumber, lineChange.originalEndLineNumber);\n        result.overviewZones.push(new OverviewRulerZone(viewRange.startLineNumber, viewRange.endLineNumber, overviewZoneColor));\n        if (lineChange.charChanges) {\n          for (const charChange of lineChange.charChanges) {\n            if (isChangeOrDelete(charChange)) {\n              if (ignoreTrimWhitespace) {\n                for (let lineNumber = charChange.originalStartLineNumber; lineNumber <= charChange.originalEndLineNumber; lineNumber++) {\n                  let startColumn;\n                  let endColumn;\n                  if (lineNumber === charChange.originalStartLineNumber) {\n                    startColumn = charChange.originalStartColumn;\n                  } else {\n                    startColumn = originalModel.getLineFirstNonWhitespaceColumn(lineNumber);\n                  }\n                  if (lineNumber === charChange.originalEndLineNumber) {\n                    endColumn = charChange.originalEndColumn;\n                  } else {\n                    endColumn = originalModel.getLineLastNonWhitespaceColumn(lineNumber);\n                  }\n                  result.decorations.push(createDecoration(lineNumber, startColumn, lineNumber, endColumn, DECORATIONS.charDelete));\n                }\n              } else {\n                result.decorations.push(createDecoration(charChange.originalStartLineNumber, charChange.originalStartColumn, charChange.originalEndLineNumber, charChange.originalEndColumn, DECORATIONS.charDelete));\n              }\n            }\n          }\n        }\n      }\n    }\n    return result;\n  }\n  _getModifiedEditorDecorations(lineChanges, ignoreTrimWhitespace, renderIndicators) {\n    const modifiedEditor = this._dataSource.getModifiedEditor();\n    const overviewZoneColor = String(this._insertColor);\n    const result = {\n      decorations: [],\n      overviewZones: []\n    };\n    const modifiedModel = modifiedEditor.getModel();\n    const modifiedViewModel = modifiedEditor._getViewModel();\n    for (const lineChange of lineChanges) {\n      if (isChangeOrInsert(lineChange)) {\n        result.decorations.push({\n          range: new Range(lineChange.modifiedStartLineNumber, 1, lineChange.modifiedEndLineNumber, 1073741824 /* MAX_SAFE_SMALL_INTEGER */),\n          options: renderIndicators ? DECORATIONS.lineInsertWithSign : DECORATIONS.lineInsert\n        });\n        if (!isChangeOrDelete(lineChange) || !lineChange.charChanges) {\n          result.decorations.push(createDecoration(lineChange.modifiedStartLineNumber, 1, lineChange.modifiedEndLineNumber, 1073741824 /* MAX_SAFE_SMALL_INTEGER */, DECORATIONS.charInsertWholeLine));\n        }\n        const viewRange = getViewRange(modifiedModel, modifiedViewModel, lineChange.modifiedStartLineNumber, lineChange.modifiedEndLineNumber);\n        result.overviewZones.push(new OverviewRulerZone(viewRange.startLineNumber, viewRange.endLineNumber, overviewZoneColor));\n        if (lineChange.charChanges) {\n          for (const charChange of lineChange.charChanges) {\n            if (isChangeOrInsert(charChange)) {\n              if (ignoreTrimWhitespace) {\n                for (let lineNumber = charChange.modifiedStartLineNumber; lineNumber <= charChange.modifiedEndLineNumber; lineNumber++) {\n                  let startColumn;\n                  let endColumn;\n                  if (lineNumber === charChange.modifiedStartLineNumber) {\n                    startColumn = charChange.modifiedStartColumn;\n                  } else {\n                    startColumn = modifiedModel.getLineFirstNonWhitespaceColumn(lineNumber);\n                  }\n                  if (lineNumber === charChange.modifiedEndLineNumber) {\n                    endColumn = charChange.modifiedEndColumn;\n                  } else {\n                    endColumn = modifiedModel.getLineLastNonWhitespaceColumn(lineNumber);\n                  }\n                  result.decorations.push(createDecoration(lineNumber, startColumn, lineNumber, endColumn, DECORATIONS.charInsert));\n                }\n              } else {\n                result.decorations.push(createDecoration(charChange.modifiedStartLineNumber, charChange.modifiedStartColumn, charChange.modifiedEndLineNumber, charChange.modifiedEndColumn, DECORATIONS.charInsert));\n              }\n            }\n          }\n        }\n      }\n    }\n    return result;\n  }\n}\nDiffEditorWidgetSideBySide.MINIMUM_EDITOR_WIDTH = 100;\nclass SideBySideViewZonesComputer extends ViewZonesComputer {\n  constructor(lineChanges, originalForeignVZ, modifiedForeignVZ, originalEditor, modifiedEditor) {\n    super(lineChanges, originalForeignVZ, modifiedForeignVZ, originalEditor, modifiedEditor);\n  }\n  _createOriginalMarginDomNodeForModifiedForeignViewZoneInAddedRegion() {\n    return null;\n  }\n  _produceOriginalFromDiff(lineChange, lineChangeOriginalLength, lineChangeModifiedLength) {\n    if (lineChangeModifiedLength > lineChangeOriginalLength) {\n      return {\n        afterLineNumber: Math.max(lineChange.originalStartLineNumber, lineChange.originalEndLineNumber),\n        heightInLines: lineChangeModifiedLength - lineChangeOriginalLength,\n        domNode: null\n      };\n    }\n    return null;\n  }\n  _produceModifiedFromDiff(lineChange, lineChangeOriginalLength, lineChangeModifiedLength) {\n    if (lineChangeOriginalLength > lineChangeModifiedLength) {\n      return {\n        afterLineNumber: Math.max(lineChange.modifiedStartLineNumber, lineChange.modifiedEndLineNumber),\n        heightInLines: lineChangeOriginalLength - lineChangeModifiedLength,\n        domNode: null\n      };\n    }\n    return null;\n  }\n}\nclass DiffEditorWidgetInline extends DiffEditorWidgetStyle {\n  constructor(dataSource, enableSplitViewResizing) {\n    super(dataSource);\n    this._decorationsLeft = dataSource.getOriginalEditor().getLayoutInfo().decorationsLeft;\n    this._register(dataSource.getOriginalEditor().onDidLayoutChange(layoutInfo => {\n      if (this._decorationsLeft !== layoutInfo.decorationsLeft) {\n        this._decorationsLeft = layoutInfo.decorationsLeft;\n        dataSource.relayoutEditors();\n      }\n    }));\n  }\n  setEnableSplitViewResizing(enableSplitViewResizing) {\n    // Nothing to do..\n  }\n  _getViewZones(lineChanges, originalForeignVZ, modifiedForeignVZ, renderIndicators) {\n    const originalEditor = this._dataSource.getOriginalEditor();\n    const modifiedEditor = this._dataSource.getModifiedEditor();\n    const computer = new InlineViewZonesComputer(lineChanges, originalForeignVZ, modifiedForeignVZ, originalEditor, modifiedEditor, renderIndicators);\n    return computer.getViewZones();\n  }\n  _getOriginalEditorDecorations(lineChanges, ignoreTrimWhitespace, renderIndicators) {\n    const overviewZoneColor = String(this._removeColor);\n    const result = {\n      decorations: [],\n      overviewZones: []\n    };\n    const originalEditor = this._dataSource.getOriginalEditor();\n    const originalModel = originalEditor.getModel();\n    const originalViewModel = originalEditor._getViewModel();\n    for (const lineChange of lineChanges) {\n      // Add overview zones in the overview ruler\n      if (isChangeOrDelete(lineChange)) {\n        result.decorations.push({\n          range: new Range(lineChange.originalStartLineNumber, 1, lineChange.originalEndLineNumber, 1073741824 /* MAX_SAFE_SMALL_INTEGER */),\n          options: DECORATIONS.lineDeleteMargin\n        });\n        const viewRange = getViewRange(originalModel, originalViewModel, lineChange.originalStartLineNumber, lineChange.originalEndLineNumber);\n        result.overviewZones.push(new OverviewRulerZone(viewRange.startLineNumber, viewRange.endLineNumber, overviewZoneColor));\n      }\n    }\n    return result;\n  }\n  _getModifiedEditorDecorations(lineChanges, ignoreTrimWhitespace, renderIndicators) {\n    const modifiedEditor = this._dataSource.getModifiedEditor();\n    const overviewZoneColor = String(this._insertColor);\n    const result = {\n      decorations: [],\n      overviewZones: []\n    };\n    const modifiedModel = modifiedEditor.getModel();\n    const modifiedViewModel = modifiedEditor._getViewModel();\n    for (const lineChange of lineChanges) {\n      // Add decorations & overview zones\n      if (isChangeOrInsert(lineChange)) {\n        result.decorations.push({\n          range: new Range(lineChange.modifiedStartLineNumber, 1, lineChange.modifiedEndLineNumber, 1073741824 /* MAX_SAFE_SMALL_INTEGER */),\n          options: renderIndicators ? DECORATIONS.lineInsertWithSign : DECORATIONS.lineInsert\n        });\n        const viewRange = getViewRange(modifiedModel, modifiedViewModel, lineChange.modifiedStartLineNumber, lineChange.modifiedEndLineNumber);\n        result.overviewZones.push(new OverviewRulerZone(viewRange.startLineNumber, viewRange.endLineNumber, overviewZoneColor));\n        if (lineChange.charChanges) {\n          for (const charChange of lineChange.charChanges) {\n            if (isChangeOrInsert(charChange)) {\n              if (ignoreTrimWhitespace) {\n                for (let lineNumber = charChange.modifiedStartLineNumber; lineNumber <= charChange.modifiedEndLineNumber; lineNumber++) {\n                  let startColumn;\n                  let endColumn;\n                  if (lineNumber === charChange.modifiedStartLineNumber) {\n                    startColumn = charChange.modifiedStartColumn;\n                  } else {\n                    startColumn = modifiedModel.getLineFirstNonWhitespaceColumn(lineNumber);\n                  }\n                  if (lineNumber === charChange.modifiedEndLineNumber) {\n                    endColumn = charChange.modifiedEndColumn;\n                  } else {\n                    endColumn = modifiedModel.getLineLastNonWhitespaceColumn(lineNumber);\n                  }\n                  result.decorations.push(createDecoration(lineNumber, startColumn, lineNumber, endColumn, DECORATIONS.charInsert));\n                }\n              } else {\n                result.decorations.push(createDecoration(charChange.modifiedStartLineNumber, charChange.modifiedStartColumn, charChange.modifiedEndLineNumber, charChange.modifiedEndColumn, DECORATIONS.charInsert));\n              }\n            }\n          }\n        } else {\n          result.decorations.push(createDecoration(lineChange.modifiedStartLineNumber, 1, lineChange.modifiedEndLineNumber, 1073741824 /* MAX_SAFE_SMALL_INTEGER */, DECORATIONS.charInsertWholeLine));\n        }\n      }\n    }\n    return result;\n  }\n  layout() {\n    // An editor should not be smaller than 5px\n    return Math.max(5, this._decorationsLeft);\n  }\n}\nclass InlineViewZonesComputer extends ViewZonesComputer {\n  constructor(lineChanges, originalForeignVZ, modifiedForeignVZ, originalEditor, modifiedEditor, renderIndicators) {\n    super(lineChanges, originalForeignVZ, modifiedForeignVZ, originalEditor, modifiedEditor);\n    this._originalModel = originalEditor.getModel();\n    this._renderIndicators = renderIndicators;\n    this._pendingLineChange = [];\n    this._pendingViewZones = [];\n    this._lineBreaksComputer = this._modifiedEditor._getViewModel().createLineBreaksComputer();\n  }\n  getViewZones() {\n    const result = super.getViewZones();\n    this._finalize(result);\n    return result;\n  }\n  _createOriginalMarginDomNodeForModifiedForeignViewZoneInAddedRegion() {\n    const result = document.createElement('div');\n    result.className = 'inline-added-margin-view-zone';\n    return result;\n  }\n  _produceOriginalFromDiff(lineChange, lineChangeOriginalLength, lineChangeModifiedLength) {\n    const marginDomNode = document.createElement('div');\n    marginDomNode.className = 'inline-added-margin-view-zone';\n    return {\n      afterLineNumber: Math.max(lineChange.originalStartLineNumber, lineChange.originalEndLineNumber),\n      heightInLines: lineChangeModifiedLength,\n      domNode: document.createElement('div'),\n      marginDomNode: marginDomNode\n    };\n  }\n  _produceModifiedFromDiff(lineChange, lineChangeOriginalLength, lineChangeModifiedLength) {\n    const domNode = document.createElement('div');\n    domNode.className = \"view-lines line-delete \".concat(MOUSE_CURSOR_TEXT_CSS_CLASS_NAME);\n    const marginDomNode = document.createElement('div');\n    marginDomNode.className = 'inline-deleted-margin-view-zone';\n    const viewZone = {\n      shouldNotShrink: true,\n      afterLineNumber: lineChange.modifiedEndLineNumber === 0 ? lineChange.modifiedStartLineNumber : lineChange.modifiedStartLineNumber - 1,\n      heightInLines: lineChangeOriginalLength,\n      minWidthInPx: 0,\n      domNode: domNode,\n      marginDomNode: marginDomNode,\n      diff: {\n        originalStartLineNumber: lineChange.originalStartLineNumber,\n        originalEndLineNumber: lineChange.originalEndLineNumber,\n        modifiedStartLineNumber: lineChange.modifiedStartLineNumber,\n        modifiedEndLineNumber: lineChange.modifiedEndLineNumber,\n        originalModel: this._originalModel,\n        viewLineCounts: null\n      }\n    };\n    for (let lineNumber = lineChange.originalStartLineNumber; lineNumber <= lineChange.originalEndLineNumber; lineNumber++) {\n      this._lineBreaksComputer.addRequest(this._originalModel.getLineContent(lineNumber), null);\n    }\n    this._pendingLineChange.push(lineChange);\n    this._pendingViewZones.push(viewZone);\n    return viewZone;\n  }\n  _finalize(result) {\n    const modifiedEditorOptions = this._modifiedEditor.getOptions();\n    const tabSize = this._modifiedEditor.getModel().getOptions().tabSize;\n    const fontInfo = modifiedEditorOptions.get(38 /* fontInfo */);\n    const disableMonospaceOptimizations = modifiedEditorOptions.get(26 /* disableMonospaceOptimizations */);\n    const typicalHalfwidthCharacterWidth = fontInfo.typicalHalfwidthCharacterWidth;\n    const scrollBeyondLastColumn = modifiedEditorOptions.get(88 /* scrollBeyondLastColumn */);\n    const mightContainNonBasicASCII = this._originalModel.mightContainNonBasicASCII();\n    const mightContainRTL = this._originalModel.mightContainRTL();\n    const lineHeight = modifiedEditorOptions.get(53 /* lineHeight */);\n    const layoutInfo = modifiedEditorOptions.get(124 /* layoutInfo */);\n    const lineDecorationsWidth = layoutInfo.decorationsWidth;\n    const stopRenderingLineAfter = modifiedEditorOptions.get(100 /* stopRenderingLineAfter */);\n    const renderWhitespace = modifiedEditorOptions.get(83 /* renderWhitespace */);\n    const renderControlCharacters = modifiedEditorOptions.get(77 /* renderControlCharacters */);\n    const fontLigatures = modifiedEditorOptions.get(39 /* fontLigatures */);\n    const lineBreaks = this._lineBreaksComputer.finalize();\n    let lineBreakIndex = 0;\n    for (let i = 0; i < this._pendingLineChange.length; i++) {\n      const lineChange = this._pendingLineChange[i];\n      const viewZone = this._pendingViewZones[i];\n      const domNode = viewZone.domNode;\n      Configuration.applyFontInfoSlow(domNode, fontInfo);\n      const marginDomNode = viewZone.marginDomNode;\n      Configuration.applyFontInfoSlow(marginDomNode, fontInfo);\n      const decorations = [];\n      if (lineChange.charChanges) {\n        for (const charChange of lineChange.charChanges) {\n          if (isChangeOrDelete(charChange)) {\n            decorations.push(new InlineDecoration(new Range(charChange.originalStartLineNumber, charChange.originalStartColumn, charChange.originalEndLineNumber, charChange.originalEndColumn), 'char-delete', 0 /* Regular */));\n          }\n        }\n      }\n\n      const hasCharChanges = decorations.length > 0;\n      const sb = createStringBuilder(10000);\n      let maxCharsPerLine = 0;\n      let renderedLineCount = 0;\n      let viewLineCounts = null;\n      for (let lineNumber = lineChange.originalStartLineNumber; lineNumber <= lineChange.originalEndLineNumber; lineNumber++) {\n        const lineIndex = lineNumber - lineChange.originalStartLineNumber;\n        const lineTokens = this._originalModel.getLineTokens(lineNumber);\n        const lineContent = lineTokens.getLineContent();\n        const lineBreakData = lineBreaks[lineBreakIndex++];\n        const actualDecorations = LineDecoration.filter(decorations, lineNumber, 1, lineContent.length + 1);\n        if (lineBreakData) {\n          let lastBreakOffset = 0;\n          for (const breakOffset of lineBreakData.breakOffsets) {\n            const viewLineTokens = lineTokens.sliceAndInflate(lastBreakOffset, breakOffset, 0);\n            const viewLineContent = lineContent.substring(lastBreakOffset, breakOffset);\n            maxCharsPerLine = Math.max(maxCharsPerLine, this._renderOriginalLine(renderedLineCount++, viewLineContent, viewLineTokens, LineDecoration.extractWrapped(actualDecorations, lastBreakOffset, breakOffset), hasCharChanges, mightContainNonBasicASCII, mightContainRTL, fontInfo, disableMonospaceOptimizations, lineHeight, lineDecorationsWidth, stopRenderingLineAfter, renderWhitespace, renderControlCharacters, fontLigatures, tabSize, sb, marginDomNode));\n            lastBreakOffset = breakOffset;\n          }\n          if (!viewLineCounts) {\n            viewLineCounts = [];\n          }\n          // make sure all lines before this one have an entry in `viewLineCounts`\n          while (viewLineCounts.length < lineIndex) {\n            viewLineCounts[viewLineCounts.length] = 1;\n          }\n          viewLineCounts[lineIndex] = lineBreakData.breakOffsets.length;\n          viewZone.heightInLines += lineBreakData.breakOffsets.length - 1;\n          const marginDomNode2 = document.createElement('div');\n          marginDomNode2.className = 'line-delete';\n          result.original.push({\n            afterLineNumber: lineNumber,\n            afterColumn: 0,\n            heightInLines: lineBreakData.breakOffsets.length - 1,\n            domNode: createFakeLinesDiv(),\n            marginDomNode: marginDomNode2\n          });\n        } else {\n          maxCharsPerLine = Math.max(maxCharsPerLine, this._renderOriginalLine(renderedLineCount++, lineContent, lineTokens, actualDecorations, hasCharChanges, mightContainNonBasicASCII, mightContainRTL, fontInfo, disableMonospaceOptimizations, lineHeight, lineDecorationsWidth, stopRenderingLineAfter, renderWhitespace, renderControlCharacters, fontLigatures, tabSize, sb, marginDomNode));\n        }\n      }\n      maxCharsPerLine += scrollBeyondLastColumn;\n      const html = sb.build();\n      const trustedhtml = ttPolicy ? ttPolicy.createHTML(html) : html;\n      domNode.innerHTML = trustedhtml;\n      viewZone.minWidthInPx = maxCharsPerLine * typicalHalfwidthCharacterWidth;\n      if (viewLineCounts) {\n        // make sure all lines have an entry in `viewLineCounts`\n        const cnt = lineChange.originalEndLineNumber - lineChange.originalStartLineNumber;\n        while (viewLineCounts.length <= cnt) {\n          viewLineCounts[viewLineCounts.length] = 1;\n        }\n      }\n      viewZone.diff.viewLineCounts = viewLineCounts;\n    }\n    result.original.sort((a, b) => {\n      return a.afterLineNumber - b.afterLineNumber;\n    });\n  }\n  _renderOriginalLine(renderedLineCount, lineContent, lineTokens, decorations, hasCharChanges, mightContainNonBasicASCII, mightContainRTL, fontInfo, disableMonospaceOptimizations, lineHeight, lineDecorationsWidth, stopRenderingLineAfter, renderWhitespace, renderControlCharacters, fontLigatures, tabSize, sb, marginDomNode) {\n    sb.appendASCIIString('<div class=\"view-line');\n    if (!hasCharChanges) {\n      // No char changes\n      sb.appendASCIIString(' char-delete');\n    }\n    sb.appendASCIIString('\" style=\"top:');\n    sb.appendASCIIString(String(renderedLineCount * lineHeight));\n    sb.appendASCIIString('px;width:1000000px;\">');\n    const isBasicASCII = ViewLineRenderingData.isBasicASCII(lineContent, mightContainNonBasicASCII);\n    const containsRTL = ViewLineRenderingData.containsRTL(lineContent, isBasicASCII, mightContainRTL);\n    const output = renderViewLine(new RenderLineInput(fontInfo.isMonospace && !disableMonospaceOptimizations, fontInfo.canUseHalfwidthRightwardsArrow, lineContent, false, isBasicASCII, containsRTL, 0, lineTokens, decorations, tabSize, 0, fontInfo.spaceWidth, fontInfo.middotWidth, fontInfo.wsmiddotWidth, stopRenderingLineAfter, renderWhitespace, renderControlCharacters, fontLigatures !== EditorFontLigatures.OFF, null // Send no selections, original line cannot be selected\n    ), sb);\n    sb.appendASCIIString('</div>');\n    if (this._renderIndicators) {\n      const marginElement = document.createElement('div');\n      marginElement.className = \"delete-sign \".concat(ThemeIcon.asClassName(diffRemoveIcon));\n      marginElement.setAttribute('style', \"position:absolute;top:\".concat(renderedLineCount * lineHeight, \"px;width:\").concat(lineDecorationsWidth, \"px;height:\").concat(lineHeight, \"px;right:0;\"));\n      marginDomNode.appendChild(marginElement);\n    }\n    const absoluteOffsets = output.characterMapping.getAbsoluteOffsets();\n    return absoluteOffsets.length > 0 ? absoluteOffsets[absoluteOffsets.length - 1] : 0;\n  }\n}\nfunction validateDiffWordWrap(value, defaultValue) {\n  return validateStringSetOption(value, defaultValue, ['off', 'on', 'inherit']);\n}\nfunction isChangeOrInsert(lineChange) {\n  return lineChange.modifiedEndLineNumber > 0;\n}\nfunction isChangeOrDelete(lineChange) {\n  return lineChange.originalEndLineNumber > 0;\n}\nfunction createFakeLinesDiv() {\n  const r = document.createElement('div');\n  r.className = 'diagonal-fill';\n  return r;\n}\nfunction getViewRange(model, viewModel, startLineNumber, endLineNumber) {\n  const lineCount = model.getLineCount();\n  startLineNumber = Math.min(lineCount, Math.max(1, startLineNumber));\n  endLineNumber = Math.min(lineCount, Math.max(1, endLineNumber));\n  return viewModel.coordinatesConverter.convertModelRangeToViewRange(new Range(startLineNumber, model.getLineMinColumn(startLineNumber), endLineNumber, model.getLineMaxColumn(endLineNumber)));\n}\nregisterThemingParticipant((theme, collector) => {\n  const added = theme.getColor(diffInserted);\n  if (added) {\n    collector.addRule(\".monaco-editor .line-insert, .monaco-editor .char-insert { background-color: \".concat(added, \"; }\"));\n    collector.addRule(\".monaco-diff-editor .line-insert, .monaco-diff-editor .char-insert { background-color: \".concat(added, \"; }\"));\n    collector.addRule(\".monaco-editor .inline-added-margin-view-zone { background-color: \".concat(added, \"; }\"));\n  }\n  const removed = theme.getColor(diffRemoved);\n  if (removed) {\n    collector.addRule(\".monaco-editor .line-delete, .monaco-editor .char-delete { background-color: \".concat(removed, \"; }\"));\n    collector.addRule(\".monaco-diff-editor .line-delete, .monaco-diff-editor .char-delete { background-color: \".concat(removed, \"; }\"));\n    collector.addRule(\".monaco-editor .inline-deleted-margin-view-zone { background-color: \".concat(removed, \"; }\"));\n  }\n  const addedOutline = theme.getColor(diffInsertedOutline);\n  if (addedOutline) {\n    collector.addRule(\".monaco-editor .line-insert, .monaco-editor .char-insert { border: 1px \".concat(theme.type === 'hc' ? 'dashed' : 'solid', \" \").concat(addedOutline, \"; }\"));\n  }\n  const removedOutline = theme.getColor(diffRemovedOutline);\n  if (removedOutline) {\n    collector.addRule(\".monaco-editor .line-delete, .monaco-editor .char-delete { border: 1px \".concat(theme.type === 'hc' ? 'dashed' : 'solid', \" \").concat(removedOutline, \"; }\"));\n  }\n  const shadow = theme.getColor(scrollbarShadow);\n  if (shadow) {\n    collector.addRule(\".monaco-diff-editor.side-by-side .editor.modified { box-shadow: -6px 0 5px -5px \".concat(shadow, \"; }\"));\n  }\n  const border = theme.getColor(diffBorder);\n  if (border) {\n    collector.addRule(\".monaco-diff-editor.side-by-side .editor.modified { border-left: 1px solid \".concat(border, \"; }\"));\n  }\n  const scrollbarSliderBackgroundColor = theme.getColor(scrollbarSliderBackground);\n  if (scrollbarSliderBackgroundColor) {\n    collector.addRule(\"\\n\\t\\t\\t.monaco-diff-editor .diffViewport {\\n\\t\\t\\t\\tbackground: \".concat(scrollbarSliderBackgroundColor, \";\\n\\t\\t\\t}\\n\\t\\t\"));\n  }\n  const scrollbarSliderHoverBackgroundColor = theme.getColor(scrollbarSliderHoverBackground);\n  if (scrollbarSliderHoverBackgroundColor) {\n    collector.addRule(\"\\n\\t\\t\\t.monaco-diff-editor .diffViewport:hover {\\n\\t\\t\\t\\tbackground: \".concat(scrollbarSliderHoverBackgroundColor, \";\\n\\t\\t\\t}\\n\\t\\t\"));\n  }\n  const scrollbarSliderActiveBackgroundColor = theme.getColor(scrollbarSliderActiveBackground);\n  if (scrollbarSliderActiveBackgroundColor) {\n    collector.addRule(\"\\n\\t\\t\\t.monaco-diff-editor .diffViewport:active {\\n\\t\\t\\t\\tbackground: \".concat(scrollbarSliderActiveBackgroundColor, \";\\n\\t\\t\\t}\\n\\t\\t\"));\n  }\n  const diffDiagonalFillColor = theme.getColor(diffDiagonalFill);\n  collector.addRule(\"\\n\\t.monaco-editor .diagonal-fill {\\n\\t\\tbackground-image: linear-gradient(\\n\\t\\t\\t-45deg,\\n\\t\\t\\t\".concat(diffDiagonalFillColor, \" 12.5%,\\n\\t\\t\\t#0000 12.5%, #0000 50%,\\n\\t\\t\\t\").concat(diffDiagonalFillColor, \" 50%, \").concat(diffDiagonalFillColor, \" 62.5%,\\n\\t\\t\\t#0000 62.5%, #0000 100%\\n\\t\\t);\\n\\t\\tbackground-size: 8px 8px;\\n\\t}\\n\\t\"));\n});","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","_a","nls","dom","createFastDomNode","Sash","RunOnceScheduler","Emitter","Disposable","Configuration","StableEditorScrollState","ICodeEditorService","CodeEditorWidget","DiffReview","EditorOptions","EditorFontLigatures","stringSet","validateStringSetOption","boolean","validateBooleanOption","Range","createStringBuilder","editorCommon","ModelDecorationOptions","IEditorWorkerService","OverviewRulerZone","LineDecoration","RenderLineInput","renderViewLine","InlineDecoration","ViewLineRenderingData","IContextKeyService","IInstantiationService","ServiceCollection","INotificationService","defaultInsertColor","defaultRemoveColor","diffBorder","diffInserted","diffInsertedOutline","diffRemoved","diffRemovedOutline","scrollbarShadow","scrollbarSliderBackground","scrollbarSliderHoverBackground","scrollbarSliderActiveBackground","diffDiagonalFill","IThemeService","getThemeTypeSelector","registerThemingParticipant","ThemeIcon","IContextMenuService","InlineDiffMargin","IClipboardService","EditorExtensionsRegistry","onUnexpectedError","IEditorProgressService","ElementSizeObserver","Codicon","MOUSE_CURSOR_TEXT_CSS_CLASS_NAME","registerIcon","VisualEditorState","constructor","_contextMenuService","_clipboardService","_zones","_inlineDiffMargins","_zonesMap","_decorations","getForeignViewZones","allViewZones","filter","z","String","id","clean","editor","changeViewZones","viewChangeAccessor","zoneId","removeZone","deltaDecorations","apply","overviewRuler","newDecorations","restoreScrollState","scrollState","capture","inlineDiffMargin","dispose","zones","viewZone","suppressMouseDown","addZone","push","diff","marginDomNode","restore","decorations","setZones","overviewZones","DIFF_EDITOR_ID","diffInsertIcon","add","localize","diffRemoveIcon","remove","ttPolicy","window","trustedTypes","createPolicy","createHTML","value","DiffEditorWidget","domElement","options","codeEditorWidgetOptions","clipboardService","editorWorkerService","contextKeyService","instantiationService","codeEditorService","themeService","notificationService","contextMenuService","_editorProgressService","_onDidDispose","_register","onDidDispose","event","_onDidUpdateDiff","onDidUpdateDiff","_onDidContentSizeChange","_lastOriginalWarning","_lastModifiedWarning","_editorWorkerService","_codeEditorService","_contextKeyService","createScoped","createKey","_themeService","_notificationService","_id","_state","_updatingDiffProgress","_domElement","_renderSideBySide","renderSideBySide","_maxComputationTime","maxComputationTime","_ignoreTrimWhitespace","ignoreTrimWhitespace","_renderIndicators","renderIndicators","_originalIsEditable","originalEditable","_diffCodeLens","diffCodeLens","_diffWordWrap","validateDiffWordWrap","diffWordWrap","isInEmbeddedEditor","_renderOverviewRuler","renderOverviewRuler","Boolean","_updateDecorationsRunner","_updateDecorations","_containerDomElement","document","createElement","className","_getClassName","getColorTheme","style","position","height","appendChild","_overviewViewportDomElement","setClassName","setPosition","_overviewDomElement","domNode","addStandardDisposableListener","e","_modifiedEditor","delegateVerticalScrollbarMouseDown","_originalDomNode","_modifiedDomNode","_beginUpdateDecorationsTimeout","_currentlyChangingViewZones","_diffComputationToken","_originalEditorState","_modifiedEditorState","_isVisible","_isHandlingScrollEvent","_elementSizeObserver","dimension","_onDidContainerSizeChanged","automaticLayout","startObserving","_diffComputationResult","leftContextKeyService","leftServices","set","leftScopedInstantiationService","createChild","rightContextKeyService","rightServices","rightScopedInstantiationService","_originalEditor","_createLeftHandSideEditor","originalEditor","_createRightHandSideEditor","modifiedEditor","_originalOverviewRuler","_modifiedOverviewRuler","_reviewPane","shadow","actionBarContainer","_enableSplitViewResizing","enableSplitViewResizing","_setStrategy","DiffEditorWidgetSideBySide","_createDataSource","DiffEditorWidgetInline","onDidColorThemeChange","t","_strategy","applyColors","schedule","contributions","getDiffEditorContributions","createInstance","ctor","err","addDiffEditor","_setState","newState","done","show","diffReviewNext","next","diffReviewPrev","prev","theme","result","type","_recreateOverviewRulers","removeChild","getDomNode","hasModel","createOverviewRuler","_layoutOverviewRulers","_createInnerEditor","_adjustOptionsForLeftHandSide","onDidScrollChange","scrollTopChanged","scrollLeftChanged","scrollHeightChanged","setScrollPosition","scrollLeft","scrollTop","_layoutOverviewViewport","onDidChangeViewZones","_onViewZonesChanged","onDidChangeConfiguration","getModel","hasChanged","cancel","onDidChangeModelContent","_beginUpdateDecorationsSoon","isInDiffLeftEditorKey","undefined","onDidFocusEditorWidget","onDidBlurEditorWidget","onDidContentSizeChange","width","getContentWidth","ONE_OVERVIEW_WIDTH","Math","max","getContentHeight","fire","contentHeight","contentWidth","contentHeightChanged","contentWidthChanged","_adjustOptionsForRightHandSide","onDidChangeModelOptions","tabSize","isInDiffRightEditorKey","container","editorWidgetOptions","removeDiffEditor","clearTimeout","_cleanViewZonesAndDecorations","getId","getEditorType","EditorType","IDiffEditor","getLineChanges","changes","getOriginalEditor","getModifiedEditor","updateOptions","newOptions","renderSideBySideChanged","beginUpdateDecorations","_beginUpdateDecorations","setEnableSplitViewResizing","original","modified","setModel","model","Error","setScrollTop","getVisibleColumnFromPosition","getPosition","revealLine","lineNumber","scrollType","revealLineInCenter","revealLineInCenterIfOutsideViewport","revealLineNearTop","revealPosition","revealPositionInCenter","revealPositionInCenterIfOutsideViewport","revealPositionNearTop","getSelection","getSelections","setSelection","something","setSelections","ranges","revealLines","startLineNumber","endLineNumber","revealLinesInCenter","revealLinesInCenterIfOutsideViewport","revealLinesNearTop","revealRange","range","revealVerticalInCenter","revealHorizontal","revealRangeInCenter","revealRangeInCenterIfOutsideViewport","revealRangeNearTop","revealRangeNearTopIfOutsideViewport","revealRangeAtTop","getSupportedActions","saveViewState","originalViewState","modifiedViewState","restoreViewState","s","diffEditorState","layout","observe","focus","hasTextFocus","trigger","source","handlerId","payload","changeDecorations","callback","_doLayout","_getReviewHeight","isVisible","getHeight","reviewHeight","freeSpace","ENTIRE_DIFF_OVERVIEW_WIDTH","layoutInfo","getLayoutInfo","setLayout","top","right","setTimeout","UPDATE_DIFF_DECORATIONS_DELAY","_equals","a","b","toString","currentOriginalModel","currentModifiedModel","currentToken","canComputeDiff","uri","warn","computeDiff","then","error","lineChanges","foreignOriginal","getWhitespaces","foreignModified","diffDecorations","getEditorsDiffDecorations","_adjustOptionsForSubEditor","clonedOptions","assign","inDiffEditor","scrollbar","vertical","folding","codeLens","fixedOverflowWidgets","minimap","enabled","wordWrapOverride1","readOnly","extraEditorClassName","revealHorizontalRightPadding","defaultValue","verticalHasArrows","doLayout","getWidth","splitPoint","left","setWidth","setHeight","_computeOverviewViewport","setTop","getScrollTop","scrollHeight","getScrollHeight","computedAvailableSize","computedRepresentableSize","computedRatio","computedSliderSize","floor","computedSliderPosition","getOptions","getContainerDomNode","relayoutEditors","newStrategy","_getLineChangeAtOrBeforeLineNumber","startLineNumberExtractor","min","mid","midStart","midEnd","_getEquivalentLineForOriginalLineNumber","lineChange","originalStartLineNumber","originalEquivalentLineNumber","originalEndLineNumber","modifiedEquivalentLineNumber","modifiedStartLineNumber","modifiedEndLineNumber","lineChangeOriginalLength","lineChangeModifiedLength","delta","_getEquivalentLineForModifiedLineNumber","getDiffLineInformationForOriginal","equivalentLineNumber","getDiffLineInformationForModified","DiffEditorWidgetStyle","dataSource","_dataSource","_insertColor","_removeColor","newInsertColor","getColor","transparent","newRemoveColor","hasChanges","equals","originalWhitespaces","modifiedWhitespaces","sort","afterLineNumber","_getViewZones","originalDecorations","_getOriginalEditorDecorations","modifiedDecorations","_getModifiedEditorDecorations","ForeignViewZonesIterator","_source","_index","current","advance","ViewZonesComputer","_lineChanges","_originalForeignVZ","_modifiedForeignVZ","_getViewLineCount","viewModel","_getViewModel","viewRange","getViewRange","getViewZones","originalLineHeight","getOption","modifiedLineHeight","originalHasWrapping","wrappingColumn","modifiedHasWrapping","hasWrapping","originalModel","originalCoordinatesConverter","coordinatesConverter","modifiedCoordinatesConverter","originalEndEquivalentLineNumber","modifiedEndEquivalentLineNumber","sortMyViewZones","addAndCombineIfPossible","destination","item","lastItem","heightInLines","modifiedForeignVZ","originalForeignVZ","lastOriginalLineNumber","lastModifiedLineNumber","stepOriginal","stepModified","count","getLineCount","originalLineNumber","modifiedLineNumber","originalViewLineCount","getModelLineViewLineCount","modifiedViewLineCount","viewZoneLineNumber","_createOriginalMarginDomNodeForModifiedForeignViewZoneInAddedRegion","isChangeOrInsert","_produceOriginalFromDiff","isChangeOrDelete","_produceModifiedFromDiff","stepOriginalIndex","stepModifiedIndex","originalDelta","modifiedDelta","shouldNotShrink","_ensureDomNodes","map","createFakeLinesDiv","createDecoration","startColumn","endColumn","DECORATIONS","charDelete","register","charDeleteWholeLine","isWholeLine","charInsert","charInsertWholeLine","lineInsert","marginClassName","lineInsertWithSign","linesDecorationsClassName","asClassName","lineDelete","lineDeleteWithSign","lineDeleteMargin","_disableSash","_sashRatio","_sashPosition","_startSashPosition","_sash","orientation","state","onDidStart","_onSashDragStart","onDidChange","_onSashDrag","onDidEnd","_onSashDragEnd","onDidReset","_onSashReset","newDisableSash","sashRatio","w","sashPosition","midPoint","MINIMUM_EDITOR_WIDTH","currentX","startX","getVerticalSashTop","sash","getVerticalSashLeft","getVerticalSashHeight","SideBySideViewZonesComputer","overviewZoneColor","originalViewModel","charChanges","charChange","originalStartColumn","getLineFirstNonWhitespaceColumn","originalEndColumn","getLineLastNonWhitespaceColumn","modifiedModel","modifiedViewModel","modifiedStartColumn","modifiedEndColumn","_decorationsLeft","decorationsLeft","onDidLayoutChange","computer","InlineViewZonesComputer","_originalModel","_pendingLineChange","_pendingViewZones","_lineBreaksComputer","createLineBreaksComputer","_finalize","concat","minWidthInPx","viewLineCounts","addRequest","getLineContent","modifiedEditorOptions","fontInfo","get","disableMonospaceOptimizations","typicalHalfwidthCharacterWidth","scrollBeyondLastColumn","mightContainNonBasicASCII","mightContainRTL","lineHeight","lineDecorationsWidth","decorationsWidth","stopRenderingLineAfter","renderWhitespace","renderControlCharacters","fontLigatures","lineBreaks","finalize","lineBreakIndex","applyFontInfoSlow","hasCharChanges","sb","maxCharsPerLine","renderedLineCount","lineIndex","lineTokens","getLineTokens","lineContent","lineBreakData","actualDecorations","lastBreakOffset","breakOffset","breakOffsets","viewLineTokens","sliceAndInflate","viewLineContent","substring","_renderOriginalLine","extractWrapped","marginDomNode2","afterColumn","html","build","trustedhtml","innerHTML","cnt","appendASCIIString","isBasicASCII","containsRTL","output","isMonospace","canUseHalfwidthRightwardsArrow","spaceWidth","middotWidth","wsmiddotWidth","OFF","marginElement","setAttribute","absoluteOffsets","characterMapping","getAbsoluteOffsets","lineCount","convertModelRangeToViewRange","getLineMinColumn","getLineMaxColumn","collector","added","addRule","removed","addedOutline","removedOutline","border","scrollbarSliderBackgroundColor","scrollbarSliderHoverBackgroundColor","scrollbarSliderActiveBackgroundColor","diffDiagonalFillColor"],"sources":["C:/Users/Administrator/Desktop/sqllineage-master/sqllineagejs/node_modules/monaco-editor/esm/vs/editor/browser/widget/diffEditorWidget.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar _a;\r\nimport './media/diffEditor.css';\r\nimport * as nls from '../../../nls.js';\r\nimport * as dom from '../../../base/browser/dom.js';\r\nimport { createFastDomNode } from '../../../base/browser/fastDomNode.js';\r\nimport { Sash } from '../../../base/browser/ui/sash/sash.js';\r\nimport { RunOnceScheduler } from '../../../base/common/async.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { Disposable } from '../../../base/common/lifecycle.js';\r\nimport { Configuration } from '../config/configuration.js';\r\nimport { StableEditorScrollState } from '../core/editorState.js';\r\nimport { ICodeEditorService } from '../services/codeEditorService.js';\r\nimport { CodeEditorWidget } from './codeEditorWidget.js';\r\nimport { DiffReview } from './diffReview.js';\r\nimport { EditorOptions, EditorFontLigatures, stringSet as validateStringSetOption, boolean as validateBooleanOption } from '../../common/config/editorOptions.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { createStringBuilder } from '../../common/core/stringBuilder.js';\r\nimport * as editorCommon from '../../common/editorCommon.js';\r\nimport { ModelDecorationOptions } from '../../common/model/textModel.js';\r\nimport { IEditorWorkerService } from '../../common/services/editorWorkerService.js';\r\nimport { OverviewRulerZone } from '../../common/view/overviewZoneManager.js';\r\nimport { LineDecoration } from '../../common/viewLayout/lineDecorations.js';\r\nimport { RenderLineInput, renderViewLine } from '../../common/viewLayout/viewLineRenderer.js';\r\nimport { InlineDecoration, ViewLineRenderingData } from '../../common/viewModel/viewModel.js';\r\nimport { IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\r\nimport { ServiceCollection } from '../../../platform/instantiation/common/serviceCollection.js';\r\nimport { INotificationService } from '../../../platform/notification/common/notification.js';\r\nimport { defaultInsertColor, defaultRemoveColor, diffBorder, diffInserted, diffInsertedOutline, diffRemoved, diffRemovedOutline, scrollbarShadow, scrollbarSliderBackground, scrollbarSliderHoverBackground, scrollbarSliderActiveBackground, diffDiagonalFill } from '../../../platform/theme/common/colorRegistry.js';\r\nimport { IThemeService, getThemeTypeSelector, registerThemingParticipant, ThemeIcon } from '../../../platform/theme/common/themeService.js';\r\nimport { IContextMenuService } from '../../../platform/contextview/browser/contextView.js';\r\nimport { InlineDiffMargin } from './inlineDiffMargin.js';\r\nimport { IClipboardService } from '../../../platform/clipboard/common/clipboardService.js';\r\nimport { EditorExtensionsRegistry } from '../editorExtensions.js';\r\nimport { onUnexpectedError } from '../../../base/common/errors.js';\r\nimport { IEditorProgressService } from '../../../platform/progress/common/progress.js';\r\nimport { ElementSizeObserver } from '../config/elementSizeObserver.js';\r\nimport { Codicon } from '../../../base/common/codicons.js';\r\nimport { MOUSE_CURSOR_TEXT_CSS_CLASS_NAME } from '../../../base/browser/ui/mouseCursor/mouseCursor.js';\r\nimport { registerIcon } from '../../../platform/theme/common/iconRegistry.js';\r\nclass VisualEditorState {\r\n    constructor(_contextMenuService, _clipboardService) {\r\n        this._contextMenuService = _contextMenuService;\r\n        this._clipboardService = _clipboardService;\r\n        this._zones = [];\r\n        this._inlineDiffMargins = [];\r\n        this._zonesMap = {};\r\n        this._decorations = [];\r\n    }\r\n    getForeignViewZones(allViewZones) {\r\n        return allViewZones.filter((z) => !this._zonesMap[String(z.id)]);\r\n    }\r\n    clean(editor) {\r\n        // (1) View zones\r\n        if (this._zones.length > 0) {\r\n            editor.changeViewZones((viewChangeAccessor) => {\r\n                for (const zoneId of this._zones) {\r\n                    viewChangeAccessor.removeZone(zoneId);\r\n                }\r\n            });\r\n        }\r\n        this._zones = [];\r\n        this._zonesMap = {};\r\n        // (2) Model decorations\r\n        this._decorations = editor.deltaDecorations(this._decorations, []);\r\n    }\r\n    apply(editor, overviewRuler, newDecorations, restoreScrollState) {\r\n        const scrollState = restoreScrollState ? StableEditorScrollState.capture(editor) : null;\r\n        // view zones\r\n        editor.changeViewZones((viewChangeAccessor) => {\r\n            for (const zoneId of this._zones) {\r\n                viewChangeAccessor.removeZone(zoneId);\r\n            }\r\n            for (const inlineDiffMargin of this._inlineDiffMargins) {\r\n                inlineDiffMargin.dispose();\r\n            }\r\n            this._zones = [];\r\n            this._zonesMap = {};\r\n            this._inlineDiffMargins = [];\r\n            for (let i = 0, length = newDecorations.zones.length; i < length; i++) {\r\n                const viewZone = newDecorations.zones[i];\r\n                viewZone.suppressMouseDown = true;\r\n                const zoneId = viewChangeAccessor.addZone(viewZone);\r\n                this._zones.push(zoneId);\r\n                this._zonesMap[String(zoneId)] = true;\r\n                if (newDecorations.zones[i].diff && viewZone.marginDomNode) {\r\n                    viewZone.suppressMouseDown = false;\r\n                    this._inlineDiffMargins.push(new InlineDiffMargin(zoneId, viewZone.marginDomNode, editor, newDecorations.zones[i].diff, this._contextMenuService, this._clipboardService));\r\n                }\r\n            }\r\n        });\r\n        if (scrollState) {\r\n            scrollState.restore(editor);\r\n        }\r\n        // decorations\r\n        this._decorations = editor.deltaDecorations(this._decorations, newDecorations.decorations);\r\n        // overview ruler\r\n        if (overviewRuler) {\r\n            overviewRuler.setZones(newDecorations.overviewZones);\r\n        }\r\n    }\r\n}\r\nlet DIFF_EDITOR_ID = 0;\r\nconst diffInsertIcon = registerIcon('diff-insert', Codicon.add, nls.localize('diffInsertIcon', 'Line decoration for inserts in the diff editor.'));\r\nconst diffRemoveIcon = registerIcon('diff-remove', Codicon.remove, nls.localize('diffRemoveIcon', 'Line decoration for removals in the diff editor.'));\r\nconst ttPolicy = (_a = window.trustedTypes) === null || _a === void 0 ? void 0 : _a.createPolicy('diffEditorWidget', { createHTML: value => value });\r\nlet DiffEditorWidget = class DiffEditorWidget extends Disposable {\r\n    constructor(domElement, options, codeEditorWidgetOptions, clipboardService, editorWorkerService, contextKeyService, instantiationService, codeEditorService, themeService, notificationService, contextMenuService, _editorProgressService) {\r\n        super();\r\n        this._editorProgressService = _editorProgressService;\r\n        this._onDidDispose = this._register(new Emitter());\r\n        this.onDidDispose = this._onDidDispose.event;\r\n        this._onDidUpdateDiff = this._register(new Emitter());\r\n        this.onDidUpdateDiff = this._onDidUpdateDiff.event;\r\n        this._onDidContentSizeChange = this._register(new Emitter());\r\n        this._lastOriginalWarning = null;\r\n        this._lastModifiedWarning = null;\r\n        this._editorWorkerService = editorWorkerService;\r\n        this._codeEditorService = codeEditorService;\r\n        this._contextKeyService = this._register(contextKeyService.createScoped(domElement));\r\n        this._contextKeyService.createKey('isInDiffEditor', true);\r\n        this._themeService = themeService;\r\n        this._notificationService = notificationService;\r\n        this._id = (++DIFF_EDITOR_ID);\r\n        this._state = 0 /* Idle */;\r\n        this._updatingDiffProgress = null;\r\n        this._domElement = domElement;\r\n        options = options || {};\r\n        // renderSideBySide\r\n        this._renderSideBySide = true;\r\n        if (typeof options.renderSideBySide !== 'undefined') {\r\n            this._renderSideBySide = options.renderSideBySide;\r\n        }\r\n        // maxComputationTime\r\n        this._maxComputationTime = 5000;\r\n        if (typeof options.maxComputationTime !== 'undefined') {\r\n            this._maxComputationTime = options.maxComputationTime;\r\n        }\r\n        // ignoreTrimWhitespace\r\n        this._ignoreTrimWhitespace = true;\r\n        if (typeof options.ignoreTrimWhitespace !== 'undefined') {\r\n            this._ignoreTrimWhitespace = options.ignoreTrimWhitespace;\r\n        }\r\n        // renderIndicators\r\n        this._renderIndicators = true;\r\n        if (typeof options.renderIndicators !== 'undefined') {\r\n            this._renderIndicators = options.renderIndicators;\r\n        }\r\n        this._originalIsEditable = validateBooleanOption(options.originalEditable, false);\r\n        this._diffCodeLens = validateBooleanOption(options.diffCodeLens, false);\r\n        this._diffWordWrap = validateDiffWordWrap(options.diffWordWrap, 'inherit');\r\n        if (typeof options.isInEmbeddedEditor !== 'undefined') {\r\n            this._contextKeyService.createKey('isInEmbeddedDiffEditor', options.isInEmbeddedEditor);\r\n        }\r\n        else {\r\n            this._contextKeyService.createKey('isInEmbeddedDiffEditor', false);\r\n        }\r\n        this._renderOverviewRuler = true;\r\n        if (typeof options.renderOverviewRuler !== 'undefined') {\r\n            this._renderOverviewRuler = Boolean(options.renderOverviewRuler);\r\n        }\r\n        this._updateDecorationsRunner = this._register(new RunOnceScheduler(() => this._updateDecorations(), 0));\r\n        this._containerDomElement = document.createElement('div');\r\n        this._containerDomElement.className = DiffEditorWidget._getClassName(this._themeService.getColorTheme(), this._renderSideBySide);\r\n        this._containerDomElement.style.position = 'relative';\r\n        this._containerDomElement.style.height = '100%';\r\n        this._domElement.appendChild(this._containerDomElement);\r\n        this._overviewViewportDomElement = createFastDomNode(document.createElement('div'));\r\n        this._overviewViewportDomElement.setClassName('diffViewport');\r\n        this._overviewViewportDomElement.setPosition('absolute');\r\n        this._overviewDomElement = document.createElement('div');\r\n        this._overviewDomElement.className = 'diffOverview';\r\n        this._overviewDomElement.style.position = 'absolute';\r\n        this._overviewDomElement.appendChild(this._overviewViewportDomElement.domNode);\r\n        this._register(dom.addStandardDisposableListener(this._overviewDomElement, 'mousedown', (e) => {\r\n            this._modifiedEditor.delegateVerticalScrollbarMouseDown(e);\r\n        }));\r\n        if (this._renderOverviewRuler) {\r\n            this._containerDomElement.appendChild(this._overviewDomElement);\r\n        }\r\n        // Create left side\r\n        this._originalDomNode = document.createElement('div');\r\n        this._originalDomNode.className = 'editor original';\r\n        this._originalDomNode.style.position = 'absolute';\r\n        this._originalDomNode.style.height = '100%';\r\n        this._containerDomElement.appendChild(this._originalDomNode);\r\n        // Create right side\r\n        this._modifiedDomNode = document.createElement('div');\r\n        this._modifiedDomNode.className = 'editor modified';\r\n        this._modifiedDomNode.style.position = 'absolute';\r\n        this._modifiedDomNode.style.height = '100%';\r\n        this._containerDomElement.appendChild(this._modifiedDomNode);\r\n        this._beginUpdateDecorationsTimeout = -1;\r\n        this._currentlyChangingViewZones = false;\r\n        this._diffComputationToken = 0;\r\n        this._originalEditorState = new VisualEditorState(contextMenuService, clipboardService);\r\n        this._modifiedEditorState = new VisualEditorState(contextMenuService, clipboardService);\r\n        this._isVisible = true;\r\n        this._isHandlingScrollEvent = false;\r\n        this._elementSizeObserver = this._register(new ElementSizeObserver(this._containerDomElement, options.dimension, () => this._onDidContainerSizeChanged()));\r\n        if (options.automaticLayout) {\r\n            this._elementSizeObserver.startObserving();\r\n        }\r\n        this._diffComputationResult = null;\r\n        const leftContextKeyService = this._contextKeyService.createScoped();\r\n        const leftServices = new ServiceCollection();\r\n        leftServices.set(IContextKeyService, leftContextKeyService);\r\n        const leftScopedInstantiationService = instantiationService.createChild(leftServices);\r\n        const rightContextKeyService = this._contextKeyService.createScoped();\r\n        const rightServices = new ServiceCollection();\r\n        rightServices.set(IContextKeyService, rightContextKeyService);\r\n        const rightScopedInstantiationService = instantiationService.createChild(rightServices);\r\n        this._originalEditor = this._createLeftHandSideEditor(options, codeEditorWidgetOptions.originalEditor || {}, leftScopedInstantiationService, leftContextKeyService);\r\n        this._modifiedEditor = this._createRightHandSideEditor(options, codeEditorWidgetOptions.modifiedEditor || {}, rightScopedInstantiationService, rightContextKeyService);\r\n        this._originalOverviewRuler = null;\r\n        this._modifiedOverviewRuler = null;\r\n        this._reviewPane = new DiffReview(this);\r\n        this._containerDomElement.appendChild(this._reviewPane.domNode.domNode);\r\n        this._containerDomElement.appendChild(this._reviewPane.shadow.domNode);\r\n        this._containerDomElement.appendChild(this._reviewPane.actionBarContainer.domNode);\r\n        // enableSplitViewResizing\r\n        this._enableSplitViewResizing = true;\r\n        if (typeof options.enableSplitViewResizing !== 'undefined') {\r\n            this._enableSplitViewResizing = options.enableSplitViewResizing;\r\n        }\r\n        if (this._renderSideBySide) {\r\n            this._setStrategy(new DiffEditorWidgetSideBySide(this._createDataSource(), this._enableSplitViewResizing));\r\n        }\r\n        else {\r\n            this._setStrategy(new DiffEditorWidgetInline(this._createDataSource(), this._enableSplitViewResizing));\r\n        }\r\n        this._register(themeService.onDidColorThemeChange(t => {\r\n            if (this._strategy && this._strategy.applyColors(t)) {\r\n                this._updateDecorationsRunner.schedule();\r\n            }\r\n            this._containerDomElement.className = DiffEditorWidget._getClassName(this._themeService.getColorTheme(), this._renderSideBySide);\r\n        }));\r\n        const contributions = EditorExtensionsRegistry.getDiffEditorContributions();\r\n        for (const desc of contributions) {\r\n            try {\r\n                this._register(instantiationService.createInstance(desc.ctor, this));\r\n            }\r\n            catch (err) {\r\n                onUnexpectedError(err);\r\n            }\r\n        }\r\n        this._codeEditorService.addDiffEditor(this);\r\n    }\r\n    _setState(newState) {\r\n        if (this._state === newState) {\r\n            return;\r\n        }\r\n        this._state = newState;\r\n        if (this._updatingDiffProgress) {\r\n            this._updatingDiffProgress.done();\r\n            this._updatingDiffProgress = null;\r\n        }\r\n        if (this._state === 1 /* ComputingDiff */) {\r\n            this._updatingDiffProgress = this._editorProgressService.show(true, 1000);\r\n        }\r\n    }\r\n    diffReviewNext() {\r\n        this._reviewPane.next();\r\n    }\r\n    diffReviewPrev() {\r\n        this._reviewPane.prev();\r\n    }\r\n    static _getClassName(theme, renderSideBySide) {\r\n        let result = 'monaco-diff-editor monaco-editor-background ';\r\n        if (renderSideBySide) {\r\n            result += 'side-by-side ';\r\n        }\r\n        result += getThemeTypeSelector(theme.type);\r\n        return result;\r\n    }\r\n    _recreateOverviewRulers() {\r\n        if (!this._renderOverviewRuler) {\r\n            return;\r\n        }\r\n        if (this._originalOverviewRuler) {\r\n            this._overviewDomElement.removeChild(this._originalOverviewRuler.getDomNode());\r\n            this._originalOverviewRuler.dispose();\r\n        }\r\n        if (this._originalEditor.hasModel()) {\r\n            this._originalOverviewRuler = this._originalEditor.createOverviewRuler('original diffOverviewRuler');\r\n            this._overviewDomElement.appendChild(this._originalOverviewRuler.getDomNode());\r\n        }\r\n        if (this._modifiedOverviewRuler) {\r\n            this._overviewDomElement.removeChild(this._modifiedOverviewRuler.getDomNode());\r\n            this._modifiedOverviewRuler.dispose();\r\n        }\r\n        if (this._modifiedEditor.hasModel()) {\r\n            this._modifiedOverviewRuler = this._modifiedEditor.createOverviewRuler('modified diffOverviewRuler');\r\n            this._overviewDomElement.appendChild(this._modifiedOverviewRuler.getDomNode());\r\n        }\r\n        this._layoutOverviewRulers();\r\n    }\r\n    _createLeftHandSideEditor(options, codeEditorWidgetOptions, instantiationService, contextKeyService) {\r\n        const editor = this._createInnerEditor(instantiationService, this._originalDomNode, this._adjustOptionsForLeftHandSide(options), codeEditorWidgetOptions);\r\n        this._register(editor.onDidScrollChange((e) => {\r\n            if (this._isHandlingScrollEvent) {\r\n                return;\r\n            }\r\n            if (!e.scrollTopChanged && !e.scrollLeftChanged && !e.scrollHeightChanged) {\r\n                return;\r\n            }\r\n            this._isHandlingScrollEvent = true;\r\n            this._modifiedEditor.setScrollPosition({\r\n                scrollLeft: e.scrollLeft,\r\n                scrollTop: e.scrollTop\r\n            });\r\n            this._isHandlingScrollEvent = false;\r\n            this._layoutOverviewViewport();\r\n        }));\r\n        this._register(editor.onDidChangeViewZones(() => {\r\n            this._onViewZonesChanged();\r\n        }));\r\n        this._register(editor.onDidChangeConfiguration((e) => {\r\n            if (!editor.getModel()) {\r\n                return;\r\n            }\r\n            if (e.hasChanged(38 /* fontInfo */)) {\r\n                this._updateDecorationsRunner.schedule();\r\n            }\r\n            if (e.hasChanged(125 /* wrappingInfo */)) {\r\n                this._updateDecorationsRunner.cancel();\r\n                this._updateDecorations();\r\n            }\r\n        }));\r\n        this._register(editor.onDidChangeModelContent(() => {\r\n            if (this._isVisible) {\r\n                this._beginUpdateDecorationsSoon();\r\n            }\r\n        }));\r\n        const isInDiffLeftEditorKey = contextKeyService.createKey('isInDiffLeftEditor', undefined);\r\n        this._register(editor.onDidFocusEditorWidget(() => isInDiffLeftEditorKey.set(true)));\r\n        this._register(editor.onDidBlurEditorWidget(() => isInDiffLeftEditorKey.set(false)));\r\n        this._register(editor.onDidContentSizeChange(e => {\r\n            const width = this._originalEditor.getContentWidth() + this._modifiedEditor.getContentWidth() + DiffEditorWidget.ONE_OVERVIEW_WIDTH;\r\n            const height = Math.max(this._modifiedEditor.getContentHeight(), this._originalEditor.getContentHeight());\r\n            this._onDidContentSizeChange.fire({\r\n                contentHeight: height,\r\n                contentWidth: width,\r\n                contentHeightChanged: e.contentHeightChanged,\r\n                contentWidthChanged: e.contentWidthChanged\r\n            });\r\n        }));\r\n        return editor;\r\n    }\r\n    _createRightHandSideEditor(options, codeEditorWidgetOptions, instantiationService, contextKeyService) {\r\n        const editor = this._createInnerEditor(instantiationService, this._modifiedDomNode, this._adjustOptionsForRightHandSide(options), codeEditorWidgetOptions);\r\n        this._register(editor.onDidScrollChange((e) => {\r\n            if (this._isHandlingScrollEvent) {\r\n                return;\r\n            }\r\n            if (!e.scrollTopChanged && !e.scrollLeftChanged && !e.scrollHeightChanged) {\r\n                return;\r\n            }\r\n            this._isHandlingScrollEvent = true;\r\n            this._originalEditor.setScrollPosition({\r\n                scrollLeft: e.scrollLeft,\r\n                scrollTop: e.scrollTop\r\n            });\r\n            this._isHandlingScrollEvent = false;\r\n            this._layoutOverviewViewport();\r\n        }));\r\n        this._register(editor.onDidChangeViewZones(() => {\r\n            this._onViewZonesChanged();\r\n        }));\r\n        this._register(editor.onDidChangeConfiguration((e) => {\r\n            if (!editor.getModel()) {\r\n                return;\r\n            }\r\n            if (e.hasChanged(38 /* fontInfo */)) {\r\n                this._updateDecorationsRunner.schedule();\r\n            }\r\n            if (e.hasChanged(125 /* wrappingInfo */)) {\r\n                this._updateDecorationsRunner.cancel();\r\n                this._updateDecorations();\r\n            }\r\n        }));\r\n        this._register(editor.onDidChangeModelContent(() => {\r\n            if (this._isVisible) {\r\n                this._beginUpdateDecorationsSoon();\r\n            }\r\n        }));\r\n        this._register(editor.onDidChangeModelOptions((e) => {\r\n            if (e.tabSize) {\r\n                this._updateDecorationsRunner.schedule();\r\n            }\r\n        }));\r\n        const isInDiffRightEditorKey = contextKeyService.createKey('isInDiffRightEditor', undefined);\r\n        this._register(editor.onDidFocusEditorWidget(() => isInDiffRightEditorKey.set(true)));\r\n        this._register(editor.onDidBlurEditorWidget(() => isInDiffRightEditorKey.set(false)));\r\n        this._register(editor.onDidContentSizeChange(e => {\r\n            const width = this._originalEditor.getContentWidth() + this._modifiedEditor.getContentWidth() + DiffEditorWidget.ONE_OVERVIEW_WIDTH;\r\n            const height = Math.max(this._modifiedEditor.getContentHeight(), this._originalEditor.getContentHeight());\r\n            this._onDidContentSizeChange.fire({\r\n                contentHeight: height,\r\n                contentWidth: width,\r\n                contentHeightChanged: e.contentHeightChanged,\r\n                contentWidthChanged: e.contentWidthChanged\r\n            });\r\n        }));\r\n        return editor;\r\n    }\r\n    _createInnerEditor(instantiationService, container, options, editorWidgetOptions) {\r\n        return instantiationService.createInstance(CodeEditorWidget, container, options, editorWidgetOptions);\r\n    }\r\n    dispose() {\r\n        this._codeEditorService.removeDiffEditor(this);\r\n        if (this._beginUpdateDecorationsTimeout !== -1) {\r\n            window.clearTimeout(this._beginUpdateDecorationsTimeout);\r\n            this._beginUpdateDecorationsTimeout = -1;\r\n        }\r\n        this._cleanViewZonesAndDecorations();\r\n        if (this._originalOverviewRuler) {\r\n            this._overviewDomElement.removeChild(this._originalOverviewRuler.getDomNode());\r\n            this._originalOverviewRuler.dispose();\r\n        }\r\n        if (this._modifiedOverviewRuler) {\r\n            this._overviewDomElement.removeChild(this._modifiedOverviewRuler.getDomNode());\r\n            this._modifiedOverviewRuler.dispose();\r\n        }\r\n        this._overviewDomElement.removeChild(this._overviewViewportDomElement.domNode);\r\n        if (this._renderOverviewRuler) {\r\n            this._containerDomElement.removeChild(this._overviewDomElement);\r\n        }\r\n        this._containerDomElement.removeChild(this._originalDomNode);\r\n        this._originalEditor.dispose();\r\n        this._containerDomElement.removeChild(this._modifiedDomNode);\r\n        this._modifiedEditor.dispose();\r\n        this._strategy.dispose();\r\n        this._containerDomElement.removeChild(this._reviewPane.domNode.domNode);\r\n        this._containerDomElement.removeChild(this._reviewPane.shadow.domNode);\r\n        this._containerDomElement.removeChild(this._reviewPane.actionBarContainer.domNode);\r\n        this._reviewPane.dispose();\r\n        this._domElement.removeChild(this._containerDomElement);\r\n        this._onDidDispose.fire();\r\n        super.dispose();\r\n    }\r\n    //------------ begin IDiffEditor methods\r\n    getId() {\r\n        return this.getEditorType() + ':' + this._id;\r\n    }\r\n    getEditorType() {\r\n        return editorCommon.EditorType.IDiffEditor;\r\n    }\r\n    getLineChanges() {\r\n        if (!this._diffComputationResult) {\r\n            return null;\r\n        }\r\n        return this._diffComputationResult.changes;\r\n    }\r\n    getOriginalEditor() {\r\n        return this._originalEditor;\r\n    }\r\n    getModifiedEditor() {\r\n        return this._modifiedEditor;\r\n    }\r\n    updateOptions(newOptions) {\r\n        // Handle side by side\r\n        let renderSideBySideChanged = false;\r\n        if (typeof newOptions.renderSideBySide !== 'undefined') {\r\n            if (this._renderSideBySide !== newOptions.renderSideBySide) {\r\n                this._renderSideBySide = newOptions.renderSideBySide;\r\n                renderSideBySideChanged = true;\r\n            }\r\n        }\r\n        if (typeof newOptions.maxComputationTime !== 'undefined') {\r\n            this._maxComputationTime = newOptions.maxComputationTime;\r\n            if (this._isVisible) {\r\n                this._beginUpdateDecorationsSoon();\r\n            }\r\n        }\r\n        let beginUpdateDecorations = false;\r\n        if (typeof newOptions.ignoreTrimWhitespace !== 'undefined') {\r\n            if (this._ignoreTrimWhitespace !== newOptions.ignoreTrimWhitespace) {\r\n                this._ignoreTrimWhitespace = newOptions.ignoreTrimWhitespace;\r\n                // Begin comparing\r\n                beginUpdateDecorations = true;\r\n            }\r\n        }\r\n        if (typeof newOptions.renderIndicators !== 'undefined') {\r\n            if (this._renderIndicators !== newOptions.renderIndicators) {\r\n                this._renderIndicators = newOptions.renderIndicators;\r\n                beginUpdateDecorations = true;\r\n            }\r\n        }\r\n        if (beginUpdateDecorations) {\r\n            this._beginUpdateDecorations();\r\n        }\r\n        this._originalIsEditable = validateBooleanOption(newOptions.originalEditable, this._originalIsEditable);\r\n        this._diffCodeLens = validateBooleanOption(newOptions.diffCodeLens, this._diffCodeLens);\r\n        this._diffWordWrap = validateDiffWordWrap(newOptions.diffWordWrap, this._diffWordWrap);\r\n        this._modifiedEditor.updateOptions(this._adjustOptionsForRightHandSide(newOptions));\r\n        this._originalEditor.updateOptions(this._adjustOptionsForLeftHandSide(newOptions));\r\n        // enableSplitViewResizing\r\n        if (typeof newOptions.enableSplitViewResizing !== 'undefined') {\r\n            this._enableSplitViewResizing = newOptions.enableSplitViewResizing;\r\n        }\r\n        this._strategy.setEnableSplitViewResizing(this._enableSplitViewResizing);\r\n        // renderSideBySide\r\n        if (renderSideBySideChanged) {\r\n            if (this._renderSideBySide) {\r\n                this._setStrategy(new DiffEditorWidgetSideBySide(this._createDataSource(), this._enableSplitViewResizing));\r\n            }\r\n            else {\r\n                this._setStrategy(new DiffEditorWidgetInline(this._createDataSource(), this._enableSplitViewResizing));\r\n            }\r\n            // Update class name\r\n            this._containerDomElement.className = DiffEditorWidget._getClassName(this._themeService.getColorTheme(), this._renderSideBySide);\r\n        }\r\n        // renderOverviewRuler\r\n        if (typeof newOptions.renderOverviewRuler !== 'undefined' && this._renderOverviewRuler !== newOptions.renderOverviewRuler) {\r\n            this._renderOverviewRuler = newOptions.renderOverviewRuler;\r\n            if (this._renderOverviewRuler) {\r\n                this._containerDomElement.appendChild(this._overviewDomElement);\r\n            }\r\n            else {\r\n                this._containerDomElement.removeChild(this._overviewDomElement);\r\n            }\r\n        }\r\n    }\r\n    getModel() {\r\n        return {\r\n            original: this._originalEditor.getModel(),\r\n            modified: this._modifiedEditor.getModel()\r\n        };\r\n    }\r\n    setModel(model) {\r\n        // Guard us against partial null model\r\n        if (model && (!model.original || !model.modified)) {\r\n            throw new Error(!model.original ? 'DiffEditorWidget.setModel: Original model is null' : 'DiffEditorWidget.setModel: Modified model is null');\r\n        }\r\n        // Remove all view zones & decorations\r\n        this._cleanViewZonesAndDecorations();\r\n        // Update code editor models\r\n        this._originalEditor.setModel(model ? model.original : null);\r\n        this._modifiedEditor.setModel(model ? model.modified : null);\r\n        this._updateDecorationsRunner.cancel();\r\n        // this.originalEditor.onDidChangeModelOptions\r\n        if (model) {\r\n            this._originalEditor.setScrollTop(0);\r\n            this._modifiedEditor.setScrollTop(0);\r\n        }\r\n        // Disable any diff computations that will come in\r\n        this._diffComputationResult = null;\r\n        this._diffComputationToken++;\r\n        this._setState(0 /* Idle */);\r\n        if (model) {\r\n            this._recreateOverviewRulers();\r\n            // Begin comparing\r\n            this._beginUpdateDecorations();\r\n        }\r\n        this._layoutOverviewViewport();\r\n    }\r\n    getDomNode() {\r\n        return this._domElement;\r\n    }\r\n    getVisibleColumnFromPosition(position) {\r\n        return this._modifiedEditor.getVisibleColumnFromPosition(position);\r\n    }\r\n    getPosition() {\r\n        return this._modifiedEditor.getPosition();\r\n    }\r\n    setPosition(position) {\r\n        this._modifiedEditor.setPosition(position);\r\n    }\r\n    revealLine(lineNumber, scrollType = 0 /* Smooth */) {\r\n        this._modifiedEditor.revealLine(lineNumber, scrollType);\r\n    }\r\n    revealLineInCenter(lineNumber, scrollType = 0 /* Smooth */) {\r\n        this._modifiedEditor.revealLineInCenter(lineNumber, scrollType);\r\n    }\r\n    revealLineInCenterIfOutsideViewport(lineNumber, scrollType = 0 /* Smooth */) {\r\n        this._modifiedEditor.revealLineInCenterIfOutsideViewport(lineNumber, scrollType);\r\n    }\r\n    revealLineNearTop(lineNumber, scrollType = 0 /* Smooth */) {\r\n        this._modifiedEditor.revealLineNearTop(lineNumber, scrollType);\r\n    }\r\n    revealPosition(position, scrollType = 0 /* Smooth */) {\r\n        this._modifiedEditor.revealPosition(position, scrollType);\r\n    }\r\n    revealPositionInCenter(position, scrollType = 0 /* Smooth */) {\r\n        this._modifiedEditor.revealPositionInCenter(position, scrollType);\r\n    }\r\n    revealPositionInCenterIfOutsideViewport(position, scrollType = 0 /* Smooth */) {\r\n        this._modifiedEditor.revealPositionInCenterIfOutsideViewport(position, scrollType);\r\n    }\r\n    revealPositionNearTop(position, scrollType = 0 /* Smooth */) {\r\n        this._modifiedEditor.revealPositionNearTop(position, scrollType);\r\n    }\r\n    getSelection() {\r\n        return this._modifiedEditor.getSelection();\r\n    }\r\n    getSelections() {\r\n        return this._modifiedEditor.getSelections();\r\n    }\r\n    setSelection(something) {\r\n        this._modifiedEditor.setSelection(something);\r\n    }\r\n    setSelections(ranges) {\r\n        this._modifiedEditor.setSelections(ranges);\r\n    }\r\n    revealLines(startLineNumber, endLineNumber, scrollType = 0 /* Smooth */) {\r\n        this._modifiedEditor.revealLines(startLineNumber, endLineNumber, scrollType);\r\n    }\r\n    revealLinesInCenter(startLineNumber, endLineNumber, scrollType = 0 /* Smooth */) {\r\n        this._modifiedEditor.revealLinesInCenter(startLineNumber, endLineNumber, scrollType);\r\n    }\r\n    revealLinesInCenterIfOutsideViewport(startLineNumber, endLineNumber, scrollType = 0 /* Smooth */) {\r\n        this._modifiedEditor.revealLinesInCenterIfOutsideViewport(startLineNumber, endLineNumber, scrollType);\r\n    }\r\n    revealLinesNearTop(startLineNumber, endLineNumber, scrollType = 0 /* Smooth */) {\r\n        this._modifiedEditor.revealLinesNearTop(startLineNumber, endLineNumber, scrollType);\r\n    }\r\n    revealRange(range, scrollType = 0 /* Smooth */, revealVerticalInCenter = false, revealHorizontal = true) {\r\n        this._modifiedEditor.revealRange(range, scrollType, revealVerticalInCenter, revealHorizontal);\r\n    }\r\n    revealRangeInCenter(range, scrollType = 0 /* Smooth */) {\r\n        this._modifiedEditor.revealRangeInCenter(range, scrollType);\r\n    }\r\n    revealRangeInCenterIfOutsideViewport(range, scrollType = 0 /* Smooth */) {\r\n        this._modifiedEditor.revealRangeInCenterIfOutsideViewport(range, scrollType);\r\n    }\r\n    revealRangeNearTop(range, scrollType = 0 /* Smooth */) {\r\n        this._modifiedEditor.revealRangeNearTop(range, scrollType);\r\n    }\r\n    revealRangeNearTopIfOutsideViewport(range, scrollType = 0 /* Smooth */) {\r\n        this._modifiedEditor.revealRangeNearTopIfOutsideViewport(range, scrollType);\r\n    }\r\n    revealRangeAtTop(range, scrollType = 0 /* Smooth */) {\r\n        this._modifiedEditor.revealRangeAtTop(range, scrollType);\r\n    }\r\n    getSupportedActions() {\r\n        return this._modifiedEditor.getSupportedActions();\r\n    }\r\n    saveViewState() {\r\n        const originalViewState = this._originalEditor.saveViewState();\r\n        const modifiedViewState = this._modifiedEditor.saveViewState();\r\n        return {\r\n            original: originalViewState,\r\n            modified: modifiedViewState\r\n        };\r\n    }\r\n    restoreViewState(s) {\r\n        if (s && s.original && s.modified) {\r\n            const diffEditorState = s;\r\n            this._originalEditor.restoreViewState(diffEditorState.original);\r\n            this._modifiedEditor.restoreViewState(diffEditorState.modified);\r\n        }\r\n    }\r\n    layout(dimension) {\r\n        this._elementSizeObserver.observe(dimension);\r\n    }\r\n    focus() {\r\n        this._modifiedEditor.focus();\r\n    }\r\n    hasTextFocus() {\r\n        return this._originalEditor.hasTextFocus() || this._modifiedEditor.hasTextFocus();\r\n    }\r\n    trigger(source, handlerId, payload) {\r\n        this._modifiedEditor.trigger(source, handlerId, payload);\r\n    }\r\n    changeDecorations(callback) {\r\n        return this._modifiedEditor.changeDecorations(callback);\r\n    }\r\n    //------------ end IDiffEditor methods\r\n    //------------ begin layouting methods\r\n    _onDidContainerSizeChanged() {\r\n        this._doLayout();\r\n    }\r\n    _getReviewHeight() {\r\n        return this._reviewPane.isVisible() ? this._elementSizeObserver.getHeight() : 0;\r\n    }\r\n    _layoutOverviewRulers() {\r\n        if (!this._renderOverviewRuler) {\r\n            return;\r\n        }\r\n        if (!this._originalOverviewRuler || !this._modifiedOverviewRuler) {\r\n            return;\r\n        }\r\n        const height = this._elementSizeObserver.getHeight();\r\n        const reviewHeight = this._getReviewHeight();\r\n        const freeSpace = DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH - 2 * DiffEditorWidget.ONE_OVERVIEW_WIDTH;\r\n        const layoutInfo = this._modifiedEditor.getLayoutInfo();\r\n        if (layoutInfo) {\r\n            this._originalOverviewRuler.setLayout({\r\n                top: 0,\r\n                width: DiffEditorWidget.ONE_OVERVIEW_WIDTH,\r\n                right: freeSpace + DiffEditorWidget.ONE_OVERVIEW_WIDTH,\r\n                height: (height - reviewHeight)\r\n            });\r\n            this._modifiedOverviewRuler.setLayout({\r\n                top: 0,\r\n                right: 0,\r\n                width: DiffEditorWidget.ONE_OVERVIEW_WIDTH,\r\n                height: (height - reviewHeight)\r\n            });\r\n        }\r\n    }\r\n    //------------ end layouting methods\r\n    _onViewZonesChanged() {\r\n        if (this._currentlyChangingViewZones) {\r\n            return;\r\n        }\r\n        this._updateDecorationsRunner.schedule();\r\n    }\r\n    _beginUpdateDecorationsSoon() {\r\n        // Clear previous timeout if necessary\r\n        if (this._beginUpdateDecorationsTimeout !== -1) {\r\n            window.clearTimeout(this._beginUpdateDecorationsTimeout);\r\n            this._beginUpdateDecorationsTimeout = -1;\r\n        }\r\n        this._beginUpdateDecorationsTimeout = window.setTimeout(() => this._beginUpdateDecorations(), DiffEditorWidget.UPDATE_DIFF_DECORATIONS_DELAY);\r\n    }\r\n    static _equals(a, b) {\r\n        if (!a && !b) {\r\n            return true;\r\n        }\r\n        if (!a || !b) {\r\n            return false;\r\n        }\r\n        return (a.toString() === b.toString());\r\n    }\r\n    _beginUpdateDecorations() {\r\n        this._beginUpdateDecorationsTimeout = -1;\r\n        const currentOriginalModel = this._originalEditor.getModel();\r\n        const currentModifiedModel = this._modifiedEditor.getModel();\r\n        if (!currentOriginalModel || !currentModifiedModel) {\r\n            return;\r\n        }\r\n        // Prevent old diff requests to come if a new request has been initiated\r\n        // The best method would be to call cancel on the Promise, but this is not\r\n        // yet supported, so using tokens for now.\r\n        this._diffComputationToken++;\r\n        const currentToken = this._diffComputationToken;\r\n        this._setState(1 /* ComputingDiff */);\r\n        if (!this._editorWorkerService.canComputeDiff(currentOriginalModel.uri, currentModifiedModel.uri)) {\r\n            if (!DiffEditorWidget._equals(currentOriginalModel.uri, this._lastOriginalWarning)\r\n                || !DiffEditorWidget._equals(currentModifiedModel.uri, this._lastModifiedWarning)) {\r\n                this._lastOriginalWarning = currentOriginalModel.uri;\r\n                this._lastModifiedWarning = currentModifiedModel.uri;\r\n                this._notificationService.warn(nls.localize(\"diff.tooLarge\", \"Cannot compare files because one file is too large.\"));\r\n            }\r\n            return;\r\n        }\r\n        this._editorWorkerService.computeDiff(currentOriginalModel.uri, currentModifiedModel.uri, this._ignoreTrimWhitespace, this._maxComputationTime).then((result) => {\r\n            if (currentToken === this._diffComputationToken\r\n                && currentOriginalModel === this._originalEditor.getModel()\r\n                && currentModifiedModel === this._modifiedEditor.getModel()) {\r\n                this._setState(2 /* DiffComputed */);\r\n                this._diffComputationResult = result;\r\n                this._updateDecorationsRunner.schedule();\r\n                this._onDidUpdateDiff.fire();\r\n            }\r\n        }, (error) => {\r\n            if (currentToken === this._diffComputationToken\r\n                && currentOriginalModel === this._originalEditor.getModel()\r\n                && currentModifiedModel === this._modifiedEditor.getModel()) {\r\n                this._setState(2 /* DiffComputed */);\r\n                this._diffComputationResult = null;\r\n                this._updateDecorationsRunner.schedule();\r\n            }\r\n        });\r\n    }\r\n    _cleanViewZonesAndDecorations() {\r\n        this._originalEditorState.clean(this._originalEditor);\r\n        this._modifiedEditorState.clean(this._modifiedEditor);\r\n    }\r\n    _updateDecorations() {\r\n        if (!this._originalEditor.getModel() || !this._modifiedEditor.getModel()) {\r\n            return;\r\n        }\r\n        const lineChanges = (this._diffComputationResult ? this._diffComputationResult.changes : []);\r\n        const foreignOriginal = this._originalEditorState.getForeignViewZones(this._originalEditor.getWhitespaces());\r\n        const foreignModified = this._modifiedEditorState.getForeignViewZones(this._modifiedEditor.getWhitespaces());\r\n        const diffDecorations = this._strategy.getEditorsDiffDecorations(lineChanges, this._ignoreTrimWhitespace, this._renderIndicators, foreignOriginal, foreignModified);\r\n        try {\r\n            this._currentlyChangingViewZones = true;\r\n            this._originalEditorState.apply(this._originalEditor, this._originalOverviewRuler, diffDecorations.original, false);\r\n            this._modifiedEditorState.apply(this._modifiedEditor, this._modifiedOverviewRuler, diffDecorations.modified, true);\r\n        }\r\n        finally {\r\n            this._currentlyChangingViewZones = false;\r\n        }\r\n    }\r\n    _adjustOptionsForSubEditor(options) {\r\n        const clonedOptions = Object.assign({}, options);\r\n        clonedOptions.inDiffEditor = true;\r\n        clonedOptions.automaticLayout = false;\r\n        clonedOptions.scrollbar = clonedOptions.scrollbar || {};\r\n        clonedOptions.scrollbar.vertical = 'visible';\r\n        clonedOptions.folding = false;\r\n        clonedOptions.codeLens = this._diffCodeLens;\r\n        clonedOptions.fixedOverflowWidgets = true;\r\n        // clonedOptions.lineDecorationsWidth = '2ch';\r\n        if (!clonedOptions.minimap) {\r\n            clonedOptions.minimap = {};\r\n        }\r\n        clonedOptions.minimap.enabled = false;\r\n        return clonedOptions;\r\n    }\r\n    _adjustOptionsForLeftHandSide(options) {\r\n        const result = this._adjustOptionsForSubEditor(options);\r\n        if (!this._renderSideBySide) {\r\n            // never wrap hidden editor\r\n            result.wordWrapOverride1 = 'off';\r\n        }\r\n        else {\r\n            result.wordWrapOverride1 = this._diffWordWrap;\r\n        }\r\n        result.readOnly = !this._originalIsEditable;\r\n        result.extraEditorClassName = 'original-in-monaco-diff-editor';\r\n        return Object.assign(Object.assign({}, result), { dimension: {\r\n                height: 0,\r\n                width: 0\r\n            } });\r\n    }\r\n    _adjustOptionsForRightHandSide(options) {\r\n        const result = this._adjustOptionsForSubEditor(options);\r\n        result.wordWrapOverride1 = this._diffWordWrap;\r\n        result.revealHorizontalRightPadding = EditorOptions.revealHorizontalRightPadding.defaultValue + DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH;\r\n        result.scrollbar.verticalHasArrows = false;\r\n        result.extraEditorClassName = 'modified-in-monaco-diff-editor';\r\n        return Object.assign(Object.assign({}, result), { dimension: {\r\n                height: 0,\r\n                width: 0\r\n            } });\r\n    }\r\n    doLayout() {\r\n        this._elementSizeObserver.observe();\r\n        this._doLayout();\r\n    }\r\n    _doLayout() {\r\n        const width = this._elementSizeObserver.getWidth();\r\n        const height = this._elementSizeObserver.getHeight();\r\n        const reviewHeight = this._getReviewHeight();\r\n        const splitPoint = this._strategy.layout();\r\n        this._originalDomNode.style.width = splitPoint + 'px';\r\n        this._originalDomNode.style.left = '0px';\r\n        this._modifiedDomNode.style.width = (width - splitPoint) + 'px';\r\n        this._modifiedDomNode.style.left = splitPoint + 'px';\r\n        this._overviewDomElement.style.top = '0px';\r\n        this._overviewDomElement.style.height = (height - reviewHeight) + 'px';\r\n        this._overviewDomElement.style.width = DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH + 'px';\r\n        this._overviewDomElement.style.left = (width - DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH) + 'px';\r\n        this._overviewViewportDomElement.setWidth(DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH);\r\n        this._overviewViewportDomElement.setHeight(30);\r\n        this._originalEditor.layout({ width: splitPoint, height: (height - reviewHeight) });\r\n        this._modifiedEditor.layout({ width: width - splitPoint - (this._renderOverviewRuler ? DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH : 0), height: (height - reviewHeight) });\r\n        if (this._originalOverviewRuler || this._modifiedOverviewRuler) {\r\n            this._layoutOverviewRulers();\r\n        }\r\n        this._reviewPane.layout(height - reviewHeight, width, reviewHeight);\r\n        this._layoutOverviewViewport();\r\n    }\r\n    _layoutOverviewViewport() {\r\n        const layout = this._computeOverviewViewport();\r\n        if (!layout) {\r\n            this._overviewViewportDomElement.setTop(0);\r\n            this._overviewViewportDomElement.setHeight(0);\r\n        }\r\n        else {\r\n            this._overviewViewportDomElement.setTop(layout.top);\r\n            this._overviewViewportDomElement.setHeight(layout.height);\r\n        }\r\n    }\r\n    _computeOverviewViewport() {\r\n        const layoutInfo = this._modifiedEditor.getLayoutInfo();\r\n        if (!layoutInfo) {\r\n            return null;\r\n        }\r\n        const scrollTop = this._modifiedEditor.getScrollTop();\r\n        const scrollHeight = this._modifiedEditor.getScrollHeight();\r\n        const computedAvailableSize = Math.max(0, layoutInfo.height);\r\n        const computedRepresentableSize = Math.max(0, computedAvailableSize - 2 * 0);\r\n        const computedRatio = scrollHeight > 0 ? (computedRepresentableSize / scrollHeight) : 0;\r\n        const computedSliderSize = Math.max(0, Math.floor(layoutInfo.height * computedRatio));\r\n        const computedSliderPosition = Math.floor(scrollTop * computedRatio);\r\n        return {\r\n            height: computedSliderSize,\r\n            top: computedSliderPosition\r\n        };\r\n    }\r\n    _createDataSource() {\r\n        return {\r\n            getWidth: () => {\r\n                return this._elementSizeObserver.getWidth();\r\n            },\r\n            getHeight: () => {\r\n                return (this._elementSizeObserver.getHeight() - this._getReviewHeight());\r\n            },\r\n            getOptions: () => {\r\n                return {\r\n                    renderOverviewRuler: this._renderOverviewRuler\r\n                };\r\n            },\r\n            getContainerDomNode: () => {\r\n                return this._containerDomElement;\r\n            },\r\n            relayoutEditors: () => {\r\n                this._doLayout();\r\n            },\r\n            getOriginalEditor: () => {\r\n                return this._originalEditor;\r\n            },\r\n            getModifiedEditor: () => {\r\n                return this._modifiedEditor;\r\n            }\r\n        };\r\n    }\r\n    _setStrategy(newStrategy) {\r\n        if (this._strategy) {\r\n            this._strategy.dispose();\r\n        }\r\n        this._strategy = newStrategy;\r\n        newStrategy.applyColors(this._themeService.getColorTheme());\r\n        if (this._diffComputationResult) {\r\n            this._updateDecorations();\r\n        }\r\n        // Just do a layout, the strategy might need it\r\n        this._doLayout();\r\n    }\r\n    _getLineChangeAtOrBeforeLineNumber(lineNumber, startLineNumberExtractor) {\r\n        const lineChanges = (this._diffComputationResult ? this._diffComputationResult.changes : []);\r\n        if (lineChanges.length === 0 || lineNumber < startLineNumberExtractor(lineChanges[0])) {\r\n            // There are no changes or `lineNumber` is before the first change\r\n            return null;\r\n        }\r\n        let min = 0;\r\n        let max = lineChanges.length - 1;\r\n        while (min < max) {\r\n            const mid = Math.floor((min + max) / 2);\r\n            const midStart = startLineNumberExtractor(lineChanges[mid]);\r\n            const midEnd = (mid + 1 <= max ? startLineNumberExtractor(lineChanges[mid + 1]) : 1073741824 /* MAX_SAFE_SMALL_INTEGER */);\r\n            if (lineNumber < midStart) {\r\n                max = mid - 1;\r\n            }\r\n            else if (lineNumber >= midEnd) {\r\n                min = mid + 1;\r\n            }\r\n            else {\r\n                // HIT!\r\n                min = mid;\r\n                max = mid;\r\n            }\r\n        }\r\n        return lineChanges[min];\r\n    }\r\n    _getEquivalentLineForOriginalLineNumber(lineNumber) {\r\n        const lineChange = this._getLineChangeAtOrBeforeLineNumber(lineNumber, (lineChange) => lineChange.originalStartLineNumber);\r\n        if (!lineChange) {\r\n            return lineNumber;\r\n        }\r\n        const originalEquivalentLineNumber = lineChange.originalStartLineNumber + (lineChange.originalEndLineNumber > 0 ? -1 : 0);\r\n        const modifiedEquivalentLineNumber = lineChange.modifiedStartLineNumber + (lineChange.modifiedEndLineNumber > 0 ? -1 : 0);\r\n        const lineChangeOriginalLength = (lineChange.originalEndLineNumber > 0 ? (lineChange.originalEndLineNumber - lineChange.originalStartLineNumber + 1) : 0);\r\n        const lineChangeModifiedLength = (lineChange.modifiedEndLineNumber > 0 ? (lineChange.modifiedEndLineNumber - lineChange.modifiedStartLineNumber + 1) : 0);\r\n        const delta = lineNumber - originalEquivalentLineNumber;\r\n        if (delta <= lineChangeOriginalLength) {\r\n            return modifiedEquivalentLineNumber + Math.min(delta, lineChangeModifiedLength);\r\n        }\r\n        return modifiedEquivalentLineNumber + lineChangeModifiedLength - lineChangeOriginalLength + delta;\r\n    }\r\n    _getEquivalentLineForModifiedLineNumber(lineNumber) {\r\n        const lineChange = this._getLineChangeAtOrBeforeLineNumber(lineNumber, (lineChange) => lineChange.modifiedStartLineNumber);\r\n        if (!lineChange) {\r\n            return lineNumber;\r\n        }\r\n        const originalEquivalentLineNumber = lineChange.originalStartLineNumber + (lineChange.originalEndLineNumber > 0 ? -1 : 0);\r\n        const modifiedEquivalentLineNumber = lineChange.modifiedStartLineNumber + (lineChange.modifiedEndLineNumber > 0 ? -1 : 0);\r\n        const lineChangeOriginalLength = (lineChange.originalEndLineNumber > 0 ? (lineChange.originalEndLineNumber - lineChange.originalStartLineNumber + 1) : 0);\r\n        const lineChangeModifiedLength = (lineChange.modifiedEndLineNumber > 0 ? (lineChange.modifiedEndLineNumber - lineChange.modifiedStartLineNumber + 1) : 0);\r\n        const delta = lineNumber - modifiedEquivalentLineNumber;\r\n        if (delta <= lineChangeModifiedLength) {\r\n            return originalEquivalentLineNumber + Math.min(delta, lineChangeOriginalLength);\r\n        }\r\n        return originalEquivalentLineNumber + lineChangeOriginalLength - lineChangeModifiedLength + delta;\r\n    }\r\n    getDiffLineInformationForOriginal(lineNumber) {\r\n        if (!this._diffComputationResult) {\r\n            // Cannot answer that which I don't know\r\n            return null;\r\n        }\r\n        return {\r\n            equivalentLineNumber: this._getEquivalentLineForOriginalLineNumber(lineNumber)\r\n        };\r\n    }\r\n    getDiffLineInformationForModified(lineNumber) {\r\n        if (!this._diffComputationResult) {\r\n            // Cannot answer that which I don't know\r\n            return null;\r\n        }\r\n        return {\r\n            equivalentLineNumber: this._getEquivalentLineForModifiedLineNumber(lineNumber)\r\n        };\r\n    }\r\n};\r\nDiffEditorWidget.ONE_OVERVIEW_WIDTH = 15;\r\nDiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH = 30;\r\nDiffEditorWidget.UPDATE_DIFF_DECORATIONS_DELAY = 200; // ms\r\nDiffEditorWidget = __decorate([\r\n    __param(3, IClipboardService),\r\n    __param(4, IEditorWorkerService),\r\n    __param(5, IContextKeyService),\r\n    __param(6, IInstantiationService),\r\n    __param(7, ICodeEditorService),\r\n    __param(8, IThemeService),\r\n    __param(9, INotificationService),\r\n    __param(10, IContextMenuService),\r\n    __param(11, IEditorProgressService)\r\n], DiffEditorWidget);\r\nexport { DiffEditorWidget };\r\nclass DiffEditorWidgetStyle extends Disposable {\r\n    constructor(dataSource) {\r\n        super();\r\n        this._dataSource = dataSource;\r\n        this._insertColor = null;\r\n        this._removeColor = null;\r\n    }\r\n    applyColors(theme) {\r\n        const newInsertColor = (theme.getColor(diffInserted) || defaultInsertColor).transparent(2);\r\n        const newRemoveColor = (theme.getColor(diffRemoved) || defaultRemoveColor).transparent(2);\r\n        const hasChanges = !newInsertColor.equals(this._insertColor) || !newRemoveColor.equals(this._removeColor);\r\n        this._insertColor = newInsertColor;\r\n        this._removeColor = newRemoveColor;\r\n        return hasChanges;\r\n    }\r\n    getEditorsDiffDecorations(lineChanges, ignoreTrimWhitespace, renderIndicators, originalWhitespaces, modifiedWhitespaces) {\r\n        // Get view zones\r\n        modifiedWhitespaces = modifiedWhitespaces.sort((a, b) => {\r\n            return a.afterLineNumber - b.afterLineNumber;\r\n        });\r\n        originalWhitespaces = originalWhitespaces.sort((a, b) => {\r\n            return a.afterLineNumber - b.afterLineNumber;\r\n        });\r\n        const zones = this._getViewZones(lineChanges, originalWhitespaces, modifiedWhitespaces, renderIndicators);\r\n        // Get decorations & overview ruler zones\r\n        const originalDecorations = this._getOriginalEditorDecorations(lineChanges, ignoreTrimWhitespace, renderIndicators);\r\n        const modifiedDecorations = this._getModifiedEditorDecorations(lineChanges, ignoreTrimWhitespace, renderIndicators);\r\n        return {\r\n            original: {\r\n                decorations: originalDecorations.decorations,\r\n                overviewZones: originalDecorations.overviewZones,\r\n                zones: zones.original\r\n            },\r\n            modified: {\r\n                decorations: modifiedDecorations.decorations,\r\n                overviewZones: modifiedDecorations.overviewZones,\r\n                zones: zones.modified\r\n            }\r\n        };\r\n    }\r\n}\r\nclass ForeignViewZonesIterator {\r\n    constructor(source) {\r\n        this._source = source;\r\n        this._index = -1;\r\n        this.current = null;\r\n        this.advance();\r\n    }\r\n    advance() {\r\n        this._index++;\r\n        if (this._index < this._source.length) {\r\n            this.current = this._source[this._index];\r\n        }\r\n        else {\r\n            this.current = null;\r\n        }\r\n    }\r\n}\r\nclass ViewZonesComputer {\r\n    constructor(_lineChanges, _originalForeignVZ, _modifiedForeignVZ, _originalEditor, _modifiedEditor) {\r\n        this._lineChanges = _lineChanges;\r\n        this._originalForeignVZ = _originalForeignVZ;\r\n        this._modifiedForeignVZ = _modifiedForeignVZ;\r\n        this._originalEditor = _originalEditor;\r\n        this._modifiedEditor = _modifiedEditor;\r\n    }\r\n    static _getViewLineCount(editor, startLineNumber, endLineNumber) {\r\n        const model = editor.getModel();\r\n        const viewModel = editor._getViewModel();\r\n        if (model && viewModel) {\r\n            const viewRange = getViewRange(model, viewModel, startLineNumber, endLineNumber);\r\n            return (viewRange.endLineNumber - viewRange.startLineNumber + 1);\r\n        }\r\n        return (endLineNumber - startLineNumber + 1);\r\n    }\r\n    getViewZones() {\r\n        const originalLineHeight = this._originalEditor.getOption(53 /* lineHeight */);\r\n        const modifiedLineHeight = this._modifiedEditor.getOption(53 /* lineHeight */);\r\n        const originalHasWrapping = (this._originalEditor.getOption(125 /* wrappingInfo */).wrappingColumn !== -1);\r\n        const modifiedHasWrapping = (this._modifiedEditor.getOption(125 /* wrappingInfo */).wrappingColumn !== -1);\r\n        const hasWrapping = (originalHasWrapping || modifiedHasWrapping);\r\n        const originalModel = this._originalEditor.getModel();\r\n        const originalCoordinatesConverter = this._originalEditor._getViewModel().coordinatesConverter;\r\n        const modifiedCoordinatesConverter = this._modifiedEditor._getViewModel().coordinatesConverter;\r\n        const result = {\r\n            original: [],\r\n            modified: []\r\n        };\r\n        let lineChangeModifiedLength = 0;\r\n        let lineChangeOriginalLength = 0;\r\n        let originalEquivalentLineNumber = 0;\r\n        let modifiedEquivalentLineNumber = 0;\r\n        let originalEndEquivalentLineNumber = 0;\r\n        let modifiedEndEquivalentLineNumber = 0;\r\n        const sortMyViewZones = (a, b) => {\r\n            return a.afterLineNumber - b.afterLineNumber;\r\n        };\r\n        const addAndCombineIfPossible = (destination, item) => {\r\n            if (item.domNode === null && destination.length > 0) {\r\n                const lastItem = destination[destination.length - 1];\r\n                if (lastItem.afterLineNumber === item.afterLineNumber && lastItem.domNode === null) {\r\n                    lastItem.heightInLines += item.heightInLines;\r\n                    return;\r\n                }\r\n            }\r\n            destination.push(item);\r\n        };\r\n        const modifiedForeignVZ = new ForeignViewZonesIterator(this._modifiedForeignVZ);\r\n        const originalForeignVZ = new ForeignViewZonesIterator(this._originalForeignVZ);\r\n        let lastOriginalLineNumber = 1;\r\n        let lastModifiedLineNumber = 1;\r\n        // In order to include foreign view zones after the last line change, the for loop will iterate once more after the end of the `lineChanges` array\r\n        for (let i = 0, length = this._lineChanges.length; i <= length; i++) {\r\n            const lineChange = (i < length ? this._lineChanges[i] : null);\r\n            if (lineChange !== null) {\r\n                originalEquivalentLineNumber = lineChange.originalStartLineNumber + (lineChange.originalEndLineNumber > 0 ? -1 : 0);\r\n                modifiedEquivalentLineNumber = lineChange.modifiedStartLineNumber + (lineChange.modifiedEndLineNumber > 0 ? -1 : 0);\r\n                lineChangeOriginalLength = (lineChange.originalEndLineNumber > 0 ? ViewZonesComputer._getViewLineCount(this._originalEditor, lineChange.originalStartLineNumber, lineChange.originalEndLineNumber) : 0);\r\n                lineChangeModifiedLength = (lineChange.modifiedEndLineNumber > 0 ? ViewZonesComputer._getViewLineCount(this._modifiedEditor, lineChange.modifiedStartLineNumber, lineChange.modifiedEndLineNumber) : 0);\r\n                originalEndEquivalentLineNumber = Math.max(lineChange.originalStartLineNumber, lineChange.originalEndLineNumber);\r\n                modifiedEndEquivalentLineNumber = Math.max(lineChange.modifiedStartLineNumber, lineChange.modifiedEndLineNumber);\r\n            }\r\n            else {\r\n                // Increase to very large value to get the producing tests of foreign view zones running\r\n                originalEquivalentLineNumber += 10000000 + lineChangeOriginalLength;\r\n                modifiedEquivalentLineNumber += 10000000 + lineChangeModifiedLength;\r\n                originalEndEquivalentLineNumber = originalEquivalentLineNumber;\r\n                modifiedEndEquivalentLineNumber = modifiedEquivalentLineNumber;\r\n            }\r\n            // Each step produces view zones, and after producing them, we try to cancel them out, to avoid empty-empty view zone cases\r\n            let stepOriginal = [];\r\n            let stepModified = [];\r\n            // ---------------------------- PRODUCE VIEW ZONES\r\n            // [PRODUCE] View zones due to line mapping differences (equal lines but wrapped differently)\r\n            if (hasWrapping) {\r\n                let count;\r\n                if (lineChange) {\r\n                    if (lineChange.originalEndLineNumber > 0) {\r\n                        count = lineChange.originalStartLineNumber - lastOriginalLineNumber;\r\n                    }\r\n                    else {\r\n                        count = lineChange.modifiedStartLineNumber - lastModifiedLineNumber;\r\n                    }\r\n                }\r\n                else {\r\n                    count = originalModel.getLineCount() - lastOriginalLineNumber;\r\n                }\r\n                for (let i = 0; i < count; i++) {\r\n                    const originalLineNumber = lastOriginalLineNumber + i;\r\n                    const modifiedLineNumber = lastModifiedLineNumber + i;\r\n                    const originalViewLineCount = originalCoordinatesConverter.getModelLineViewLineCount(originalLineNumber);\r\n                    const modifiedViewLineCount = modifiedCoordinatesConverter.getModelLineViewLineCount(modifiedLineNumber);\r\n                    if (originalViewLineCount < modifiedViewLineCount) {\r\n                        stepOriginal.push({\r\n                            afterLineNumber: originalLineNumber,\r\n                            heightInLines: modifiedViewLineCount - originalViewLineCount,\r\n                            domNode: null,\r\n                            marginDomNode: null\r\n                        });\r\n                    }\r\n                    else if (originalViewLineCount > modifiedViewLineCount) {\r\n                        stepModified.push({\r\n                            afterLineNumber: modifiedLineNumber,\r\n                            heightInLines: originalViewLineCount - modifiedViewLineCount,\r\n                            domNode: null,\r\n                            marginDomNode: null\r\n                        });\r\n                    }\r\n                }\r\n                if (lineChange) {\r\n                    lastOriginalLineNumber = (lineChange.originalEndLineNumber > 0 ? lineChange.originalEndLineNumber : lineChange.originalStartLineNumber) + 1;\r\n                    lastModifiedLineNumber = (lineChange.modifiedEndLineNumber > 0 ? lineChange.modifiedEndLineNumber : lineChange.modifiedStartLineNumber) + 1;\r\n                }\r\n            }\r\n            // [PRODUCE] View zone(s) in original-side due to foreign view zone(s) in modified-side\r\n            while (modifiedForeignVZ.current && modifiedForeignVZ.current.afterLineNumber <= modifiedEndEquivalentLineNumber) {\r\n                let viewZoneLineNumber;\r\n                if (modifiedForeignVZ.current.afterLineNumber <= modifiedEquivalentLineNumber) {\r\n                    viewZoneLineNumber = originalEquivalentLineNumber - modifiedEquivalentLineNumber + modifiedForeignVZ.current.afterLineNumber;\r\n                }\r\n                else {\r\n                    viewZoneLineNumber = originalEndEquivalentLineNumber;\r\n                }\r\n                let marginDomNode = null;\r\n                if (lineChange && lineChange.modifiedStartLineNumber <= modifiedForeignVZ.current.afterLineNumber && modifiedForeignVZ.current.afterLineNumber <= lineChange.modifiedEndLineNumber) {\r\n                    marginDomNode = this._createOriginalMarginDomNodeForModifiedForeignViewZoneInAddedRegion();\r\n                }\r\n                stepOriginal.push({\r\n                    afterLineNumber: viewZoneLineNumber,\r\n                    heightInLines: modifiedForeignVZ.current.height / modifiedLineHeight,\r\n                    domNode: null,\r\n                    marginDomNode: marginDomNode\r\n                });\r\n                modifiedForeignVZ.advance();\r\n            }\r\n            // [PRODUCE] View zone(s) in modified-side due to foreign view zone(s) in original-side\r\n            while (originalForeignVZ.current && originalForeignVZ.current.afterLineNumber <= originalEndEquivalentLineNumber) {\r\n                let viewZoneLineNumber;\r\n                if (originalForeignVZ.current.afterLineNumber <= originalEquivalentLineNumber) {\r\n                    viewZoneLineNumber = modifiedEquivalentLineNumber - originalEquivalentLineNumber + originalForeignVZ.current.afterLineNumber;\r\n                }\r\n                else {\r\n                    viewZoneLineNumber = modifiedEndEquivalentLineNumber;\r\n                }\r\n                stepModified.push({\r\n                    afterLineNumber: viewZoneLineNumber,\r\n                    heightInLines: originalForeignVZ.current.height / originalLineHeight,\r\n                    domNode: null\r\n                });\r\n                originalForeignVZ.advance();\r\n            }\r\n            if (lineChange !== null && isChangeOrInsert(lineChange)) {\r\n                const r = this._produceOriginalFromDiff(lineChange, lineChangeOriginalLength, lineChangeModifiedLength);\r\n                if (r) {\r\n                    stepOriginal.push(r);\r\n                }\r\n            }\r\n            if (lineChange !== null && isChangeOrDelete(lineChange)) {\r\n                const r = this._produceModifiedFromDiff(lineChange, lineChangeOriginalLength, lineChangeModifiedLength);\r\n                if (r) {\r\n                    stepModified.push(r);\r\n                }\r\n            }\r\n            // ---------------------------- END PRODUCE VIEW ZONES\r\n            // ---------------------------- EMIT MINIMAL VIEW ZONES\r\n            // [CANCEL & EMIT] Try to cancel view zones out\r\n            let stepOriginalIndex = 0;\r\n            let stepModifiedIndex = 0;\r\n            stepOriginal = stepOriginal.sort(sortMyViewZones);\r\n            stepModified = stepModified.sort(sortMyViewZones);\r\n            while (stepOriginalIndex < stepOriginal.length && stepModifiedIndex < stepModified.length) {\r\n                const original = stepOriginal[stepOriginalIndex];\r\n                const modified = stepModified[stepModifiedIndex];\r\n                const originalDelta = original.afterLineNumber - originalEquivalentLineNumber;\r\n                const modifiedDelta = modified.afterLineNumber - modifiedEquivalentLineNumber;\r\n                if (originalDelta < modifiedDelta) {\r\n                    addAndCombineIfPossible(result.original, original);\r\n                    stepOriginalIndex++;\r\n                }\r\n                else if (modifiedDelta < originalDelta) {\r\n                    addAndCombineIfPossible(result.modified, modified);\r\n                    stepModifiedIndex++;\r\n                }\r\n                else if (original.shouldNotShrink) {\r\n                    addAndCombineIfPossible(result.original, original);\r\n                    stepOriginalIndex++;\r\n                }\r\n                else if (modified.shouldNotShrink) {\r\n                    addAndCombineIfPossible(result.modified, modified);\r\n                    stepModifiedIndex++;\r\n                }\r\n                else {\r\n                    if (original.heightInLines >= modified.heightInLines) {\r\n                        // modified view zone gets removed\r\n                        original.heightInLines -= modified.heightInLines;\r\n                        stepModifiedIndex++;\r\n                    }\r\n                    else {\r\n                        // original view zone gets removed\r\n                        modified.heightInLines -= original.heightInLines;\r\n                        stepOriginalIndex++;\r\n                    }\r\n                }\r\n            }\r\n            // [EMIT] Remaining original view zones\r\n            while (stepOriginalIndex < stepOriginal.length) {\r\n                addAndCombineIfPossible(result.original, stepOriginal[stepOriginalIndex]);\r\n                stepOriginalIndex++;\r\n            }\r\n            // [EMIT] Remaining modified view zones\r\n            while (stepModifiedIndex < stepModified.length) {\r\n                addAndCombineIfPossible(result.modified, stepModified[stepModifiedIndex]);\r\n                stepModifiedIndex++;\r\n            }\r\n            // ---------------------------- END EMIT MINIMAL VIEW ZONES\r\n        }\r\n        return {\r\n            original: ViewZonesComputer._ensureDomNodes(result.original),\r\n            modified: ViewZonesComputer._ensureDomNodes(result.modified),\r\n        };\r\n    }\r\n    static _ensureDomNodes(zones) {\r\n        return zones.map((z) => {\r\n            if (!z.domNode) {\r\n                z.domNode = createFakeLinesDiv();\r\n            }\r\n            return z;\r\n        });\r\n    }\r\n}\r\nfunction createDecoration(startLineNumber, startColumn, endLineNumber, endColumn, options) {\r\n    return {\r\n        range: new Range(startLineNumber, startColumn, endLineNumber, endColumn),\r\n        options: options\r\n    };\r\n}\r\nconst DECORATIONS = {\r\n    charDelete: ModelDecorationOptions.register({\r\n        className: 'char-delete'\r\n    }),\r\n    charDeleteWholeLine: ModelDecorationOptions.register({\r\n        className: 'char-delete',\r\n        isWholeLine: true\r\n    }),\r\n    charInsert: ModelDecorationOptions.register({\r\n        className: 'char-insert'\r\n    }),\r\n    charInsertWholeLine: ModelDecorationOptions.register({\r\n        className: 'char-insert',\r\n        isWholeLine: true\r\n    }),\r\n    lineInsert: ModelDecorationOptions.register({\r\n        className: 'line-insert',\r\n        marginClassName: 'line-insert',\r\n        isWholeLine: true\r\n    }),\r\n    lineInsertWithSign: ModelDecorationOptions.register({\r\n        className: 'line-insert',\r\n        linesDecorationsClassName: 'insert-sign ' + ThemeIcon.asClassName(diffInsertIcon),\r\n        marginClassName: 'line-insert',\r\n        isWholeLine: true\r\n    }),\r\n    lineDelete: ModelDecorationOptions.register({\r\n        className: 'line-delete',\r\n        marginClassName: 'line-delete',\r\n        isWholeLine: true\r\n    }),\r\n    lineDeleteWithSign: ModelDecorationOptions.register({\r\n        className: 'line-delete',\r\n        linesDecorationsClassName: 'delete-sign ' + ThemeIcon.asClassName(diffRemoveIcon),\r\n        marginClassName: 'line-delete',\r\n        isWholeLine: true\r\n    }),\r\n    lineDeleteMargin: ModelDecorationOptions.register({\r\n        marginClassName: 'line-delete',\r\n    })\r\n};\r\nclass DiffEditorWidgetSideBySide extends DiffEditorWidgetStyle {\r\n    constructor(dataSource, enableSplitViewResizing) {\r\n        super(dataSource);\r\n        this._disableSash = (enableSplitViewResizing === false);\r\n        this._sashRatio = null;\r\n        this._sashPosition = null;\r\n        this._startSashPosition = null;\r\n        this._sash = this._register(new Sash(this._dataSource.getContainerDomNode(), this, { orientation: 0 /* VERTICAL */ }));\r\n        if (this._disableSash) {\r\n            this._sash.state = 0 /* Disabled */;\r\n        }\r\n        this._sash.onDidStart(() => this._onSashDragStart());\r\n        this._sash.onDidChange((e) => this._onSashDrag(e));\r\n        this._sash.onDidEnd(() => this._onSashDragEnd());\r\n        this._sash.onDidReset(() => this._onSashReset());\r\n    }\r\n    setEnableSplitViewResizing(enableSplitViewResizing) {\r\n        const newDisableSash = (enableSplitViewResizing === false);\r\n        if (this._disableSash !== newDisableSash) {\r\n            this._disableSash = newDisableSash;\r\n            this._sash.state = this._disableSash ? 0 /* Disabled */ : 3 /* Enabled */;\r\n        }\r\n    }\r\n    layout(sashRatio = this._sashRatio) {\r\n        const w = this._dataSource.getWidth();\r\n        const contentWidth = w - (this._dataSource.getOptions().renderOverviewRuler ? DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH : 0);\r\n        let sashPosition = Math.floor((sashRatio || 0.5) * contentWidth);\r\n        const midPoint = Math.floor(0.5 * contentWidth);\r\n        sashPosition = this._disableSash ? midPoint : sashPosition || midPoint;\r\n        if (contentWidth > DiffEditorWidgetSideBySide.MINIMUM_EDITOR_WIDTH * 2) {\r\n            if (sashPosition < DiffEditorWidgetSideBySide.MINIMUM_EDITOR_WIDTH) {\r\n                sashPosition = DiffEditorWidgetSideBySide.MINIMUM_EDITOR_WIDTH;\r\n            }\r\n            if (sashPosition > contentWidth - DiffEditorWidgetSideBySide.MINIMUM_EDITOR_WIDTH) {\r\n                sashPosition = contentWidth - DiffEditorWidgetSideBySide.MINIMUM_EDITOR_WIDTH;\r\n            }\r\n        }\r\n        else {\r\n            sashPosition = midPoint;\r\n        }\r\n        if (this._sashPosition !== sashPosition) {\r\n            this._sashPosition = sashPosition;\r\n            this._sash.layout();\r\n        }\r\n        return this._sashPosition;\r\n    }\r\n    _onSashDragStart() {\r\n        this._startSashPosition = this._sashPosition;\r\n    }\r\n    _onSashDrag(e) {\r\n        const w = this._dataSource.getWidth();\r\n        const contentWidth = w - (this._dataSource.getOptions().renderOverviewRuler ? DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH : 0);\r\n        const sashPosition = this.layout((this._startSashPosition + (e.currentX - e.startX)) / contentWidth);\r\n        this._sashRatio = sashPosition / contentWidth;\r\n        this._dataSource.relayoutEditors();\r\n    }\r\n    _onSashDragEnd() {\r\n        this._sash.layout();\r\n    }\r\n    _onSashReset() {\r\n        this._sashRatio = 0.5;\r\n        this._dataSource.relayoutEditors();\r\n        this._sash.layout();\r\n    }\r\n    getVerticalSashTop(sash) {\r\n        return 0;\r\n    }\r\n    getVerticalSashLeft(sash) {\r\n        return this._sashPosition;\r\n    }\r\n    getVerticalSashHeight(sash) {\r\n        return this._dataSource.getHeight();\r\n    }\r\n    _getViewZones(lineChanges, originalForeignVZ, modifiedForeignVZ) {\r\n        const originalEditor = this._dataSource.getOriginalEditor();\r\n        const modifiedEditor = this._dataSource.getModifiedEditor();\r\n        const c = new SideBySideViewZonesComputer(lineChanges, originalForeignVZ, modifiedForeignVZ, originalEditor, modifiedEditor);\r\n        return c.getViewZones();\r\n    }\r\n    _getOriginalEditorDecorations(lineChanges, ignoreTrimWhitespace, renderIndicators) {\r\n        const originalEditor = this._dataSource.getOriginalEditor();\r\n        const overviewZoneColor = String(this._removeColor);\r\n        const result = {\r\n            decorations: [],\r\n            overviewZones: []\r\n        };\r\n        const originalModel = originalEditor.getModel();\r\n        const originalViewModel = originalEditor._getViewModel();\r\n        for (const lineChange of lineChanges) {\r\n            if (isChangeOrDelete(lineChange)) {\r\n                result.decorations.push({\r\n                    range: new Range(lineChange.originalStartLineNumber, 1, lineChange.originalEndLineNumber, 1073741824 /* MAX_SAFE_SMALL_INTEGER */),\r\n                    options: (renderIndicators ? DECORATIONS.lineDeleteWithSign : DECORATIONS.lineDelete)\r\n                });\r\n                if (!isChangeOrInsert(lineChange) || !lineChange.charChanges) {\r\n                    result.decorations.push(createDecoration(lineChange.originalStartLineNumber, 1, lineChange.originalEndLineNumber, 1073741824 /* MAX_SAFE_SMALL_INTEGER */, DECORATIONS.charDeleteWholeLine));\r\n                }\r\n                const viewRange = getViewRange(originalModel, originalViewModel, lineChange.originalStartLineNumber, lineChange.originalEndLineNumber);\r\n                result.overviewZones.push(new OverviewRulerZone(viewRange.startLineNumber, viewRange.endLineNumber, overviewZoneColor));\r\n                if (lineChange.charChanges) {\r\n                    for (const charChange of lineChange.charChanges) {\r\n                        if (isChangeOrDelete(charChange)) {\r\n                            if (ignoreTrimWhitespace) {\r\n                                for (let lineNumber = charChange.originalStartLineNumber; lineNumber <= charChange.originalEndLineNumber; lineNumber++) {\r\n                                    let startColumn;\r\n                                    let endColumn;\r\n                                    if (lineNumber === charChange.originalStartLineNumber) {\r\n                                        startColumn = charChange.originalStartColumn;\r\n                                    }\r\n                                    else {\r\n                                        startColumn = originalModel.getLineFirstNonWhitespaceColumn(lineNumber);\r\n                                    }\r\n                                    if (lineNumber === charChange.originalEndLineNumber) {\r\n                                        endColumn = charChange.originalEndColumn;\r\n                                    }\r\n                                    else {\r\n                                        endColumn = originalModel.getLineLastNonWhitespaceColumn(lineNumber);\r\n                                    }\r\n                                    result.decorations.push(createDecoration(lineNumber, startColumn, lineNumber, endColumn, DECORATIONS.charDelete));\r\n                                }\r\n                            }\r\n                            else {\r\n                                result.decorations.push(createDecoration(charChange.originalStartLineNumber, charChange.originalStartColumn, charChange.originalEndLineNumber, charChange.originalEndColumn, DECORATIONS.charDelete));\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    _getModifiedEditorDecorations(lineChanges, ignoreTrimWhitespace, renderIndicators) {\r\n        const modifiedEditor = this._dataSource.getModifiedEditor();\r\n        const overviewZoneColor = String(this._insertColor);\r\n        const result = {\r\n            decorations: [],\r\n            overviewZones: []\r\n        };\r\n        const modifiedModel = modifiedEditor.getModel();\r\n        const modifiedViewModel = modifiedEditor._getViewModel();\r\n        for (const lineChange of lineChanges) {\r\n            if (isChangeOrInsert(lineChange)) {\r\n                result.decorations.push({\r\n                    range: new Range(lineChange.modifiedStartLineNumber, 1, lineChange.modifiedEndLineNumber, 1073741824 /* MAX_SAFE_SMALL_INTEGER */),\r\n                    options: (renderIndicators ? DECORATIONS.lineInsertWithSign : DECORATIONS.lineInsert)\r\n                });\r\n                if (!isChangeOrDelete(lineChange) || !lineChange.charChanges) {\r\n                    result.decorations.push(createDecoration(lineChange.modifiedStartLineNumber, 1, lineChange.modifiedEndLineNumber, 1073741824 /* MAX_SAFE_SMALL_INTEGER */, DECORATIONS.charInsertWholeLine));\r\n                }\r\n                const viewRange = getViewRange(modifiedModel, modifiedViewModel, lineChange.modifiedStartLineNumber, lineChange.modifiedEndLineNumber);\r\n                result.overviewZones.push(new OverviewRulerZone(viewRange.startLineNumber, viewRange.endLineNumber, overviewZoneColor));\r\n                if (lineChange.charChanges) {\r\n                    for (const charChange of lineChange.charChanges) {\r\n                        if (isChangeOrInsert(charChange)) {\r\n                            if (ignoreTrimWhitespace) {\r\n                                for (let lineNumber = charChange.modifiedStartLineNumber; lineNumber <= charChange.modifiedEndLineNumber; lineNumber++) {\r\n                                    let startColumn;\r\n                                    let endColumn;\r\n                                    if (lineNumber === charChange.modifiedStartLineNumber) {\r\n                                        startColumn = charChange.modifiedStartColumn;\r\n                                    }\r\n                                    else {\r\n                                        startColumn = modifiedModel.getLineFirstNonWhitespaceColumn(lineNumber);\r\n                                    }\r\n                                    if (lineNumber === charChange.modifiedEndLineNumber) {\r\n                                        endColumn = charChange.modifiedEndColumn;\r\n                                    }\r\n                                    else {\r\n                                        endColumn = modifiedModel.getLineLastNonWhitespaceColumn(lineNumber);\r\n                                    }\r\n                                    result.decorations.push(createDecoration(lineNumber, startColumn, lineNumber, endColumn, DECORATIONS.charInsert));\r\n                                }\r\n                            }\r\n                            else {\r\n                                result.decorations.push(createDecoration(charChange.modifiedStartLineNumber, charChange.modifiedStartColumn, charChange.modifiedEndLineNumber, charChange.modifiedEndColumn, DECORATIONS.charInsert));\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n}\r\nDiffEditorWidgetSideBySide.MINIMUM_EDITOR_WIDTH = 100;\r\nclass SideBySideViewZonesComputer extends ViewZonesComputer {\r\n    constructor(lineChanges, originalForeignVZ, modifiedForeignVZ, originalEditor, modifiedEditor) {\r\n        super(lineChanges, originalForeignVZ, modifiedForeignVZ, originalEditor, modifiedEditor);\r\n    }\r\n    _createOriginalMarginDomNodeForModifiedForeignViewZoneInAddedRegion() {\r\n        return null;\r\n    }\r\n    _produceOriginalFromDiff(lineChange, lineChangeOriginalLength, lineChangeModifiedLength) {\r\n        if (lineChangeModifiedLength > lineChangeOriginalLength) {\r\n            return {\r\n                afterLineNumber: Math.max(lineChange.originalStartLineNumber, lineChange.originalEndLineNumber),\r\n                heightInLines: (lineChangeModifiedLength - lineChangeOriginalLength),\r\n                domNode: null\r\n            };\r\n        }\r\n        return null;\r\n    }\r\n    _produceModifiedFromDiff(lineChange, lineChangeOriginalLength, lineChangeModifiedLength) {\r\n        if (lineChangeOriginalLength > lineChangeModifiedLength) {\r\n            return {\r\n                afterLineNumber: Math.max(lineChange.modifiedStartLineNumber, lineChange.modifiedEndLineNumber),\r\n                heightInLines: (lineChangeOriginalLength - lineChangeModifiedLength),\r\n                domNode: null\r\n            };\r\n        }\r\n        return null;\r\n    }\r\n}\r\nclass DiffEditorWidgetInline extends DiffEditorWidgetStyle {\r\n    constructor(dataSource, enableSplitViewResizing) {\r\n        super(dataSource);\r\n        this._decorationsLeft = dataSource.getOriginalEditor().getLayoutInfo().decorationsLeft;\r\n        this._register(dataSource.getOriginalEditor().onDidLayoutChange((layoutInfo) => {\r\n            if (this._decorationsLeft !== layoutInfo.decorationsLeft) {\r\n                this._decorationsLeft = layoutInfo.decorationsLeft;\r\n                dataSource.relayoutEditors();\r\n            }\r\n        }));\r\n    }\r\n    setEnableSplitViewResizing(enableSplitViewResizing) {\r\n        // Nothing to do..\r\n    }\r\n    _getViewZones(lineChanges, originalForeignVZ, modifiedForeignVZ, renderIndicators) {\r\n        const originalEditor = this._dataSource.getOriginalEditor();\r\n        const modifiedEditor = this._dataSource.getModifiedEditor();\r\n        const computer = new InlineViewZonesComputer(lineChanges, originalForeignVZ, modifiedForeignVZ, originalEditor, modifiedEditor, renderIndicators);\r\n        return computer.getViewZones();\r\n    }\r\n    _getOriginalEditorDecorations(lineChanges, ignoreTrimWhitespace, renderIndicators) {\r\n        const overviewZoneColor = String(this._removeColor);\r\n        const result = {\r\n            decorations: [],\r\n            overviewZones: []\r\n        };\r\n        const originalEditor = this._dataSource.getOriginalEditor();\r\n        const originalModel = originalEditor.getModel();\r\n        const originalViewModel = originalEditor._getViewModel();\r\n        for (const lineChange of lineChanges) {\r\n            // Add overview zones in the overview ruler\r\n            if (isChangeOrDelete(lineChange)) {\r\n                result.decorations.push({\r\n                    range: new Range(lineChange.originalStartLineNumber, 1, lineChange.originalEndLineNumber, 1073741824 /* MAX_SAFE_SMALL_INTEGER */),\r\n                    options: DECORATIONS.lineDeleteMargin\r\n                });\r\n                const viewRange = getViewRange(originalModel, originalViewModel, lineChange.originalStartLineNumber, lineChange.originalEndLineNumber);\r\n                result.overviewZones.push(new OverviewRulerZone(viewRange.startLineNumber, viewRange.endLineNumber, overviewZoneColor));\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    _getModifiedEditorDecorations(lineChanges, ignoreTrimWhitespace, renderIndicators) {\r\n        const modifiedEditor = this._dataSource.getModifiedEditor();\r\n        const overviewZoneColor = String(this._insertColor);\r\n        const result = {\r\n            decorations: [],\r\n            overviewZones: []\r\n        };\r\n        const modifiedModel = modifiedEditor.getModel();\r\n        const modifiedViewModel = modifiedEditor._getViewModel();\r\n        for (const lineChange of lineChanges) {\r\n            // Add decorations & overview zones\r\n            if (isChangeOrInsert(lineChange)) {\r\n                result.decorations.push({\r\n                    range: new Range(lineChange.modifiedStartLineNumber, 1, lineChange.modifiedEndLineNumber, 1073741824 /* MAX_SAFE_SMALL_INTEGER */),\r\n                    options: (renderIndicators ? DECORATIONS.lineInsertWithSign : DECORATIONS.lineInsert)\r\n                });\r\n                const viewRange = getViewRange(modifiedModel, modifiedViewModel, lineChange.modifiedStartLineNumber, lineChange.modifiedEndLineNumber);\r\n                result.overviewZones.push(new OverviewRulerZone(viewRange.startLineNumber, viewRange.endLineNumber, overviewZoneColor));\r\n                if (lineChange.charChanges) {\r\n                    for (const charChange of lineChange.charChanges) {\r\n                        if (isChangeOrInsert(charChange)) {\r\n                            if (ignoreTrimWhitespace) {\r\n                                for (let lineNumber = charChange.modifiedStartLineNumber; lineNumber <= charChange.modifiedEndLineNumber; lineNumber++) {\r\n                                    let startColumn;\r\n                                    let endColumn;\r\n                                    if (lineNumber === charChange.modifiedStartLineNumber) {\r\n                                        startColumn = charChange.modifiedStartColumn;\r\n                                    }\r\n                                    else {\r\n                                        startColumn = modifiedModel.getLineFirstNonWhitespaceColumn(lineNumber);\r\n                                    }\r\n                                    if (lineNumber === charChange.modifiedEndLineNumber) {\r\n                                        endColumn = charChange.modifiedEndColumn;\r\n                                    }\r\n                                    else {\r\n                                        endColumn = modifiedModel.getLineLastNonWhitespaceColumn(lineNumber);\r\n                                    }\r\n                                    result.decorations.push(createDecoration(lineNumber, startColumn, lineNumber, endColumn, DECORATIONS.charInsert));\r\n                                }\r\n                            }\r\n                            else {\r\n                                result.decorations.push(createDecoration(charChange.modifiedStartLineNumber, charChange.modifiedStartColumn, charChange.modifiedEndLineNumber, charChange.modifiedEndColumn, DECORATIONS.charInsert));\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    result.decorations.push(createDecoration(lineChange.modifiedStartLineNumber, 1, lineChange.modifiedEndLineNumber, 1073741824 /* MAX_SAFE_SMALL_INTEGER */, DECORATIONS.charInsertWholeLine));\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    layout() {\r\n        // An editor should not be smaller than 5px\r\n        return Math.max(5, this._decorationsLeft);\r\n    }\r\n}\r\nclass InlineViewZonesComputer extends ViewZonesComputer {\r\n    constructor(lineChanges, originalForeignVZ, modifiedForeignVZ, originalEditor, modifiedEditor, renderIndicators) {\r\n        super(lineChanges, originalForeignVZ, modifiedForeignVZ, originalEditor, modifiedEditor);\r\n        this._originalModel = originalEditor.getModel();\r\n        this._renderIndicators = renderIndicators;\r\n        this._pendingLineChange = [];\r\n        this._pendingViewZones = [];\r\n        this._lineBreaksComputer = this._modifiedEditor._getViewModel().createLineBreaksComputer();\r\n    }\r\n    getViewZones() {\r\n        const result = super.getViewZones();\r\n        this._finalize(result);\r\n        return result;\r\n    }\r\n    _createOriginalMarginDomNodeForModifiedForeignViewZoneInAddedRegion() {\r\n        const result = document.createElement('div');\r\n        result.className = 'inline-added-margin-view-zone';\r\n        return result;\r\n    }\r\n    _produceOriginalFromDiff(lineChange, lineChangeOriginalLength, lineChangeModifiedLength) {\r\n        const marginDomNode = document.createElement('div');\r\n        marginDomNode.className = 'inline-added-margin-view-zone';\r\n        return {\r\n            afterLineNumber: Math.max(lineChange.originalStartLineNumber, lineChange.originalEndLineNumber),\r\n            heightInLines: lineChangeModifiedLength,\r\n            domNode: document.createElement('div'),\r\n            marginDomNode: marginDomNode\r\n        };\r\n    }\r\n    _produceModifiedFromDiff(lineChange, lineChangeOriginalLength, lineChangeModifiedLength) {\r\n        const domNode = document.createElement('div');\r\n        domNode.className = `view-lines line-delete ${MOUSE_CURSOR_TEXT_CSS_CLASS_NAME}`;\r\n        const marginDomNode = document.createElement('div');\r\n        marginDomNode.className = 'inline-deleted-margin-view-zone';\r\n        const viewZone = {\r\n            shouldNotShrink: true,\r\n            afterLineNumber: (lineChange.modifiedEndLineNumber === 0 ? lineChange.modifiedStartLineNumber : lineChange.modifiedStartLineNumber - 1),\r\n            heightInLines: lineChangeOriginalLength,\r\n            minWidthInPx: 0,\r\n            domNode: domNode,\r\n            marginDomNode: marginDomNode,\r\n            diff: {\r\n                originalStartLineNumber: lineChange.originalStartLineNumber,\r\n                originalEndLineNumber: lineChange.originalEndLineNumber,\r\n                modifiedStartLineNumber: lineChange.modifiedStartLineNumber,\r\n                modifiedEndLineNumber: lineChange.modifiedEndLineNumber,\r\n                originalModel: this._originalModel,\r\n                viewLineCounts: null,\r\n            }\r\n        };\r\n        for (let lineNumber = lineChange.originalStartLineNumber; lineNumber <= lineChange.originalEndLineNumber; lineNumber++) {\r\n            this._lineBreaksComputer.addRequest(this._originalModel.getLineContent(lineNumber), null);\r\n        }\r\n        this._pendingLineChange.push(lineChange);\r\n        this._pendingViewZones.push(viewZone);\r\n        return viewZone;\r\n    }\r\n    _finalize(result) {\r\n        const modifiedEditorOptions = this._modifiedEditor.getOptions();\r\n        const tabSize = this._modifiedEditor.getModel().getOptions().tabSize;\r\n        const fontInfo = modifiedEditorOptions.get(38 /* fontInfo */);\r\n        const disableMonospaceOptimizations = modifiedEditorOptions.get(26 /* disableMonospaceOptimizations */);\r\n        const typicalHalfwidthCharacterWidth = fontInfo.typicalHalfwidthCharacterWidth;\r\n        const scrollBeyondLastColumn = modifiedEditorOptions.get(88 /* scrollBeyondLastColumn */);\r\n        const mightContainNonBasicASCII = this._originalModel.mightContainNonBasicASCII();\r\n        const mightContainRTL = this._originalModel.mightContainRTL();\r\n        const lineHeight = modifiedEditorOptions.get(53 /* lineHeight */);\r\n        const layoutInfo = modifiedEditorOptions.get(124 /* layoutInfo */);\r\n        const lineDecorationsWidth = layoutInfo.decorationsWidth;\r\n        const stopRenderingLineAfter = modifiedEditorOptions.get(100 /* stopRenderingLineAfter */);\r\n        const renderWhitespace = modifiedEditorOptions.get(83 /* renderWhitespace */);\r\n        const renderControlCharacters = modifiedEditorOptions.get(77 /* renderControlCharacters */);\r\n        const fontLigatures = modifiedEditorOptions.get(39 /* fontLigatures */);\r\n        const lineBreaks = this._lineBreaksComputer.finalize();\r\n        let lineBreakIndex = 0;\r\n        for (let i = 0; i < this._pendingLineChange.length; i++) {\r\n            const lineChange = this._pendingLineChange[i];\r\n            const viewZone = this._pendingViewZones[i];\r\n            const domNode = viewZone.domNode;\r\n            Configuration.applyFontInfoSlow(domNode, fontInfo);\r\n            const marginDomNode = viewZone.marginDomNode;\r\n            Configuration.applyFontInfoSlow(marginDomNode, fontInfo);\r\n            const decorations = [];\r\n            if (lineChange.charChanges) {\r\n                for (const charChange of lineChange.charChanges) {\r\n                    if (isChangeOrDelete(charChange)) {\r\n                        decorations.push(new InlineDecoration(new Range(charChange.originalStartLineNumber, charChange.originalStartColumn, charChange.originalEndLineNumber, charChange.originalEndColumn), 'char-delete', 0 /* Regular */));\r\n                    }\r\n                }\r\n            }\r\n            const hasCharChanges = (decorations.length > 0);\r\n            const sb = createStringBuilder(10000);\r\n            let maxCharsPerLine = 0;\r\n            let renderedLineCount = 0;\r\n            let viewLineCounts = null;\r\n            for (let lineNumber = lineChange.originalStartLineNumber; lineNumber <= lineChange.originalEndLineNumber; lineNumber++) {\r\n                const lineIndex = lineNumber - lineChange.originalStartLineNumber;\r\n                const lineTokens = this._originalModel.getLineTokens(lineNumber);\r\n                const lineContent = lineTokens.getLineContent();\r\n                const lineBreakData = lineBreaks[lineBreakIndex++];\r\n                const actualDecorations = LineDecoration.filter(decorations, lineNumber, 1, lineContent.length + 1);\r\n                if (lineBreakData) {\r\n                    let lastBreakOffset = 0;\r\n                    for (const breakOffset of lineBreakData.breakOffsets) {\r\n                        const viewLineTokens = lineTokens.sliceAndInflate(lastBreakOffset, breakOffset, 0);\r\n                        const viewLineContent = lineContent.substring(lastBreakOffset, breakOffset);\r\n                        maxCharsPerLine = Math.max(maxCharsPerLine, this._renderOriginalLine(renderedLineCount++, viewLineContent, viewLineTokens, LineDecoration.extractWrapped(actualDecorations, lastBreakOffset, breakOffset), hasCharChanges, mightContainNonBasicASCII, mightContainRTL, fontInfo, disableMonospaceOptimizations, lineHeight, lineDecorationsWidth, stopRenderingLineAfter, renderWhitespace, renderControlCharacters, fontLigatures, tabSize, sb, marginDomNode));\r\n                        lastBreakOffset = breakOffset;\r\n                    }\r\n                    if (!viewLineCounts) {\r\n                        viewLineCounts = [];\r\n                    }\r\n                    // make sure all lines before this one have an entry in `viewLineCounts`\r\n                    while (viewLineCounts.length < lineIndex) {\r\n                        viewLineCounts[viewLineCounts.length] = 1;\r\n                    }\r\n                    viewLineCounts[lineIndex] = lineBreakData.breakOffsets.length;\r\n                    viewZone.heightInLines += (lineBreakData.breakOffsets.length - 1);\r\n                    const marginDomNode2 = document.createElement('div');\r\n                    marginDomNode2.className = 'line-delete';\r\n                    result.original.push({\r\n                        afterLineNumber: lineNumber,\r\n                        afterColumn: 0,\r\n                        heightInLines: lineBreakData.breakOffsets.length - 1,\r\n                        domNode: createFakeLinesDiv(),\r\n                        marginDomNode: marginDomNode2\r\n                    });\r\n                }\r\n                else {\r\n                    maxCharsPerLine = Math.max(maxCharsPerLine, this._renderOriginalLine(renderedLineCount++, lineContent, lineTokens, actualDecorations, hasCharChanges, mightContainNonBasicASCII, mightContainRTL, fontInfo, disableMonospaceOptimizations, lineHeight, lineDecorationsWidth, stopRenderingLineAfter, renderWhitespace, renderControlCharacters, fontLigatures, tabSize, sb, marginDomNode));\r\n                }\r\n            }\r\n            maxCharsPerLine += scrollBeyondLastColumn;\r\n            const html = sb.build();\r\n            const trustedhtml = ttPolicy ? ttPolicy.createHTML(html) : html;\r\n            domNode.innerHTML = trustedhtml;\r\n            viewZone.minWidthInPx = (maxCharsPerLine * typicalHalfwidthCharacterWidth);\r\n            if (viewLineCounts) {\r\n                // make sure all lines have an entry in `viewLineCounts`\r\n                const cnt = lineChange.originalEndLineNumber - lineChange.originalStartLineNumber;\r\n                while (viewLineCounts.length <= cnt) {\r\n                    viewLineCounts[viewLineCounts.length] = 1;\r\n                }\r\n            }\r\n            viewZone.diff.viewLineCounts = viewLineCounts;\r\n        }\r\n        result.original.sort((a, b) => {\r\n            return a.afterLineNumber - b.afterLineNumber;\r\n        });\r\n    }\r\n    _renderOriginalLine(renderedLineCount, lineContent, lineTokens, decorations, hasCharChanges, mightContainNonBasicASCII, mightContainRTL, fontInfo, disableMonospaceOptimizations, lineHeight, lineDecorationsWidth, stopRenderingLineAfter, renderWhitespace, renderControlCharacters, fontLigatures, tabSize, sb, marginDomNode) {\r\n        sb.appendASCIIString('<div class=\"view-line');\r\n        if (!hasCharChanges) {\r\n            // No char changes\r\n            sb.appendASCIIString(' char-delete');\r\n        }\r\n        sb.appendASCIIString('\" style=\"top:');\r\n        sb.appendASCIIString(String(renderedLineCount * lineHeight));\r\n        sb.appendASCIIString('px;width:1000000px;\">');\r\n        const isBasicASCII = ViewLineRenderingData.isBasicASCII(lineContent, mightContainNonBasicASCII);\r\n        const containsRTL = ViewLineRenderingData.containsRTL(lineContent, isBasicASCII, mightContainRTL);\r\n        const output = renderViewLine(new RenderLineInput((fontInfo.isMonospace && !disableMonospaceOptimizations), fontInfo.canUseHalfwidthRightwardsArrow, lineContent, false, isBasicASCII, containsRTL, 0, lineTokens, decorations, tabSize, 0, fontInfo.spaceWidth, fontInfo.middotWidth, fontInfo.wsmiddotWidth, stopRenderingLineAfter, renderWhitespace, renderControlCharacters, fontLigatures !== EditorFontLigatures.OFF, null // Send no selections, original line cannot be selected\r\n        ), sb);\r\n        sb.appendASCIIString('</div>');\r\n        if (this._renderIndicators) {\r\n            const marginElement = document.createElement('div');\r\n            marginElement.className = `delete-sign ${ThemeIcon.asClassName(diffRemoveIcon)}`;\r\n            marginElement.setAttribute('style', `position:absolute;top:${renderedLineCount * lineHeight}px;width:${lineDecorationsWidth}px;height:${lineHeight}px;right:0;`);\r\n            marginDomNode.appendChild(marginElement);\r\n        }\r\n        const absoluteOffsets = output.characterMapping.getAbsoluteOffsets();\r\n        return absoluteOffsets.length > 0 ? absoluteOffsets[absoluteOffsets.length - 1] : 0;\r\n    }\r\n}\r\nfunction validateDiffWordWrap(value, defaultValue) {\r\n    return validateStringSetOption(value, defaultValue, ['off', 'on', 'inherit']);\r\n}\r\nfunction isChangeOrInsert(lineChange) {\r\n    return lineChange.modifiedEndLineNumber > 0;\r\n}\r\nfunction isChangeOrDelete(lineChange) {\r\n    return lineChange.originalEndLineNumber > 0;\r\n}\r\nfunction createFakeLinesDiv() {\r\n    const r = document.createElement('div');\r\n    r.className = 'diagonal-fill';\r\n    return r;\r\n}\r\nfunction getViewRange(model, viewModel, startLineNumber, endLineNumber) {\r\n    const lineCount = model.getLineCount();\r\n    startLineNumber = Math.min(lineCount, Math.max(1, startLineNumber));\r\n    endLineNumber = Math.min(lineCount, Math.max(1, endLineNumber));\r\n    return viewModel.coordinatesConverter.convertModelRangeToViewRange(new Range(startLineNumber, model.getLineMinColumn(startLineNumber), endLineNumber, model.getLineMaxColumn(endLineNumber)));\r\n}\r\nregisterThemingParticipant((theme, collector) => {\r\n    const added = theme.getColor(diffInserted);\r\n    if (added) {\r\n        collector.addRule(`.monaco-editor .line-insert, .monaco-editor .char-insert { background-color: ${added}; }`);\r\n        collector.addRule(`.monaco-diff-editor .line-insert, .monaco-diff-editor .char-insert { background-color: ${added}; }`);\r\n        collector.addRule(`.monaco-editor .inline-added-margin-view-zone { background-color: ${added}; }`);\r\n    }\r\n    const removed = theme.getColor(diffRemoved);\r\n    if (removed) {\r\n        collector.addRule(`.monaco-editor .line-delete, .monaco-editor .char-delete { background-color: ${removed}; }`);\r\n        collector.addRule(`.monaco-diff-editor .line-delete, .monaco-diff-editor .char-delete { background-color: ${removed}; }`);\r\n        collector.addRule(`.monaco-editor .inline-deleted-margin-view-zone { background-color: ${removed}; }`);\r\n    }\r\n    const addedOutline = theme.getColor(diffInsertedOutline);\r\n    if (addedOutline) {\r\n        collector.addRule(`.monaco-editor .line-insert, .monaco-editor .char-insert { border: 1px ${theme.type === 'hc' ? 'dashed' : 'solid'} ${addedOutline}; }`);\r\n    }\r\n    const removedOutline = theme.getColor(diffRemovedOutline);\r\n    if (removedOutline) {\r\n        collector.addRule(`.monaco-editor .line-delete, .monaco-editor .char-delete { border: 1px ${theme.type === 'hc' ? 'dashed' : 'solid'} ${removedOutline}; }`);\r\n    }\r\n    const shadow = theme.getColor(scrollbarShadow);\r\n    if (shadow) {\r\n        collector.addRule(`.monaco-diff-editor.side-by-side .editor.modified { box-shadow: -6px 0 5px -5px ${shadow}; }`);\r\n    }\r\n    const border = theme.getColor(diffBorder);\r\n    if (border) {\r\n        collector.addRule(`.monaco-diff-editor.side-by-side .editor.modified { border-left: 1px solid ${border}; }`);\r\n    }\r\n    const scrollbarSliderBackgroundColor = theme.getColor(scrollbarSliderBackground);\r\n    if (scrollbarSliderBackgroundColor) {\r\n        collector.addRule(`\n\t\t\t.monaco-diff-editor .diffViewport {\n\t\t\t\tbackground: ${scrollbarSliderBackgroundColor};\n\t\t\t}\n\t\t`);\r\n    }\r\n    const scrollbarSliderHoverBackgroundColor = theme.getColor(scrollbarSliderHoverBackground);\r\n    if (scrollbarSliderHoverBackgroundColor) {\r\n        collector.addRule(`\n\t\t\t.monaco-diff-editor .diffViewport:hover {\n\t\t\t\tbackground: ${scrollbarSliderHoverBackgroundColor};\n\t\t\t}\n\t\t`);\r\n    }\r\n    const scrollbarSliderActiveBackgroundColor = theme.getColor(scrollbarSliderActiveBackground);\r\n    if (scrollbarSliderActiveBackgroundColor) {\r\n        collector.addRule(`\n\t\t\t.monaco-diff-editor .diffViewport:active {\n\t\t\t\tbackground: ${scrollbarSliderActiveBackgroundColor};\n\t\t\t}\n\t\t`);\r\n    }\r\n    const diffDiagonalFillColor = theme.getColor(diffDiagonalFill);\r\n    collector.addRule(`\n\t.monaco-editor .diagonal-fill {\n\t\tbackground-image: linear-gradient(\n\t\t\t-45deg,\n\t\t\t${diffDiagonalFillColor} 12.5%,\n\t\t\t#0000 12.5%, #0000 50%,\n\t\t\t${diffDiagonalFillColor} 50%, ${diffDiagonalFillColor} 62.5%,\n\t\t\t#0000 62.5%, #0000 100%\n\t\t);\n\t\tbackground-size: 8px 8px;\n\t}\n\t`);\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}