{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\nimport { EditorCommand, registerEditorCommand, registerEditorContribution } from '../../browser/editorExtensions.js';\nimport { Range } from '../../common/core/range.js';\nimport { Selection } from '../../common/core/selection.js';\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\nimport { showSimpleSuggestions } from '../suggest/suggest.js';\nimport { ContextKeyExpr, IContextKeyService, RawContextKey } from '../../../platform/contextkey/common/contextkey.js';\nimport { ILogService } from '../../../platform/log/common/log.js';\nimport { SnippetSession } from './snippetSession.js';\nconst _defaultOptions = {\n  overwriteBefore: 0,\n  overwriteAfter: 0,\n  undoStopBefore: true,\n  undoStopAfter: true,\n  adjustWhitespace: true,\n  clipboardText: undefined,\n  overtypingCapturer: undefined\n};\nlet SnippetController2 = class SnippetController2 {\n  constructor(_editor, _logService, contextKeyService) {\n    this._editor = _editor;\n    this._logService = _logService;\n    this._snippetListener = new DisposableStore();\n    this._modelVersionId = -1;\n    this._inSnippet = SnippetController2.InSnippetMode.bindTo(contextKeyService);\n    this._hasNextTabstop = SnippetController2.HasNextTabstop.bindTo(contextKeyService);\n    this._hasPrevTabstop = SnippetController2.HasPrevTabstop.bindTo(contextKeyService);\n  }\n  static get(editor) {\n    return editor.getContribution(SnippetController2.ID);\n  }\n  dispose() {\n    var _a;\n    this._inSnippet.reset();\n    this._hasPrevTabstop.reset();\n    this._hasNextTabstop.reset();\n    (_a = this._session) === null || _a === void 0 ? void 0 : _a.dispose();\n    this._snippetListener.dispose();\n  }\n  insert(template, opts) {\n    // this is here to find out more about the yet-not-understood\n    // error that sometimes happens when we fail to inserted a nested\n    // snippet\n    try {\n      this._doInsert(template, typeof opts === 'undefined' ? _defaultOptions : Object.assign(Object.assign({}, _defaultOptions), opts));\n    } catch (e) {\n      this.cancel();\n      this._logService.error(e);\n      this._logService.error('snippet_error');\n      this._logService.error('insert_template=', template);\n      this._logService.error('existing_template=', this._session ? this._session._logInfo() : '<no_session>');\n    }\n  }\n  _doInsert(template, opts) {\n    if (!this._editor.hasModel()) {\n      return;\n    }\n    // don't listen while inserting the snippet\n    // as that is the inflight state causing cancelation\n    this._snippetListener.clear();\n    if (opts.undoStopBefore) {\n      this._editor.getModel().pushStackElement();\n    }\n    if (!this._session) {\n      this._modelVersionId = this._editor.getModel().getAlternativeVersionId();\n      this._session = new SnippetSession(this._editor, template, opts);\n      this._session.insert();\n    } else {\n      this._session.merge(template, opts);\n    }\n    if (opts.undoStopAfter) {\n      this._editor.getModel().pushStackElement();\n    }\n    this._updateState();\n    this._snippetListener.add(this._editor.onDidChangeModelContent(e => e.isFlush && this.cancel()));\n    this._snippetListener.add(this._editor.onDidChangeModel(() => this.cancel()));\n    this._snippetListener.add(this._editor.onDidChangeCursorSelection(() => this._updateState()));\n  }\n  _updateState() {\n    if (!this._session || !this._editor.hasModel()) {\n      // canceled in the meanwhile\n      return;\n    }\n    if (this._modelVersionId === this._editor.getModel().getAlternativeVersionId()) {\n      // undo until the 'before' state happened\n      // and makes use cancel snippet mode\n      return this.cancel();\n    }\n    if (!this._session.hasPlaceholder) {\n      // don't listen for selection changes and don't\n      // update context keys when the snippet is plain text\n      return this.cancel();\n    }\n    if (this._session.isAtLastPlaceholder || !this._session.isSelectionWithinPlaceholders()) {\n      return this.cancel();\n    }\n    this._inSnippet.set(true);\n    this._hasPrevTabstop.set(!this._session.isAtFirstPlaceholder);\n    this._hasNextTabstop.set(!this._session.isAtLastPlaceholder);\n    this._handleChoice();\n  }\n  _handleChoice() {\n    if (!this._session || !this._editor.hasModel()) {\n      this._currentChoice = undefined;\n      return;\n    }\n    const {\n      choice\n    } = this._session;\n    if (!choice) {\n      this._currentChoice = undefined;\n      return;\n    }\n    if (this._currentChoice !== choice) {\n      this._currentChoice = choice;\n      this._editor.setSelections(this._editor.getSelections().map(s => Selection.fromPositions(s.getStartPosition())));\n      const [first] = choice.options;\n      showSimpleSuggestions(this._editor, choice.options.map((option, i) => {\n        // let before = choice.options.slice(0, i);\n        // let after = choice.options.slice(i);\n        return {\n          kind: 13 /* Value */,\n          label: option.value,\n          insertText: option.value,\n          // insertText: `\\${1|${after.concat(before).join(',')}|}$0`,\n          // snippetType: 'textmate',\n          sortText: 'a'.repeat(i + 1),\n          range: Range.fromPositions(this._editor.getPosition(), this._editor.getPosition().delta(0, first.value.length))\n        };\n      }));\n    }\n  }\n  finish() {\n    while (this._inSnippet.get()) {\n      this.next();\n    }\n  }\n  cancel() {\n    let resetSelection = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    var _a;\n    this._inSnippet.reset();\n    this._hasPrevTabstop.reset();\n    this._hasNextTabstop.reset();\n    this._snippetListener.clear();\n    (_a = this._session) === null || _a === void 0 ? void 0 : _a.dispose();\n    this._session = undefined;\n    this._modelVersionId = -1;\n    if (resetSelection) {\n      // reset selection to the primary cursor when being asked\n      // for. this happens when explicitly cancelling snippet mode,\n      // e.g. when pressing ESC\n      this._editor.setSelections([this._editor.getSelection()]);\n    }\n  }\n  prev() {\n    if (this._session) {\n      this._session.prev();\n    }\n    this._updateState();\n  }\n  next() {\n    if (this._session) {\n      this._session.next();\n    }\n    this._updateState();\n  }\n  isInSnippet() {\n    return Boolean(this._inSnippet.get());\n  }\n};\nSnippetController2.ID = 'snippetController2';\nSnippetController2.InSnippetMode = new RawContextKey('inSnippetMode', false);\nSnippetController2.HasNextTabstop = new RawContextKey('hasNextTabstop', false);\nSnippetController2.HasPrevTabstop = new RawContextKey('hasPrevTabstop', false);\nSnippetController2 = __decorate([__param(1, ILogService), __param(2, IContextKeyService)], SnippetController2);\nexport { SnippetController2 };\nregisterEditorContribution(SnippetController2.ID, SnippetController2);\nconst CommandCtor = EditorCommand.bindToContribution(SnippetController2.get);\nregisterEditorCommand(new CommandCtor({\n  id: 'jumpToNextSnippetPlaceholder',\n  precondition: ContextKeyExpr.and(SnippetController2.InSnippetMode, SnippetController2.HasNextTabstop),\n  handler: ctrl => ctrl.next(),\n  kbOpts: {\n    weight: 100 /* EditorContrib */ + 30,\n    kbExpr: EditorContextKeys.editorTextFocus,\n    primary: 2 /* Tab */\n  }\n}));\n\nregisterEditorCommand(new CommandCtor({\n  id: 'jumpToPrevSnippetPlaceholder',\n  precondition: ContextKeyExpr.and(SnippetController2.InSnippetMode, SnippetController2.HasPrevTabstop),\n  handler: ctrl => ctrl.prev(),\n  kbOpts: {\n    weight: 100 /* EditorContrib */ + 30,\n    kbExpr: EditorContextKeys.editorTextFocus,\n    primary: 1024 /* Shift */ | 2 /* Tab */\n  }\n}));\n\nregisterEditorCommand(new CommandCtor({\n  id: 'leaveSnippet',\n  precondition: SnippetController2.InSnippetMode,\n  handler: ctrl => ctrl.cancel(true),\n  kbOpts: {\n    weight: 100 /* EditorContrib */ + 30,\n    kbExpr: EditorContextKeys.editorTextFocus,\n    primary: 9 /* Escape */,\n    secondary: [1024 /* Shift */ | 9 /* Escape */]\n  }\n}));\n\nregisterEditorCommand(new CommandCtor({\n  id: 'acceptSnippet',\n  precondition: SnippetController2.InSnippetMode,\n  handler: ctrl => ctrl.finish()\n  // kbOpts: {\n  // \tweight: KeybindingWeight.EditorContrib + 30,\n  // \tkbExpr: EditorContextKeys.textFocus,\n  // \tprimary: KeyCode.Enter,\n  // }\n}));","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","DisposableStore","EditorCommand","registerEditorCommand","registerEditorContribution","Range","Selection","EditorContextKeys","showSimpleSuggestions","ContextKeyExpr","IContextKeyService","RawContextKey","ILogService","SnippetSession","_defaultOptions","overwriteBefore","overwriteAfter","undoStopBefore","undoStopAfter","adjustWhitespace","clipboardText","undefined","overtypingCapturer","SnippetController2","constructor","_editor","_logService","contextKeyService","_snippetListener","_modelVersionId","_inSnippet","InSnippetMode","bindTo","_hasNextTabstop","HasNextTabstop","_hasPrevTabstop","HasPrevTabstop","get","editor","getContribution","ID","dispose","_a","reset","_session","insert","template","opts","_doInsert","assign","e","cancel","error","_logInfo","hasModel","clear","getModel","pushStackElement","getAlternativeVersionId","merge","_updateState","add","onDidChangeModelContent","isFlush","onDidChangeModel","onDidChangeCursorSelection","hasPlaceholder","isAtLastPlaceholder","isSelectionWithinPlaceholders","set","isAtFirstPlaceholder","_handleChoice","_currentChoice","choice","setSelections","getSelections","map","s","fromPositions","getStartPosition","first","options","option","kind","label","value","insertText","sortText","repeat","range","getPosition","delta","finish","next","resetSelection","getSelection","prev","isInSnippet","Boolean","CommandCtor","bindToContribution","id","precondition","and","handler","ctrl","kbOpts","weight","kbExpr","editorTextFocus","primary","secondary"],"sources":["C:/Users/Administrator/Desktop/sqllineage-master/sqllineagejs/node_modules/monaco-editor/esm/vs/editor/contrib/snippet/snippetController2.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { EditorCommand, registerEditorCommand, registerEditorContribution } from '../../browser/editorExtensions.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { Selection } from '../../common/core/selection.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { showSimpleSuggestions } from '../suggest/suggest.js';\r\nimport { ContextKeyExpr, IContextKeyService, RawContextKey } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { ILogService } from '../../../platform/log/common/log.js';\r\nimport { SnippetSession } from './snippetSession.js';\r\nconst _defaultOptions = {\r\n    overwriteBefore: 0,\r\n    overwriteAfter: 0,\r\n    undoStopBefore: true,\r\n    undoStopAfter: true,\r\n    adjustWhitespace: true,\r\n    clipboardText: undefined,\r\n    overtypingCapturer: undefined\r\n};\r\nlet SnippetController2 = class SnippetController2 {\r\n    constructor(_editor, _logService, contextKeyService) {\r\n        this._editor = _editor;\r\n        this._logService = _logService;\r\n        this._snippetListener = new DisposableStore();\r\n        this._modelVersionId = -1;\r\n        this._inSnippet = SnippetController2.InSnippetMode.bindTo(contextKeyService);\r\n        this._hasNextTabstop = SnippetController2.HasNextTabstop.bindTo(contextKeyService);\r\n        this._hasPrevTabstop = SnippetController2.HasPrevTabstop.bindTo(contextKeyService);\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(SnippetController2.ID);\r\n    }\r\n    dispose() {\r\n        var _a;\r\n        this._inSnippet.reset();\r\n        this._hasPrevTabstop.reset();\r\n        this._hasNextTabstop.reset();\r\n        (_a = this._session) === null || _a === void 0 ? void 0 : _a.dispose();\r\n        this._snippetListener.dispose();\r\n    }\r\n    insert(template, opts) {\r\n        // this is here to find out more about the yet-not-understood\r\n        // error that sometimes happens when we fail to inserted a nested\r\n        // snippet\r\n        try {\r\n            this._doInsert(template, typeof opts === 'undefined' ? _defaultOptions : Object.assign(Object.assign({}, _defaultOptions), opts));\r\n        }\r\n        catch (e) {\r\n            this.cancel();\r\n            this._logService.error(e);\r\n            this._logService.error('snippet_error');\r\n            this._logService.error('insert_template=', template);\r\n            this._logService.error('existing_template=', this._session ? this._session._logInfo() : '<no_session>');\r\n        }\r\n    }\r\n    _doInsert(template, opts) {\r\n        if (!this._editor.hasModel()) {\r\n            return;\r\n        }\r\n        // don't listen while inserting the snippet\r\n        // as that is the inflight state causing cancelation\r\n        this._snippetListener.clear();\r\n        if (opts.undoStopBefore) {\r\n            this._editor.getModel().pushStackElement();\r\n        }\r\n        if (!this._session) {\r\n            this._modelVersionId = this._editor.getModel().getAlternativeVersionId();\r\n            this._session = new SnippetSession(this._editor, template, opts);\r\n            this._session.insert();\r\n        }\r\n        else {\r\n            this._session.merge(template, opts);\r\n        }\r\n        if (opts.undoStopAfter) {\r\n            this._editor.getModel().pushStackElement();\r\n        }\r\n        this._updateState();\r\n        this._snippetListener.add(this._editor.onDidChangeModelContent(e => e.isFlush && this.cancel()));\r\n        this._snippetListener.add(this._editor.onDidChangeModel(() => this.cancel()));\r\n        this._snippetListener.add(this._editor.onDidChangeCursorSelection(() => this._updateState()));\r\n    }\r\n    _updateState() {\r\n        if (!this._session || !this._editor.hasModel()) {\r\n            // canceled in the meanwhile\r\n            return;\r\n        }\r\n        if (this._modelVersionId === this._editor.getModel().getAlternativeVersionId()) {\r\n            // undo until the 'before' state happened\r\n            // and makes use cancel snippet mode\r\n            return this.cancel();\r\n        }\r\n        if (!this._session.hasPlaceholder) {\r\n            // don't listen for selection changes and don't\r\n            // update context keys when the snippet is plain text\r\n            return this.cancel();\r\n        }\r\n        if (this._session.isAtLastPlaceholder || !this._session.isSelectionWithinPlaceholders()) {\r\n            return this.cancel();\r\n        }\r\n        this._inSnippet.set(true);\r\n        this._hasPrevTabstop.set(!this._session.isAtFirstPlaceholder);\r\n        this._hasNextTabstop.set(!this._session.isAtLastPlaceholder);\r\n        this._handleChoice();\r\n    }\r\n    _handleChoice() {\r\n        if (!this._session || !this._editor.hasModel()) {\r\n            this._currentChoice = undefined;\r\n            return;\r\n        }\r\n        const { choice } = this._session;\r\n        if (!choice) {\r\n            this._currentChoice = undefined;\r\n            return;\r\n        }\r\n        if (this._currentChoice !== choice) {\r\n            this._currentChoice = choice;\r\n            this._editor.setSelections(this._editor.getSelections()\r\n                .map(s => Selection.fromPositions(s.getStartPosition())));\r\n            const [first] = choice.options;\r\n            showSimpleSuggestions(this._editor, choice.options.map((option, i) => {\r\n                // let before = choice.options.slice(0, i);\r\n                // let after = choice.options.slice(i);\r\n                return {\r\n                    kind: 13 /* Value */,\r\n                    label: option.value,\r\n                    insertText: option.value,\r\n                    // insertText: `\\${1|${after.concat(before).join(',')}|}$0`,\r\n                    // snippetType: 'textmate',\r\n                    sortText: 'a'.repeat(i + 1),\r\n                    range: Range.fromPositions(this._editor.getPosition(), this._editor.getPosition().delta(0, first.value.length))\r\n                };\r\n            }));\r\n        }\r\n    }\r\n    finish() {\r\n        while (this._inSnippet.get()) {\r\n            this.next();\r\n        }\r\n    }\r\n    cancel(resetSelection = false) {\r\n        var _a;\r\n        this._inSnippet.reset();\r\n        this._hasPrevTabstop.reset();\r\n        this._hasNextTabstop.reset();\r\n        this._snippetListener.clear();\r\n        (_a = this._session) === null || _a === void 0 ? void 0 : _a.dispose();\r\n        this._session = undefined;\r\n        this._modelVersionId = -1;\r\n        if (resetSelection) {\r\n            // reset selection to the primary cursor when being asked\r\n            // for. this happens when explicitly cancelling snippet mode,\r\n            // e.g. when pressing ESC\r\n            this._editor.setSelections([this._editor.getSelection()]);\r\n        }\r\n    }\r\n    prev() {\r\n        if (this._session) {\r\n            this._session.prev();\r\n        }\r\n        this._updateState();\r\n    }\r\n    next() {\r\n        if (this._session) {\r\n            this._session.next();\r\n        }\r\n        this._updateState();\r\n    }\r\n    isInSnippet() {\r\n        return Boolean(this._inSnippet.get());\r\n    }\r\n};\r\nSnippetController2.ID = 'snippetController2';\r\nSnippetController2.InSnippetMode = new RawContextKey('inSnippetMode', false);\r\nSnippetController2.HasNextTabstop = new RawContextKey('hasNextTabstop', false);\r\nSnippetController2.HasPrevTabstop = new RawContextKey('hasPrevTabstop', false);\r\nSnippetController2 = __decorate([\r\n    __param(1, ILogService),\r\n    __param(2, IContextKeyService)\r\n], SnippetController2);\r\nexport { SnippetController2 };\r\nregisterEditorContribution(SnippetController2.ID, SnippetController2);\r\nconst CommandCtor = EditorCommand.bindToContribution(SnippetController2.get);\r\nregisterEditorCommand(new CommandCtor({\r\n    id: 'jumpToNextSnippetPlaceholder',\r\n    precondition: ContextKeyExpr.and(SnippetController2.InSnippetMode, SnippetController2.HasNextTabstop),\r\n    handler: ctrl => ctrl.next(),\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 30,\r\n        kbExpr: EditorContextKeys.editorTextFocus,\r\n        primary: 2 /* Tab */\r\n    }\r\n}));\r\nregisterEditorCommand(new CommandCtor({\r\n    id: 'jumpToPrevSnippetPlaceholder',\r\n    precondition: ContextKeyExpr.and(SnippetController2.InSnippetMode, SnippetController2.HasPrevTabstop),\r\n    handler: ctrl => ctrl.prev(),\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 30,\r\n        kbExpr: EditorContextKeys.editorTextFocus,\r\n        primary: 1024 /* Shift */ | 2 /* Tab */\r\n    }\r\n}));\r\nregisterEditorCommand(new CommandCtor({\r\n    id: 'leaveSnippet',\r\n    precondition: SnippetController2.InSnippetMode,\r\n    handler: ctrl => ctrl.cancel(true),\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 30,\r\n        kbExpr: EditorContextKeys.editorTextFocus,\r\n        primary: 9 /* Escape */,\r\n        secondary: [1024 /* Shift */ | 9 /* Escape */]\r\n    }\r\n}));\r\nregisterEditorCommand(new CommandCtor({\r\n    id: 'acceptSnippet',\r\n    precondition: SnippetController2.InSnippetMode,\r\n    handler: ctrl => ctrl.finish(),\r\n    // kbOpts: {\r\n    // \tweight: KeybindingWeight.EditorContrib + 30,\r\n    // \tkbExpr: EditorContextKeys.textFocus,\r\n    // \tprimary: KeyCode.Enter,\r\n    // }\r\n}));\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}