{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { isWindows, isMacintosh, setImmediate, globals } from './platform.js';\nlet safeProcess;\n// Native node.js environment\nif (typeof process !== 'undefined') {\n  safeProcess = process;\n}\n// Native sandbox environment\nelse if (typeof globals.vscode !== 'undefined') {\n  safeProcess = {\n    // Supported\n    get platform() {\n      return globals.vscode.process.platform;\n    },\n    get env() {\n      return globals.vscode.process.env;\n    },\n    nextTick(callback) {\n      return setImmediate(callback);\n    },\n    // Unsupported\n    cwd() {\n      return globals.vscode.process.env['VSCODE_CWD'] || globals.vscode.process.execPath.substr(0, globals.vscode.process.execPath.lastIndexOf(globals.vscode.process.platform === 'win32' ? '\\\\' : '/'));\n    }\n  };\n}\n// Web environment\nelse {\n  safeProcess = {\n    // Supported\n    get platform() {\n      return isWindows ? 'win32' : isMacintosh ? 'darwin' : 'linux';\n    },\n    nextTick(callback) {\n      return setImmediate(callback);\n    },\n    // Unsupported\n    get env() {\n      return Object.create(null);\n    },\n    cwd() {\n      return '/';\n    }\n  };\n}\nexport const cwd = safeProcess.cwd;\nexport const env = safeProcess.env;\nexport const platform = safeProcess.platform;","map":{"version":3,"names":["isWindows","isMacintosh","setImmediate","globals","safeProcess","process","vscode","platform","env","nextTick","callback","cwd","execPath","substr","lastIndexOf","Object","create"],"sources":["C:/Users/Administrator/Desktop/sqllineage-master/sqllineagejs/node_modules/monaco-editor/esm/vs/base/common/process.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { isWindows, isMacintosh, setImmediate, globals } from './platform.js';\r\nlet safeProcess;\r\n// Native node.js environment\r\nif (typeof process !== 'undefined') {\r\n    safeProcess = process;\r\n}\r\n// Native sandbox environment\r\nelse if (typeof globals.vscode !== 'undefined') {\r\n    safeProcess = {\r\n        // Supported\r\n        get platform() { return globals.vscode.process.platform; },\r\n        get env() { return globals.vscode.process.env; },\r\n        nextTick(callback) { return setImmediate(callback); },\r\n        // Unsupported\r\n        cwd() { return globals.vscode.process.env['VSCODE_CWD'] || globals.vscode.process.execPath.substr(0, globals.vscode.process.execPath.lastIndexOf(globals.vscode.process.platform === 'win32' ? '\\\\' : '/')); }\r\n    };\r\n}\r\n// Web environment\r\nelse {\r\n    safeProcess = {\r\n        // Supported\r\n        get platform() { return isWindows ? 'win32' : isMacintosh ? 'darwin' : 'linux'; },\r\n        nextTick(callback) { return setImmediate(callback); },\r\n        // Unsupported\r\n        get env() { return Object.create(null); },\r\n        cwd() { return '/'; }\r\n    };\r\n}\r\nexport const cwd = safeProcess.cwd;\r\nexport const env = safeProcess.env;\r\nexport const platform = safeProcess.platform;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,SAAS,EAAEC,WAAW,EAAEC,YAAY,EAAEC,OAAO,QAAQ,eAAe;AAC7E,IAAIC,WAAW;AACf;AACA,IAAI,OAAOC,OAAO,KAAK,WAAW,EAAE;EAChCD,WAAW,GAAGC,OAAO;AACzB;AACA;AAAA,KACK,IAAI,OAAOF,OAAO,CAACG,MAAM,KAAK,WAAW,EAAE;EAC5CF,WAAW,GAAG;IACV;IACA,IAAIG,QAAQA,CAAA,EAAG;MAAE,OAAOJ,OAAO,CAACG,MAAM,CAACD,OAAO,CAACE,QAAQ;IAAE,CAAC;IAC1D,IAAIC,GAAGA,CAAA,EAAG;MAAE,OAAOL,OAAO,CAACG,MAAM,CAACD,OAAO,CAACG,GAAG;IAAE,CAAC;IAChDC,QAAQA,CAACC,QAAQ,EAAE;MAAE,OAAOR,YAAY,CAACQ,QAAQ,CAAC;IAAE,CAAC;IACrD;IACAC,GAAGA,CAAA,EAAG;MAAE,OAAOR,OAAO,CAACG,MAAM,CAACD,OAAO,CAACG,GAAG,CAAC,YAAY,CAAC,IAAIL,OAAO,CAACG,MAAM,CAACD,OAAO,CAACO,QAAQ,CAACC,MAAM,CAAC,CAAC,EAAEV,OAAO,CAACG,MAAM,CAACD,OAAO,CAACO,QAAQ,CAACE,WAAW,CAACX,OAAO,CAACG,MAAM,CAACD,OAAO,CAACE,QAAQ,KAAK,OAAO,GAAG,IAAI,GAAG,GAAG,CAAC,CAAC;IAAE;EACjN,CAAC;AACL;AACA;AAAA,KACK;EACDH,WAAW,GAAG;IACV;IACA,IAAIG,QAAQA,CAAA,EAAG;MAAE,OAAOP,SAAS,GAAG,OAAO,GAAGC,WAAW,GAAG,QAAQ,GAAG,OAAO;IAAE,CAAC;IACjFQ,QAAQA,CAACC,QAAQ,EAAE;MAAE,OAAOR,YAAY,CAACQ,QAAQ,CAAC;IAAE,CAAC;IACrD;IACA,IAAIF,GAAGA,CAAA,EAAG;MAAE,OAAOO,MAAM,CAACC,MAAM,CAAC,IAAI,CAAC;IAAE,CAAC;IACzCL,GAAGA,CAAA,EAAG;MAAE,OAAO,GAAG;IAAE;EACxB,CAAC;AACL;AACA,OAAO,MAAMA,GAAG,GAAGP,WAAW,CAACO,GAAG;AAClC,OAAO,MAAMH,GAAG,GAAGJ,WAAW,CAACI,GAAG;AAClC,OAAO,MAAMD,QAAQ,GAAGH,WAAW,CAACG,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}