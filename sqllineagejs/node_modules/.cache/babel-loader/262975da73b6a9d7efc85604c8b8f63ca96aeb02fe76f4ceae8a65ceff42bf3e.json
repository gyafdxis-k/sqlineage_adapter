{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nimport { IMarkerService, MarkerSeverity } from '../../../platform/markers/common/markers.js';\nimport { Disposable, toDisposable } from '../../../base/common/lifecycle.js';\nimport { OverviewRulerLane, MinimapPosition } from '../model.js';\nimport { themeColorFromId } from '../../../platform/theme/common/themeService.js';\nimport { overviewRulerWarning, overviewRulerInfo, overviewRulerError } from '../view/editorColorRegistry.js';\nimport { IModelService } from './modelService.js';\nimport { Range } from '../core/range.js';\nimport { Schemas } from '../../../base/common/network.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { minimapWarning, minimapError } from '../../../platform/theme/common/colorRegistry.js';\nfunction MODEL_ID(resource) {\n  return resource.toString();\n}\nclass MarkerDecorations extends Disposable {\n  constructor(model) {\n    super();\n    this.model = model;\n    this._markersData = new Map();\n    this._register(toDisposable(() => {\n      this.model.deltaDecorations([...this._markersData.keys()], []);\n      this._markersData.clear();\n    }));\n  }\n  update(markers, newDecorations) {\n    const oldIds = [...this._markersData.keys()];\n    this._markersData.clear();\n    const ids = this.model.deltaDecorations(oldIds, newDecorations);\n    for (let index = 0; index < ids.length; index++) {\n      this._markersData.set(ids[index], markers[index]);\n    }\n    return oldIds.length !== 0 || ids.length !== 0;\n  }\n  getMarker(decoration) {\n    return this._markersData.get(decoration.id);\n  }\n}\nlet MarkerDecorationsService = class MarkerDecorationsService extends Disposable {\n  constructor(modelService, _markerService) {\n    super();\n    this._markerService = _markerService;\n    this._onDidChangeMarker = this._register(new Emitter());\n    this._markerDecorations = new Map();\n    modelService.getModels().forEach(model => this._onModelAdded(model));\n    this._register(modelService.onModelAdded(this._onModelAdded, this));\n    this._register(modelService.onModelRemoved(this._onModelRemoved, this));\n    this._register(this._markerService.onMarkerChanged(this._handleMarkerChange, this));\n  }\n  dispose() {\n    super.dispose();\n    this._markerDecorations.forEach(value => value.dispose());\n    this._markerDecorations.clear();\n  }\n  getMarker(uri, decoration) {\n    const markerDecorations = this._markerDecorations.get(MODEL_ID(uri));\n    return markerDecorations ? markerDecorations.getMarker(decoration) || null : null;\n  }\n  _handleMarkerChange(changedResources) {\n    changedResources.forEach(resource => {\n      const markerDecorations = this._markerDecorations.get(MODEL_ID(resource));\n      if (markerDecorations) {\n        this._updateDecorations(markerDecorations);\n      }\n    });\n  }\n  _onModelAdded(model) {\n    const markerDecorations = new MarkerDecorations(model);\n    this._markerDecorations.set(MODEL_ID(model.uri), markerDecorations);\n    this._updateDecorations(markerDecorations);\n  }\n  _onModelRemoved(model) {\n    const markerDecorations = this._markerDecorations.get(MODEL_ID(model.uri));\n    if (markerDecorations) {\n      markerDecorations.dispose();\n      this._markerDecorations.delete(MODEL_ID(model.uri));\n    }\n    // clean up markers for internal, transient models\n    if (model.uri.scheme === Schemas.inMemory || model.uri.scheme === Schemas.internal || model.uri.scheme === Schemas.vscode) {\n      if (this._markerService) {\n        this._markerService.read({\n          resource: model.uri\n        }).map(marker => marker.owner).forEach(owner => this._markerService.remove(owner, [model.uri]));\n      }\n    }\n  }\n  _updateDecorations(markerDecorations) {\n    // Limit to the first 500 errors/warnings\n    const markers = this._markerService.read({\n      resource: markerDecorations.model.uri,\n      take: 500\n    });\n    let newModelDecorations = markers.map(marker => {\n      return {\n        range: this._createDecorationRange(markerDecorations.model, marker),\n        options: this._createDecorationOption(marker)\n      };\n    });\n    if (markerDecorations.update(markers, newModelDecorations)) {\n      this._onDidChangeMarker.fire(markerDecorations.model);\n    }\n  }\n  _createDecorationRange(model, rawMarker) {\n    let ret = Range.lift(rawMarker);\n    if (rawMarker.severity === MarkerSeverity.Hint && !this._hasMarkerTag(rawMarker, 1 /* Unnecessary */) && !this._hasMarkerTag(rawMarker, 2 /* Deprecated */)) {\n      // * never render hints on multiple lines\n      // * make enough space for three dots\n      ret = ret.setEndPosition(ret.startLineNumber, ret.startColumn + 2);\n    }\n    ret = model.validateRange(ret);\n    if (ret.isEmpty()) {\n      let word = model.getWordAtPosition(ret.getStartPosition());\n      if (word) {\n        ret = new Range(ret.startLineNumber, word.startColumn, ret.endLineNumber, word.endColumn);\n      } else {\n        let maxColumn = model.getLineLastNonWhitespaceColumn(ret.startLineNumber) || model.getLineMaxColumn(ret.startLineNumber);\n        if (maxColumn === 1) {\n          // empty line\n          // console.warn('marker on empty line:', marker);\n        } else if (ret.endColumn >= maxColumn) {\n          // behind eol\n          ret = new Range(ret.startLineNumber, maxColumn - 1, ret.endLineNumber, maxColumn);\n        } else {\n          // extend marker to width = 1\n          ret = new Range(ret.startLineNumber, ret.startColumn, ret.endLineNumber, ret.endColumn + 1);\n        }\n      }\n    } else if (rawMarker.endColumn === Number.MAX_VALUE && rawMarker.startColumn === 1 && ret.startLineNumber === ret.endLineNumber) {\n      let minColumn = model.getLineFirstNonWhitespaceColumn(rawMarker.startLineNumber);\n      if (minColumn < ret.endColumn) {\n        ret = new Range(ret.startLineNumber, minColumn, ret.endLineNumber, ret.endColumn);\n        rawMarker.startColumn = minColumn;\n      }\n    }\n    return ret;\n  }\n  _createDecorationOption(marker) {\n    let className;\n    let color = undefined;\n    let zIndex;\n    let inlineClassName = undefined;\n    let minimap;\n    switch (marker.severity) {\n      case MarkerSeverity.Hint:\n        if (this._hasMarkerTag(marker, 2 /* Deprecated */)) {\n          className = undefined;\n        } else if (this._hasMarkerTag(marker, 1 /* Unnecessary */)) {\n          className = \"squiggly-unnecessary\" /* EditorUnnecessaryDecoration */;\n        } else {\n          className = \"squiggly-hint\" /* EditorHintDecoration */;\n        }\n\n        zIndex = 0;\n        break;\n      case MarkerSeverity.Warning:\n        className = \"squiggly-warning\" /* EditorWarningDecoration */;\n        color = themeColorFromId(overviewRulerWarning);\n        zIndex = 20;\n        minimap = {\n          color: themeColorFromId(minimapWarning),\n          position: MinimapPosition.Inline\n        };\n        break;\n      case MarkerSeverity.Info:\n        className = \"squiggly-info\" /* EditorInfoDecoration */;\n        color = themeColorFromId(overviewRulerInfo);\n        zIndex = 10;\n        break;\n      case MarkerSeverity.Error:\n      default:\n        className = \"squiggly-error\" /* EditorErrorDecoration */;\n        color = themeColorFromId(overviewRulerError);\n        zIndex = 30;\n        minimap = {\n          color: themeColorFromId(minimapError),\n          position: MinimapPosition.Inline\n        };\n        break;\n    }\n    if (marker.tags) {\n      if (marker.tags.indexOf(1 /* Unnecessary */) !== -1) {\n        inlineClassName = \"squiggly-inline-unnecessary\" /* EditorUnnecessaryInlineDecoration */;\n      }\n\n      if (marker.tags.indexOf(2 /* Deprecated */) !== -1) {\n        inlineClassName = \"squiggly-inline-deprecated\" /* EditorDeprecatedInlineDecoration */;\n      }\n    }\n\n    return {\n      stickiness: 1 /* NeverGrowsWhenTypingAtEdges */,\n      className,\n      showIfCollapsed: true,\n      overviewRuler: {\n        color,\n        position: OverviewRulerLane.Right\n      },\n      minimap,\n      zIndex,\n      inlineClassName\n    };\n  }\n  _hasMarkerTag(marker, tag) {\n    if (marker.tags) {\n      return marker.tags.indexOf(tag) >= 0;\n    }\n    return false;\n  }\n};\nMarkerDecorationsService = __decorate([__param(0, IModelService), __param(1, IMarkerService)], MarkerDecorationsService);\nexport { MarkerDecorationsService };","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","IMarkerService","MarkerSeverity","Disposable","toDisposable","OverviewRulerLane","MinimapPosition","themeColorFromId","overviewRulerWarning","overviewRulerInfo","overviewRulerError","IModelService","Range","Schemas","Emitter","minimapWarning","minimapError","MODEL_ID","resource","toString","MarkerDecorations","constructor","model","_markersData","Map","_register","deltaDecorations","keys","clear","update","markers","newDecorations","oldIds","ids","index","set","getMarker","decoration","get","id","MarkerDecorationsService","modelService","_markerService","_onDidChangeMarker","_markerDecorations","getModels","forEach","_onModelAdded","onModelAdded","onModelRemoved","_onModelRemoved","onMarkerChanged","_handleMarkerChange","dispose","value","uri","markerDecorations","changedResources","_updateDecorations","delete","scheme","inMemory","internal","vscode","read","map","marker","owner","remove","take","newModelDecorations","range","_createDecorationRange","options","_createDecorationOption","fire","rawMarker","ret","lift","severity","Hint","_hasMarkerTag","setEndPosition","startLineNumber","startColumn","validateRange","isEmpty","word","getWordAtPosition","getStartPosition","endLineNumber","endColumn","maxColumn","getLineLastNonWhitespaceColumn","getLineMaxColumn","Number","MAX_VALUE","minColumn","getLineFirstNonWhitespaceColumn","className","color","undefined","zIndex","inlineClassName","minimap","Warning","position","Inline","Info","Error","tags","indexOf","stickiness","showIfCollapsed","overviewRuler","Right","tag"],"sources":["C:/Users/Administrator/Desktop/sqllineage-master/sqllineagejs/node_modules/monaco-editor/esm/vs/editor/common/services/markerDecorationsServiceImpl.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { IMarkerService, MarkerSeverity } from '../../../platform/markers/common/markers.js';\r\nimport { Disposable, toDisposable } from '../../../base/common/lifecycle.js';\r\nimport { OverviewRulerLane, MinimapPosition } from '../model.js';\r\nimport { themeColorFromId } from '../../../platform/theme/common/themeService.js';\r\nimport { overviewRulerWarning, overviewRulerInfo, overviewRulerError } from '../view/editorColorRegistry.js';\r\nimport { IModelService } from './modelService.js';\r\nimport { Range } from '../core/range.js';\r\nimport { Schemas } from '../../../base/common/network.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { minimapWarning, minimapError } from '../../../platform/theme/common/colorRegistry.js';\r\nfunction MODEL_ID(resource) {\r\n    return resource.toString();\r\n}\r\nclass MarkerDecorations extends Disposable {\r\n    constructor(model) {\r\n        super();\r\n        this.model = model;\r\n        this._markersData = new Map();\r\n        this._register(toDisposable(() => {\r\n            this.model.deltaDecorations([...this._markersData.keys()], []);\r\n            this._markersData.clear();\r\n        }));\r\n    }\r\n    update(markers, newDecorations) {\r\n        const oldIds = [...this._markersData.keys()];\r\n        this._markersData.clear();\r\n        const ids = this.model.deltaDecorations(oldIds, newDecorations);\r\n        for (let index = 0; index < ids.length; index++) {\r\n            this._markersData.set(ids[index], markers[index]);\r\n        }\r\n        return oldIds.length !== 0 || ids.length !== 0;\r\n    }\r\n    getMarker(decoration) {\r\n        return this._markersData.get(decoration.id);\r\n    }\r\n}\r\nlet MarkerDecorationsService = class MarkerDecorationsService extends Disposable {\r\n    constructor(modelService, _markerService) {\r\n        super();\r\n        this._markerService = _markerService;\r\n        this._onDidChangeMarker = this._register(new Emitter());\r\n        this._markerDecorations = new Map();\r\n        modelService.getModels().forEach(model => this._onModelAdded(model));\r\n        this._register(modelService.onModelAdded(this._onModelAdded, this));\r\n        this._register(modelService.onModelRemoved(this._onModelRemoved, this));\r\n        this._register(this._markerService.onMarkerChanged(this._handleMarkerChange, this));\r\n    }\r\n    dispose() {\r\n        super.dispose();\r\n        this._markerDecorations.forEach(value => value.dispose());\r\n        this._markerDecorations.clear();\r\n    }\r\n    getMarker(uri, decoration) {\r\n        const markerDecorations = this._markerDecorations.get(MODEL_ID(uri));\r\n        return markerDecorations ? (markerDecorations.getMarker(decoration) || null) : null;\r\n    }\r\n    _handleMarkerChange(changedResources) {\r\n        changedResources.forEach((resource) => {\r\n            const markerDecorations = this._markerDecorations.get(MODEL_ID(resource));\r\n            if (markerDecorations) {\r\n                this._updateDecorations(markerDecorations);\r\n            }\r\n        });\r\n    }\r\n    _onModelAdded(model) {\r\n        const markerDecorations = new MarkerDecorations(model);\r\n        this._markerDecorations.set(MODEL_ID(model.uri), markerDecorations);\r\n        this._updateDecorations(markerDecorations);\r\n    }\r\n    _onModelRemoved(model) {\r\n        const markerDecorations = this._markerDecorations.get(MODEL_ID(model.uri));\r\n        if (markerDecorations) {\r\n            markerDecorations.dispose();\r\n            this._markerDecorations.delete(MODEL_ID(model.uri));\r\n        }\r\n        // clean up markers for internal, transient models\r\n        if (model.uri.scheme === Schemas.inMemory\r\n            || model.uri.scheme === Schemas.internal\r\n            || model.uri.scheme === Schemas.vscode) {\r\n            if (this._markerService) {\r\n                this._markerService.read({ resource: model.uri }).map(marker => marker.owner).forEach(owner => this._markerService.remove(owner, [model.uri]));\r\n            }\r\n        }\r\n    }\r\n    _updateDecorations(markerDecorations) {\r\n        // Limit to the first 500 errors/warnings\r\n        const markers = this._markerService.read({ resource: markerDecorations.model.uri, take: 500 });\r\n        let newModelDecorations = markers.map((marker) => {\r\n            return {\r\n                range: this._createDecorationRange(markerDecorations.model, marker),\r\n                options: this._createDecorationOption(marker)\r\n            };\r\n        });\r\n        if (markerDecorations.update(markers, newModelDecorations)) {\r\n            this._onDidChangeMarker.fire(markerDecorations.model);\r\n        }\r\n    }\r\n    _createDecorationRange(model, rawMarker) {\r\n        let ret = Range.lift(rawMarker);\r\n        if (rawMarker.severity === MarkerSeverity.Hint && !this._hasMarkerTag(rawMarker, 1 /* Unnecessary */) && !this._hasMarkerTag(rawMarker, 2 /* Deprecated */)) {\r\n            // * never render hints on multiple lines\r\n            // * make enough space for three dots\r\n            ret = ret.setEndPosition(ret.startLineNumber, ret.startColumn + 2);\r\n        }\r\n        ret = model.validateRange(ret);\r\n        if (ret.isEmpty()) {\r\n            let word = model.getWordAtPosition(ret.getStartPosition());\r\n            if (word) {\r\n                ret = new Range(ret.startLineNumber, word.startColumn, ret.endLineNumber, word.endColumn);\r\n            }\r\n            else {\r\n                let maxColumn = model.getLineLastNonWhitespaceColumn(ret.startLineNumber) ||\r\n                    model.getLineMaxColumn(ret.startLineNumber);\r\n                if (maxColumn === 1) {\r\n                    // empty line\r\n                    // console.warn('marker on empty line:', marker);\r\n                }\r\n                else if (ret.endColumn >= maxColumn) {\r\n                    // behind eol\r\n                    ret = new Range(ret.startLineNumber, maxColumn - 1, ret.endLineNumber, maxColumn);\r\n                }\r\n                else {\r\n                    // extend marker to width = 1\r\n                    ret = new Range(ret.startLineNumber, ret.startColumn, ret.endLineNumber, ret.endColumn + 1);\r\n                }\r\n            }\r\n        }\r\n        else if (rawMarker.endColumn === Number.MAX_VALUE && rawMarker.startColumn === 1 && ret.startLineNumber === ret.endLineNumber) {\r\n            let minColumn = model.getLineFirstNonWhitespaceColumn(rawMarker.startLineNumber);\r\n            if (minColumn < ret.endColumn) {\r\n                ret = new Range(ret.startLineNumber, minColumn, ret.endLineNumber, ret.endColumn);\r\n                rawMarker.startColumn = minColumn;\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    _createDecorationOption(marker) {\r\n        let className;\r\n        let color = undefined;\r\n        let zIndex;\r\n        let inlineClassName = undefined;\r\n        let minimap;\r\n        switch (marker.severity) {\r\n            case MarkerSeverity.Hint:\r\n                if (this._hasMarkerTag(marker, 2 /* Deprecated */)) {\r\n                    className = undefined;\r\n                }\r\n                else if (this._hasMarkerTag(marker, 1 /* Unnecessary */)) {\r\n                    className = \"squiggly-unnecessary\" /* EditorUnnecessaryDecoration */;\r\n                }\r\n                else {\r\n                    className = \"squiggly-hint\" /* EditorHintDecoration */;\r\n                }\r\n                zIndex = 0;\r\n                break;\r\n            case MarkerSeverity.Warning:\r\n                className = \"squiggly-warning\" /* EditorWarningDecoration */;\r\n                color = themeColorFromId(overviewRulerWarning);\r\n                zIndex = 20;\r\n                minimap = {\r\n                    color: themeColorFromId(minimapWarning),\r\n                    position: MinimapPosition.Inline\r\n                };\r\n                break;\r\n            case MarkerSeverity.Info:\r\n                className = \"squiggly-info\" /* EditorInfoDecoration */;\r\n                color = themeColorFromId(overviewRulerInfo);\r\n                zIndex = 10;\r\n                break;\r\n            case MarkerSeverity.Error:\r\n            default:\r\n                className = \"squiggly-error\" /* EditorErrorDecoration */;\r\n                color = themeColorFromId(overviewRulerError);\r\n                zIndex = 30;\r\n                minimap = {\r\n                    color: themeColorFromId(minimapError),\r\n                    position: MinimapPosition.Inline\r\n                };\r\n                break;\r\n        }\r\n        if (marker.tags) {\r\n            if (marker.tags.indexOf(1 /* Unnecessary */) !== -1) {\r\n                inlineClassName = \"squiggly-inline-unnecessary\" /* EditorUnnecessaryInlineDecoration */;\r\n            }\r\n            if (marker.tags.indexOf(2 /* Deprecated */) !== -1) {\r\n                inlineClassName = \"squiggly-inline-deprecated\" /* EditorDeprecatedInlineDecoration */;\r\n            }\r\n        }\r\n        return {\r\n            stickiness: 1 /* NeverGrowsWhenTypingAtEdges */,\r\n            className,\r\n            showIfCollapsed: true,\r\n            overviewRuler: {\r\n                color,\r\n                position: OverviewRulerLane.Right\r\n            },\r\n            minimap,\r\n            zIndex,\r\n            inlineClassName,\r\n        };\r\n    }\r\n    _hasMarkerTag(marker, tag) {\r\n        if (marker.tags) {\r\n            return marker.tags.indexOf(tag) >= 0;\r\n        }\r\n        return false;\r\n    }\r\n};\r\nMarkerDecorationsService = __decorate([\r\n    __param(0, IModelService),\r\n    __param(1, IMarkerService)\r\n], MarkerDecorationsService);\r\nexport { MarkerDecorationsService };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}