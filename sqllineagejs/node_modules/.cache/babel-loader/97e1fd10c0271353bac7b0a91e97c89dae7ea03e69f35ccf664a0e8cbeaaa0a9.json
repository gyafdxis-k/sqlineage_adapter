{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nexport function getSpaceCnt(str, tabSize) {\n  let spacesCnt = 0;\n  for (let i = 0; i < str.length; i++) {\n    if (str.charAt(i) === '\\t') {\n      spacesCnt += tabSize;\n    } else {\n      spacesCnt++;\n    }\n  }\n  return spacesCnt;\n}\nexport function generateIndent(spacesCnt, tabSize, insertSpaces) {\n  spacesCnt = spacesCnt < 0 ? 0 : spacesCnt;\n  let result = '';\n  if (!insertSpaces) {\n    let tabsCnt = Math.floor(spacesCnt / tabSize);\n    spacesCnt = spacesCnt % tabSize;\n    for (let i = 0; i < tabsCnt; i++) {\n      result += '\\t';\n    }\n  }\n  for (let i = 0; i < spacesCnt; i++) {\n    result += ' ';\n  }\n  return result;\n}","map":{"version":3,"names":["getSpaceCnt","str","tabSize","spacesCnt","i","length","charAt","generateIndent","insertSpaces","result","tabsCnt","Math","floor"],"sources":["C:/Users/Administrator/Desktop/sqllineage-master/sqllineagejs/node_modules/monaco-editor/esm/vs/editor/contrib/indentation/indentUtils.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport function getSpaceCnt(str, tabSize) {\r\n    let spacesCnt = 0;\r\n    for (let i = 0; i < str.length; i++) {\r\n        if (str.charAt(i) === '\\t') {\r\n            spacesCnt += tabSize;\r\n        }\r\n        else {\r\n            spacesCnt++;\r\n        }\r\n    }\r\n    return spacesCnt;\r\n}\r\nexport function generateIndent(spacesCnt, tabSize, insertSpaces) {\r\n    spacesCnt = spacesCnt < 0 ? 0 : spacesCnt;\r\n    let result = '';\r\n    if (!insertSpaces) {\r\n        let tabsCnt = Math.floor(spacesCnt / tabSize);\r\n        spacesCnt = spacesCnt % tabSize;\r\n        for (let i = 0; i < tabsCnt; i++) {\r\n            result += '\\t';\r\n        }\r\n    }\r\n    for (let i = 0; i < spacesCnt; i++) {\r\n        result += ' ';\r\n    }\r\n    return result;\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAO,SAASA,WAAWA,CAACC,GAAG,EAAEC,OAAO,EAAE;EACtC,IAAIC,SAAS,GAAG,CAAC;EACjB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,GAAG,CAACI,MAAM,EAAED,CAAC,EAAE,EAAE;IACjC,IAAIH,GAAG,CAACK,MAAM,CAACF,CAAC,CAAC,KAAK,IAAI,EAAE;MACxBD,SAAS,IAAID,OAAO;IACxB,CAAC,MACI;MACDC,SAAS,EAAE;IACf;EACJ;EACA,OAAOA,SAAS;AACpB;AACA,OAAO,SAASI,cAAcA,CAACJ,SAAS,EAAED,OAAO,EAAEM,YAAY,EAAE;EAC7DL,SAAS,GAAGA,SAAS,GAAG,CAAC,GAAG,CAAC,GAAGA,SAAS;EACzC,IAAIM,MAAM,GAAG,EAAE;EACf,IAAI,CAACD,YAAY,EAAE;IACf,IAAIE,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACT,SAAS,GAAGD,OAAO,CAAC;IAC7CC,SAAS,GAAGA,SAAS,GAAGD,OAAO;IAC/B,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGM,OAAO,EAAEN,CAAC,EAAE,EAAE;MAC9BK,MAAM,IAAI,IAAI;IAClB;EACJ;EACA,KAAK,IAAIL,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,SAAS,EAAEC,CAAC,EAAE,EAAE;IAChCK,MAAM,IAAI,GAAG;EACjB;EACA,OAAOA,MAAM;AACjB"},"metadata":{},"sourceType":"module","externalDependencies":[]}