{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport * as nls from '../../../../nls.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { ICodeEditorService } from '../../../browser/services/codeEditorService.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IContextKeyService, RawContextKey, ContextKeyExpr } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IStorageService } from '../../../../platform/storage/common/storage.js';\nimport { OneReference } from '../referencesModel.js';\nimport { ReferenceWidget, LayoutData } from './referencesWidget.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Position } from '../../../common/core/position.js';\nimport { INotificationService } from '../../../../platform/notification/common/notification.js';\nimport { createCancelablePromise } from '../../../../base/common/async.js';\nimport { getOuterEditor, PeekContext } from '../../peekView/peekView.js';\nimport { IListService, WorkbenchListFocusContextKey } from '../../../../platform/list/browser/listService.js';\nimport { KeybindingsRegistry } from '../../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { KeyChord } from '../../../../base/common/keyCodes.js';\nimport { CommandsRegistry } from '../../../../platform/commands/common/commands.js';\nexport const ctxReferenceSearchVisible = new RawContextKey('referenceSearchVisible', false);\nlet ReferencesController = class ReferencesController {\n  constructor(_defaultTreeKeyboardSupport, _editor, contextKeyService, _editorService, _notificationService, _instantiationService, _storageService, _configurationService) {\n    this._defaultTreeKeyboardSupport = _defaultTreeKeyboardSupport;\n    this._editor = _editor;\n    this._editorService = _editorService;\n    this._notificationService = _notificationService;\n    this._instantiationService = _instantiationService;\n    this._storageService = _storageService;\n    this._configurationService = _configurationService;\n    this._disposables = new DisposableStore();\n    this._requestIdPool = 0;\n    this._ignoreModelChangeEvent = false;\n    this._referenceSearchVisible = ctxReferenceSearchVisible.bindTo(contextKeyService);\n  }\n  static get(editor) {\n    return editor.getContribution(ReferencesController.ID);\n  }\n  dispose() {\n    var _a, _b;\n    this._referenceSearchVisible.reset();\n    this._disposables.dispose();\n    (_a = this._widget) === null || _a === void 0 ? void 0 : _a.dispose();\n    (_b = this._model) === null || _b === void 0 ? void 0 : _b.dispose();\n    this._widget = undefined;\n    this._model = undefined;\n  }\n  toggleWidget(range, modelPromise, peekMode) {\n    // close current widget and return early is position didn't change\n    let widgetPosition;\n    if (this._widget) {\n      widgetPosition = this._widget.position;\n    }\n    this.closeWidget();\n    if (!!widgetPosition && range.containsPosition(widgetPosition)) {\n      return;\n    }\n    this._peekMode = peekMode;\n    this._referenceSearchVisible.set(true);\n    // close the widget on model/mode changes\n    this._disposables.add(this._editor.onDidChangeModelLanguage(() => {\n      this.closeWidget();\n    }));\n    this._disposables.add(this._editor.onDidChangeModel(() => {\n      if (!this._ignoreModelChangeEvent) {\n        this.closeWidget();\n      }\n    }));\n    const storageKey = 'peekViewLayout';\n    const data = LayoutData.fromJSON(this._storageService.get(storageKey, 0 /* GLOBAL */, '{}'));\n    this._widget = this._instantiationService.createInstance(ReferenceWidget, this._editor, this._defaultTreeKeyboardSupport, data);\n    this._widget.setTitle(nls.localize('labelLoading', \"Loading...\"));\n    this._widget.show(range);\n    this._disposables.add(this._widget.onDidClose(() => {\n      modelPromise.cancel();\n      if (this._widget) {\n        this._storageService.store(storageKey, JSON.stringify(this._widget.layoutData), 0 /* GLOBAL */, 1 /* MACHINE */);\n        this._widget = undefined;\n      }\n      this.closeWidget();\n    }));\n    this._disposables.add(this._widget.onDidSelectReference(event => {\n      let {\n        element,\n        kind\n      } = event;\n      if (!element) {\n        return;\n      }\n      switch (kind) {\n        case 'open':\n          if (event.source !== 'editor' || !this._configurationService.getValue('editor.stablePeek')) {\n            // when stable peek is configured we don't close\n            // the peek window on selecting the editor\n            this.openReference(element, false, false);\n          }\n          break;\n        case 'side':\n          this.openReference(element, true, false);\n          break;\n        case 'goto':\n          if (peekMode) {\n            this._gotoReference(element);\n          } else {\n            this.openReference(element, false, true);\n          }\n          break;\n      }\n    }));\n    const requestId = ++this._requestIdPool;\n    modelPromise.then(model => {\n      // still current request? widget still open?\n      if (requestId !== this._requestIdPool || !this._widget) {\n        return undefined;\n      }\n      if (this._model) {\n        this._model.dispose();\n      }\n      this._model = model;\n      // show widget\n      return this._widget.setModel(this._model).then(() => {\n        if (this._widget && this._model && this._editor.hasModel()) {\n          // might have been closed\n          // set title\n          if (!this._model.isEmpty) {\n            this._widget.setMetaTitle(nls.localize('metaTitle.N', \"{0} ({1})\", this._model.title, this._model.references.length));\n          } else {\n            this._widget.setMetaTitle('');\n          }\n          // set 'best' selection\n          let uri = this._editor.getModel().uri;\n          let pos = new Position(range.startLineNumber, range.startColumn);\n          let selection = this._model.nearestReference(uri, pos);\n          if (selection) {\n            return this._widget.setSelection(selection).then(() => {\n              if (this._widget && this._editor.getOption(71 /* peekWidgetDefaultFocus */) === 'editor') {\n                this._widget.focusOnPreviewEditor();\n              }\n            });\n          }\n        }\n        return undefined;\n      });\n    }, error => {\n      this._notificationService.error(error);\n    });\n  }\n  changeFocusBetweenPreviewAndReferences() {\n    if (!this._widget) {\n      // can be called while still resolving...\n      return;\n    }\n    if (this._widget.isPreviewEditorFocused()) {\n      this._widget.focusOnReferenceTree();\n    } else {\n      this._widget.focusOnPreviewEditor();\n    }\n  }\n  goToNextOrPreviousReference(fwd) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!this._editor.hasModel() || !this._model || !this._widget) {\n        // can be called while still resolving...\n        return;\n      }\n      const currentPosition = this._widget.position;\n      if (!currentPosition) {\n        return;\n      }\n      const source = this._model.nearestReference(this._editor.getModel().uri, currentPosition);\n      if (!source) {\n        return;\n      }\n      const target = this._model.nextOrPreviousReference(source, fwd);\n      const editorFocus = this._editor.hasTextFocus();\n      const previewEditorFocus = this._widget.isPreviewEditorFocused();\n      yield this._widget.setSelection(target);\n      yield this._gotoReference(target);\n      if (editorFocus) {\n        this._editor.focus();\n      } else if (this._widget && previewEditorFocus) {\n        this._widget.focusOnPreviewEditor();\n      }\n    });\n  }\n  revealReference(reference) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!this._editor.hasModel() || !this._model || !this._widget) {\n        // can be called while still resolving...\n        return;\n      }\n      yield this._widget.revealReference(reference);\n    });\n  }\n  closeWidget() {\n    let focusEditor = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    var _a, _b;\n    (_a = this._widget) === null || _a === void 0 ? void 0 : _a.dispose();\n    (_b = this._model) === null || _b === void 0 ? void 0 : _b.dispose();\n    this._referenceSearchVisible.reset();\n    this._disposables.clear();\n    this._widget = undefined;\n    this._model = undefined;\n    if (focusEditor) {\n      this._editor.focus();\n    }\n    this._requestIdPool += 1; // Cancel pending requests\n  }\n\n  _gotoReference(ref) {\n    if (this._widget) {\n      this._widget.hide();\n    }\n    this._ignoreModelChangeEvent = true;\n    const range = Range.lift(ref.range).collapseToStart();\n    return this._editorService.openCodeEditor({\n      resource: ref.uri,\n      options: {\n        selection: range\n      }\n    }, this._editor).then(openedEditor => {\n      var _a;\n      this._ignoreModelChangeEvent = false;\n      if (!openedEditor || !this._widget) {\n        // something went wrong...\n        this.closeWidget();\n        return;\n      }\n      if (this._editor === openedEditor) {\n        //\n        this._widget.show(range);\n        this._widget.focusOnReferenceTree();\n      } else {\n        // we opened a different editor instance which means a different controller instance.\n        // therefore we stop with this controller and continue with the other\n        const other = ReferencesController.get(openedEditor);\n        const model = this._model.clone();\n        this.closeWidget();\n        openedEditor.focus();\n        other.toggleWidget(range, createCancelablePromise(_ => Promise.resolve(model)), (_a = this._peekMode) !== null && _a !== void 0 ? _a : false);\n      }\n    }, err => {\n      this._ignoreModelChangeEvent = false;\n      onUnexpectedError(err);\n    });\n  }\n  openReference(ref, sideBySide, pinned) {\n    // clear stage\n    if (!sideBySide) {\n      this.closeWidget();\n    }\n    const {\n      uri,\n      range\n    } = ref;\n    this._editorService.openCodeEditor({\n      resource: uri,\n      options: {\n        selection: range,\n        pinned\n      }\n    }, this._editor, sideBySide);\n  }\n};\nReferencesController.ID = 'editor.contrib.referencesController';\nReferencesController = __decorate([__param(2, IContextKeyService), __param(3, ICodeEditorService), __param(4, INotificationService), __param(5, IInstantiationService), __param(6, IStorageService), __param(7, IConfigurationService)], ReferencesController);\nexport { ReferencesController };\nfunction withController(accessor, fn) {\n  const outerEditor = getOuterEditor(accessor);\n  if (!outerEditor) {\n    return;\n  }\n  let controller = ReferencesController.get(outerEditor);\n  if (controller) {\n    fn(controller);\n  }\n}\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n  id: 'togglePeekWidgetFocus',\n  weight: 100 /* EditorContrib */,\n  primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, 60 /* F2 */),\n  when: ContextKeyExpr.or(ctxReferenceSearchVisible, PeekContext.inPeekEditor),\n  handler(accessor) {\n    withController(accessor, controller => {\n      controller.changeFocusBetweenPreviewAndReferences();\n    });\n  }\n});\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n  id: 'goToNextReference',\n  weight: 100 /* EditorContrib */ - 10,\n  primary: 62 /* F4 */,\n  secondary: [70 /* F12 */],\n  when: ContextKeyExpr.or(ctxReferenceSearchVisible, PeekContext.inPeekEditor),\n  handler(accessor) {\n    withController(accessor, controller => {\n      controller.goToNextOrPreviousReference(true);\n    });\n  }\n});\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n  id: 'goToPreviousReference',\n  weight: 100 /* EditorContrib */ - 10,\n  primary: 1024 /* Shift */ | 62 /* F4 */,\n  secondary: [1024 /* Shift */ | 70 /* F12 */],\n  when: ContextKeyExpr.or(ctxReferenceSearchVisible, PeekContext.inPeekEditor),\n  handler(accessor) {\n    withController(accessor, controller => {\n      controller.goToNextOrPreviousReference(false);\n    });\n  }\n});\n// commands that aren't needed anymore because there is now ContextKeyExpr.OR\nCommandsRegistry.registerCommandAlias('goToNextReferenceFromEmbeddedEditor', 'goToNextReference');\nCommandsRegistry.registerCommandAlias('goToPreviousReferenceFromEmbeddedEditor', 'goToPreviousReference');\n// close\nCommandsRegistry.registerCommandAlias('closeReferenceSearchEditor', 'closeReferenceSearch');\nCommandsRegistry.registerCommand('closeReferenceSearch', accessor => withController(accessor, controller => controller.closeWidget()));\nKeybindingsRegistry.registerKeybindingRule({\n  id: 'closeReferenceSearch',\n  weight: 100 /* EditorContrib */ - 101,\n  primary: 9 /* Escape */,\n  secondary: [1024 /* Shift */ | 9 /* Escape */],\n  when: ContextKeyExpr.and(PeekContext.inPeekEditor, ContextKeyExpr.not('config.editor.stablePeek'))\n});\nKeybindingsRegistry.registerKeybindingRule({\n  id: 'closeReferenceSearch',\n  weight: 200 /* WorkbenchContrib */ + 50,\n  primary: 9 /* Escape */,\n  secondary: [1024 /* Shift */ | 9 /* Escape */],\n  when: ContextKeyExpr.and(ctxReferenceSearchVisible, ContextKeyExpr.not('config.editor.stablePeek'))\n});\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n  id: 'revealReference',\n  weight: 200 /* WorkbenchContrib */,\n  primary: 3 /* Enter */,\n  mac: {\n    primary: 3 /* Enter */,\n    secondary: [2048 /* CtrlCmd */ | 18 /* DownArrow */]\n  },\n\n  when: ContextKeyExpr.and(ctxReferenceSearchVisible, WorkbenchListFocusContextKey),\n  handler(accessor) {\n    var _a;\n    const listService = accessor.get(IListService);\n    const focus = (_a = listService.lastFocusedList) === null || _a === void 0 ? void 0 : _a.getFocus();\n    if (Array.isArray(focus) && focus[0] instanceof OneReference) {\n      withController(accessor, controller => controller.revealReference(focus[0]));\n    }\n  }\n});\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n  id: 'openReferenceToSide',\n  weight: 100 /* EditorContrib */,\n  primary: 2048 /* CtrlCmd */ | 3 /* Enter */,\n  mac: {\n    primary: 256 /* WinCtrl */ | 3 /* Enter */\n  },\n\n  when: ContextKeyExpr.and(ctxReferenceSearchVisible, WorkbenchListFocusContextKey),\n  handler(accessor) {\n    var _a;\n    const listService = accessor.get(IListService);\n    const focus = (_a = listService.lastFocusedList) === null || _a === void 0 ? void 0 : _a.getFocus();\n    if (Array.isArray(focus) && focus[0] instanceof OneReference) {\n      withController(accessor, controller => controller.openReference(focus[0], true, true));\n    }\n  }\n});\nCommandsRegistry.registerCommand('openReference', accessor => {\n  var _a;\n  const listService = accessor.get(IListService);\n  const focus = (_a = listService.lastFocusedList) === null || _a === void 0 ? void 0 : _a.getFocus();\n  if (Array.isArray(focus) && focus[0] instanceof OneReference) {\n    withController(accessor, controller => controller.openReference(focus[0], false, true));\n  }\n});","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","nls","onUnexpectedError","DisposableStore","ICodeEditorService","IInstantiationService","IContextKeyService","RawContextKey","ContextKeyExpr","IConfigurationService","IStorageService","OneReference","ReferenceWidget","LayoutData","Range","Position","INotificationService","createCancelablePromise","getOuterEditor","PeekContext","IListService","WorkbenchListFocusContextKey","KeybindingsRegistry","KeyChord","CommandsRegistry","ctxReferenceSearchVisible","ReferencesController","constructor","_defaultTreeKeyboardSupport","_editor","contextKeyService","_editorService","_notificationService","_instantiationService","_storageService","_configurationService","_disposables","_requestIdPool","_ignoreModelChangeEvent","_referenceSearchVisible","bindTo","get","editor","getContribution","ID","dispose","_a","_b","reset","_widget","_model","undefined","toggleWidget","range","modelPromise","peekMode","widgetPosition","position","closeWidget","containsPosition","_peekMode","set","add","onDidChangeModelLanguage","onDidChangeModel","storageKey","data","fromJSON","createInstance","setTitle","localize","show","onDidClose","cancel","store","JSON","stringify","layoutData","onDidSelectReference","event","element","kind","source","getValue","openReference","_gotoReference","requestId","model","setModel","hasModel","isEmpty","setMetaTitle","title","references","uri","getModel","pos","startLineNumber","startColumn","selection","nearestReference","setSelection","getOption","focusOnPreviewEditor","error","changeFocusBetweenPreviewAndReferences","isPreviewEditorFocused","focusOnReferenceTree","goToNextOrPreviousReference","fwd","currentPosition","nextOrPreviousReference","editorFocus","hasTextFocus","previewEditorFocus","focus","revealReference","reference","focusEditor","clear","ref","hide","lift","collapseToStart","openCodeEditor","resource","options","openedEditor","other","clone","_","err","sideBySide","pinned","withController","accessor","fn","outerEditor","controller","registerCommandAndKeybindingRule","id","weight","primary","when","or","inPeekEditor","handler","secondary","registerCommandAlias","registerCommand","registerKeybindingRule","and","not","mac","listService","lastFocusedList","getFocus","Array","isArray"],"sources":["C:/Users/Administrator/Desktop/sqllineage-master/sqllineagejs/node_modules/monaco-editor/esm/vs/editor/contrib/gotoSymbol/peek/referencesController.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport * as nls from '../../../../nls.js';\r\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\r\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\r\nimport { ICodeEditorService } from '../../../browser/services/codeEditorService.js';\r\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\r\nimport { IContextKeyService, RawContextKey, ContextKeyExpr } from '../../../../platform/contextkey/common/contextkey.js';\r\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\r\nimport { IStorageService } from '../../../../platform/storage/common/storage.js';\r\nimport { OneReference } from '../referencesModel.js';\r\nimport { ReferenceWidget, LayoutData } from './referencesWidget.js';\r\nimport { Range } from '../../../common/core/range.js';\r\nimport { Position } from '../../../common/core/position.js';\r\nimport { INotificationService } from '../../../../platform/notification/common/notification.js';\r\nimport { createCancelablePromise } from '../../../../base/common/async.js';\r\nimport { getOuterEditor, PeekContext } from '../../peekView/peekView.js';\r\nimport { IListService, WorkbenchListFocusContextKey } from '../../../../platform/list/browser/listService.js';\r\nimport { KeybindingsRegistry } from '../../../../platform/keybinding/common/keybindingsRegistry.js';\r\nimport { KeyChord } from '../../../../base/common/keyCodes.js';\r\nimport { CommandsRegistry } from '../../../../platform/commands/common/commands.js';\r\nexport const ctxReferenceSearchVisible = new RawContextKey('referenceSearchVisible', false);\r\nlet ReferencesController = class ReferencesController {\r\n    constructor(_defaultTreeKeyboardSupport, _editor, contextKeyService, _editorService, _notificationService, _instantiationService, _storageService, _configurationService) {\r\n        this._defaultTreeKeyboardSupport = _defaultTreeKeyboardSupport;\r\n        this._editor = _editor;\r\n        this._editorService = _editorService;\r\n        this._notificationService = _notificationService;\r\n        this._instantiationService = _instantiationService;\r\n        this._storageService = _storageService;\r\n        this._configurationService = _configurationService;\r\n        this._disposables = new DisposableStore();\r\n        this._requestIdPool = 0;\r\n        this._ignoreModelChangeEvent = false;\r\n        this._referenceSearchVisible = ctxReferenceSearchVisible.bindTo(contextKeyService);\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(ReferencesController.ID);\r\n    }\r\n    dispose() {\r\n        var _a, _b;\r\n        this._referenceSearchVisible.reset();\r\n        this._disposables.dispose();\r\n        (_a = this._widget) === null || _a === void 0 ? void 0 : _a.dispose();\r\n        (_b = this._model) === null || _b === void 0 ? void 0 : _b.dispose();\r\n        this._widget = undefined;\r\n        this._model = undefined;\r\n    }\r\n    toggleWidget(range, modelPromise, peekMode) {\r\n        // close current widget and return early is position didn't change\r\n        let widgetPosition;\r\n        if (this._widget) {\r\n            widgetPosition = this._widget.position;\r\n        }\r\n        this.closeWidget();\r\n        if (!!widgetPosition && range.containsPosition(widgetPosition)) {\r\n            return;\r\n        }\r\n        this._peekMode = peekMode;\r\n        this._referenceSearchVisible.set(true);\r\n        // close the widget on model/mode changes\r\n        this._disposables.add(this._editor.onDidChangeModelLanguage(() => { this.closeWidget(); }));\r\n        this._disposables.add(this._editor.onDidChangeModel(() => {\r\n            if (!this._ignoreModelChangeEvent) {\r\n                this.closeWidget();\r\n            }\r\n        }));\r\n        const storageKey = 'peekViewLayout';\r\n        const data = LayoutData.fromJSON(this._storageService.get(storageKey, 0 /* GLOBAL */, '{}'));\r\n        this._widget = this._instantiationService.createInstance(ReferenceWidget, this._editor, this._defaultTreeKeyboardSupport, data);\r\n        this._widget.setTitle(nls.localize('labelLoading', \"Loading...\"));\r\n        this._widget.show(range);\r\n        this._disposables.add(this._widget.onDidClose(() => {\r\n            modelPromise.cancel();\r\n            if (this._widget) {\r\n                this._storageService.store(storageKey, JSON.stringify(this._widget.layoutData), 0 /* GLOBAL */, 1 /* MACHINE */);\r\n                this._widget = undefined;\r\n            }\r\n            this.closeWidget();\r\n        }));\r\n        this._disposables.add(this._widget.onDidSelectReference(event => {\r\n            let { element, kind } = event;\r\n            if (!element) {\r\n                return;\r\n            }\r\n            switch (kind) {\r\n                case 'open':\r\n                    if (event.source !== 'editor' || !this._configurationService.getValue('editor.stablePeek')) {\r\n                        // when stable peek is configured we don't close\r\n                        // the peek window on selecting the editor\r\n                        this.openReference(element, false, false);\r\n                    }\r\n                    break;\r\n                case 'side':\r\n                    this.openReference(element, true, false);\r\n                    break;\r\n                case 'goto':\r\n                    if (peekMode) {\r\n                        this._gotoReference(element);\r\n                    }\r\n                    else {\r\n                        this.openReference(element, false, true);\r\n                    }\r\n                    break;\r\n            }\r\n        }));\r\n        const requestId = ++this._requestIdPool;\r\n        modelPromise.then(model => {\r\n            // still current request? widget still open?\r\n            if (requestId !== this._requestIdPool || !this._widget) {\r\n                return undefined;\r\n            }\r\n            if (this._model) {\r\n                this._model.dispose();\r\n            }\r\n            this._model = model;\r\n            // show widget\r\n            return this._widget.setModel(this._model).then(() => {\r\n                if (this._widget && this._model && this._editor.hasModel()) { // might have been closed\r\n                    // set title\r\n                    if (!this._model.isEmpty) {\r\n                        this._widget.setMetaTitle(nls.localize('metaTitle.N', \"{0} ({1})\", this._model.title, this._model.references.length));\r\n                    }\r\n                    else {\r\n                        this._widget.setMetaTitle('');\r\n                    }\r\n                    // set 'best' selection\r\n                    let uri = this._editor.getModel().uri;\r\n                    let pos = new Position(range.startLineNumber, range.startColumn);\r\n                    let selection = this._model.nearestReference(uri, pos);\r\n                    if (selection) {\r\n                        return this._widget.setSelection(selection).then(() => {\r\n                            if (this._widget && this._editor.getOption(71 /* peekWidgetDefaultFocus */) === 'editor') {\r\n                                this._widget.focusOnPreviewEditor();\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                return undefined;\r\n            });\r\n        }, error => {\r\n            this._notificationService.error(error);\r\n        });\r\n    }\r\n    changeFocusBetweenPreviewAndReferences() {\r\n        if (!this._widget) {\r\n            // can be called while still resolving...\r\n            return;\r\n        }\r\n        if (this._widget.isPreviewEditorFocused()) {\r\n            this._widget.focusOnReferenceTree();\r\n        }\r\n        else {\r\n            this._widget.focusOnPreviewEditor();\r\n        }\r\n    }\r\n    goToNextOrPreviousReference(fwd) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!this._editor.hasModel() || !this._model || !this._widget) {\r\n                // can be called while still resolving...\r\n                return;\r\n            }\r\n            const currentPosition = this._widget.position;\r\n            if (!currentPosition) {\r\n                return;\r\n            }\r\n            const source = this._model.nearestReference(this._editor.getModel().uri, currentPosition);\r\n            if (!source) {\r\n                return;\r\n            }\r\n            const target = this._model.nextOrPreviousReference(source, fwd);\r\n            const editorFocus = this._editor.hasTextFocus();\r\n            const previewEditorFocus = this._widget.isPreviewEditorFocused();\r\n            yield this._widget.setSelection(target);\r\n            yield this._gotoReference(target);\r\n            if (editorFocus) {\r\n                this._editor.focus();\r\n            }\r\n            else if (this._widget && previewEditorFocus) {\r\n                this._widget.focusOnPreviewEditor();\r\n            }\r\n        });\r\n    }\r\n    revealReference(reference) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!this._editor.hasModel() || !this._model || !this._widget) {\r\n                // can be called while still resolving...\r\n                return;\r\n            }\r\n            yield this._widget.revealReference(reference);\r\n        });\r\n    }\r\n    closeWidget(focusEditor = true) {\r\n        var _a, _b;\r\n        (_a = this._widget) === null || _a === void 0 ? void 0 : _a.dispose();\r\n        (_b = this._model) === null || _b === void 0 ? void 0 : _b.dispose();\r\n        this._referenceSearchVisible.reset();\r\n        this._disposables.clear();\r\n        this._widget = undefined;\r\n        this._model = undefined;\r\n        if (focusEditor) {\r\n            this._editor.focus();\r\n        }\r\n        this._requestIdPool += 1; // Cancel pending requests\r\n    }\r\n    _gotoReference(ref) {\r\n        if (this._widget) {\r\n            this._widget.hide();\r\n        }\r\n        this._ignoreModelChangeEvent = true;\r\n        const range = Range.lift(ref.range).collapseToStart();\r\n        return this._editorService.openCodeEditor({\r\n            resource: ref.uri,\r\n            options: { selection: range }\r\n        }, this._editor).then(openedEditor => {\r\n            var _a;\r\n            this._ignoreModelChangeEvent = false;\r\n            if (!openedEditor || !this._widget) {\r\n                // something went wrong...\r\n                this.closeWidget();\r\n                return;\r\n            }\r\n            if (this._editor === openedEditor) {\r\n                //\r\n                this._widget.show(range);\r\n                this._widget.focusOnReferenceTree();\r\n            }\r\n            else {\r\n                // we opened a different editor instance which means a different controller instance.\r\n                // therefore we stop with this controller and continue with the other\r\n                const other = ReferencesController.get(openedEditor);\r\n                const model = this._model.clone();\r\n                this.closeWidget();\r\n                openedEditor.focus();\r\n                other.toggleWidget(range, createCancelablePromise(_ => Promise.resolve(model)), (_a = this._peekMode) !== null && _a !== void 0 ? _a : false);\r\n            }\r\n        }, (err) => {\r\n            this._ignoreModelChangeEvent = false;\r\n            onUnexpectedError(err);\r\n        });\r\n    }\r\n    openReference(ref, sideBySide, pinned) {\r\n        // clear stage\r\n        if (!sideBySide) {\r\n            this.closeWidget();\r\n        }\r\n        const { uri, range } = ref;\r\n        this._editorService.openCodeEditor({\r\n            resource: uri,\r\n            options: { selection: range, pinned }\r\n        }, this._editor, sideBySide);\r\n    }\r\n};\r\nReferencesController.ID = 'editor.contrib.referencesController';\r\nReferencesController = __decorate([\r\n    __param(2, IContextKeyService),\r\n    __param(3, ICodeEditorService),\r\n    __param(4, INotificationService),\r\n    __param(5, IInstantiationService),\r\n    __param(6, IStorageService),\r\n    __param(7, IConfigurationService)\r\n], ReferencesController);\r\nexport { ReferencesController };\r\nfunction withController(accessor, fn) {\r\n    const outerEditor = getOuterEditor(accessor);\r\n    if (!outerEditor) {\r\n        return;\r\n    }\r\n    let controller = ReferencesController.get(outerEditor);\r\n    if (controller) {\r\n        fn(controller);\r\n    }\r\n}\r\nKeybindingsRegistry.registerCommandAndKeybindingRule({\r\n    id: 'togglePeekWidgetFocus',\r\n    weight: 100 /* EditorContrib */,\r\n    primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, 60 /* F2 */),\r\n    when: ContextKeyExpr.or(ctxReferenceSearchVisible, PeekContext.inPeekEditor),\r\n    handler(accessor) {\r\n        withController(accessor, controller => {\r\n            controller.changeFocusBetweenPreviewAndReferences();\r\n        });\r\n    }\r\n});\r\nKeybindingsRegistry.registerCommandAndKeybindingRule({\r\n    id: 'goToNextReference',\r\n    weight: 100 /* EditorContrib */ - 10,\r\n    primary: 62 /* F4 */,\r\n    secondary: [70 /* F12 */],\r\n    when: ContextKeyExpr.or(ctxReferenceSearchVisible, PeekContext.inPeekEditor),\r\n    handler(accessor) {\r\n        withController(accessor, controller => {\r\n            controller.goToNextOrPreviousReference(true);\r\n        });\r\n    }\r\n});\r\nKeybindingsRegistry.registerCommandAndKeybindingRule({\r\n    id: 'goToPreviousReference',\r\n    weight: 100 /* EditorContrib */ - 10,\r\n    primary: 1024 /* Shift */ | 62 /* F4 */,\r\n    secondary: [1024 /* Shift */ | 70 /* F12 */],\r\n    when: ContextKeyExpr.or(ctxReferenceSearchVisible, PeekContext.inPeekEditor),\r\n    handler(accessor) {\r\n        withController(accessor, controller => {\r\n            controller.goToNextOrPreviousReference(false);\r\n        });\r\n    }\r\n});\r\n// commands that aren't needed anymore because there is now ContextKeyExpr.OR\r\nCommandsRegistry.registerCommandAlias('goToNextReferenceFromEmbeddedEditor', 'goToNextReference');\r\nCommandsRegistry.registerCommandAlias('goToPreviousReferenceFromEmbeddedEditor', 'goToPreviousReference');\r\n// close\r\nCommandsRegistry.registerCommandAlias('closeReferenceSearchEditor', 'closeReferenceSearch');\r\nCommandsRegistry.registerCommand('closeReferenceSearch', accessor => withController(accessor, controller => controller.closeWidget()));\r\nKeybindingsRegistry.registerKeybindingRule({\r\n    id: 'closeReferenceSearch',\r\n    weight: 100 /* EditorContrib */ - 101,\r\n    primary: 9 /* Escape */,\r\n    secondary: [1024 /* Shift */ | 9 /* Escape */],\r\n    when: ContextKeyExpr.and(PeekContext.inPeekEditor, ContextKeyExpr.not('config.editor.stablePeek'))\r\n});\r\nKeybindingsRegistry.registerKeybindingRule({\r\n    id: 'closeReferenceSearch',\r\n    weight: 200 /* WorkbenchContrib */ + 50,\r\n    primary: 9 /* Escape */,\r\n    secondary: [1024 /* Shift */ | 9 /* Escape */],\r\n    when: ContextKeyExpr.and(ctxReferenceSearchVisible, ContextKeyExpr.not('config.editor.stablePeek'))\r\n});\r\nKeybindingsRegistry.registerCommandAndKeybindingRule({\r\n    id: 'revealReference',\r\n    weight: 200 /* WorkbenchContrib */,\r\n    primary: 3 /* Enter */,\r\n    mac: {\r\n        primary: 3 /* Enter */,\r\n        secondary: [2048 /* CtrlCmd */ | 18 /* DownArrow */]\r\n    },\r\n    when: ContextKeyExpr.and(ctxReferenceSearchVisible, WorkbenchListFocusContextKey),\r\n    handler(accessor) {\r\n        var _a;\r\n        const listService = accessor.get(IListService);\r\n        const focus = (_a = listService.lastFocusedList) === null || _a === void 0 ? void 0 : _a.getFocus();\r\n        if (Array.isArray(focus) && focus[0] instanceof OneReference) {\r\n            withController(accessor, controller => controller.revealReference(focus[0]));\r\n        }\r\n    }\r\n});\r\nKeybindingsRegistry.registerCommandAndKeybindingRule({\r\n    id: 'openReferenceToSide',\r\n    weight: 100 /* EditorContrib */,\r\n    primary: 2048 /* CtrlCmd */ | 3 /* Enter */,\r\n    mac: {\r\n        primary: 256 /* WinCtrl */ | 3 /* Enter */\r\n    },\r\n    when: ContextKeyExpr.and(ctxReferenceSearchVisible, WorkbenchListFocusContextKey),\r\n    handler(accessor) {\r\n        var _a;\r\n        const listService = accessor.get(IListService);\r\n        const focus = (_a = listService.lastFocusedList) === null || _a === void 0 ? void 0 : _a.getFocus();\r\n        if (Array.isArray(focus) && focus[0] instanceof OneReference) {\r\n            withController(accessor, controller => controller.openReference(focus[0], true, true));\r\n        }\r\n    }\r\n});\r\nCommandsRegistry.registerCommand('openReference', (accessor) => {\r\n    var _a;\r\n    const listService = accessor.get(IListService);\r\n    const focus = (_a = listService.lastFocusedList) === null || _a === void 0 ? void 0 : _a.getFocus();\r\n    if (Array.isArray(focus) && focus[0] instanceof OneReference) {\r\n        withController(accessor, controller => controller.openReference(focus[0], false, true));\r\n    }\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}