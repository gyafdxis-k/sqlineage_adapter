{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport * as strings from '../../../base/common/strings.js';\nimport * as dom from '../../../base/browser/dom.js';\nimport { StandardKeyboardEvent } from '../../../base/browser/keyboardEvent.js';\nimport { Emitter, Event } from '../../../base/common/event.js';\nimport { SimpleKeybinding, createKeybinding } from '../../../base/common/keyCodes.js';\nimport { ImmortalReference, toDisposable, DisposableStore, Disposable } from '../../../base/common/lifecycle.js';\nimport { OS, isLinux, isMacintosh } from '../../../base/common/platform.js';\nimport Severity from '../../../base/common/severity.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { isCodeEditor } from '../../browser/editorBrowser.js';\nimport { ResourceTextEdit } from '../../browser/services/bulkEditService.js';\nimport { isDiffEditorConfigurationKey, isEditorConfigurationKey } from '../../common/config/commonEditorConfig.js';\nimport { EditOperation } from '../../common/core/editOperation.js';\nimport { Position as Pos } from '../../common/core/position.js';\nimport { Range } from '../../common/core/range.js';\nimport { IModelService } from '../../common/services/modelService.js';\nimport { CommandsRegistry } from '../../../platform/commands/common/commands.js';\nimport { IConfigurationService } from '../../../platform/configuration/common/configuration.js';\nimport { Configuration, ConfigurationModel, DefaultConfigurationModel, ConfigurationChangeEvent } from '../../../platform/configuration/common/configurationModels.js';\nimport { AbstractKeybindingService } from '../../../platform/keybinding/common/abstractKeybindingService.js';\nimport { KeybindingResolver } from '../../../platform/keybinding/common/keybindingResolver.js';\nimport { KeybindingsRegistry } from '../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { ResolvedKeybindingItem } from '../../../platform/keybinding/common/resolvedKeybindingItem.js';\nimport { USLayoutResolvedKeybinding } from '../../../platform/keybinding/common/usLayoutResolvedKeybinding.js';\nimport { NoOpNotification } from '../../../platform/notification/common/notification.js';\nimport { WorkspaceFolder } from '../../../platform/workspace/common/workspace.js';\nimport { SimpleServicesNLS } from '../../common/standaloneStrings.js';\nexport class SimpleModel {\n  constructor(model) {\n    this.disposed = false;\n    this.model = model;\n    this._onDispose = new Emitter();\n  }\n  get textEditorModel() {\n    return this.model;\n  }\n  dispose() {\n    this.disposed = true;\n    this._onDispose.fire();\n  }\n}\nfunction withTypedEditor(widget, codeEditorCallback, diffEditorCallback) {\n  if (isCodeEditor(widget)) {\n    // Single Editor\n    return codeEditorCallback(widget);\n  } else {\n    // Diff Editor\n    return diffEditorCallback(widget);\n  }\n}\nlet SimpleEditorModelResolverService = class SimpleEditorModelResolverService {\n  constructor(modelService) {\n    this.modelService = modelService;\n  }\n  setEditor(editor) {\n    this.editor = editor;\n  }\n  createModelReference(resource) {\n    let model = null;\n    if (this.editor) {\n      model = withTypedEditor(this.editor, editor => this.findModel(editor, resource), diffEditor => this.findModel(diffEditor.getOriginalEditor(), resource) || this.findModel(diffEditor.getModifiedEditor(), resource));\n    }\n    if (!model) {\n      return Promise.reject(new Error(\"Model not found\"));\n    }\n    return Promise.resolve(new ImmortalReference(new SimpleModel(model)));\n  }\n  findModel(editor, resource) {\n    let model = this.modelService.getModel(resource);\n    if (model && model.uri.toString() !== resource.toString()) {\n      return null;\n    }\n    return model;\n  }\n};\nSimpleEditorModelResolverService = __decorate([__param(0, IModelService)], SimpleEditorModelResolverService);\nexport { SimpleEditorModelResolverService };\nexport class SimpleEditorProgressService {\n  show() {\n    return SimpleEditorProgressService.NULL_PROGRESS_RUNNER;\n  }\n  showWhile(promise, delay) {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield promise;\n    });\n  }\n}\nSimpleEditorProgressService.NULL_PROGRESS_RUNNER = {\n  done: () => {},\n  total: () => {},\n  worked: () => {}\n};\nexport class SimpleDialogService {\n  confirm(confirmation) {\n    return this.doConfirm(confirmation).then(confirmed => {\n      return {\n        confirmed,\n        checkboxChecked: false // unsupported\n      };\n    });\n  }\n\n  doConfirm(confirmation) {\n    let messageText = confirmation.message;\n    if (confirmation.detail) {\n      messageText = messageText + '\\n\\n' + confirmation.detail;\n    }\n    return Promise.resolve(window.confirm(messageText));\n  }\n  show(severity, message, buttons, options) {\n    return Promise.resolve({\n      choice: 0\n    });\n  }\n}\nexport class SimpleNotificationService {\n  info(message) {\n    return this.notify({\n      severity: Severity.Info,\n      message\n    });\n  }\n  warn(message) {\n    return this.notify({\n      severity: Severity.Warning,\n      message\n    });\n  }\n  error(error) {\n    return this.notify({\n      severity: Severity.Error,\n      message: error\n    });\n  }\n  notify(notification) {\n    switch (notification.severity) {\n      case Severity.Error:\n        console.error(notification.message);\n        break;\n      case Severity.Warning:\n        console.warn(notification.message);\n        break;\n      default:\n        console.log(notification.message);\n        break;\n    }\n    return SimpleNotificationService.NO_OP;\n  }\n  status(message, options) {\n    return Disposable.None;\n  }\n}\nSimpleNotificationService.NO_OP = new NoOpNotification();\nexport class StandaloneCommandService {\n  constructor(instantiationService) {\n    this._onWillExecuteCommand = new Emitter();\n    this._onDidExecuteCommand = new Emitter();\n    this._instantiationService = instantiationService;\n  }\n  executeCommand(id) {\n    const command = CommandsRegistry.getCommand(id);\n    if (!command) {\n      return Promise.reject(new Error(\"command '\".concat(id, \"' not found\")));\n    }\n    try {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n      this._onWillExecuteCommand.fire({\n        commandId: id,\n        args\n      });\n      const result = this._instantiationService.invokeFunction.apply(this._instantiationService, [command.handler, ...args]);\n      this._onDidExecuteCommand.fire({\n        commandId: id,\n        args\n      });\n      return Promise.resolve(result);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n  }\n}\nexport class StandaloneKeybindingService extends AbstractKeybindingService {\n  constructor(contextKeyService, commandService, telemetryService, notificationService, logService, domNode) {\n    super(contextKeyService, commandService, telemetryService, notificationService, logService);\n    this._cachedResolver = null;\n    this._dynamicKeybindings = [];\n    this._register(dom.addDisposableListener(domNode, dom.EventType.KEY_DOWN, e => {\n      let keyEvent = new StandardKeyboardEvent(e);\n      let shouldPreventDefault = this._dispatch(keyEvent, keyEvent.target);\n      if (shouldPreventDefault) {\n        keyEvent.preventDefault();\n        keyEvent.stopPropagation();\n      }\n    }));\n  }\n  addDynamicKeybinding(commandId, _keybinding, handler, when) {\n    const keybinding = createKeybinding(_keybinding, OS);\n    const toDispose = new DisposableStore();\n    if (keybinding) {\n      this._dynamicKeybindings.push({\n        keybinding: keybinding,\n        command: commandId,\n        when: when,\n        weight1: 1000,\n        weight2: 0,\n        extensionId: null,\n        isBuiltinExtension: false\n      });\n      toDispose.add(toDisposable(() => {\n        for (let i = 0; i < this._dynamicKeybindings.length; i++) {\n          let kb = this._dynamicKeybindings[i];\n          if (kb.command === commandId) {\n            this._dynamicKeybindings.splice(i, 1);\n            this.updateResolver({\n              source: 1 /* Default */\n            });\n            return;\n          }\n        }\n      }));\n    }\n    toDispose.add(CommandsRegistry.registerCommand(commandId, handler));\n    this.updateResolver({\n      source: 1 /* Default */\n    });\n    return toDispose;\n  }\n  updateResolver(event) {\n    this._cachedResolver = null;\n    this._onDidUpdateKeybindings.fire(event);\n  }\n  _getResolver() {\n    if (!this._cachedResolver) {\n      const defaults = this._toNormalizedKeybindingItems(KeybindingsRegistry.getDefaultKeybindings(), true);\n      const overrides = this._toNormalizedKeybindingItems(this._dynamicKeybindings, false);\n      this._cachedResolver = new KeybindingResolver(defaults, overrides, str => this._log(str));\n    }\n    return this._cachedResolver;\n  }\n  _documentHasFocus() {\n    return document.hasFocus();\n  }\n  _toNormalizedKeybindingItems(items, isDefault) {\n    let result = [],\n      resultLen = 0;\n    for (const item of items) {\n      const when = item.when || undefined;\n      const keybinding = item.keybinding;\n      if (!keybinding) {\n        // This might be a removal keybinding item in user settings => accept it\n        result[resultLen++] = new ResolvedKeybindingItem(undefined, item.command, item.commandArgs, when, isDefault, null, false);\n      } else {\n        const resolvedKeybindings = this.resolveKeybinding(keybinding);\n        for (const resolvedKeybinding of resolvedKeybindings) {\n          result[resultLen++] = new ResolvedKeybindingItem(resolvedKeybinding, item.command, item.commandArgs, when, isDefault, null, false);\n        }\n      }\n    }\n    return result;\n  }\n  resolveKeybinding(keybinding) {\n    return [new USLayoutResolvedKeybinding(keybinding, OS)];\n  }\n  resolveKeyboardEvent(keyboardEvent) {\n    let keybinding = new SimpleKeybinding(keyboardEvent.ctrlKey, keyboardEvent.shiftKey, keyboardEvent.altKey, keyboardEvent.metaKey, keyboardEvent.keyCode).toChord();\n    return new USLayoutResolvedKeybinding(keybinding, OS);\n  }\n}\nfunction isConfigurationOverrides(thing) {\n  return thing && typeof thing === 'object' && (!thing.overrideIdentifier || typeof thing.overrideIdentifier === 'string') && (!thing.resource || thing.resource instanceof URI);\n}\nexport class SimpleConfigurationService {\n  constructor() {\n    this._onDidChangeConfiguration = new Emitter();\n    this.onDidChangeConfiguration = this._onDidChangeConfiguration.event;\n    this._configuration = new Configuration(new DefaultConfigurationModel(), new ConfigurationModel());\n  }\n  getValue(arg1, arg2) {\n    const section = typeof arg1 === 'string' ? arg1 : undefined;\n    const overrides = isConfigurationOverrides(arg1) ? arg1 : isConfigurationOverrides(arg2) ? arg2 : {};\n    return this._configuration.getValue(section, overrides, undefined);\n  }\n  updateValues(values) {\n    const previous = {\n      data: this._configuration.toData()\n    };\n    let changedKeys = [];\n    for (const entry of values) {\n      const [key, value] = entry;\n      if (this.getValue(key) === value) {\n        continue;\n      }\n      this._configuration.updateValue(key, value);\n      changedKeys.push(key);\n    }\n    if (changedKeys.length > 0) {\n      const configurationChangeEvent = new ConfigurationChangeEvent({\n        keys: changedKeys,\n        overrides: []\n      }, previous, this._configuration);\n      configurationChangeEvent.source = 7 /* MEMORY */;\n      configurationChangeEvent.sourceConfig = null;\n      this._onDidChangeConfiguration.fire(configurationChangeEvent);\n    }\n    return Promise.resolve();\n  }\n}\nexport class SimpleResourceConfigurationService {\n  constructor(configurationService) {\n    this.configurationService = configurationService;\n    this._onDidChangeConfiguration = new Emitter();\n    this.configurationService.onDidChangeConfiguration(e => {\n      this._onDidChangeConfiguration.fire({\n        affectedKeys: e.affectedKeys,\n        affectsConfiguration: (resource, configuration) => e.affectsConfiguration(configuration)\n      });\n    });\n  }\n  getValue(resource, arg2, arg3) {\n    const position = Pos.isIPosition(arg2) ? arg2 : null;\n    const section = position ? typeof arg3 === 'string' ? arg3 : undefined : typeof arg2 === 'string' ? arg2 : undefined;\n    if (typeof section === 'undefined') {\n      return this.configurationService.getValue();\n    }\n    return this.configurationService.getValue(section);\n  }\n}\nlet SimpleResourcePropertiesService = class SimpleResourcePropertiesService {\n  constructor(configurationService) {\n    this.configurationService = configurationService;\n  }\n  getEOL(resource, language) {\n    const eol = this.configurationService.getValue('files.eol', {\n      overrideIdentifier: language,\n      resource\n    });\n    if (eol && eol !== 'auto') {\n      return eol;\n    }\n    return isLinux || isMacintosh ? '\\n' : '\\r\\n';\n  }\n};\nSimpleResourcePropertiesService = __decorate([__param(0, IConfigurationService)], SimpleResourcePropertiesService);\nexport { SimpleResourcePropertiesService };\nexport class StandaloneTelemetryService {\n  publicLog(eventName, data) {\n    return Promise.resolve(undefined);\n  }\n  publicLog2(eventName, data) {\n    return this.publicLog(eventName, data);\n  }\n}\nexport class SimpleWorkspaceContextService {\n  constructor() {\n    const resource = URI.from({\n      scheme: SimpleWorkspaceContextService.SCHEME,\n      authority: 'model',\n      path: '/'\n    });\n    this.workspace = {\n      id: '4064f6ec-cb38-4ad0-af64-ee6467e63c82',\n      folders: [new WorkspaceFolder({\n        uri: resource,\n        name: '',\n        index: 0\n      })]\n    };\n  }\n  getWorkspace() {\n    return this.workspace;\n  }\n}\nSimpleWorkspaceContextService.SCHEME = 'inmemory';\nexport function updateConfigurationService(configurationService, source, isDiffEditor) {\n  if (!source) {\n    return;\n  }\n  if (!(configurationService instanceof SimpleConfigurationService)) {\n    return;\n  }\n  let toUpdate = [];\n  Object.keys(source).forEach(key => {\n    if (isEditorConfigurationKey(key)) {\n      toUpdate.push([\"editor.\".concat(key), source[key]]);\n    }\n    if (isDiffEditor && isDiffEditorConfigurationKey(key)) {\n      toUpdate.push([\"diffEditor.\".concat(key), source[key]]);\n    }\n  });\n  if (toUpdate.length > 0) {\n    configurationService.updateValues(toUpdate);\n  }\n}\nexport class SimpleBulkEditService {\n  constructor(_modelService) {\n    this._modelService = _modelService;\n    //\n  }\n\n  hasPreviewHandler() {\n    return false;\n  }\n  apply(edits, _options) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const textEdits = new Map();\n      for (let edit of edits) {\n        if (!(edit instanceof ResourceTextEdit)) {\n          throw new Error('bad edit - only text edits are supported');\n        }\n        const model = this._modelService.getModel(edit.resource);\n        if (!model) {\n          throw new Error('bad edit - model not found');\n        }\n        if (typeof edit.versionId === 'number' && model.getVersionId() !== edit.versionId) {\n          throw new Error('bad state - model changed in the meantime');\n        }\n        let array = textEdits.get(model);\n        if (!array) {\n          array = [];\n          textEdits.set(model, array);\n        }\n        array.push(EditOperation.replaceMove(Range.lift(edit.textEdit.range), edit.textEdit.text));\n      }\n      let totalEdits = 0;\n      let totalFiles = 0;\n      for (const [model, edits] of textEdits) {\n        model.pushStackElement();\n        model.pushEditOperations([], edits, () => []);\n        model.pushStackElement();\n        totalFiles += 1;\n        totalEdits += edits.length;\n      }\n      return {\n        ariaSummary: strings.format(SimpleServicesNLS.bulkEditServiceSummary, totalEdits, totalFiles)\n      };\n    });\n  }\n}\nexport class SimpleUriLabelService {\n  getUriLabel(resource, options) {\n    if (resource.scheme === 'file') {\n      return resource.fsPath;\n    }\n    return resource.path;\n  }\n}\nexport class SimpleLayoutService {\n  constructor(_codeEditorService, _container) {\n    this._codeEditorService = _codeEditorService;\n    this._container = _container;\n    this.onLayout = Event.None;\n  }\n  get dimension() {\n    if (!this._dimension) {\n      this._dimension = dom.getClientArea(window.document.body);\n    }\n    return this._dimension;\n  }\n  get container() {\n    return this._container;\n  }\n  focus() {\n    var _a;\n    (_a = this._codeEditorService.getFocusedCodeEditor()) === null || _a === void 0 ? void 0 : _a.focus();\n  }\n}","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","strings","dom","StandardKeyboardEvent","Emitter","Event","SimpleKeybinding","createKeybinding","ImmortalReference","toDisposable","DisposableStore","Disposable","OS","isLinux","isMacintosh","Severity","URI","isCodeEditor","ResourceTextEdit","isDiffEditorConfigurationKey","isEditorConfigurationKey","EditOperation","Position","Pos","Range","IModelService","CommandsRegistry","IConfigurationService","Configuration","ConfigurationModel","DefaultConfigurationModel","ConfigurationChangeEvent","AbstractKeybindingService","KeybindingResolver","KeybindingsRegistry","ResolvedKeybindingItem","USLayoutResolvedKeybinding","NoOpNotification","WorkspaceFolder","SimpleServicesNLS","SimpleModel","constructor","model","disposed","_onDispose","textEditorModel","dispose","fire","withTypedEditor","widget","codeEditorCallback","diffEditorCallback","SimpleEditorModelResolverService","modelService","setEditor","editor","createModelReference","resource","findModel","diffEditor","getOriginalEditor","getModifiedEditor","Error","getModel","uri","toString","SimpleEditorProgressService","show","NULL_PROGRESS_RUNNER","showWhile","promise","delay","total","worked","SimpleDialogService","confirm","confirmation","doConfirm","confirmed","checkboxChecked","messageText","message","detail","window","severity","buttons","options","choice","SimpleNotificationService","info","notify","Info","warn","Warning","error","notification","console","log","NO_OP","status","None","StandaloneCommandService","instantiationService","_onWillExecuteCommand","_onDidExecuteCommand","_instantiationService","executeCommand","id","command","getCommand","concat","_len","args","Array","_key","commandId","invokeFunction","handler","err","StandaloneKeybindingService","contextKeyService","commandService","telemetryService","notificationService","logService","domNode","_cachedResolver","_dynamicKeybindings","_register","addDisposableListener","EventType","KEY_DOWN","keyEvent","shouldPreventDefault","_dispatch","preventDefault","stopPropagation","addDynamicKeybinding","_keybinding","when","keybinding","toDispose","push","weight1","weight2","extensionId","isBuiltinExtension","add","kb","splice","updateResolver","source","registerCommand","event","_onDidUpdateKeybindings","_getResolver","defaults","_toNormalizedKeybindingItems","getDefaultKeybindings","overrides","str","_log","_documentHasFocus","document","hasFocus","items","isDefault","resultLen","item","undefined","commandArgs","resolvedKeybindings","resolveKeybinding","resolvedKeybinding","resolveKeyboardEvent","keyboardEvent","ctrlKey","shiftKey","altKey","metaKey","keyCode","toChord","isConfigurationOverrides","thing","overrideIdentifier","SimpleConfigurationService","_onDidChangeConfiguration","onDidChangeConfiguration","_configuration","getValue","arg1","arg2","section","updateValues","values","previous","data","toData","changedKeys","entry","updateValue","configurationChangeEvent","keys","sourceConfig","SimpleResourceConfigurationService","configurationService","affectedKeys","affectsConfiguration","configuration","arg3","position","isIPosition","SimpleResourcePropertiesService","getEOL","language","eol","StandaloneTelemetryService","publicLog","eventName","publicLog2","SimpleWorkspaceContextService","from","scheme","SCHEME","authority","path","workspace","folders","name","index","getWorkspace","updateConfigurationService","isDiffEditor","toUpdate","forEach","SimpleBulkEditService","_modelService","hasPreviewHandler","edits","_options","textEdits","Map","edit","versionId","getVersionId","array","get","set","replaceMove","lift","textEdit","range","text","totalEdits","totalFiles","pushStackElement","pushEditOperations","ariaSummary","format","bulkEditServiceSummary","SimpleUriLabelService","getUriLabel","fsPath","SimpleLayoutService","_codeEditorService","_container","onLayout","dimension","_dimension","getClientArea","body","container","focus","_a","getFocusedCodeEditor"],"sources":["C:/Users/Administrator/Desktop/sqllineage-master/sqllineagejs/node_modules/monaco-editor/esm/vs/editor/standalone/browser/simpleServices.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport * as strings from '../../../base/common/strings.js';\r\nimport * as dom from '../../../base/browser/dom.js';\r\nimport { StandardKeyboardEvent } from '../../../base/browser/keyboardEvent.js';\r\nimport { Emitter, Event } from '../../../base/common/event.js';\r\nimport { SimpleKeybinding, createKeybinding } from '../../../base/common/keyCodes.js';\r\nimport { ImmortalReference, toDisposable, DisposableStore, Disposable } from '../../../base/common/lifecycle.js';\r\nimport { OS, isLinux, isMacintosh } from '../../../base/common/platform.js';\r\nimport Severity from '../../../base/common/severity.js';\r\nimport { URI } from '../../../base/common/uri.js';\r\nimport { isCodeEditor } from '../../browser/editorBrowser.js';\r\nimport { ResourceTextEdit } from '../../browser/services/bulkEditService.js';\r\nimport { isDiffEditorConfigurationKey, isEditorConfigurationKey } from '../../common/config/commonEditorConfig.js';\r\nimport { EditOperation } from '../../common/core/editOperation.js';\r\nimport { Position as Pos } from '../../common/core/position.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { IModelService } from '../../common/services/modelService.js';\r\nimport { CommandsRegistry } from '../../../platform/commands/common/commands.js';\r\nimport { IConfigurationService } from '../../../platform/configuration/common/configuration.js';\r\nimport { Configuration, ConfigurationModel, DefaultConfigurationModel, ConfigurationChangeEvent } from '../../../platform/configuration/common/configurationModels.js';\r\nimport { AbstractKeybindingService } from '../../../platform/keybinding/common/abstractKeybindingService.js';\r\nimport { KeybindingResolver } from '../../../platform/keybinding/common/keybindingResolver.js';\r\nimport { KeybindingsRegistry } from '../../../platform/keybinding/common/keybindingsRegistry.js';\r\nimport { ResolvedKeybindingItem } from '../../../platform/keybinding/common/resolvedKeybindingItem.js';\r\nimport { USLayoutResolvedKeybinding } from '../../../platform/keybinding/common/usLayoutResolvedKeybinding.js';\r\nimport { NoOpNotification } from '../../../platform/notification/common/notification.js';\r\nimport { WorkspaceFolder } from '../../../platform/workspace/common/workspace.js';\r\nimport { SimpleServicesNLS } from '../../common/standaloneStrings.js';\r\nexport class SimpleModel {\r\n    constructor(model) {\r\n        this.disposed = false;\r\n        this.model = model;\r\n        this._onDispose = new Emitter();\r\n    }\r\n    get textEditorModel() {\r\n        return this.model;\r\n    }\r\n    dispose() {\r\n        this.disposed = true;\r\n        this._onDispose.fire();\r\n    }\r\n}\r\nfunction withTypedEditor(widget, codeEditorCallback, diffEditorCallback) {\r\n    if (isCodeEditor(widget)) {\r\n        // Single Editor\r\n        return codeEditorCallback(widget);\r\n    }\r\n    else {\r\n        // Diff Editor\r\n        return diffEditorCallback(widget);\r\n    }\r\n}\r\nlet SimpleEditorModelResolverService = class SimpleEditorModelResolverService {\r\n    constructor(modelService) {\r\n        this.modelService = modelService;\r\n    }\r\n    setEditor(editor) {\r\n        this.editor = editor;\r\n    }\r\n    createModelReference(resource) {\r\n        let model = null;\r\n        if (this.editor) {\r\n            model = withTypedEditor(this.editor, (editor) => this.findModel(editor, resource), (diffEditor) => this.findModel(diffEditor.getOriginalEditor(), resource) || this.findModel(diffEditor.getModifiedEditor(), resource));\r\n        }\r\n        if (!model) {\r\n            return Promise.reject(new Error(`Model not found`));\r\n        }\r\n        return Promise.resolve(new ImmortalReference(new SimpleModel(model)));\r\n    }\r\n    findModel(editor, resource) {\r\n        let model = this.modelService.getModel(resource);\r\n        if (model && model.uri.toString() !== resource.toString()) {\r\n            return null;\r\n        }\r\n        return model;\r\n    }\r\n};\r\nSimpleEditorModelResolverService = __decorate([\r\n    __param(0, IModelService)\r\n], SimpleEditorModelResolverService);\r\nexport { SimpleEditorModelResolverService };\r\nexport class SimpleEditorProgressService {\r\n    show() {\r\n        return SimpleEditorProgressService.NULL_PROGRESS_RUNNER;\r\n    }\r\n    showWhile(promise, delay) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            yield promise;\r\n        });\r\n    }\r\n}\r\nSimpleEditorProgressService.NULL_PROGRESS_RUNNER = {\r\n    done: () => { },\r\n    total: () => { },\r\n    worked: () => { }\r\n};\r\nexport class SimpleDialogService {\r\n    confirm(confirmation) {\r\n        return this.doConfirm(confirmation).then(confirmed => {\r\n            return {\r\n                confirmed,\r\n                checkboxChecked: false // unsupported\r\n            };\r\n        });\r\n    }\r\n    doConfirm(confirmation) {\r\n        let messageText = confirmation.message;\r\n        if (confirmation.detail) {\r\n            messageText = messageText + '\\n\\n' + confirmation.detail;\r\n        }\r\n        return Promise.resolve(window.confirm(messageText));\r\n    }\r\n    show(severity, message, buttons, options) {\r\n        return Promise.resolve({ choice: 0 });\r\n    }\r\n}\r\nexport class SimpleNotificationService {\r\n    info(message) {\r\n        return this.notify({ severity: Severity.Info, message });\r\n    }\r\n    warn(message) {\r\n        return this.notify({ severity: Severity.Warning, message });\r\n    }\r\n    error(error) {\r\n        return this.notify({ severity: Severity.Error, message: error });\r\n    }\r\n    notify(notification) {\r\n        switch (notification.severity) {\r\n            case Severity.Error:\r\n                console.error(notification.message);\r\n                break;\r\n            case Severity.Warning:\r\n                console.warn(notification.message);\r\n                break;\r\n            default:\r\n                console.log(notification.message);\r\n                break;\r\n        }\r\n        return SimpleNotificationService.NO_OP;\r\n    }\r\n    status(message, options) {\r\n        return Disposable.None;\r\n    }\r\n}\r\nSimpleNotificationService.NO_OP = new NoOpNotification();\r\nexport class StandaloneCommandService {\r\n    constructor(instantiationService) {\r\n        this._onWillExecuteCommand = new Emitter();\r\n        this._onDidExecuteCommand = new Emitter();\r\n        this._instantiationService = instantiationService;\r\n    }\r\n    executeCommand(id, ...args) {\r\n        const command = CommandsRegistry.getCommand(id);\r\n        if (!command) {\r\n            return Promise.reject(new Error(`command '${id}' not found`));\r\n        }\r\n        try {\r\n            this._onWillExecuteCommand.fire({ commandId: id, args });\r\n            const result = this._instantiationService.invokeFunction.apply(this._instantiationService, [command.handler, ...args]);\r\n            this._onDidExecuteCommand.fire({ commandId: id, args });\r\n            return Promise.resolve(result);\r\n        }\r\n        catch (err) {\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n}\r\nexport class StandaloneKeybindingService extends AbstractKeybindingService {\r\n    constructor(contextKeyService, commandService, telemetryService, notificationService, logService, domNode) {\r\n        super(contextKeyService, commandService, telemetryService, notificationService, logService);\r\n        this._cachedResolver = null;\r\n        this._dynamicKeybindings = [];\r\n        this._register(dom.addDisposableListener(domNode, dom.EventType.KEY_DOWN, (e) => {\r\n            let keyEvent = new StandardKeyboardEvent(e);\r\n            let shouldPreventDefault = this._dispatch(keyEvent, keyEvent.target);\r\n            if (shouldPreventDefault) {\r\n                keyEvent.preventDefault();\r\n                keyEvent.stopPropagation();\r\n            }\r\n        }));\r\n    }\r\n    addDynamicKeybinding(commandId, _keybinding, handler, when) {\r\n        const keybinding = createKeybinding(_keybinding, OS);\r\n        const toDispose = new DisposableStore();\r\n        if (keybinding) {\r\n            this._dynamicKeybindings.push({\r\n                keybinding: keybinding,\r\n                command: commandId,\r\n                when: when,\r\n                weight1: 1000,\r\n                weight2: 0,\r\n                extensionId: null,\r\n                isBuiltinExtension: false\r\n            });\r\n            toDispose.add(toDisposable(() => {\r\n                for (let i = 0; i < this._dynamicKeybindings.length; i++) {\r\n                    let kb = this._dynamicKeybindings[i];\r\n                    if (kb.command === commandId) {\r\n                        this._dynamicKeybindings.splice(i, 1);\r\n                        this.updateResolver({ source: 1 /* Default */ });\r\n                        return;\r\n                    }\r\n                }\r\n            }));\r\n        }\r\n        toDispose.add(CommandsRegistry.registerCommand(commandId, handler));\r\n        this.updateResolver({ source: 1 /* Default */ });\r\n        return toDispose;\r\n    }\r\n    updateResolver(event) {\r\n        this._cachedResolver = null;\r\n        this._onDidUpdateKeybindings.fire(event);\r\n    }\r\n    _getResolver() {\r\n        if (!this._cachedResolver) {\r\n            const defaults = this._toNormalizedKeybindingItems(KeybindingsRegistry.getDefaultKeybindings(), true);\r\n            const overrides = this._toNormalizedKeybindingItems(this._dynamicKeybindings, false);\r\n            this._cachedResolver = new KeybindingResolver(defaults, overrides, (str) => this._log(str));\r\n        }\r\n        return this._cachedResolver;\r\n    }\r\n    _documentHasFocus() {\r\n        return document.hasFocus();\r\n    }\r\n    _toNormalizedKeybindingItems(items, isDefault) {\r\n        let result = [], resultLen = 0;\r\n        for (const item of items) {\r\n            const when = item.when || undefined;\r\n            const keybinding = item.keybinding;\r\n            if (!keybinding) {\r\n                // This might be a removal keybinding item in user settings => accept it\r\n                result[resultLen++] = new ResolvedKeybindingItem(undefined, item.command, item.commandArgs, when, isDefault, null, false);\r\n            }\r\n            else {\r\n                const resolvedKeybindings = this.resolveKeybinding(keybinding);\r\n                for (const resolvedKeybinding of resolvedKeybindings) {\r\n                    result[resultLen++] = new ResolvedKeybindingItem(resolvedKeybinding, item.command, item.commandArgs, when, isDefault, null, false);\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    resolveKeybinding(keybinding) {\r\n        return [new USLayoutResolvedKeybinding(keybinding, OS)];\r\n    }\r\n    resolveKeyboardEvent(keyboardEvent) {\r\n        let keybinding = new SimpleKeybinding(keyboardEvent.ctrlKey, keyboardEvent.shiftKey, keyboardEvent.altKey, keyboardEvent.metaKey, keyboardEvent.keyCode).toChord();\r\n        return new USLayoutResolvedKeybinding(keybinding, OS);\r\n    }\r\n}\r\nfunction isConfigurationOverrides(thing) {\r\n    return thing\r\n        && typeof thing === 'object'\r\n        && (!thing.overrideIdentifier || typeof thing.overrideIdentifier === 'string')\r\n        && (!thing.resource || thing.resource instanceof URI);\r\n}\r\nexport class SimpleConfigurationService {\r\n    constructor() {\r\n        this._onDidChangeConfiguration = new Emitter();\r\n        this.onDidChangeConfiguration = this._onDidChangeConfiguration.event;\r\n        this._configuration = new Configuration(new DefaultConfigurationModel(), new ConfigurationModel());\r\n    }\r\n    getValue(arg1, arg2) {\r\n        const section = typeof arg1 === 'string' ? arg1 : undefined;\r\n        const overrides = isConfigurationOverrides(arg1) ? arg1 : isConfigurationOverrides(arg2) ? arg2 : {};\r\n        return this._configuration.getValue(section, overrides, undefined);\r\n    }\r\n    updateValues(values) {\r\n        const previous = { data: this._configuration.toData() };\r\n        let changedKeys = [];\r\n        for (const entry of values) {\r\n            const [key, value] = entry;\r\n            if (this.getValue(key) === value) {\r\n                continue;\r\n            }\r\n            this._configuration.updateValue(key, value);\r\n            changedKeys.push(key);\r\n        }\r\n        if (changedKeys.length > 0) {\r\n            const configurationChangeEvent = new ConfigurationChangeEvent({ keys: changedKeys, overrides: [] }, previous, this._configuration);\r\n            configurationChangeEvent.source = 7 /* MEMORY */;\r\n            configurationChangeEvent.sourceConfig = null;\r\n            this._onDidChangeConfiguration.fire(configurationChangeEvent);\r\n        }\r\n        return Promise.resolve();\r\n    }\r\n}\r\nexport class SimpleResourceConfigurationService {\r\n    constructor(configurationService) {\r\n        this.configurationService = configurationService;\r\n        this._onDidChangeConfiguration = new Emitter();\r\n        this.configurationService.onDidChangeConfiguration((e) => {\r\n            this._onDidChangeConfiguration.fire({ affectedKeys: e.affectedKeys, affectsConfiguration: (resource, configuration) => e.affectsConfiguration(configuration) });\r\n        });\r\n    }\r\n    getValue(resource, arg2, arg3) {\r\n        const position = Pos.isIPosition(arg2) ? arg2 : null;\r\n        const section = position ? (typeof arg3 === 'string' ? arg3 : undefined) : (typeof arg2 === 'string' ? arg2 : undefined);\r\n        if (typeof section === 'undefined') {\r\n            return this.configurationService.getValue();\r\n        }\r\n        return this.configurationService.getValue(section);\r\n    }\r\n}\r\nlet SimpleResourcePropertiesService = class SimpleResourcePropertiesService {\r\n    constructor(configurationService) {\r\n        this.configurationService = configurationService;\r\n    }\r\n    getEOL(resource, language) {\r\n        const eol = this.configurationService.getValue('files.eol', { overrideIdentifier: language, resource });\r\n        if (eol && eol !== 'auto') {\r\n            return eol;\r\n        }\r\n        return (isLinux || isMacintosh) ? '\\n' : '\\r\\n';\r\n    }\r\n};\r\nSimpleResourcePropertiesService = __decorate([\r\n    __param(0, IConfigurationService)\r\n], SimpleResourcePropertiesService);\r\nexport { SimpleResourcePropertiesService };\r\nexport class StandaloneTelemetryService {\r\n    publicLog(eventName, data) {\r\n        return Promise.resolve(undefined);\r\n    }\r\n    publicLog2(eventName, data) {\r\n        return this.publicLog(eventName, data);\r\n    }\r\n}\r\nexport class SimpleWorkspaceContextService {\r\n    constructor() {\r\n        const resource = URI.from({ scheme: SimpleWorkspaceContextService.SCHEME, authority: 'model', path: '/' });\r\n        this.workspace = { id: '4064f6ec-cb38-4ad0-af64-ee6467e63c82', folders: [new WorkspaceFolder({ uri: resource, name: '', index: 0 })] };\r\n    }\r\n    getWorkspace() {\r\n        return this.workspace;\r\n    }\r\n}\r\nSimpleWorkspaceContextService.SCHEME = 'inmemory';\r\nexport function updateConfigurationService(configurationService, source, isDiffEditor) {\r\n    if (!source) {\r\n        return;\r\n    }\r\n    if (!(configurationService instanceof SimpleConfigurationService)) {\r\n        return;\r\n    }\r\n    let toUpdate = [];\r\n    Object.keys(source).forEach((key) => {\r\n        if (isEditorConfigurationKey(key)) {\r\n            toUpdate.push([`editor.${key}`, source[key]]);\r\n        }\r\n        if (isDiffEditor && isDiffEditorConfigurationKey(key)) {\r\n            toUpdate.push([`diffEditor.${key}`, source[key]]);\r\n        }\r\n    });\r\n    if (toUpdate.length > 0) {\r\n        configurationService.updateValues(toUpdate);\r\n    }\r\n}\r\nexport class SimpleBulkEditService {\r\n    constructor(_modelService) {\r\n        this._modelService = _modelService;\r\n        //\r\n    }\r\n    hasPreviewHandler() {\r\n        return false;\r\n    }\r\n    apply(edits, _options) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const textEdits = new Map();\r\n            for (let edit of edits) {\r\n                if (!(edit instanceof ResourceTextEdit)) {\r\n                    throw new Error('bad edit - only text edits are supported');\r\n                }\r\n                const model = this._modelService.getModel(edit.resource);\r\n                if (!model) {\r\n                    throw new Error('bad edit - model not found');\r\n                }\r\n                if (typeof edit.versionId === 'number' && model.getVersionId() !== edit.versionId) {\r\n                    throw new Error('bad state - model changed in the meantime');\r\n                }\r\n                let array = textEdits.get(model);\r\n                if (!array) {\r\n                    array = [];\r\n                    textEdits.set(model, array);\r\n                }\r\n                array.push(EditOperation.replaceMove(Range.lift(edit.textEdit.range), edit.textEdit.text));\r\n            }\r\n            let totalEdits = 0;\r\n            let totalFiles = 0;\r\n            for (const [model, edits] of textEdits) {\r\n                model.pushStackElement();\r\n                model.pushEditOperations([], edits, () => []);\r\n                model.pushStackElement();\r\n                totalFiles += 1;\r\n                totalEdits += edits.length;\r\n            }\r\n            return {\r\n                ariaSummary: strings.format(SimpleServicesNLS.bulkEditServiceSummary, totalEdits, totalFiles)\r\n            };\r\n        });\r\n    }\r\n}\r\nexport class SimpleUriLabelService {\r\n    getUriLabel(resource, options) {\r\n        if (resource.scheme === 'file') {\r\n            return resource.fsPath;\r\n        }\r\n        return resource.path;\r\n    }\r\n}\r\nexport class SimpleLayoutService {\r\n    constructor(_codeEditorService, _container) {\r\n        this._codeEditorService = _codeEditorService;\r\n        this._container = _container;\r\n        this.onLayout = Event.None;\r\n    }\r\n    get dimension() {\r\n        if (!this._dimension) {\r\n            this._dimension = dom.getClientArea(window.document.body);\r\n        }\r\n        return this._dimension;\r\n    }\r\n    get container() {\r\n        return this._container;\r\n    }\r\n    focus() {\r\n        var _a;\r\n        (_a = this._codeEditorService.getFocusedCodeEditor()) === null || _a === void 0 ? void 0 : _a.focus();\r\n    }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}