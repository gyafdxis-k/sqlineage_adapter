{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport './media/quickInput.css';\nimport { NO_KEY_MODS, ItemActivation } from '../common/quickInput.js';\nimport * as dom from '../../../browser/dom.js';\nimport { CancellationToken } from '../../../common/cancellation.js';\nimport { QuickInputList, QuickInputListFocus } from './quickInputList.js';\nimport { QuickInputBox } from './quickInputBox.js';\nimport { StandardKeyboardEvent } from '../../../browser/keyboardEvent.js';\nimport { localize } from '../../../../nls.js';\nimport { CountBadge } from '../../../browser/ui/countBadge/countBadge.js';\nimport { ProgressBar } from '../../../browser/ui/progressbar/progressbar.js';\nimport { Emitter } from '../../../common/event.js';\nimport { Button } from '../../../browser/ui/button/button.js';\nimport { dispose, Disposable, DisposableStore } from '../../../common/lifecycle.js';\nimport Severity from '../../../common/severity.js';\nimport { ActionBar } from '../../../browser/ui/actionbar/actionbar.js';\nimport { Action } from '../../../common/actions.js';\nimport { equals } from '../../../common/arrays.js';\nimport { TimeoutTimer } from '../../../common/async.js';\nimport { getIconClass } from './quickInputUtils.js';\nimport { registerCodicon, Codicon } from '../../../common/codicons.js';\nimport { escape } from '../../../common/strings.js';\nimport { renderLabelWithIcons } from '../../../browser/ui/iconLabel/iconLabels.js';\nconst $ = dom.$;\nconst backButtonIcon = registerCodicon('quick-input-back', Codicon.arrowLeft);\nconst backButton = {\n  iconClass: backButtonIcon.classNames,\n  tooltip: localize('quickInput.back', \"Back\"),\n  handle: -1 // TODO\n};\n\nclass QuickInput extends Disposable {\n  constructor(ui) {\n    super();\n    this.ui = ui;\n    this.visible = false;\n    this._enabled = true;\n    this._busy = false;\n    this._ignoreFocusOut = false;\n    this._buttons = [];\n    this.buttonsUpdated = false;\n    this.onDidTriggerButtonEmitter = this._register(new Emitter());\n    this.onDidHideEmitter = this._register(new Emitter());\n    this.onDisposeEmitter = this._register(new Emitter());\n    this.visibleDisposables = this._register(new DisposableStore());\n    this.onDidHide = this.onDidHideEmitter.event;\n  }\n  get title() {\n    return this._title;\n  }\n  set title(title) {\n    this._title = title;\n    this.update();\n  }\n  get description() {\n    return this._description;\n  }\n  set description(description) {\n    this._description = description;\n    this.update();\n  }\n  get step() {\n    return this._steps;\n  }\n  set step(step) {\n    this._steps = step;\n    this.update();\n  }\n  get totalSteps() {\n    return this._totalSteps;\n  }\n  set totalSteps(totalSteps) {\n    this._totalSteps = totalSteps;\n    this.update();\n  }\n  get enabled() {\n    return this._enabled;\n  }\n  set enabled(enabled) {\n    this._enabled = enabled;\n    this.update();\n  }\n  get contextKey() {\n    return this._contextKey;\n  }\n  set contextKey(contextKey) {\n    this._contextKey = contextKey;\n    this.update();\n  }\n  get busy() {\n    return this._busy;\n  }\n  set busy(busy) {\n    this._busy = busy;\n    this.update();\n  }\n  get ignoreFocusOut() {\n    return this._ignoreFocusOut;\n  }\n  set ignoreFocusOut(ignoreFocusOut) {\n    this._ignoreFocusOut = ignoreFocusOut;\n    this.update();\n  }\n  get buttons() {\n    return this._buttons;\n  }\n  set buttons(buttons) {\n    this._buttons = buttons;\n    this.buttonsUpdated = true;\n    this.update();\n  }\n  show() {\n    if (this.visible) {\n      return;\n    }\n    this.visibleDisposables.add(this.ui.onDidTriggerButton(button => {\n      if (this.buttons.indexOf(button) !== -1) {\n        this.onDidTriggerButtonEmitter.fire(button);\n      }\n    }));\n    this.ui.show(this);\n    this.visible = true;\n    this.update();\n  }\n  hide() {\n    if (!this.visible) {\n      return;\n    }\n    this.ui.hide();\n  }\n  didHide() {\n    this.visible = false;\n    this.visibleDisposables.clear();\n    this.onDidHideEmitter.fire();\n  }\n  update() {\n    if (!this.visible) {\n      return;\n    }\n    const title = this.getTitle();\n    if (title && this.ui.title.textContent !== title) {\n      this.ui.title.textContent = title;\n    } else if (!title && this.ui.title.innerHTML !== '&nbsp;') {\n      this.ui.title.innerText = '\\u00a0;';\n    }\n    const description = this.getDescription();\n    if (this.ui.description1.textContent !== description) {\n      this.ui.description1.textContent = description;\n    }\n    if (this.ui.description2.textContent !== description) {\n      this.ui.description2.textContent = description;\n    }\n    if (this.busy && !this.busyDelay) {\n      this.busyDelay = new TimeoutTimer();\n      this.busyDelay.setIfNotSet(() => {\n        if (this.visible) {\n          this.ui.progressBar.infinite();\n        }\n      }, 800);\n    }\n    if (!this.busy && this.busyDelay) {\n      this.ui.progressBar.stop();\n      this.busyDelay.cancel();\n      this.busyDelay = undefined;\n    }\n    if (this.buttonsUpdated) {\n      this.buttonsUpdated = false;\n      this.ui.leftActionBar.clear();\n      const leftButtons = this.buttons.filter(button => button === backButton);\n      this.ui.leftActionBar.push(leftButtons.map((button, index) => {\n        const action = new Action(\"id-\".concat(index), '', button.iconClass || getIconClass(button.iconPath), true, () => __awaiter(this, void 0, void 0, function* () {\n          this.onDidTriggerButtonEmitter.fire(button);\n        }));\n        action.tooltip = button.tooltip || '';\n        return action;\n      }), {\n        icon: true,\n        label: false\n      });\n      this.ui.rightActionBar.clear();\n      const rightButtons = this.buttons.filter(button => button !== backButton);\n      this.ui.rightActionBar.push(rightButtons.map((button, index) => {\n        const action = new Action(\"id-\".concat(index), '', button.iconClass || getIconClass(button.iconPath), true, () => __awaiter(this, void 0, void 0, function* () {\n          this.onDidTriggerButtonEmitter.fire(button);\n        }));\n        action.tooltip = button.tooltip || '';\n        return action;\n      }), {\n        icon: true,\n        label: false\n      });\n    }\n    this.ui.ignoreFocusOut = this.ignoreFocusOut;\n    this.ui.setEnabled(this.enabled);\n    this.ui.setContextKey(this.contextKey);\n  }\n  getTitle() {\n    if (this.title && this.step) {\n      return \"\".concat(this.title, \" (\").concat(this.getSteps(), \")\");\n    }\n    if (this.title) {\n      return this.title;\n    }\n    if (this.step) {\n      return this.getSteps();\n    }\n    return '';\n  }\n  getDescription() {\n    return this.description || '';\n  }\n  getSteps() {\n    if (this.step && this.totalSteps) {\n      return localize('quickInput.steps', \"{0}/{1}\", this.step, this.totalSteps);\n    }\n    if (this.step) {\n      return String(this.step);\n    }\n    return '';\n  }\n  showMessageDecoration(severity) {\n    this.ui.inputBox.showDecoration(severity);\n    if (severity === Severity.Error) {\n      const styles = this.ui.inputBox.stylesForType(severity);\n      this.ui.message.style.color = styles.foreground ? \"\".concat(styles.foreground) : '';\n      this.ui.message.style.backgroundColor = styles.background ? \"\".concat(styles.background) : '';\n      this.ui.message.style.border = styles.border ? \"1px solid \".concat(styles.border) : '';\n      this.ui.message.style.paddingBottom = '4px';\n    } else {\n      this.ui.message.style.color = '';\n      this.ui.message.style.backgroundColor = '';\n      this.ui.message.style.border = '';\n      this.ui.message.style.paddingBottom = '';\n    }\n  }\n  dispose() {\n    this.hide();\n    this.onDisposeEmitter.fire();\n    super.dispose();\n  }\n}\nclass QuickPick extends QuickInput {\n  constructor() {\n    super(...arguments);\n    this._value = '';\n    this.onDidChangeValueEmitter = this._register(new Emitter());\n    this.onDidAcceptEmitter = this._register(new Emitter());\n    this.onDidCustomEmitter = this._register(new Emitter());\n    this._items = [];\n    this.itemsUpdated = false;\n    this._canSelectMany = false;\n    this._canAcceptInBackground = false;\n    this._matchOnDescription = false;\n    this._matchOnDetail = false;\n    this._matchOnLabel = true;\n    this._sortByLabel = true;\n    this._autoFocusOnList = true;\n    this._itemActivation = this.ui.isScreenReaderOptimized() ? ItemActivation.NONE /* https://github.com/microsoft/vscode/issues/57501 */ : ItemActivation.FIRST;\n    this._activeItems = [];\n    this.activeItemsUpdated = false;\n    this.activeItemsToConfirm = [];\n    this.onDidChangeActiveEmitter = this._register(new Emitter());\n    this._selectedItems = [];\n    this.selectedItemsUpdated = false;\n    this.selectedItemsToConfirm = [];\n    this.onDidChangeSelectionEmitter = this._register(new Emitter());\n    this.onDidTriggerItemButtonEmitter = this._register(new Emitter());\n    this.valueSelectionUpdated = true;\n    this._ok = 'default';\n    this._customButton = false;\n    this.filterValue = value => value;\n    this.onDidChangeValue = this.onDidChangeValueEmitter.event;\n    this.onDidAccept = this.onDidAcceptEmitter.event;\n    this.onDidChangeActive = this.onDidChangeActiveEmitter.event;\n    this.onDidChangeSelection = this.onDidChangeSelectionEmitter.event;\n    this.onDidTriggerItemButton = this.onDidTriggerItemButtonEmitter.event;\n  }\n  get quickNavigate() {\n    return this._quickNavigate;\n  }\n  set quickNavigate(quickNavigate) {\n    this._quickNavigate = quickNavigate;\n    this.update();\n  }\n  get value() {\n    return this._value;\n  }\n  set value(value) {\n    this._value = value || '';\n    this.update();\n  }\n  set ariaLabel(ariaLabel) {\n    this._ariaLabel = ariaLabel;\n    this.update();\n  }\n  get ariaLabel() {\n    return this._ariaLabel;\n  }\n  get placeholder() {\n    return this._placeholder;\n  }\n  set placeholder(placeholder) {\n    this._placeholder = placeholder;\n    this.update();\n  }\n  get items() {\n    return this._items;\n  }\n  set items(items) {\n    this._items = items;\n    this.itemsUpdated = true;\n    this.update();\n  }\n  get canSelectMany() {\n    return this._canSelectMany;\n  }\n  set canSelectMany(canSelectMany) {\n    this._canSelectMany = canSelectMany;\n    this.update();\n  }\n  get canAcceptInBackground() {\n    return this._canAcceptInBackground;\n  }\n  set canAcceptInBackground(canAcceptInBackground) {\n    this._canAcceptInBackground = canAcceptInBackground;\n  }\n  get matchOnDescription() {\n    return this._matchOnDescription;\n  }\n  set matchOnDescription(matchOnDescription) {\n    this._matchOnDescription = matchOnDescription;\n    this.update();\n  }\n  get matchOnDetail() {\n    return this._matchOnDetail;\n  }\n  set matchOnDetail(matchOnDetail) {\n    this._matchOnDetail = matchOnDetail;\n    this.update();\n  }\n  get matchOnLabel() {\n    return this._matchOnLabel;\n  }\n  set matchOnLabel(matchOnLabel) {\n    this._matchOnLabel = matchOnLabel;\n    this.update();\n  }\n  get sortByLabel() {\n    return this._sortByLabel;\n  }\n  set sortByLabel(sortByLabel) {\n    this._sortByLabel = sortByLabel;\n    this.update();\n  }\n  get autoFocusOnList() {\n    return this._autoFocusOnList;\n  }\n  set autoFocusOnList(autoFocusOnList) {\n    this._autoFocusOnList = autoFocusOnList;\n    this.update();\n  }\n  get itemActivation() {\n    return this._itemActivation;\n  }\n  set itemActivation(itemActivation) {\n    this._itemActivation = itemActivation;\n  }\n  get activeItems() {\n    return this._activeItems;\n  }\n  set activeItems(activeItems) {\n    this._activeItems = activeItems;\n    this.activeItemsUpdated = true;\n    this.update();\n  }\n  get selectedItems() {\n    return this._selectedItems;\n  }\n  set selectedItems(selectedItems) {\n    this._selectedItems = selectedItems;\n    this.selectedItemsUpdated = true;\n    this.update();\n  }\n  get keyMods() {\n    if (this._quickNavigate) {\n      // Disable keyMods when quick navigate is enabled\n      // because in this model the interaction is purely\n      // keyboard driven and Ctrl/Alt are typically\n      // pressed and hold during this interaction.\n      return NO_KEY_MODS;\n    }\n    return this.ui.keyMods;\n  }\n  set valueSelection(valueSelection) {\n    this._valueSelection = valueSelection;\n    this.valueSelectionUpdated = true;\n    this.update();\n  }\n  get validationMessage() {\n    return this._validationMessage;\n  }\n  set validationMessage(validationMessage) {\n    this._validationMessage = validationMessage;\n    this.update();\n  }\n  get customButton() {\n    return this._customButton;\n  }\n  set customButton(showCustomButton) {\n    this._customButton = showCustomButton;\n    this.update();\n  }\n  get customLabel() {\n    return this._customButtonLabel;\n  }\n  set customLabel(label) {\n    this._customButtonLabel = label;\n    this.update();\n  }\n  get customHover() {\n    return this._customButtonHover;\n  }\n  set customHover(hover) {\n    this._customButtonHover = hover;\n    this.update();\n  }\n  get ok() {\n    return this._ok;\n  }\n  set ok(showOkButton) {\n    this._ok = showOkButton;\n    this.update();\n  }\n  get hideInput() {\n    return !!this._hideInput;\n  }\n  set hideInput(hideInput) {\n    this._hideInput = hideInput;\n    this.update();\n  }\n  trySelectFirst() {\n    if (this.autoFocusOnList) {\n      if (!this.canSelectMany) {\n        this.ui.list.focus(QuickInputListFocus.First);\n      }\n    }\n  }\n  show() {\n    if (!this.visible) {\n      this.visibleDisposables.add(this.ui.inputBox.onDidChange(value => {\n        if (value === this.value) {\n          return;\n        }\n        this._value = value;\n        const didFilter = this.ui.list.filter(this.filterValue(this.ui.inputBox.value));\n        if (didFilter) {\n          this.trySelectFirst();\n        }\n        this.onDidChangeValueEmitter.fire(value);\n      }));\n      this.visibleDisposables.add(this.ui.inputBox.onMouseDown(event => {\n        if (!this.autoFocusOnList) {\n          this.ui.list.clearFocus();\n        }\n      }));\n      this.visibleDisposables.add((this._hideInput ? this.ui.list : this.ui.inputBox).onKeyDown(event => {\n        switch (event.keyCode) {\n          case 18 /* DownArrow */:\n            this.ui.list.focus(QuickInputListFocus.Next);\n            if (this.canSelectMany) {\n              this.ui.list.domFocus();\n            }\n            dom.EventHelper.stop(event, true);\n            break;\n          case 16 /* UpArrow */:\n            if (this.ui.list.getFocusedElements().length) {\n              this.ui.list.focus(QuickInputListFocus.Previous);\n            } else {\n              this.ui.list.focus(QuickInputListFocus.Last);\n            }\n            if (this.canSelectMany) {\n              this.ui.list.domFocus();\n            }\n            dom.EventHelper.stop(event, true);\n            break;\n          case 12 /* PageDown */:\n            this.ui.list.focus(QuickInputListFocus.NextPage);\n            if (this.canSelectMany) {\n              this.ui.list.domFocus();\n            }\n            dom.EventHelper.stop(event, true);\n            break;\n          case 11 /* PageUp */:\n            this.ui.list.focus(QuickInputListFocus.PreviousPage);\n            if (this.canSelectMany) {\n              this.ui.list.domFocus();\n            }\n            dom.EventHelper.stop(event, true);\n            break;\n          case 17 /* RightArrow */:\n            if (!this._canAcceptInBackground) {\n              return; // needs to be enabled\n            }\n\n            if (!this.ui.inputBox.isSelectionAtEnd()) {\n              return; // ensure input box selection at end\n            }\n\n            if (this.activeItems[0]) {\n              this._selectedItems = [this.activeItems[0]];\n              this.onDidChangeSelectionEmitter.fire(this.selectedItems);\n              this.onDidAcceptEmitter.fire({\n                inBackground: true\n              });\n            }\n            break;\n          case 14 /* Home */:\n            if ((event.ctrlKey || event.metaKey) && !event.shiftKey && !event.altKey) {\n              this.ui.list.focus(QuickInputListFocus.First);\n              dom.EventHelper.stop(event, true);\n            }\n            break;\n          case 13 /* End */:\n            if ((event.ctrlKey || event.metaKey) && !event.shiftKey && !event.altKey) {\n              this.ui.list.focus(QuickInputListFocus.Last);\n              dom.EventHelper.stop(event, true);\n            }\n            break;\n        }\n      }));\n      this.visibleDisposables.add(this.ui.onDidAccept(() => {\n        if (!this.canSelectMany && this.activeItems[0]) {\n          this._selectedItems = [this.activeItems[0]];\n          this.onDidChangeSelectionEmitter.fire(this.selectedItems);\n        }\n        this.onDidAcceptEmitter.fire({\n          inBackground: false\n        });\n      }));\n      this.visibleDisposables.add(this.ui.onDidCustom(() => {\n        this.onDidCustomEmitter.fire();\n      }));\n      this.visibleDisposables.add(this.ui.list.onDidChangeFocus(focusedItems => {\n        if (this.activeItemsUpdated) {\n          return; // Expect another event.\n        }\n\n        if (this.activeItemsToConfirm !== this._activeItems && equals(focusedItems, this._activeItems, (a, b) => a === b)) {\n          return;\n        }\n        this._activeItems = focusedItems;\n        this.onDidChangeActiveEmitter.fire(focusedItems);\n      }));\n      this.visibleDisposables.add(this.ui.list.onDidChangeSelection(_ref => {\n        let {\n          items: selectedItems,\n          event\n        } = _ref;\n        if (this.canSelectMany) {\n          if (selectedItems.length) {\n            this.ui.list.setSelectedElements([]);\n          }\n          return;\n        }\n        if (this.selectedItemsToConfirm !== this._selectedItems && equals(selectedItems, this._selectedItems, (a, b) => a === b)) {\n          return;\n        }\n        this._selectedItems = selectedItems;\n        this.onDidChangeSelectionEmitter.fire(selectedItems);\n        if (selectedItems.length) {\n          this.onDidAcceptEmitter.fire({\n            inBackground: event instanceof MouseEvent && event.button === 1 /* mouse middle click */\n          });\n        }\n      }));\n\n      this.visibleDisposables.add(this.ui.list.onChangedCheckedElements(checkedItems => {\n        if (!this.canSelectMany) {\n          return;\n        }\n        if (this.selectedItemsToConfirm !== this._selectedItems && equals(checkedItems, this._selectedItems, (a, b) => a === b)) {\n          return;\n        }\n        this._selectedItems = checkedItems;\n        this.onDidChangeSelectionEmitter.fire(checkedItems);\n      }));\n      this.visibleDisposables.add(this.ui.list.onButtonTriggered(event => this.onDidTriggerItemButtonEmitter.fire(event)));\n      this.visibleDisposables.add(this.registerQuickNavigation());\n      this.valueSelectionUpdated = true;\n    }\n    super.show(); // TODO: Why have show() bubble up while update() trickles down? (Could move setComboboxAccessibility() here.)\n  }\n\n  registerQuickNavigation() {\n    return dom.addDisposableListener(this.ui.container, dom.EventType.KEY_UP, e => {\n      if (this.canSelectMany || !this._quickNavigate) {\n        return;\n      }\n      const keyboardEvent = new StandardKeyboardEvent(e);\n      const keyCode = keyboardEvent.keyCode;\n      // Select element when keys are pressed that signal it\n      const quickNavKeys = this._quickNavigate.keybindings;\n      const wasTriggerKeyPressed = quickNavKeys.some(k => {\n        const [firstPart, chordPart] = k.getParts();\n        if (chordPart) {\n          return false;\n        }\n        if (firstPart.shiftKey && keyCode === 4 /* Shift */) {\n          if (keyboardEvent.ctrlKey || keyboardEvent.altKey || keyboardEvent.metaKey) {\n            return false; // this is an optimistic check for the shift key being used to navigate back in quick input\n          }\n\n          return true;\n        }\n        if (firstPart.altKey && keyCode === 6 /* Alt */) {\n          return true;\n        }\n        if (firstPart.ctrlKey && keyCode === 5 /* Ctrl */) {\n          return true;\n        }\n        if (firstPart.metaKey && keyCode === 57 /* Meta */) {\n          return true;\n        }\n        return false;\n      });\n      if (wasTriggerKeyPressed) {\n        if (this.activeItems[0]) {\n          this._selectedItems = [this.activeItems[0]];\n          this.onDidChangeSelectionEmitter.fire(this.selectedItems);\n          this.onDidAcceptEmitter.fire({\n            inBackground: false\n          });\n        }\n        // Unset quick navigate after press. It is only valid once\n        // and should not result in any behaviour change afterwards\n        // if the picker remains open because there was no active item\n        this._quickNavigate = undefined;\n      }\n    });\n  }\n  update() {\n    if (!this.visible) {\n      return;\n    }\n    let hideInput = false;\n    let inputShownJustForScreenReader = false;\n    if (!!this._hideInput && this._items.length > 0) {\n      if (this.ui.isScreenReaderOptimized()) {\n        // Always show input if screen reader attached https://github.com/microsoft/vscode/issues/94360\n        inputShownJustForScreenReader = true;\n      } else {\n        hideInput = true;\n      }\n    }\n    this.ui.container.classList.toggle('hidden-input', hideInput && !this.description);\n    const visibilities = {\n      title: !!this.title || !!this.step || !!this.buttons.length,\n      description: !!this.description,\n      checkAll: this.canSelectMany && !this._hideCheckAll,\n      checkBox: this.canSelectMany,\n      inputBox: !hideInput,\n      progressBar: !hideInput,\n      visibleCount: true,\n      count: this.canSelectMany,\n      ok: this.ok === 'default' ? this.canSelectMany : this.ok,\n      list: true,\n      message: !!this.validationMessage,\n      customButton: this.customButton\n    };\n    this.ui.setVisibilities(visibilities);\n    super.update();\n    if (this.ui.inputBox.value !== this.value) {\n      this.ui.inputBox.value = this.value;\n    }\n    if (this.valueSelectionUpdated) {\n      this.valueSelectionUpdated = false;\n      this.ui.inputBox.select(this._valueSelection && {\n        start: this._valueSelection[0],\n        end: this._valueSelection[1]\n      });\n    }\n    if (this.ui.inputBox.placeholder !== (this.placeholder || '')) {\n      this.ui.inputBox.placeholder = this.placeholder || '';\n    }\n    if (inputShownJustForScreenReader) {\n      this.ui.inputBox.ariaLabel = '';\n    } else {\n      const ariaLabel = this.ariaLabel || this.placeholder || QuickPick.DEFAULT_ARIA_LABEL;\n      if (this.ui.inputBox.ariaLabel !== ariaLabel) {\n        this.ui.inputBox.ariaLabel = ariaLabel;\n      }\n    }\n    this.ui.list.matchOnDescription = this.matchOnDescription;\n    this.ui.list.matchOnDetail = this.matchOnDetail;\n    this.ui.list.matchOnLabel = this.matchOnLabel;\n    this.ui.list.sortByLabel = this.sortByLabel;\n    if (this.itemsUpdated) {\n      this.itemsUpdated = false;\n      this.ui.list.setElements(this.items);\n      this.ui.list.filter(this.filterValue(this.ui.inputBox.value));\n      this.ui.checkAll.checked = this.ui.list.getAllVisibleChecked();\n      this.ui.visibleCount.setCount(this.ui.list.getVisibleCount());\n      this.ui.count.setCount(this.ui.list.getCheckedCount());\n      switch (this._itemActivation) {\n        case ItemActivation.NONE:\n          this._itemActivation = ItemActivation.FIRST; // only valid once, then unset\n          break;\n        case ItemActivation.SECOND:\n          this.ui.list.focus(QuickInputListFocus.Second);\n          this._itemActivation = ItemActivation.FIRST; // only valid once, then unset\n          break;\n        case ItemActivation.LAST:\n          this.ui.list.focus(QuickInputListFocus.Last);\n          this._itemActivation = ItemActivation.FIRST; // only valid once, then unset\n          break;\n        default:\n          this.trySelectFirst();\n          break;\n      }\n    }\n    if (this.ui.container.classList.contains('show-checkboxes') !== !!this.canSelectMany) {\n      if (this.canSelectMany) {\n        this.ui.list.clearFocus();\n      } else {\n        this.trySelectFirst();\n      }\n    }\n    if (this.activeItemsUpdated) {\n      this.activeItemsUpdated = false;\n      this.activeItemsToConfirm = this._activeItems;\n      this.ui.list.setFocusedElements(this.activeItems);\n      if (this.activeItemsToConfirm === this._activeItems) {\n        this.activeItemsToConfirm = null;\n      }\n    }\n    if (this.selectedItemsUpdated) {\n      this.selectedItemsUpdated = false;\n      this.selectedItemsToConfirm = this._selectedItems;\n      if (this.canSelectMany) {\n        this.ui.list.setCheckedElements(this.selectedItems);\n      } else {\n        this.ui.list.setSelectedElements(this.selectedItems);\n      }\n      if (this.selectedItemsToConfirm === this._selectedItems) {\n        this.selectedItemsToConfirm = null;\n      }\n    }\n    const validationMessage = this.validationMessage || '';\n    if (this._lastValidationMessage !== validationMessage) {\n      this._lastValidationMessage = validationMessage;\n      dom.reset(this.ui.message, ...renderLabelWithIcons(escape(validationMessage)));\n      this.showMessageDecoration(this.validationMessage ? Severity.Error : Severity.Ignore);\n    }\n    this.ui.customButton.label = this.customLabel || '';\n    this.ui.customButton.element.title = this.customHover || '';\n    this.ui.setComboboxAccessibility(true);\n    if (!visibilities.inputBox) {\n      // we need to move focus into the tree to detect keybindings\n      // properly when the input box is not visible (quick nav)\n      this.ui.list.domFocus();\n      // Focus the first element in the list if multiselect is enabled\n      if (this.canSelectMany) {\n        this.ui.list.focus(QuickInputListFocus.First);\n      }\n    }\n  }\n}\nQuickPick.DEFAULT_ARIA_LABEL = localize('quickInputBox.ariaLabel', \"Type to narrow down results.\");\nexport class QuickInputController extends Disposable {\n  constructor(options) {\n    super();\n    this.options = options;\n    this.comboboxAccessibility = false;\n    this.enabled = true;\n    this.onDidAcceptEmitter = this._register(new Emitter());\n    this.onDidCustomEmitter = this._register(new Emitter());\n    this.onDidTriggerButtonEmitter = this._register(new Emitter());\n    this.keyMods = {\n      ctrlCmd: false,\n      alt: false\n    };\n    this.controller = null;\n    this.onShowEmitter = this._register(new Emitter());\n    this.onShow = this.onShowEmitter.event;\n    this.onHideEmitter = this._register(new Emitter());\n    this.onHide = this.onHideEmitter.event;\n    this.idPrefix = options.idPrefix;\n    this.parentElement = options.container;\n    this.styles = options.styles;\n    this.registerKeyModsListeners();\n  }\n  registerKeyModsListeners() {\n    const listener = e => {\n      this.keyMods.ctrlCmd = e.ctrlKey || e.metaKey;\n      this.keyMods.alt = e.altKey;\n    };\n    this._register(dom.addDisposableListener(window, dom.EventType.KEY_DOWN, listener, true));\n    this._register(dom.addDisposableListener(window, dom.EventType.KEY_UP, listener, true));\n    this._register(dom.addDisposableListener(window, dom.EventType.MOUSE_DOWN, listener, true));\n  }\n  getUI() {\n    if (this.ui) {\n      return this.ui;\n    }\n    const container = dom.append(this.parentElement, $('.quick-input-widget.show-file-icons'));\n    container.tabIndex = -1;\n    container.style.display = 'none';\n    const styleSheet = dom.createStyleSheet(container);\n    const titleBar = dom.append(container, $('.quick-input-titlebar'));\n    const leftActionBar = this._register(new ActionBar(titleBar));\n    leftActionBar.domNode.classList.add('quick-input-left-action-bar');\n    const title = dom.append(titleBar, $('.quick-input-title'));\n    const rightActionBar = this._register(new ActionBar(titleBar));\n    rightActionBar.domNode.classList.add('quick-input-right-action-bar');\n    const description1 = dom.append(container, $('.quick-input-description'));\n    const headerContainer = dom.append(container, $('.quick-input-header'));\n    const checkAll = dom.append(headerContainer, $('input.quick-input-check-all'));\n    checkAll.type = 'checkbox';\n    this._register(dom.addStandardDisposableListener(checkAll, dom.EventType.CHANGE, e => {\n      const checked = checkAll.checked;\n      list.setAllVisibleChecked(checked);\n    }));\n    this._register(dom.addDisposableListener(checkAll, dom.EventType.CLICK, e => {\n      if (e.x || e.y) {\n        // Avoid 'click' triggered by 'space'...\n        inputBox.setFocus();\n      }\n    }));\n    const description2 = dom.append(headerContainer, $('.quick-input-description'));\n    const extraContainer = dom.append(headerContainer, $('.quick-input-and-message'));\n    const filterContainer = dom.append(extraContainer, $('.quick-input-filter'));\n    const inputBox = this._register(new QuickInputBox(filterContainer));\n    inputBox.setAttribute('aria-describedby', \"\".concat(this.idPrefix, \"message\"));\n    const visibleCountContainer = dom.append(filterContainer, $('.quick-input-visible-count'));\n    visibleCountContainer.setAttribute('aria-live', 'polite');\n    visibleCountContainer.setAttribute('aria-atomic', 'true');\n    const visibleCount = new CountBadge(visibleCountContainer, {\n      countFormat: localize({\n        key: 'quickInput.visibleCount',\n        comment: ['This tells the user how many items are shown in a list of items to select from. The items can be anything. Currently not visible, but read by screen readers.']\n      }, \"{0} Results\")\n    });\n    const countContainer = dom.append(filterContainer, $('.quick-input-count'));\n    countContainer.setAttribute('aria-live', 'polite');\n    const count = new CountBadge(countContainer, {\n      countFormat: localize({\n        key: 'quickInput.countSelected',\n        comment: ['This tells the user how many items are selected in a list of items to select from. The items can be anything.']\n      }, \"{0} Selected\")\n    });\n    const okContainer = dom.append(headerContainer, $('.quick-input-action'));\n    const ok = new Button(okContainer);\n    ok.label = localize('ok', \"OK\");\n    this._register(ok.onDidClick(e => {\n      this.onDidAcceptEmitter.fire();\n    }));\n    const customButtonContainer = dom.append(headerContainer, $('.quick-input-action'));\n    const customButton = new Button(customButtonContainer);\n    customButton.label = localize('custom', \"Custom\");\n    this._register(customButton.onDidClick(e => {\n      this.onDidCustomEmitter.fire();\n    }));\n    const message = dom.append(extraContainer, $(\"#\".concat(this.idPrefix, \"message.quick-input-message\")));\n    const progressBar = new ProgressBar(container);\n    progressBar.getContainer().classList.add('quick-input-progress');\n    const list = this._register(new QuickInputList(container, this.idPrefix + 'list', this.options));\n    this._register(list.onChangedAllVisibleChecked(checked => {\n      checkAll.checked = checked;\n    }));\n    this._register(list.onChangedVisibleCount(c => {\n      visibleCount.setCount(c);\n    }));\n    this._register(list.onChangedCheckedCount(c => {\n      count.setCount(c);\n    }));\n    this._register(list.onLeave(() => {\n      // Defer to avoid the input field reacting to the triggering key.\n      setTimeout(() => {\n        inputBox.setFocus();\n        if (this.controller instanceof QuickPick && this.controller.canSelectMany) {\n          list.clearFocus();\n        }\n      }, 0);\n    }));\n    this._register(list.onDidChangeFocus(() => {\n      if (this.comboboxAccessibility) {\n        this.getUI().inputBox.setAttribute('aria-activedescendant', this.getUI().list.getActiveDescendant() || '');\n      }\n    }));\n    const focusTracker = dom.trackFocus(container);\n    this._register(focusTracker);\n    this._register(dom.addDisposableListener(container, dom.EventType.FOCUS, e => {\n      this.previousFocusElement = e.relatedTarget instanceof HTMLElement ? e.relatedTarget : undefined;\n    }, true));\n    this._register(focusTracker.onDidBlur(() => {\n      if (!this.getUI().ignoreFocusOut && !this.options.ignoreFocusOut()) {\n        this.hide();\n      }\n      this.previousFocusElement = undefined;\n    }));\n    this._register(dom.addDisposableListener(container, dom.EventType.FOCUS, e => {\n      inputBox.setFocus();\n    }));\n    this._register(dom.addDisposableListener(container, dom.EventType.KEY_DOWN, e => {\n      const event = new StandardKeyboardEvent(e);\n      switch (event.keyCode) {\n        case 3 /* Enter */:\n          dom.EventHelper.stop(e, true);\n          this.onDidAcceptEmitter.fire();\n          break;\n        case 9 /* Escape */:\n          dom.EventHelper.stop(e, true);\n          this.hide();\n          break;\n        case 2 /* Tab */:\n          if (!event.altKey && !event.ctrlKey && !event.metaKey) {\n            const selectors = ['.action-label.codicon'];\n            if (container.classList.contains('show-checkboxes')) {\n              selectors.push('input');\n            } else {\n              selectors.push('input[type=text]');\n            }\n            if (this.getUI().list.isDisplayed()) {\n              selectors.push('.monaco-list');\n            }\n            const stops = container.querySelectorAll(selectors.join(', '));\n            if (event.shiftKey && event.target === stops[0]) {\n              dom.EventHelper.stop(e, true);\n              stops[stops.length - 1].focus();\n            } else if (!event.shiftKey && event.target === stops[stops.length - 1]) {\n              dom.EventHelper.stop(e, true);\n              stops[0].focus();\n            }\n          }\n          break;\n      }\n    }));\n    this.ui = {\n      container,\n      styleSheet,\n      leftActionBar,\n      titleBar,\n      title,\n      description1,\n      description2,\n      rightActionBar,\n      checkAll,\n      filterContainer,\n      inputBox,\n      visibleCountContainer,\n      visibleCount,\n      countContainer,\n      count,\n      okContainer,\n      ok,\n      message,\n      customButtonContainer,\n      customButton,\n      progressBar,\n      list,\n      onDidAccept: this.onDidAcceptEmitter.event,\n      onDidCustom: this.onDidCustomEmitter.event,\n      onDidTriggerButton: this.onDidTriggerButtonEmitter.event,\n      ignoreFocusOut: false,\n      keyMods: this.keyMods,\n      isScreenReaderOptimized: () => this.options.isScreenReaderOptimized(),\n      show: controller => this.show(controller),\n      hide: () => this.hide(),\n      setVisibilities: visibilities => this.setVisibilities(visibilities),\n      setComboboxAccessibility: enabled => this.setComboboxAccessibility(enabled),\n      setEnabled: enabled => this.setEnabled(enabled),\n      setContextKey: contextKey => this.options.setContextKey(contextKey)\n    };\n    this.updateStyles();\n    return this.ui;\n  }\n  pick(picks) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let token = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : CancellationToken.None;\n    return new Promise((doResolve, reject) => {\n      let resolve = result => {\n        resolve = doResolve;\n        if (options.onKeyMods) {\n          options.onKeyMods(input.keyMods);\n        }\n        doResolve(result);\n      };\n      if (token.isCancellationRequested) {\n        resolve(undefined);\n        return;\n      }\n      const input = this.createQuickPick();\n      let activeItem;\n      const disposables = [input, input.onDidAccept(() => {\n        if (input.canSelectMany) {\n          resolve(input.selectedItems.slice());\n          input.hide();\n        } else {\n          const result = input.activeItems[0];\n          if (result) {\n            resolve(result);\n            input.hide();\n          }\n        }\n      }), input.onDidChangeActive(items => {\n        const focused = items[0];\n        if (focused && options.onDidFocus) {\n          options.onDidFocus(focused);\n        }\n      }), input.onDidChangeSelection(items => {\n        if (!input.canSelectMany) {\n          const result = items[0];\n          if (result) {\n            resolve(result);\n            input.hide();\n          }\n        }\n      }), input.onDidTriggerItemButton(event => options.onDidTriggerItemButton && options.onDidTriggerItemButton(Object.assign(Object.assign({}, event), {\n        removeItem: () => {\n          const index = input.items.indexOf(event.item);\n          if (index !== -1) {\n            const items = input.items.slice();\n            items.splice(index, 1);\n            input.items = items;\n          }\n        }\n      }))), input.onDidChangeValue(value => {\n        if (activeItem && !value && (input.activeItems.length !== 1 || input.activeItems[0] !== activeItem)) {\n          input.activeItems = [activeItem];\n        }\n      }), token.onCancellationRequested(() => {\n        input.hide();\n      }), input.onDidHide(() => {\n        dispose(disposables);\n        resolve(undefined);\n      })];\n      input.canSelectMany = !!options.canPickMany;\n      input.placeholder = options.placeHolder;\n      input.ignoreFocusOut = !!options.ignoreFocusLost;\n      input.matchOnDescription = !!options.matchOnDescription;\n      input.matchOnDetail = !!options.matchOnDetail;\n      input.matchOnLabel = options.matchOnLabel === undefined || options.matchOnLabel; // default to true\n      input.autoFocusOnList = options.autoFocusOnList === undefined || options.autoFocusOnList; // default to true\n      input.quickNavigate = options.quickNavigate;\n      input.contextKey = options.contextKey;\n      input.busy = true;\n      Promise.all([picks, options.activeItem]).then(_ref2 => {\n        let [items, _activeItem] = _ref2;\n        activeItem = _activeItem;\n        input.busy = false;\n        input.items = items;\n        if (input.canSelectMany) {\n          input.selectedItems = items.filter(item => item.type !== 'separator' && item.picked);\n        }\n        if (activeItem) {\n          input.activeItems = [activeItem];\n        }\n      });\n      input.show();\n      Promise.resolve(picks).then(undefined, err => {\n        reject(err);\n        input.hide();\n      });\n    });\n  }\n  createQuickPick() {\n    const ui = this.getUI();\n    return new QuickPick(ui);\n  }\n  show(controller) {\n    const ui = this.getUI();\n    this.onShowEmitter.fire();\n    const oldController = this.controller;\n    this.controller = controller;\n    if (oldController) {\n      oldController.didHide();\n    }\n    this.setEnabled(true);\n    ui.leftActionBar.clear();\n    ui.title.textContent = '';\n    ui.description1.textContent = '';\n    ui.description2.textContent = '';\n    ui.rightActionBar.clear();\n    ui.checkAll.checked = false;\n    // ui.inputBox.value = ''; Avoid triggering an event.\n    ui.inputBox.placeholder = '';\n    ui.inputBox.password = false;\n    ui.inputBox.showDecoration(Severity.Ignore);\n    ui.visibleCount.setCount(0);\n    ui.count.setCount(0);\n    dom.reset(ui.message);\n    ui.progressBar.stop();\n    ui.list.setElements([]);\n    ui.list.matchOnDescription = false;\n    ui.list.matchOnDetail = false;\n    ui.list.matchOnLabel = true;\n    ui.list.sortByLabel = true;\n    ui.ignoreFocusOut = false;\n    this.setComboboxAccessibility(false);\n    ui.inputBox.ariaLabel = '';\n    const backKeybindingLabel = this.options.backKeybindingLabel();\n    backButton.tooltip = backKeybindingLabel ? localize('quickInput.backWithKeybinding', \"Back ({0})\", backKeybindingLabel) : localize('quickInput.back', \"Back\");\n    ui.container.style.display = '';\n    this.updateLayout();\n    ui.inputBox.setFocus();\n  }\n  setVisibilities(visibilities) {\n    const ui = this.getUI();\n    ui.title.style.display = visibilities.title ? '' : 'none';\n    ui.description1.style.display = visibilities.description && (visibilities.inputBox || visibilities.checkAll) ? '' : 'none';\n    ui.description2.style.display = visibilities.description && !(visibilities.inputBox || visibilities.checkAll) ? '' : 'none';\n    ui.checkAll.style.display = visibilities.checkAll ? '' : 'none';\n    ui.filterContainer.style.display = visibilities.inputBox ? '' : 'none';\n    ui.visibleCountContainer.style.display = visibilities.visibleCount ? '' : 'none';\n    ui.countContainer.style.display = visibilities.count ? '' : 'none';\n    ui.okContainer.style.display = visibilities.ok ? '' : 'none';\n    ui.customButtonContainer.style.display = visibilities.customButton ? '' : 'none';\n    ui.message.style.display = visibilities.message ? '' : 'none';\n    ui.progressBar.getContainer().style.display = visibilities.progressBar ? '' : 'none';\n    ui.list.display(!!visibilities.list);\n    ui.container.classList[visibilities.checkBox ? 'add' : 'remove']('show-checkboxes');\n    this.updateLayout(); // TODO\n  }\n\n  setComboboxAccessibility(enabled) {\n    if (enabled !== this.comboboxAccessibility) {\n      const ui = this.getUI();\n      this.comboboxAccessibility = enabled;\n      if (this.comboboxAccessibility) {\n        ui.inputBox.setAttribute('role', 'combobox');\n        ui.inputBox.setAttribute('aria-haspopup', 'true');\n        ui.inputBox.setAttribute('aria-autocomplete', 'list');\n        ui.inputBox.setAttribute('aria-activedescendant', ui.list.getActiveDescendant() || '');\n      } else {\n        ui.inputBox.removeAttribute('role');\n        ui.inputBox.removeAttribute('aria-haspopup');\n        ui.inputBox.removeAttribute('aria-autocomplete');\n        ui.inputBox.removeAttribute('aria-activedescendant');\n      }\n    }\n  }\n  setEnabled(enabled) {\n    if (enabled !== this.enabled) {\n      this.enabled = enabled;\n      for (const item of this.getUI().leftActionBar.viewItems) {\n        item.getAction().enabled = enabled;\n      }\n      for (const item of this.getUI().rightActionBar.viewItems) {\n        item.getAction().enabled = enabled;\n      }\n      this.getUI().checkAll.disabled = !enabled;\n      // this.getUI().inputBox.enabled = enabled; Avoid loosing focus.\n      this.getUI().ok.enabled = enabled;\n      this.getUI().list.enabled = enabled;\n    }\n  }\n  hide() {\n    var _a;\n    const controller = this.controller;\n    if (controller) {\n      const focusChanged = !((_a = this.ui) === null || _a === void 0 ? void 0 : _a.container.contains(document.activeElement));\n      this.controller = null;\n      this.onHideEmitter.fire();\n      this.getUI().container.style.display = 'none';\n      if (!focusChanged) {\n        if (this.previousFocusElement && this.previousFocusElement.offsetParent) {\n          this.previousFocusElement.focus();\n          this.previousFocusElement = undefined;\n        } else {\n          this.options.returnFocus();\n        }\n      }\n      controller.didHide();\n    }\n  }\n  layout(dimension, titleBarOffset) {\n    this.dimension = dimension;\n    this.titleBarOffset = titleBarOffset;\n    this.updateLayout();\n  }\n  updateLayout() {\n    if (this.ui) {\n      this.ui.container.style.top = \"\".concat(this.titleBarOffset, \"px\");\n      const style = this.ui.container.style;\n      const width = Math.min(this.dimension.width * 0.62 /* golden cut */, QuickInputController.MAX_WIDTH);\n      style.width = width + 'px';\n      style.marginLeft = '-' + width / 2 + 'px';\n      this.ui.inputBox.layout();\n      this.ui.list.layout(this.dimension && this.dimension.height * 0.4);\n    }\n  }\n  applyStyles(styles) {\n    this.styles = styles;\n    this.updateStyles();\n  }\n  updateStyles() {\n    if (this.ui) {\n      const {\n        quickInputTitleBackground,\n        quickInputBackground,\n        quickInputForeground,\n        contrastBorder,\n        widgetShadow\n      } = this.styles.widget;\n      this.ui.titleBar.style.backgroundColor = quickInputTitleBackground ? quickInputTitleBackground.toString() : '';\n      this.ui.container.style.backgroundColor = quickInputBackground ? quickInputBackground.toString() : '';\n      this.ui.container.style.color = quickInputForeground ? quickInputForeground.toString() : '';\n      this.ui.container.style.border = contrastBorder ? \"1px solid \".concat(contrastBorder) : '';\n      this.ui.container.style.boxShadow = widgetShadow ? \"0 0 8px 2px \".concat(widgetShadow) : '';\n      this.ui.inputBox.style(this.styles.inputBox);\n      this.ui.count.style(this.styles.countBadge);\n      this.ui.ok.style(this.styles.button);\n      this.ui.customButton.style(this.styles.button);\n      this.ui.progressBar.style(this.styles.progressBar);\n      this.ui.list.style(this.styles.list);\n      const content = [];\n      if (this.styles.list.listInactiveFocusForeground) {\n        content.push(\".monaco-list .monaco-list-row.focused { color:  \".concat(this.styles.list.listInactiveFocusForeground, \"; }\"));\n        content.push(\".monaco-list .monaco-list-row.focused:hover { color:  \".concat(this.styles.list.listInactiveFocusForeground, \"; }\")); // overwrite :hover style in this case!\n      }\n\n      if (this.styles.list.pickerGroupBorder) {\n        content.push(\".quick-input-list .quick-input-list-entry { border-top-color:  \".concat(this.styles.list.pickerGroupBorder, \"; }\"));\n      }\n      if (this.styles.list.pickerGroupForeground) {\n        content.push(\".quick-input-list .quick-input-list-separator { color:  \".concat(this.styles.list.pickerGroupForeground, \"; }\"));\n      }\n      const newStyles = content.join('\\n');\n      if (newStyles !== this.ui.styleSheet.textContent) {\n        this.ui.styleSheet.textContent = newStyles;\n      }\n    }\n  }\n}\nQuickInputController.MAX_WIDTH = 600; // Max total width of quick input widget","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","NO_KEY_MODS","ItemActivation","dom","CancellationToken","QuickInputList","QuickInputListFocus","QuickInputBox","StandardKeyboardEvent","localize","CountBadge","ProgressBar","Emitter","Button","dispose","Disposable","DisposableStore","Severity","ActionBar","Action","equals","TimeoutTimer","getIconClass","registerCodicon","Codicon","escape","renderLabelWithIcons","$","backButtonIcon","arrowLeft","backButton","iconClass","classNames","tooltip","handle","QuickInput","constructor","ui","visible","_enabled","_busy","_ignoreFocusOut","_buttons","buttonsUpdated","onDidTriggerButtonEmitter","_register","onDidHideEmitter","onDisposeEmitter","visibleDisposables","onDidHide","event","title","_title","update","description","_description","_steps","totalSteps","_totalSteps","enabled","contextKey","_contextKey","busy","ignoreFocusOut","buttons","show","add","onDidTriggerButton","button","indexOf","fire","hide","didHide","clear","getTitle","textContent","innerHTML","innerText","getDescription","description1","description2","busyDelay","setIfNotSet","progressBar","infinite","stop","cancel","undefined","leftActionBar","leftButtons","filter","push","map","index","action","concat","iconPath","icon","label","rightActionBar","rightButtons","setEnabled","setContextKey","getSteps","String","showMessageDecoration","severity","inputBox","showDecoration","Error","styles","stylesForType","message","style","color","foreground","backgroundColor","background","border","paddingBottom","QuickPick","arguments","_value","onDidChangeValueEmitter","onDidAcceptEmitter","onDidCustomEmitter","_items","itemsUpdated","_canSelectMany","_canAcceptInBackground","_matchOnDescription","_matchOnDetail","_matchOnLabel","_sortByLabel","_autoFocusOnList","_itemActivation","isScreenReaderOptimized","NONE","FIRST","_activeItems","activeItemsUpdated","activeItemsToConfirm","onDidChangeActiveEmitter","_selectedItems","selectedItemsUpdated","selectedItemsToConfirm","onDidChangeSelectionEmitter","onDidTriggerItemButtonEmitter","valueSelectionUpdated","_ok","_customButton","filterValue","onDidChangeValue","onDidAccept","onDidChangeActive","onDidChangeSelection","onDidTriggerItemButton","quickNavigate","_quickNavigate","ariaLabel","_ariaLabel","placeholder","_placeholder","items","canSelectMany","canAcceptInBackground","matchOnDescription","matchOnDetail","matchOnLabel","sortByLabel","autoFocusOnList","itemActivation","activeItems","selectedItems","keyMods","valueSelection","_valueSelection","validationMessage","_validationMessage","customButton","showCustomButton","customLabel","_customButtonLabel","customHover","_customButtonHover","hover","ok","showOkButton","hideInput","_hideInput","trySelectFirst","list","focus","First","onDidChange","didFilter","onMouseDown","clearFocus","onKeyDown","keyCode","Next","domFocus","EventHelper","getFocusedElements","length","Previous","Last","NextPage","PreviousPage","isSelectionAtEnd","inBackground","ctrlKey","metaKey","shiftKey","altKey","onDidCustom","onDidChangeFocus","focusedItems","a","b","_ref","setSelectedElements","MouseEvent","onChangedCheckedElements","checkedItems","onButtonTriggered","registerQuickNavigation","addDisposableListener","container","EventType","KEY_UP","keyboardEvent","quickNavKeys","keybindings","wasTriggerKeyPressed","some","k","firstPart","chordPart","getParts","inputShownJustForScreenReader","classList","toggle","visibilities","checkAll","_hideCheckAll","checkBox","visibleCount","count","setVisibilities","select","start","end","DEFAULT_ARIA_LABEL","setElements","checked","getAllVisibleChecked","setCount","getVisibleCount","getCheckedCount","SECOND","Second","LAST","contains","setFocusedElements","setCheckedElements","_lastValidationMessage","reset","Ignore","element","setComboboxAccessibility","QuickInputController","options","comboboxAccessibility","ctrlCmd","alt","controller","onShowEmitter","onShow","onHideEmitter","onHide","idPrefix","parentElement","registerKeyModsListeners","listener","window","KEY_DOWN","MOUSE_DOWN","getUI","append","tabIndex","display","styleSheet","createStyleSheet","titleBar","domNode","headerContainer","type","addStandardDisposableListener","CHANGE","setAllVisibleChecked","CLICK","x","y","setFocus","extraContainer","filterContainer","setAttribute","visibleCountContainer","countFormat","key","comment","countContainer","okContainer","onDidClick","customButtonContainer","getContainer","onChangedAllVisibleChecked","onChangedVisibleCount","c","onChangedCheckedCount","onLeave","setTimeout","getActiveDescendant","focusTracker","trackFocus","FOCUS","previousFocusElement","relatedTarget","HTMLElement","onDidBlur","selectors","isDisplayed","stops","querySelectorAll","join","target","updateStyles","pick","picks","token","None","doResolve","onKeyMods","input","isCancellationRequested","createQuickPick","activeItem","disposables","slice","focused","onDidFocus","Object","assign","removeItem","item","splice","onCancellationRequested","canPickMany","placeHolder","ignoreFocusLost","all","_ref2","_activeItem","picked","err","oldController","password","backKeybindingLabel","updateLayout","removeAttribute","viewItems","getAction","disabled","_a","focusChanged","document","activeElement","offsetParent","returnFocus","layout","dimension","titleBarOffset","top","width","Math","min","MAX_WIDTH","marginLeft","height","applyStyles","quickInputTitleBackground","quickInputBackground","quickInputForeground","contrastBorder","widgetShadow","widget","toString","boxShadow","countBadge","content","listInactiveFocusForeground","pickerGroupBorder","pickerGroupForeground","newStyles"],"sources":["C:/Users/Administrator/Desktop/sqllineage-master/sqllineagejs/node_modules/monaco-editor/esm/vs/base/parts/quickinput/browser/quickInput.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport './media/quickInput.css';\r\nimport { NO_KEY_MODS, ItemActivation } from '../common/quickInput.js';\r\nimport * as dom from '../../../browser/dom.js';\r\nimport { CancellationToken } from '../../../common/cancellation.js';\r\nimport { QuickInputList, QuickInputListFocus } from './quickInputList.js';\r\nimport { QuickInputBox } from './quickInputBox.js';\r\nimport { StandardKeyboardEvent } from '../../../browser/keyboardEvent.js';\r\nimport { localize } from '../../../../nls.js';\r\nimport { CountBadge } from '../../../browser/ui/countBadge/countBadge.js';\r\nimport { ProgressBar } from '../../../browser/ui/progressbar/progressbar.js';\r\nimport { Emitter } from '../../../common/event.js';\r\nimport { Button } from '../../../browser/ui/button/button.js';\r\nimport { dispose, Disposable, DisposableStore } from '../../../common/lifecycle.js';\r\nimport Severity from '../../../common/severity.js';\r\nimport { ActionBar } from '../../../browser/ui/actionbar/actionbar.js';\r\nimport { Action } from '../../../common/actions.js';\r\nimport { equals } from '../../../common/arrays.js';\r\nimport { TimeoutTimer } from '../../../common/async.js';\r\nimport { getIconClass } from './quickInputUtils.js';\r\nimport { registerCodicon, Codicon } from '../../../common/codicons.js';\r\nimport { escape } from '../../../common/strings.js';\r\nimport { renderLabelWithIcons } from '../../../browser/ui/iconLabel/iconLabels.js';\r\nconst $ = dom.$;\r\nconst backButtonIcon = registerCodicon('quick-input-back', Codicon.arrowLeft);\r\nconst backButton = {\r\n    iconClass: backButtonIcon.classNames,\r\n    tooltip: localize('quickInput.back', \"Back\"),\r\n    handle: -1 // TODO\r\n};\r\nclass QuickInput extends Disposable {\r\n    constructor(ui) {\r\n        super();\r\n        this.ui = ui;\r\n        this.visible = false;\r\n        this._enabled = true;\r\n        this._busy = false;\r\n        this._ignoreFocusOut = false;\r\n        this._buttons = [];\r\n        this.buttonsUpdated = false;\r\n        this.onDidTriggerButtonEmitter = this._register(new Emitter());\r\n        this.onDidHideEmitter = this._register(new Emitter());\r\n        this.onDisposeEmitter = this._register(new Emitter());\r\n        this.visibleDisposables = this._register(new DisposableStore());\r\n        this.onDidHide = this.onDidHideEmitter.event;\r\n    }\r\n    get title() {\r\n        return this._title;\r\n    }\r\n    set title(title) {\r\n        this._title = title;\r\n        this.update();\r\n    }\r\n    get description() {\r\n        return this._description;\r\n    }\r\n    set description(description) {\r\n        this._description = description;\r\n        this.update();\r\n    }\r\n    get step() {\r\n        return this._steps;\r\n    }\r\n    set step(step) {\r\n        this._steps = step;\r\n        this.update();\r\n    }\r\n    get totalSteps() {\r\n        return this._totalSteps;\r\n    }\r\n    set totalSteps(totalSteps) {\r\n        this._totalSteps = totalSteps;\r\n        this.update();\r\n    }\r\n    get enabled() {\r\n        return this._enabled;\r\n    }\r\n    set enabled(enabled) {\r\n        this._enabled = enabled;\r\n        this.update();\r\n    }\r\n    get contextKey() {\r\n        return this._contextKey;\r\n    }\r\n    set contextKey(contextKey) {\r\n        this._contextKey = contextKey;\r\n        this.update();\r\n    }\r\n    get busy() {\r\n        return this._busy;\r\n    }\r\n    set busy(busy) {\r\n        this._busy = busy;\r\n        this.update();\r\n    }\r\n    get ignoreFocusOut() {\r\n        return this._ignoreFocusOut;\r\n    }\r\n    set ignoreFocusOut(ignoreFocusOut) {\r\n        this._ignoreFocusOut = ignoreFocusOut;\r\n        this.update();\r\n    }\r\n    get buttons() {\r\n        return this._buttons;\r\n    }\r\n    set buttons(buttons) {\r\n        this._buttons = buttons;\r\n        this.buttonsUpdated = true;\r\n        this.update();\r\n    }\r\n    show() {\r\n        if (this.visible) {\r\n            return;\r\n        }\r\n        this.visibleDisposables.add(this.ui.onDidTriggerButton(button => {\r\n            if (this.buttons.indexOf(button) !== -1) {\r\n                this.onDidTriggerButtonEmitter.fire(button);\r\n            }\r\n        }));\r\n        this.ui.show(this);\r\n        this.visible = true;\r\n        this.update();\r\n    }\r\n    hide() {\r\n        if (!this.visible) {\r\n            return;\r\n        }\r\n        this.ui.hide();\r\n    }\r\n    didHide() {\r\n        this.visible = false;\r\n        this.visibleDisposables.clear();\r\n        this.onDidHideEmitter.fire();\r\n    }\r\n    update() {\r\n        if (!this.visible) {\r\n            return;\r\n        }\r\n        const title = this.getTitle();\r\n        if (title && this.ui.title.textContent !== title) {\r\n            this.ui.title.textContent = title;\r\n        }\r\n        else if (!title && this.ui.title.innerHTML !== '&nbsp;') {\r\n            this.ui.title.innerText = '\\u00a0;';\r\n        }\r\n        const description = this.getDescription();\r\n        if (this.ui.description1.textContent !== description) {\r\n            this.ui.description1.textContent = description;\r\n        }\r\n        if (this.ui.description2.textContent !== description) {\r\n            this.ui.description2.textContent = description;\r\n        }\r\n        if (this.busy && !this.busyDelay) {\r\n            this.busyDelay = new TimeoutTimer();\r\n            this.busyDelay.setIfNotSet(() => {\r\n                if (this.visible) {\r\n                    this.ui.progressBar.infinite();\r\n                }\r\n            }, 800);\r\n        }\r\n        if (!this.busy && this.busyDelay) {\r\n            this.ui.progressBar.stop();\r\n            this.busyDelay.cancel();\r\n            this.busyDelay = undefined;\r\n        }\r\n        if (this.buttonsUpdated) {\r\n            this.buttonsUpdated = false;\r\n            this.ui.leftActionBar.clear();\r\n            const leftButtons = this.buttons.filter(button => button === backButton);\r\n            this.ui.leftActionBar.push(leftButtons.map((button, index) => {\r\n                const action = new Action(`id-${index}`, '', button.iconClass || getIconClass(button.iconPath), true, () => __awaiter(this, void 0, void 0, function* () {\r\n                    this.onDidTriggerButtonEmitter.fire(button);\r\n                }));\r\n                action.tooltip = button.tooltip || '';\r\n                return action;\r\n            }), { icon: true, label: false });\r\n            this.ui.rightActionBar.clear();\r\n            const rightButtons = this.buttons.filter(button => button !== backButton);\r\n            this.ui.rightActionBar.push(rightButtons.map((button, index) => {\r\n                const action = new Action(`id-${index}`, '', button.iconClass || getIconClass(button.iconPath), true, () => __awaiter(this, void 0, void 0, function* () {\r\n                    this.onDidTriggerButtonEmitter.fire(button);\r\n                }));\r\n                action.tooltip = button.tooltip || '';\r\n                return action;\r\n            }), { icon: true, label: false });\r\n        }\r\n        this.ui.ignoreFocusOut = this.ignoreFocusOut;\r\n        this.ui.setEnabled(this.enabled);\r\n        this.ui.setContextKey(this.contextKey);\r\n    }\r\n    getTitle() {\r\n        if (this.title && this.step) {\r\n            return `${this.title} (${this.getSteps()})`;\r\n        }\r\n        if (this.title) {\r\n            return this.title;\r\n        }\r\n        if (this.step) {\r\n            return this.getSteps();\r\n        }\r\n        return '';\r\n    }\r\n    getDescription() {\r\n        return this.description || '';\r\n    }\r\n    getSteps() {\r\n        if (this.step && this.totalSteps) {\r\n            return localize('quickInput.steps', \"{0}/{1}\", this.step, this.totalSteps);\r\n        }\r\n        if (this.step) {\r\n            return String(this.step);\r\n        }\r\n        return '';\r\n    }\r\n    showMessageDecoration(severity) {\r\n        this.ui.inputBox.showDecoration(severity);\r\n        if (severity === Severity.Error) {\r\n            const styles = this.ui.inputBox.stylesForType(severity);\r\n            this.ui.message.style.color = styles.foreground ? `${styles.foreground}` : '';\r\n            this.ui.message.style.backgroundColor = styles.background ? `${styles.background}` : '';\r\n            this.ui.message.style.border = styles.border ? `1px solid ${styles.border}` : '';\r\n            this.ui.message.style.paddingBottom = '4px';\r\n        }\r\n        else {\r\n            this.ui.message.style.color = '';\r\n            this.ui.message.style.backgroundColor = '';\r\n            this.ui.message.style.border = '';\r\n            this.ui.message.style.paddingBottom = '';\r\n        }\r\n    }\r\n    dispose() {\r\n        this.hide();\r\n        this.onDisposeEmitter.fire();\r\n        super.dispose();\r\n    }\r\n}\r\nclass QuickPick extends QuickInput {\r\n    constructor() {\r\n        super(...arguments);\r\n        this._value = '';\r\n        this.onDidChangeValueEmitter = this._register(new Emitter());\r\n        this.onDidAcceptEmitter = this._register(new Emitter());\r\n        this.onDidCustomEmitter = this._register(new Emitter());\r\n        this._items = [];\r\n        this.itemsUpdated = false;\r\n        this._canSelectMany = false;\r\n        this._canAcceptInBackground = false;\r\n        this._matchOnDescription = false;\r\n        this._matchOnDetail = false;\r\n        this._matchOnLabel = true;\r\n        this._sortByLabel = true;\r\n        this._autoFocusOnList = true;\r\n        this._itemActivation = this.ui.isScreenReaderOptimized() ? ItemActivation.NONE /* https://github.com/microsoft/vscode/issues/57501 */ : ItemActivation.FIRST;\r\n        this._activeItems = [];\r\n        this.activeItemsUpdated = false;\r\n        this.activeItemsToConfirm = [];\r\n        this.onDidChangeActiveEmitter = this._register(new Emitter());\r\n        this._selectedItems = [];\r\n        this.selectedItemsUpdated = false;\r\n        this.selectedItemsToConfirm = [];\r\n        this.onDidChangeSelectionEmitter = this._register(new Emitter());\r\n        this.onDidTriggerItemButtonEmitter = this._register(new Emitter());\r\n        this.valueSelectionUpdated = true;\r\n        this._ok = 'default';\r\n        this._customButton = false;\r\n        this.filterValue = (value) => value;\r\n        this.onDidChangeValue = this.onDidChangeValueEmitter.event;\r\n        this.onDidAccept = this.onDidAcceptEmitter.event;\r\n        this.onDidChangeActive = this.onDidChangeActiveEmitter.event;\r\n        this.onDidChangeSelection = this.onDidChangeSelectionEmitter.event;\r\n        this.onDidTriggerItemButton = this.onDidTriggerItemButtonEmitter.event;\r\n    }\r\n    get quickNavigate() {\r\n        return this._quickNavigate;\r\n    }\r\n    set quickNavigate(quickNavigate) {\r\n        this._quickNavigate = quickNavigate;\r\n        this.update();\r\n    }\r\n    get value() {\r\n        return this._value;\r\n    }\r\n    set value(value) {\r\n        this._value = value || '';\r\n        this.update();\r\n    }\r\n    set ariaLabel(ariaLabel) {\r\n        this._ariaLabel = ariaLabel;\r\n        this.update();\r\n    }\r\n    get ariaLabel() {\r\n        return this._ariaLabel;\r\n    }\r\n    get placeholder() {\r\n        return this._placeholder;\r\n    }\r\n    set placeholder(placeholder) {\r\n        this._placeholder = placeholder;\r\n        this.update();\r\n    }\r\n    get items() {\r\n        return this._items;\r\n    }\r\n    set items(items) {\r\n        this._items = items;\r\n        this.itemsUpdated = true;\r\n        this.update();\r\n    }\r\n    get canSelectMany() {\r\n        return this._canSelectMany;\r\n    }\r\n    set canSelectMany(canSelectMany) {\r\n        this._canSelectMany = canSelectMany;\r\n        this.update();\r\n    }\r\n    get canAcceptInBackground() {\r\n        return this._canAcceptInBackground;\r\n    }\r\n    set canAcceptInBackground(canAcceptInBackground) {\r\n        this._canAcceptInBackground = canAcceptInBackground;\r\n    }\r\n    get matchOnDescription() {\r\n        return this._matchOnDescription;\r\n    }\r\n    set matchOnDescription(matchOnDescription) {\r\n        this._matchOnDescription = matchOnDescription;\r\n        this.update();\r\n    }\r\n    get matchOnDetail() {\r\n        return this._matchOnDetail;\r\n    }\r\n    set matchOnDetail(matchOnDetail) {\r\n        this._matchOnDetail = matchOnDetail;\r\n        this.update();\r\n    }\r\n    get matchOnLabel() {\r\n        return this._matchOnLabel;\r\n    }\r\n    set matchOnLabel(matchOnLabel) {\r\n        this._matchOnLabel = matchOnLabel;\r\n        this.update();\r\n    }\r\n    get sortByLabel() {\r\n        return this._sortByLabel;\r\n    }\r\n    set sortByLabel(sortByLabel) {\r\n        this._sortByLabel = sortByLabel;\r\n        this.update();\r\n    }\r\n    get autoFocusOnList() {\r\n        return this._autoFocusOnList;\r\n    }\r\n    set autoFocusOnList(autoFocusOnList) {\r\n        this._autoFocusOnList = autoFocusOnList;\r\n        this.update();\r\n    }\r\n    get itemActivation() {\r\n        return this._itemActivation;\r\n    }\r\n    set itemActivation(itemActivation) {\r\n        this._itemActivation = itemActivation;\r\n    }\r\n    get activeItems() {\r\n        return this._activeItems;\r\n    }\r\n    set activeItems(activeItems) {\r\n        this._activeItems = activeItems;\r\n        this.activeItemsUpdated = true;\r\n        this.update();\r\n    }\r\n    get selectedItems() {\r\n        return this._selectedItems;\r\n    }\r\n    set selectedItems(selectedItems) {\r\n        this._selectedItems = selectedItems;\r\n        this.selectedItemsUpdated = true;\r\n        this.update();\r\n    }\r\n    get keyMods() {\r\n        if (this._quickNavigate) {\r\n            // Disable keyMods when quick navigate is enabled\r\n            // because in this model the interaction is purely\r\n            // keyboard driven and Ctrl/Alt are typically\r\n            // pressed and hold during this interaction.\r\n            return NO_KEY_MODS;\r\n        }\r\n        return this.ui.keyMods;\r\n    }\r\n    set valueSelection(valueSelection) {\r\n        this._valueSelection = valueSelection;\r\n        this.valueSelectionUpdated = true;\r\n        this.update();\r\n    }\r\n    get validationMessage() {\r\n        return this._validationMessage;\r\n    }\r\n    set validationMessage(validationMessage) {\r\n        this._validationMessage = validationMessage;\r\n        this.update();\r\n    }\r\n    get customButton() {\r\n        return this._customButton;\r\n    }\r\n    set customButton(showCustomButton) {\r\n        this._customButton = showCustomButton;\r\n        this.update();\r\n    }\r\n    get customLabel() {\r\n        return this._customButtonLabel;\r\n    }\r\n    set customLabel(label) {\r\n        this._customButtonLabel = label;\r\n        this.update();\r\n    }\r\n    get customHover() {\r\n        return this._customButtonHover;\r\n    }\r\n    set customHover(hover) {\r\n        this._customButtonHover = hover;\r\n        this.update();\r\n    }\r\n    get ok() {\r\n        return this._ok;\r\n    }\r\n    set ok(showOkButton) {\r\n        this._ok = showOkButton;\r\n        this.update();\r\n    }\r\n    get hideInput() {\r\n        return !!this._hideInput;\r\n    }\r\n    set hideInput(hideInput) {\r\n        this._hideInput = hideInput;\r\n        this.update();\r\n    }\r\n    trySelectFirst() {\r\n        if (this.autoFocusOnList) {\r\n            if (!this.canSelectMany) {\r\n                this.ui.list.focus(QuickInputListFocus.First);\r\n            }\r\n        }\r\n    }\r\n    show() {\r\n        if (!this.visible) {\r\n            this.visibleDisposables.add(this.ui.inputBox.onDidChange(value => {\r\n                if (value === this.value) {\r\n                    return;\r\n                }\r\n                this._value = value;\r\n                const didFilter = this.ui.list.filter(this.filterValue(this.ui.inputBox.value));\r\n                if (didFilter) {\r\n                    this.trySelectFirst();\r\n                }\r\n                this.onDidChangeValueEmitter.fire(value);\r\n            }));\r\n            this.visibleDisposables.add(this.ui.inputBox.onMouseDown(event => {\r\n                if (!this.autoFocusOnList) {\r\n                    this.ui.list.clearFocus();\r\n                }\r\n            }));\r\n            this.visibleDisposables.add((this._hideInput ? this.ui.list : this.ui.inputBox).onKeyDown((event) => {\r\n                switch (event.keyCode) {\r\n                    case 18 /* DownArrow */:\r\n                        this.ui.list.focus(QuickInputListFocus.Next);\r\n                        if (this.canSelectMany) {\r\n                            this.ui.list.domFocus();\r\n                        }\r\n                        dom.EventHelper.stop(event, true);\r\n                        break;\r\n                    case 16 /* UpArrow */:\r\n                        if (this.ui.list.getFocusedElements().length) {\r\n                            this.ui.list.focus(QuickInputListFocus.Previous);\r\n                        }\r\n                        else {\r\n                            this.ui.list.focus(QuickInputListFocus.Last);\r\n                        }\r\n                        if (this.canSelectMany) {\r\n                            this.ui.list.domFocus();\r\n                        }\r\n                        dom.EventHelper.stop(event, true);\r\n                        break;\r\n                    case 12 /* PageDown */:\r\n                        this.ui.list.focus(QuickInputListFocus.NextPage);\r\n                        if (this.canSelectMany) {\r\n                            this.ui.list.domFocus();\r\n                        }\r\n                        dom.EventHelper.stop(event, true);\r\n                        break;\r\n                    case 11 /* PageUp */:\r\n                        this.ui.list.focus(QuickInputListFocus.PreviousPage);\r\n                        if (this.canSelectMany) {\r\n                            this.ui.list.domFocus();\r\n                        }\r\n                        dom.EventHelper.stop(event, true);\r\n                        break;\r\n                    case 17 /* RightArrow */:\r\n                        if (!this._canAcceptInBackground) {\r\n                            return; // needs to be enabled\r\n                        }\r\n                        if (!this.ui.inputBox.isSelectionAtEnd()) {\r\n                            return; // ensure input box selection at end\r\n                        }\r\n                        if (this.activeItems[0]) {\r\n                            this._selectedItems = [this.activeItems[0]];\r\n                            this.onDidChangeSelectionEmitter.fire(this.selectedItems);\r\n                            this.onDidAcceptEmitter.fire({ inBackground: true });\r\n                        }\r\n                        break;\r\n                    case 14 /* Home */:\r\n                        if ((event.ctrlKey || event.metaKey) && !event.shiftKey && !event.altKey) {\r\n                            this.ui.list.focus(QuickInputListFocus.First);\r\n                            dom.EventHelper.stop(event, true);\r\n                        }\r\n                        break;\r\n                    case 13 /* End */:\r\n                        if ((event.ctrlKey || event.metaKey) && !event.shiftKey && !event.altKey) {\r\n                            this.ui.list.focus(QuickInputListFocus.Last);\r\n                            dom.EventHelper.stop(event, true);\r\n                        }\r\n                        break;\r\n                }\r\n            }));\r\n            this.visibleDisposables.add(this.ui.onDidAccept(() => {\r\n                if (!this.canSelectMany && this.activeItems[0]) {\r\n                    this._selectedItems = [this.activeItems[0]];\r\n                    this.onDidChangeSelectionEmitter.fire(this.selectedItems);\r\n                }\r\n                this.onDidAcceptEmitter.fire({ inBackground: false });\r\n            }));\r\n            this.visibleDisposables.add(this.ui.onDidCustom(() => {\r\n                this.onDidCustomEmitter.fire();\r\n            }));\r\n            this.visibleDisposables.add(this.ui.list.onDidChangeFocus(focusedItems => {\r\n                if (this.activeItemsUpdated) {\r\n                    return; // Expect another event.\r\n                }\r\n                if (this.activeItemsToConfirm !== this._activeItems && equals(focusedItems, this._activeItems, (a, b) => a === b)) {\r\n                    return;\r\n                }\r\n                this._activeItems = focusedItems;\r\n                this.onDidChangeActiveEmitter.fire(focusedItems);\r\n            }));\r\n            this.visibleDisposables.add(this.ui.list.onDidChangeSelection(({ items: selectedItems, event }) => {\r\n                if (this.canSelectMany) {\r\n                    if (selectedItems.length) {\r\n                        this.ui.list.setSelectedElements([]);\r\n                    }\r\n                    return;\r\n                }\r\n                if (this.selectedItemsToConfirm !== this._selectedItems && equals(selectedItems, this._selectedItems, (a, b) => a === b)) {\r\n                    return;\r\n                }\r\n                this._selectedItems = selectedItems;\r\n                this.onDidChangeSelectionEmitter.fire(selectedItems);\r\n                if (selectedItems.length) {\r\n                    this.onDidAcceptEmitter.fire({ inBackground: event instanceof MouseEvent && event.button === 1 /* mouse middle click */ });\r\n                }\r\n            }));\r\n            this.visibleDisposables.add(this.ui.list.onChangedCheckedElements(checkedItems => {\r\n                if (!this.canSelectMany) {\r\n                    return;\r\n                }\r\n                if (this.selectedItemsToConfirm !== this._selectedItems && equals(checkedItems, this._selectedItems, (a, b) => a === b)) {\r\n                    return;\r\n                }\r\n                this._selectedItems = checkedItems;\r\n                this.onDidChangeSelectionEmitter.fire(checkedItems);\r\n            }));\r\n            this.visibleDisposables.add(this.ui.list.onButtonTriggered(event => this.onDidTriggerItemButtonEmitter.fire(event)));\r\n            this.visibleDisposables.add(this.registerQuickNavigation());\r\n            this.valueSelectionUpdated = true;\r\n        }\r\n        super.show(); // TODO: Why have show() bubble up while update() trickles down? (Could move setComboboxAccessibility() here.)\r\n    }\r\n    registerQuickNavigation() {\r\n        return dom.addDisposableListener(this.ui.container, dom.EventType.KEY_UP, e => {\r\n            if (this.canSelectMany || !this._quickNavigate) {\r\n                return;\r\n            }\r\n            const keyboardEvent = new StandardKeyboardEvent(e);\r\n            const keyCode = keyboardEvent.keyCode;\r\n            // Select element when keys are pressed that signal it\r\n            const quickNavKeys = this._quickNavigate.keybindings;\r\n            const wasTriggerKeyPressed = quickNavKeys.some(k => {\r\n                const [firstPart, chordPart] = k.getParts();\r\n                if (chordPart) {\r\n                    return false;\r\n                }\r\n                if (firstPart.shiftKey && keyCode === 4 /* Shift */) {\r\n                    if (keyboardEvent.ctrlKey || keyboardEvent.altKey || keyboardEvent.metaKey) {\r\n                        return false; // this is an optimistic check for the shift key being used to navigate back in quick input\r\n                    }\r\n                    return true;\r\n                }\r\n                if (firstPart.altKey && keyCode === 6 /* Alt */) {\r\n                    return true;\r\n                }\r\n                if (firstPart.ctrlKey && keyCode === 5 /* Ctrl */) {\r\n                    return true;\r\n                }\r\n                if (firstPart.metaKey && keyCode === 57 /* Meta */) {\r\n                    return true;\r\n                }\r\n                return false;\r\n            });\r\n            if (wasTriggerKeyPressed) {\r\n                if (this.activeItems[0]) {\r\n                    this._selectedItems = [this.activeItems[0]];\r\n                    this.onDidChangeSelectionEmitter.fire(this.selectedItems);\r\n                    this.onDidAcceptEmitter.fire({ inBackground: false });\r\n                }\r\n                // Unset quick navigate after press. It is only valid once\r\n                // and should not result in any behaviour change afterwards\r\n                // if the picker remains open because there was no active item\r\n                this._quickNavigate = undefined;\r\n            }\r\n        });\r\n    }\r\n    update() {\r\n        if (!this.visible) {\r\n            return;\r\n        }\r\n        let hideInput = false;\r\n        let inputShownJustForScreenReader = false;\r\n        if (!!this._hideInput && this._items.length > 0) {\r\n            if (this.ui.isScreenReaderOptimized()) {\r\n                // Always show input if screen reader attached https://github.com/microsoft/vscode/issues/94360\r\n                inputShownJustForScreenReader = true;\r\n            }\r\n            else {\r\n                hideInput = true;\r\n            }\r\n        }\r\n        this.ui.container.classList.toggle('hidden-input', hideInput && !this.description);\r\n        const visibilities = {\r\n            title: !!this.title || !!this.step || !!this.buttons.length,\r\n            description: !!this.description,\r\n            checkAll: this.canSelectMany && !this._hideCheckAll,\r\n            checkBox: this.canSelectMany,\r\n            inputBox: !hideInput,\r\n            progressBar: !hideInput,\r\n            visibleCount: true,\r\n            count: this.canSelectMany,\r\n            ok: this.ok === 'default' ? this.canSelectMany : this.ok,\r\n            list: true,\r\n            message: !!this.validationMessage,\r\n            customButton: this.customButton\r\n        };\r\n        this.ui.setVisibilities(visibilities);\r\n        super.update();\r\n        if (this.ui.inputBox.value !== this.value) {\r\n            this.ui.inputBox.value = this.value;\r\n        }\r\n        if (this.valueSelectionUpdated) {\r\n            this.valueSelectionUpdated = false;\r\n            this.ui.inputBox.select(this._valueSelection && { start: this._valueSelection[0], end: this._valueSelection[1] });\r\n        }\r\n        if (this.ui.inputBox.placeholder !== (this.placeholder || '')) {\r\n            this.ui.inputBox.placeholder = (this.placeholder || '');\r\n        }\r\n        if (inputShownJustForScreenReader) {\r\n            this.ui.inputBox.ariaLabel = '';\r\n        }\r\n        else {\r\n            const ariaLabel = this.ariaLabel || this.placeholder || QuickPick.DEFAULT_ARIA_LABEL;\r\n            if (this.ui.inputBox.ariaLabel !== ariaLabel) {\r\n                this.ui.inputBox.ariaLabel = ariaLabel;\r\n            }\r\n        }\r\n        this.ui.list.matchOnDescription = this.matchOnDescription;\r\n        this.ui.list.matchOnDetail = this.matchOnDetail;\r\n        this.ui.list.matchOnLabel = this.matchOnLabel;\r\n        this.ui.list.sortByLabel = this.sortByLabel;\r\n        if (this.itemsUpdated) {\r\n            this.itemsUpdated = false;\r\n            this.ui.list.setElements(this.items);\r\n            this.ui.list.filter(this.filterValue(this.ui.inputBox.value));\r\n            this.ui.checkAll.checked = this.ui.list.getAllVisibleChecked();\r\n            this.ui.visibleCount.setCount(this.ui.list.getVisibleCount());\r\n            this.ui.count.setCount(this.ui.list.getCheckedCount());\r\n            switch (this._itemActivation) {\r\n                case ItemActivation.NONE:\r\n                    this._itemActivation = ItemActivation.FIRST; // only valid once, then unset\r\n                    break;\r\n                case ItemActivation.SECOND:\r\n                    this.ui.list.focus(QuickInputListFocus.Second);\r\n                    this._itemActivation = ItemActivation.FIRST; // only valid once, then unset\r\n                    break;\r\n                case ItemActivation.LAST:\r\n                    this.ui.list.focus(QuickInputListFocus.Last);\r\n                    this._itemActivation = ItemActivation.FIRST; // only valid once, then unset\r\n                    break;\r\n                default:\r\n                    this.trySelectFirst();\r\n                    break;\r\n            }\r\n        }\r\n        if (this.ui.container.classList.contains('show-checkboxes') !== !!this.canSelectMany) {\r\n            if (this.canSelectMany) {\r\n                this.ui.list.clearFocus();\r\n            }\r\n            else {\r\n                this.trySelectFirst();\r\n            }\r\n        }\r\n        if (this.activeItemsUpdated) {\r\n            this.activeItemsUpdated = false;\r\n            this.activeItemsToConfirm = this._activeItems;\r\n            this.ui.list.setFocusedElements(this.activeItems);\r\n            if (this.activeItemsToConfirm === this._activeItems) {\r\n                this.activeItemsToConfirm = null;\r\n            }\r\n        }\r\n        if (this.selectedItemsUpdated) {\r\n            this.selectedItemsUpdated = false;\r\n            this.selectedItemsToConfirm = this._selectedItems;\r\n            if (this.canSelectMany) {\r\n                this.ui.list.setCheckedElements(this.selectedItems);\r\n            }\r\n            else {\r\n                this.ui.list.setSelectedElements(this.selectedItems);\r\n            }\r\n            if (this.selectedItemsToConfirm === this._selectedItems) {\r\n                this.selectedItemsToConfirm = null;\r\n            }\r\n        }\r\n        const validationMessage = this.validationMessage || '';\r\n        if (this._lastValidationMessage !== validationMessage) {\r\n            this._lastValidationMessage = validationMessage;\r\n            dom.reset(this.ui.message, ...renderLabelWithIcons(escape(validationMessage)));\r\n            this.showMessageDecoration(this.validationMessage ? Severity.Error : Severity.Ignore);\r\n        }\r\n        this.ui.customButton.label = this.customLabel || '';\r\n        this.ui.customButton.element.title = this.customHover || '';\r\n        this.ui.setComboboxAccessibility(true);\r\n        if (!visibilities.inputBox) {\r\n            // we need to move focus into the tree to detect keybindings\r\n            // properly when the input box is not visible (quick nav)\r\n            this.ui.list.domFocus();\r\n            // Focus the first element in the list if multiselect is enabled\r\n            if (this.canSelectMany) {\r\n                this.ui.list.focus(QuickInputListFocus.First);\r\n            }\r\n        }\r\n    }\r\n}\r\nQuickPick.DEFAULT_ARIA_LABEL = localize('quickInputBox.ariaLabel', \"Type to narrow down results.\");\r\nexport class QuickInputController extends Disposable {\r\n    constructor(options) {\r\n        super();\r\n        this.options = options;\r\n        this.comboboxAccessibility = false;\r\n        this.enabled = true;\r\n        this.onDidAcceptEmitter = this._register(new Emitter());\r\n        this.onDidCustomEmitter = this._register(new Emitter());\r\n        this.onDidTriggerButtonEmitter = this._register(new Emitter());\r\n        this.keyMods = { ctrlCmd: false, alt: false };\r\n        this.controller = null;\r\n        this.onShowEmitter = this._register(new Emitter());\r\n        this.onShow = this.onShowEmitter.event;\r\n        this.onHideEmitter = this._register(new Emitter());\r\n        this.onHide = this.onHideEmitter.event;\r\n        this.idPrefix = options.idPrefix;\r\n        this.parentElement = options.container;\r\n        this.styles = options.styles;\r\n        this.registerKeyModsListeners();\r\n    }\r\n    registerKeyModsListeners() {\r\n        const listener = (e) => {\r\n            this.keyMods.ctrlCmd = e.ctrlKey || e.metaKey;\r\n            this.keyMods.alt = e.altKey;\r\n        };\r\n        this._register(dom.addDisposableListener(window, dom.EventType.KEY_DOWN, listener, true));\r\n        this._register(dom.addDisposableListener(window, dom.EventType.KEY_UP, listener, true));\r\n        this._register(dom.addDisposableListener(window, dom.EventType.MOUSE_DOWN, listener, true));\r\n    }\r\n    getUI() {\r\n        if (this.ui) {\r\n            return this.ui;\r\n        }\r\n        const container = dom.append(this.parentElement, $('.quick-input-widget.show-file-icons'));\r\n        container.tabIndex = -1;\r\n        container.style.display = 'none';\r\n        const styleSheet = dom.createStyleSheet(container);\r\n        const titleBar = dom.append(container, $('.quick-input-titlebar'));\r\n        const leftActionBar = this._register(new ActionBar(titleBar));\r\n        leftActionBar.domNode.classList.add('quick-input-left-action-bar');\r\n        const title = dom.append(titleBar, $('.quick-input-title'));\r\n        const rightActionBar = this._register(new ActionBar(titleBar));\r\n        rightActionBar.domNode.classList.add('quick-input-right-action-bar');\r\n        const description1 = dom.append(container, $('.quick-input-description'));\r\n        const headerContainer = dom.append(container, $('.quick-input-header'));\r\n        const checkAll = dom.append(headerContainer, $('input.quick-input-check-all'));\r\n        checkAll.type = 'checkbox';\r\n        this._register(dom.addStandardDisposableListener(checkAll, dom.EventType.CHANGE, e => {\r\n            const checked = checkAll.checked;\r\n            list.setAllVisibleChecked(checked);\r\n        }));\r\n        this._register(dom.addDisposableListener(checkAll, dom.EventType.CLICK, e => {\r\n            if (e.x || e.y) { // Avoid 'click' triggered by 'space'...\r\n                inputBox.setFocus();\r\n            }\r\n        }));\r\n        const description2 = dom.append(headerContainer, $('.quick-input-description'));\r\n        const extraContainer = dom.append(headerContainer, $('.quick-input-and-message'));\r\n        const filterContainer = dom.append(extraContainer, $('.quick-input-filter'));\r\n        const inputBox = this._register(new QuickInputBox(filterContainer));\r\n        inputBox.setAttribute('aria-describedby', `${this.idPrefix}message`);\r\n        const visibleCountContainer = dom.append(filterContainer, $('.quick-input-visible-count'));\r\n        visibleCountContainer.setAttribute('aria-live', 'polite');\r\n        visibleCountContainer.setAttribute('aria-atomic', 'true');\r\n        const visibleCount = new CountBadge(visibleCountContainer, { countFormat: localize({ key: 'quickInput.visibleCount', comment: ['This tells the user how many items are shown in a list of items to select from. The items can be anything. Currently not visible, but read by screen readers.'] }, \"{0} Results\") });\r\n        const countContainer = dom.append(filterContainer, $('.quick-input-count'));\r\n        countContainer.setAttribute('aria-live', 'polite');\r\n        const count = new CountBadge(countContainer, { countFormat: localize({ key: 'quickInput.countSelected', comment: ['This tells the user how many items are selected in a list of items to select from. The items can be anything.'] }, \"{0} Selected\") });\r\n        const okContainer = dom.append(headerContainer, $('.quick-input-action'));\r\n        const ok = new Button(okContainer);\r\n        ok.label = localize('ok', \"OK\");\r\n        this._register(ok.onDidClick(e => {\r\n            this.onDidAcceptEmitter.fire();\r\n        }));\r\n        const customButtonContainer = dom.append(headerContainer, $('.quick-input-action'));\r\n        const customButton = new Button(customButtonContainer);\r\n        customButton.label = localize('custom', \"Custom\");\r\n        this._register(customButton.onDidClick(e => {\r\n            this.onDidCustomEmitter.fire();\r\n        }));\r\n        const message = dom.append(extraContainer, $(`#${this.idPrefix}message.quick-input-message`));\r\n        const progressBar = new ProgressBar(container);\r\n        progressBar.getContainer().classList.add('quick-input-progress');\r\n        const list = this._register(new QuickInputList(container, this.idPrefix + 'list', this.options));\r\n        this._register(list.onChangedAllVisibleChecked(checked => {\r\n            checkAll.checked = checked;\r\n        }));\r\n        this._register(list.onChangedVisibleCount(c => {\r\n            visibleCount.setCount(c);\r\n        }));\r\n        this._register(list.onChangedCheckedCount(c => {\r\n            count.setCount(c);\r\n        }));\r\n        this._register(list.onLeave(() => {\r\n            // Defer to avoid the input field reacting to the triggering key.\r\n            setTimeout(() => {\r\n                inputBox.setFocus();\r\n                if (this.controller instanceof QuickPick && this.controller.canSelectMany) {\r\n                    list.clearFocus();\r\n                }\r\n            }, 0);\r\n        }));\r\n        this._register(list.onDidChangeFocus(() => {\r\n            if (this.comboboxAccessibility) {\r\n                this.getUI().inputBox.setAttribute('aria-activedescendant', this.getUI().list.getActiveDescendant() || '');\r\n            }\r\n        }));\r\n        const focusTracker = dom.trackFocus(container);\r\n        this._register(focusTracker);\r\n        this._register(dom.addDisposableListener(container, dom.EventType.FOCUS, e => {\r\n            this.previousFocusElement = e.relatedTarget instanceof HTMLElement ? e.relatedTarget : undefined;\r\n        }, true));\r\n        this._register(focusTracker.onDidBlur(() => {\r\n            if (!this.getUI().ignoreFocusOut && !this.options.ignoreFocusOut()) {\r\n                this.hide();\r\n            }\r\n            this.previousFocusElement = undefined;\r\n        }));\r\n        this._register(dom.addDisposableListener(container, dom.EventType.FOCUS, (e) => {\r\n            inputBox.setFocus();\r\n        }));\r\n        this._register(dom.addDisposableListener(container, dom.EventType.KEY_DOWN, (e) => {\r\n            const event = new StandardKeyboardEvent(e);\r\n            switch (event.keyCode) {\r\n                case 3 /* Enter */:\r\n                    dom.EventHelper.stop(e, true);\r\n                    this.onDidAcceptEmitter.fire();\r\n                    break;\r\n                case 9 /* Escape */:\r\n                    dom.EventHelper.stop(e, true);\r\n                    this.hide();\r\n                    break;\r\n                case 2 /* Tab */:\r\n                    if (!event.altKey && !event.ctrlKey && !event.metaKey) {\r\n                        const selectors = ['.action-label.codicon'];\r\n                        if (container.classList.contains('show-checkboxes')) {\r\n                            selectors.push('input');\r\n                        }\r\n                        else {\r\n                            selectors.push('input[type=text]');\r\n                        }\r\n                        if (this.getUI().list.isDisplayed()) {\r\n                            selectors.push('.monaco-list');\r\n                        }\r\n                        const stops = container.querySelectorAll(selectors.join(', '));\r\n                        if (event.shiftKey && event.target === stops[0]) {\r\n                            dom.EventHelper.stop(e, true);\r\n                            stops[stops.length - 1].focus();\r\n                        }\r\n                        else if (!event.shiftKey && event.target === stops[stops.length - 1]) {\r\n                            dom.EventHelper.stop(e, true);\r\n                            stops[0].focus();\r\n                        }\r\n                    }\r\n                    break;\r\n            }\r\n        }));\r\n        this.ui = {\r\n            container,\r\n            styleSheet,\r\n            leftActionBar,\r\n            titleBar,\r\n            title,\r\n            description1,\r\n            description2,\r\n            rightActionBar,\r\n            checkAll,\r\n            filterContainer,\r\n            inputBox,\r\n            visibleCountContainer,\r\n            visibleCount,\r\n            countContainer,\r\n            count,\r\n            okContainer,\r\n            ok,\r\n            message,\r\n            customButtonContainer,\r\n            customButton,\r\n            progressBar,\r\n            list,\r\n            onDidAccept: this.onDidAcceptEmitter.event,\r\n            onDidCustom: this.onDidCustomEmitter.event,\r\n            onDidTriggerButton: this.onDidTriggerButtonEmitter.event,\r\n            ignoreFocusOut: false,\r\n            keyMods: this.keyMods,\r\n            isScreenReaderOptimized: () => this.options.isScreenReaderOptimized(),\r\n            show: controller => this.show(controller),\r\n            hide: () => this.hide(),\r\n            setVisibilities: visibilities => this.setVisibilities(visibilities),\r\n            setComboboxAccessibility: enabled => this.setComboboxAccessibility(enabled),\r\n            setEnabled: enabled => this.setEnabled(enabled),\r\n            setContextKey: contextKey => this.options.setContextKey(contextKey),\r\n        };\r\n        this.updateStyles();\r\n        return this.ui;\r\n    }\r\n    pick(picks, options = {}, token = CancellationToken.None) {\r\n        return new Promise((doResolve, reject) => {\r\n            let resolve = (result) => {\r\n                resolve = doResolve;\r\n                if (options.onKeyMods) {\r\n                    options.onKeyMods(input.keyMods);\r\n                }\r\n                doResolve(result);\r\n            };\r\n            if (token.isCancellationRequested) {\r\n                resolve(undefined);\r\n                return;\r\n            }\r\n            const input = this.createQuickPick();\r\n            let activeItem;\r\n            const disposables = [\r\n                input,\r\n                input.onDidAccept(() => {\r\n                    if (input.canSelectMany) {\r\n                        resolve(input.selectedItems.slice());\r\n                        input.hide();\r\n                    }\r\n                    else {\r\n                        const result = input.activeItems[0];\r\n                        if (result) {\r\n                            resolve(result);\r\n                            input.hide();\r\n                        }\r\n                    }\r\n                }),\r\n                input.onDidChangeActive(items => {\r\n                    const focused = items[0];\r\n                    if (focused && options.onDidFocus) {\r\n                        options.onDidFocus(focused);\r\n                    }\r\n                }),\r\n                input.onDidChangeSelection(items => {\r\n                    if (!input.canSelectMany) {\r\n                        const result = items[0];\r\n                        if (result) {\r\n                            resolve(result);\r\n                            input.hide();\r\n                        }\r\n                    }\r\n                }),\r\n                input.onDidTriggerItemButton(event => options.onDidTriggerItemButton && options.onDidTriggerItemButton(Object.assign(Object.assign({}, event), { removeItem: () => {\r\n                        const index = input.items.indexOf(event.item);\r\n                        if (index !== -1) {\r\n                            const items = input.items.slice();\r\n                            items.splice(index, 1);\r\n                            input.items = items;\r\n                        }\r\n                    } }))),\r\n                input.onDidChangeValue(value => {\r\n                    if (activeItem && !value && (input.activeItems.length !== 1 || input.activeItems[0] !== activeItem)) {\r\n                        input.activeItems = [activeItem];\r\n                    }\r\n                }),\r\n                token.onCancellationRequested(() => {\r\n                    input.hide();\r\n                }),\r\n                input.onDidHide(() => {\r\n                    dispose(disposables);\r\n                    resolve(undefined);\r\n                }),\r\n            ];\r\n            input.canSelectMany = !!options.canPickMany;\r\n            input.placeholder = options.placeHolder;\r\n            input.ignoreFocusOut = !!options.ignoreFocusLost;\r\n            input.matchOnDescription = !!options.matchOnDescription;\r\n            input.matchOnDetail = !!options.matchOnDetail;\r\n            input.matchOnLabel = (options.matchOnLabel === undefined) || options.matchOnLabel; // default to true\r\n            input.autoFocusOnList = (options.autoFocusOnList === undefined) || options.autoFocusOnList; // default to true\r\n            input.quickNavigate = options.quickNavigate;\r\n            input.contextKey = options.contextKey;\r\n            input.busy = true;\r\n            Promise.all([picks, options.activeItem])\r\n                .then(([items, _activeItem]) => {\r\n                activeItem = _activeItem;\r\n                input.busy = false;\r\n                input.items = items;\r\n                if (input.canSelectMany) {\r\n                    input.selectedItems = items.filter(item => item.type !== 'separator' && item.picked);\r\n                }\r\n                if (activeItem) {\r\n                    input.activeItems = [activeItem];\r\n                }\r\n            });\r\n            input.show();\r\n            Promise.resolve(picks).then(undefined, err => {\r\n                reject(err);\r\n                input.hide();\r\n            });\r\n        });\r\n    }\r\n    createQuickPick() {\r\n        const ui = this.getUI();\r\n        return new QuickPick(ui);\r\n    }\r\n    show(controller) {\r\n        const ui = this.getUI();\r\n        this.onShowEmitter.fire();\r\n        const oldController = this.controller;\r\n        this.controller = controller;\r\n        if (oldController) {\r\n            oldController.didHide();\r\n        }\r\n        this.setEnabled(true);\r\n        ui.leftActionBar.clear();\r\n        ui.title.textContent = '';\r\n        ui.description1.textContent = '';\r\n        ui.description2.textContent = '';\r\n        ui.rightActionBar.clear();\r\n        ui.checkAll.checked = false;\r\n        // ui.inputBox.value = ''; Avoid triggering an event.\r\n        ui.inputBox.placeholder = '';\r\n        ui.inputBox.password = false;\r\n        ui.inputBox.showDecoration(Severity.Ignore);\r\n        ui.visibleCount.setCount(0);\r\n        ui.count.setCount(0);\r\n        dom.reset(ui.message);\r\n        ui.progressBar.stop();\r\n        ui.list.setElements([]);\r\n        ui.list.matchOnDescription = false;\r\n        ui.list.matchOnDetail = false;\r\n        ui.list.matchOnLabel = true;\r\n        ui.list.sortByLabel = true;\r\n        ui.ignoreFocusOut = false;\r\n        this.setComboboxAccessibility(false);\r\n        ui.inputBox.ariaLabel = '';\r\n        const backKeybindingLabel = this.options.backKeybindingLabel();\r\n        backButton.tooltip = backKeybindingLabel ? localize('quickInput.backWithKeybinding', \"Back ({0})\", backKeybindingLabel) : localize('quickInput.back', \"Back\");\r\n        ui.container.style.display = '';\r\n        this.updateLayout();\r\n        ui.inputBox.setFocus();\r\n    }\r\n    setVisibilities(visibilities) {\r\n        const ui = this.getUI();\r\n        ui.title.style.display = visibilities.title ? '' : 'none';\r\n        ui.description1.style.display = visibilities.description && (visibilities.inputBox || visibilities.checkAll) ? '' : 'none';\r\n        ui.description2.style.display = visibilities.description && !(visibilities.inputBox || visibilities.checkAll) ? '' : 'none';\r\n        ui.checkAll.style.display = visibilities.checkAll ? '' : 'none';\r\n        ui.filterContainer.style.display = visibilities.inputBox ? '' : 'none';\r\n        ui.visibleCountContainer.style.display = visibilities.visibleCount ? '' : 'none';\r\n        ui.countContainer.style.display = visibilities.count ? '' : 'none';\r\n        ui.okContainer.style.display = visibilities.ok ? '' : 'none';\r\n        ui.customButtonContainer.style.display = visibilities.customButton ? '' : 'none';\r\n        ui.message.style.display = visibilities.message ? '' : 'none';\r\n        ui.progressBar.getContainer().style.display = visibilities.progressBar ? '' : 'none';\r\n        ui.list.display(!!visibilities.list);\r\n        ui.container.classList[visibilities.checkBox ? 'add' : 'remove']('show-checkboxes');\r\n        this.updateLayout(); // TODO\r\n    }\r\n    setComboboxAccessibility(enabled) {\r\n        if (enabled !== this.comboboxAccessibility) {\r\n            const ui = this.getUI();\r\n            this.comboboxAccessibility = enabled;\r\n            if (this.comboboxAccessibility) {\r\n                ui.inputBox.setAttribute('role', 'combobox');\r\n                ui.inputBox.setAttribute('aria-haspopup', 'true');\r\n                ui.inputBox.setAttribute('aria-autocomplete', 'list');\r\n                ui.inputBox.setAttribute('aria-activedescendant', ui.list.getActiveDescendant() || '');\r\n            }\r\n            else {\r\n                ui.inputBox.removeAttribute('role');\r\n                ui.inputBox.removeAttribute('aria-haspopup');\r\n                ui.inputBox.removeAttribute('aria-autocomplete');\r\n                ui.inputBox.removeAttribute('aria-activedescendant');\r\n            }\r\n        }\r\n    }\r\n    setEnabled(enabled) {\r\n        if (enabled !== this.enabled) {\r\n            this.enabled = enabled;\r\n            for (const item of this.getUI().leftActionBar.viewItems) {\r\n                item.getAction().enabled = enabled;\r\n            }\r\n            for (const item of this.getUI().rightActionBar.viewItems) {\r\n                item.getAction().enabled = enabled;\r\n            }\r\n            this.getUI().checkAll.disabled = !enabled;\r\n            // this.getUI().inputBox.enabled = enabled; Avoid loosing focus.\r\n            this.getUI().ok.enabled = enabled;\r\n            this.getUI().list.enabled = enabled;\r\n        }\r\n    }\r\n    hide() {\r\n        var _a;\r\n        const controller = this.controller;\r\n        if (controller) {\r\n            const focusChanged = !((_a = this.ui) === null || _a === void 0 ? void 0 : _a.container.contains(document.activeElement));\r\n            this.controller = null;\r\n            this.onHideEmitter.fire();\r\n            this.getUI().container.style.display = 'none';\r\n            if (!focusChanged) {\r\n                if (this.previousFocusElement && this.previousFocusElement.offsetParent) {\r\n                    this.previousFocusElement.focus();\r\n                    this.previousFocusElement = undefined;\r\n                }\r\n                else {\r\n                    this.options.returnFocus();\r\n                }\r\n            }\r\n            controller.didHide();\r\n        }\r\n    }\r\n    layout(dimension, titleBarOffset) {\r\n        this.dimension = dimension;\r\n        this.titleBarOffset = titleBarOffset;\r\n        this.updateLayout();\r\n    }\r\n    updateLayout() {\r\n        if (this.ui) {\r\n            this.ui.container.style.top = `${this.titleBarOffset}px`;\r\n            const style = this.ui.container.style;\r\n            const width = Math.min(this.dimension.width * 0.62 /* golden cut */, QuickInputController.MAX_WIDTH);\r\n            style.width = width + 'px';\r\n            style.marginLeft = '-' + (width / 2) + 'px';\r\n            this.ui.inputBox.layout();\r\n            this.ui.list.layout(this.dimension && this.dimension.height * 0.4);\r\n        }\r\n    }\r\n    applyStyles(styles) {\r\n        this.styles = styles;\r\n        this.updateStyles();\r\n    }\r\n    updateStyles() {\r\n        if (this.ui) {\r\n            const { quickInputTitleBackground, quickInputBackground, quickInputForeground, contrastBorder, widgetShadow, } = this.styles.widget;\r\n            this.ui.titleBar.style.backgroundColor = quickInputTitleBackground ? quickInputTitleBackground.toString() : '';\r\n            this.ui.container.style.backgroundColor = quickInputBackground ? quickInputBackground.toString() : '';\r\n            this.ui.container.style.color = quickInputForeground ? quickInputForeground.toString() : '';\r\n            this.ui.container.style.border = contrastBorder ? `1px solid ${contrastBorder}` : '';\r\n            this.ui.container.style.boxShadow = widgetShadow ? `0 0 8px 2px ${widgetShadow}` : '';\r\n            this.ui.inputBox.style(this.styles.inputBox);\r\n            this.ui.count.style(this.styles.countBadge);\r\n            this.ui.ok.style(this.styles.button);\r\n            this.ui.customButton.style(this.styles.button);\r\n            this.ui.progressBar.style(this.styles.progressBar);\r\n            this.ui.list.style(this.styles.list);\r\n            const content = [];\r\n            if (this.styles.list.listInactiveFocusForeground) {\r\n                content.push(`.monaco-list .monaco-list-row.focused { color:  ${this.styles.list.listInactiveFocusForeground}; }`);\r\n                content.push(`.monaco-list .monaco-list-row.focused:hover { color:  ${this.styles.list.listInactiveFocusForeground}; }`); // overwrite :hover style in this case!\r\n            }\r\n            if (this.styles.list.pickerGroupBorder) {\r\n                content.push(`.quick-input-list .quick-input-list-entry { border-top-color:  ${this.styles.list.pickerGroupBorder}; }`);\r\n            }\r\n            if (this.styles.list.pickerGroupForeground) {\r\n                content.push(`.quick-input-list .quick-input-list-separator { color:  ${this.styles.list.pickerGroupForeground}; }`);\r\n            }\r\n            const newStyles = content.join('\\n');\r\n            if (newStyles !== this.ui.styleSheet.textContent) {\r\n                this.ui.styleSheet.textContent = newStyles;\r\n            }\r\n        }\r\n    }\r\n}\r\nQuickInputController.MAX_WIDTH = 600; // Max total width of quick input widget\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}