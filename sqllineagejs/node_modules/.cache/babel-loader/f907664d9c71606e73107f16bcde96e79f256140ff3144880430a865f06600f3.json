{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { CancellationToken } from '../../../base/common/cancellation.js';\nimport { illegalArgument } from '../../../base/common/errors.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { Range } from '../../common/core/range.js';\nimport { ColorProviderRegistry } from '../../common/modes.js';\nimport { IModelService } from '../../common/services/modelService.js';\nimport { CommandsRegistry } from '../../../platform/commands/common/commands.js';\nexport function getColors(model, token) {\n  const colors = [];\n  const providers = ColorProviderRegistry.ordered(model).reverse();\n  const promises = providers.map(provider => Promise.resolve(provider.provideDocumentColors(model, token)).then(result => {\n    if (Array.isArray(result)) {\n      for (let colorInfo of result) {\n        colors.push({\n          colorInfo,\n          provider\n        });\n      }\n    }\n  }));\n  return Promise.all(promises).then(() => colors);\n}\nexport function getColorPresentations(model, colorInfo, provider, token) {\n  return Promise.resolve(provider.provideColorPresentations(model, colorInfo, token));\n}\nCommandsRegistry.registerCommand('_executeDocumentColorProvider', function (accessor) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n  const [resource] = args;\n  if (!(resource instanceof URI)) {\n    throw illegalArgument();\n  }\n  const model = accessor.get(IModelService).getModel(resource);\n  if (!model) {\n    throw illegalArgument();\n  }\n  const rawCIs = [];\n  const providers = ColorProviderRegistry.ordered(model).reverse();\n  const promises = providers.map(provider => Promise.resolve(provider.provideDocumentColors(model, CancellationToken.None)).then(result => {\n    if (Array.isArray(result)) {\n      for (let ci of result) {\n        rawCIs.push({\n          range: ci.range,\n          color: [ci.color.red, ci.color.green, ci.color.blue, ci.color.alpha]\n        });\n      }\n    }\n  }));\n  return Promise.all(promises).then(() => rawCIs);\n});\nCommandsRegistry.registerCommand('_executeColorPresentationProvider', function (accessor) {\n  for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    args[_key2 - 1] = arguments[_key2];\n  }\n  const [color, context] = args;\n  const {\n    uri,\n    range\n  } = context;\n  if (!(uri instanceof URI) || !Array.isArray(color) || color.length !== 4 || !Range.isIRange(range)) {\n    throw illegalArgument();\n  }\n  const [red, green, blue, alpha] = color;\n  const model = accessor.get(IModelService).getModel(uri);\n  if (!model) {\n    throw illegalArgument();\n  }\n  const colorInfo = {\n    range,\n    color: {\n      red,\n      green,\n      blue,\n      alpha\n    }\n  };\n  const presentations = [];\n  const providers = ColorProviderRegistry.ordered(model).reverse();\n  const promises = providers.map(provider => Promise.resolve(provider.provideColorPresentations(model, colorInfo, CancellationToken.None)).then(result => {\n    if (Array.isArray(result)) {\n      presentations.push(...result);\n    }\n  }));\n  return Promise.all(promises).then(() => presentations);\n});","map":{"version":3,"names":["CancellationToken","illegalArgument","URI","Range","ColorProviderRegistry","IModelService","CommandsRegistry","getColors","model","token","colors","providers","ordered","reverse","promises","map","provider","Promise","resolve","provideDocumentColors","then","result","Array","isArray","colorInfo","push","all","getColorPresentations","provideColorPresentations","registerCommand","accessor","_len","arguments","length","args","_key","resource","get","getModel","rawCIs","None","ci","range","color","red","green","blue","alpha","_len2","_key2","context","uri","isIRange","presentations"],"sources":["C:/Users/Administrator/Desktop/sqllineage-master/sqllineagejs/node_modules/monaco-editor/esm/vs/editor/contrib/colorPicker/color.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { CancellationToken } from '../../../base/common/cancellation.js';\r\nimport { illegalArgument } from '../../../base/common/errors.js';\r\nimport { URI } from '../../../base/common/uri.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { ColorProviderRegistry } from '../../common/modes.js';\r\nimport { IModelService } from '../../common/services/modelService.js';\r\nimport { CommandsRegistry } from '../../../platform/commands/common/commands.js';\r\nexport function getColors(model, token) {\r\n    const colors = [];\r\n    const providers = ColorProviderRegistry.ordered(model).reverse();\r\n    const promises = providers.map(provider => Promise.resolve(provider.provideDocumentColors(model, token)).then(result => {\r\n        if (Array.isArray(result)) {\r\n            for (let colorInfo of result) {\r\n                colors.push({ colorInfo, provider });\r\n            }\r\n        }\r\n    }));\r\n    return Promise.all(promises).then(() => colors);\r\n}\r\nexport function getColorPresentations(model, colorInfo, provider, token) {\r\n    return Promise.resolve(provider.provideColorPresentations(model, colorInfo, token));\r\n}\r\nCommandsRegistry.registerCommand('_executeDocumentColorProvider', function (accessor, ...args) {\r\n    const [resource] = args;\r\n    if (!(resource instanceof URI)) {\r\n        throw illegalArgument();\r\n    }\r\n    const model = accessor.get(IModelService).getModel(resource);\r\n    if (!model) {\r\n        throw illegalArgument();\r\n    }\r\n    const rawCIs = [];\r\n    const providers = ColorProviderRegistry.ordered(model).reverse();\r\n    const promises = providers.map(provider => Promise.resolve(provider.provideDocumentColors(model, CancellationToken.None)).then(result => {\r\n        if (Array.isArray(result)) {\r\n            for (let ci of result) {\r\n                rawCIs.push({ range: ci.range, color: [ci.color.red, ci.color.green, ci.color.blue, ci.color.alpha] });\r\n            }\r\n        }\r\n    }));\r\n    return Promise.all(promises).then(() => rawCIs);\r\n});\r\nCommandsRegistry.registerCommand('_executeColorPresentationProvider', function (accessor, ...args) {\r\n    const [color, context] = args;\r\n    const { uri, range } = context;\r\n    if (!(uri instanceof URI) || !Array.isArray(color) || color.length !== 4 || !Range.isIRange(range)) {\r\n        throw illegalArgument();\r\n    }\r\n    const [red, green, blue, alpha] = color;\r\n    const model = accessor.get(IModelService).getModel(uri);\r\n    if (!model) {\r\n        throw illegalArgument();\r\n    }\r\n    const colorInfo = {\r\n        range,\r\n        color: { red, green, blue, alpha }\r\n    };\r\n    const presentations = [];\r\n    const providers = ColorProviderRegistry.ordered(model).reverse();\r\n    const promises = providers.map(provider => Promise.resolve(provider.provideColorPresentations(model, colorInfo, CancellationToken.None)).then(result => {\r\n        if (Array.isArray(result)) {\r\n            presentations.push(...result);\r\n        }\r\n    }));\r\n    return Promise.all(promises).then(() => presentations);\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}