{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../../nls.js';\nimport { alert } from '../../../base/browser/ui/aria/aria.js';\nimport { EditorAction, registerEditorAction } from '../../browser/editorExtensions.js';\nimport { TabFocus } from '../../common/config/commonEditorConfig.js';\nexport class ToggleTabFocusModeAction extends EditorAction {\n  constructor() {\n    super({\n      id: ToggleTabFocusModeAction.ID,\n      label: nls.localize({\n        key: 'toggle.tabMovesFocus',\n        comment: ['Turn on/off use of tab key for moving focus around VS Code']\n      }, \"Toggle Tab Key Moves Focus\"),\n      alias: 'Toggle Tab Key Moves Focus',\n      precondition: undefined,\n      kbOpts: {\n        kbExpr: null,\n        primary: 2048 /* CtrlCmd */ | 43 /* KEY_M */,\n        mac: {\n          primary: 256 /* WinCtrl */ | 1024 /* Shift */ | 43 /* KEY_M */\n        },\n        weight: 100 /* EditorContrib */\n      }\n    });\n  }\n\n  run(accessor, editor) {\n    const oldValue = TabFocus.getTabFocusMode();\n    const newValue = !oldValue;\n    TabFocus.setTabFocusMode(newValue);\n    if (newValue) {\n      alert(nls.localize('toggle.tabMovesFocus.on', \"Pressing Tab will now move focus to the next focusable element\"));\n    } else {\n      alert(nls.localize('toggle.tabMovesFocus.off', \"Pressing Tab will now insert the tab character\"));\n    }\n  }\n}\nToggleTabFocusModeAction.ID = 'editor.action.toggleTabFocusMode';\nregisterEditorAction(ToggleTabFocusModeAction);","map":{"version":3,"names":["nls","alert","EditorAction","registerEditorAction","TabFocus","ToggleTabFocusModeAction","constructor","id","ID","label","localize","key","comment","alias","precondition","undefined","kbOpts","kbExpr","primary","mac","weight","run","accessor","editor","oldValue","getTabFocusMode","newValue","setTabFocusMode"],"sources":["C:/Users/Administrator/Desktop/sqllineage-master/sqllineagejs/node_modules/monaco-editor/esm/vs/editor/contrib/toggleTabFocusMode/toggleTabFocusMode.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as nls from '../../../nls.js';\r\nimport { alert } from '../../../base/browser/ui/aria/aria.js';\r\nimport { EditorAction, registerEditorAction } from '../../browser/editorExtensions.js';\r\nimport { TabFocus } from '../../common/config/commonEditorConfig.js';\r\nexport class ToggleTabFocusModeAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: ToggleTabFocusModeAction.ID,\r\n            label: nls.localize({ key: 'toggle.tabMovesFocus', comment: ['Turn on/off use of tab key for moving focus around VS Code'] }, \"Toggle Tab Key Moves Focus\"),\r\n            alias: 'Toggle Tab Key Moves Focus',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: null,\r\n                primary: 2048 /* CtrlCmd */ | 43 /* KEY_M */,\r\n                mac: { primary: 256 /* WinCtrl */ | 1024 /* Shift */ | 43 /* KEY_M */ },\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        const oldValue = TabFocus.getTabFocusMode();\r\n        const newValue = !oldValue;\r\n        TabFocus.setTabFocusMode(newValue);\r\n        if (newValue) {\r\n            alert(nls.localize('toggle.tabMovesFocus.on', \"Pressing Tab will now move focus to the next focusable element\"));\r\n        }\r\n        else {\r\n            alert(nls.localize('toggle.tabMovesFocus.off', \"Pressing Tab will now insert the tab character\"));\r\n        }\r\n    }\r\n}\r\nToggleTabFocusModeAction.ID = 'editor.action.toggleTabFocusMode';\r\nregisterEditorAction(ToggleTabFocusModeAction);\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAO,KAAKA,GAAG,MAAM,iBAAiB;AACtC,SAASC,KAAK,QAAQ,uCAAuC;AAC7D,SAASC,YAAY,EAAEC,oBAAoB,QAAQ,mCAAmC;AACtF,SAASC,QAAQ,QAAQ,2CAA2C;AACpE,OAAO,MAAMC,wBAAwB,SAASH,YAAY,CAAC;EACvDI,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC;MACFC,EAAE,EAAEF,wBAAwB,CAACG,EAAE;MAC/BC,KAAK,EAAET,GAAG,CAACU,QAAQ,CAAC;QAAEC,GAAG,EAAE,sBAAsB;QAAEC,OAAO,EAAE,CAAC,4DAA4D;MAAE,CAAC,EAAE,4BAA4B,CAAC;MAC3JC,KAAK,EAAE,4BAA4B;MACnCC,YAAY,EAAEC,SAAS;MACvBC,MAAM,EAAE;QACJC,MAAM,EAAE,IAAI;QACZC,OAAO,EAAE,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACjCC,GAAG,EAAE;UAAED,OAAO,EAAE,GAAG,CAAC,gBAAgB,IAAI,CAAC,cAAc,EAAE,CAAC;QAAY,CAAC;QACvEE,MAAM,EAAE,GAAG,CAAC;MAChB;IACJ,CAAC,CAAC;EACN;;EACAC,GAAGA,CAACC,QAAQ,EAAEC,MAAM,EAAE;IAClB,MAAMC,QAAQ,GAAGpB,QAAQ,CAACqB,eAAe,CAAC,CAAC;IAC3C,MAAMC,QAAQ,GAAG,CAACF,QAAQ;IAC1BpB,QAAQ,CAACuB,eAAe,CAACD,QAAQ,CAAC;IAClC,IAAIA,QAAQ,EAAE;MACVzB,KAAK,CAACD,GAAG,CAACU,QAAQ,CAAC,yBAAyB,EAAE,gEAAgE,CAAC,CAAC;IACpH,CAAC,MACI;MACDT,KAAK,CAACD,GAAG,CAACU,QAAQ,CAAC,0BAA0B,EAAE,gDAAgD,CAAC,CAAC;IACrG;EACJ;AACJ;AACAL,wBAAwB,CAACG,EAAE,GAAG,kCAAkC;AAChEL,oBAAoB,CAACE,wBAAwB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}