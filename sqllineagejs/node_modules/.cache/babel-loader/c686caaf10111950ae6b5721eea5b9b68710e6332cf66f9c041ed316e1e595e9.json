{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport './findInput.css';\nimport * as nls from '../../../../nls.js';\nimport * as dom from '../../dom.js';\nimport { HistoryInputBox } from '../inputbox/inputBox.js';\nimport { Widget } from '../widget.js';\nimport { Emitter } from '../../../common/event.js';\nimport { Checkbox } from '../checkbox/checkbox.js';\nimport { Codicon } from '../../../common/codicons.js';\nconst NLS_DEFAULT_LABEL = nls.localize('defaultLabel', \"input\");\nconst NLS_PRESERVE_CASE_LABEL = nls.localize('label.preserveCaseCheckbox', \"Preserve Case\");\nexport class PreserveCaseCheckbox extends Checkbox {\n  constructor(opts) {\n    super({\n      // TODO: does this need its own icon?\n      icon: Codicon.preserveCase,\n      title: NLS_PRESERVE_CASE_LABEL + opts.appendTitle,\n      isChecked: opts.isChecked,\n      inputActiveOptionBorder: opts.inputActiveOptionBorder,\n      inputActiveOptionForeground: opts.inputActiveOptionForeground,\n      inputActiveOptionBackground: opts.inputActiveOptionBackground\n    });\n  }\n}\nexport class ReplaceInput extends Widget {\n  constructor(parent, contextViewProvider, _showOptionButtons, options) {\n    super();\n    this._showOptionButtons = _showOptionButtons;\n    this.fixFocusOnOptionClickEnabled = true;\n    this.cachedOptionsWidth = 0;\n    this._onDidOptionChange = this._register(new Emitter());\n    this.onDidOptionChange = this._onDidOptionChange.event;\n    this._onKeyDown = this._register(new Emitter());\n    this.onKeyDown = this._onKeyDown.event;\n    this._onMouseDown = this._register(new Emitter());\n    this._onInput = this._register(new Emitter());\n    this._onKeyUp = this._register(new Emitter());\n    this._onPreserveCaseKeyDown = this._register(new Emitter());\n    this.onPreserveCaseKeyDown = this._onPreserveCaseKeyDown.event;\n    this.contextViewProvider = contextViewProvider;\n    this.placeholder = options.placeholder || '';\n    this.validation = options.validation;\n    this.label = options.label || NLS_DEFAULT_LABEL;\n    this.inputActiveOptionBorder = options.inputActiveOptionBorder;\n    this.inputActiveOptionForeground = options.inputActiveOptionForeground;\n    this.inputActiveOptionBackground = options.inputActiveOptionBackground;\n    this.inputBackground = options.inputBackground;\n    this.inputForeground = options.inputForeground;\n    this.inputBorder = options.inputBorder;\n    this.inputValidationInfoBorder = options.inputValidationInfoBorder;\n    this.inputValidationInfoBackground = options.inputValidationInfoBackground;\n    this.inputValidationInfoForeground = options.inputValidationInfoForeground;\n    this.inputValidationWarningBorder = options.inputValidationWarningBorder;\n    this.inputValidationWarningBackground = options.inputValidationWarningBackground;\n    this.inputValidationWarningForeground = options.inputValidationWarningForeground;\n    this.inputValidationErrorBorder = options.inputValidationErrorBorder;\n    this.inputValidationErrorBackground = options.inputValidationErrorBackground;\n    this.inputValidationErrorForeground = options.inputValidationErrorForeground;\n    const appendPreserveCaseLabel = options.appendPreserveCaseLabel || '';\n    const history = options.history || [];\n    const flexibleHeight = !!options.flexibleHeight;\n    const flexibleWidth = !!options.flexibleWidth;\n    const flexibleMaxHeight = options.flexibleMaxHeight;\n    this.domNode = document.createElement('div');\n    this.domNode.classList.add('monaco-findInput');\n    this.inputBox = this._register(new HistoryInputBox(this.domNode, this.contextViewProvider, {\n      ariaLabel: this.label || '',\n      placeholder: this.placeholder || '',\n      validationOptions: {\n        validation: this.validation\n      },\n      inputBackground: this.inputBackground,\n      inputForeground: this.inputForeground,\n      inputBorder: this.inputBorder,\n      inputValidationInfoBackground: this.inputValidationInfoBackground,\n      inputValidationInfoForeground: this.inputValidationInfoForeground,\n      inputValidationInfoBorder: this.inputValidationInfoBorder,\n      inputValidationWarningBackground: this.inputValidationWarningBackground,\n      inputValidationWarningForeground: this.inputValidationWarningForeground,\n      inputValidationWarningBorder: this.inputValidationWarningBorder,\n      inputValidationErrorBackground: this.inputValidationErrorBackground,\n      inputValidationErrorForeground: this.inputValidationErrorForeground,\n      inputValidationErrorBorder: this.inputValidationErrorBorder,\n      history,\n      flexibleHeight,\n      flexibleWidth,\n      flexibleMaxHeight\n    }));\n    this.preserveCase = this._register(new PreserveCaseCheckbox({\n      appendTitle: appendPreserveCaseLabel,\n      isChecked: false,\n      inputActiveOptionBorder: this.inputActiveOptionBorder,\n      inputActiveOptionForeground: this.inputActiveOptionForeground,\n      inputActiveOptionBackground: this.inputActiveOptionBackground\n    }));\n    this._register(this.preserveCase.onChange(viaKeyboard => {\n      this._onDidOptionChange.fire(viaKeyboard);\n      if (!viaKeyboard && this.fixFocusOnOptionClickEnabled) {\n        this.inputBox.focus();\n      }\n      this.validate();\n    }));\n    this._register(this.preserveCase.onKeyDown(e => {\n      this._onPreserveCaseKeyDown.fire(e);\n    }));\n    if (this._showOptionButtons) {\n      this.cachedOptionsWidth = this.preserveCase.width();\n    } else {\n      this.cachedOptionsWidth = 0;\n    }\n    // Arrow-Key support to navigate between options\n    let indexes = [this.preserveCase.domNode];\n    this.onkeydown(this.domNode, event => {\n      if (event.equals(15 /* LeftArrow */) || event.equals(17 /* RightArrow */) || event.equals(9 /* Escape */)) {\n        let index = indexes.indexOf(document.activeElement);\n        if (index >= 0) {\n          let newIndex = -1;\n          if (event.equals(17 /* RightArrow */)) {\n            newIndex = (index + 1) % indexes.length;\n          } else if (event.equals(15 /* LeftArrow */)) {\n            if (index === 0) {\n              newIndex = indexes.length - 1;\n            } else {\n              newIndex = index - 1;\n            }\n          }\n          if (event.equals(9 /* Escape */)) {\n            indexes[index].blur();\n            this.inputBox.focus();\n          } else if (newIndex >= 0) {\n            indexes[newIndex].focus();\n          }\n          dom.EventHelper.stop(event, true);\n        }\n      }\n    });\n    let controls = document.createElement('div');\n    controls.className = 'controls';\n    controls.style.display = this._showOptionButtons ? 'block' : 'none';\n    controls.appendChild(this.preserveCase.domNode);\n    this.domNode.appendChild(controls);\n    if (parent) {\n      parent.appendChild(this.domNode);\n    }\n    this.onkeydown(this.inputBox.inputElement, e => this._onKeyDown.fire(e));\n    this.onkeyup(this.inputBox.inputElement, e => this._onKeyUp.fire(e));\n    this.oninput(this.inputBox.inputElement, e => this._onInput.fire());\n    this.onmousedown(this.inputBox.inputElement, e => this._onMouseDown.fire(e));\n  }\n  enable() {\n    this.domNode.classList.remove('disabled');\n    this.inputBox.enable();\n    this.preserveCase.enable();\n  }\n  disable() {\n    this.domNode.classList.add('disabled');\n    this.inputBox.disable();\n    this.preserveCase.disable();\n  }\n  setEnabled(enabled) {\n    if (enabled) {\n      this.enable();\n    } else {\n      this.disable();\n    }\n  }\n  style(styles) {\n    this.inputActiveOptionBorder = styles.inputActiveOptionBorder;\n    this.inputActiveOptionForeground = styles.inputActiveOptionForeground;\n    this.inputActiveOptionBackground = styles.inputActiveOptionBackground;\n    this.inputBackground = styles.inputBackground;\n    this.inputForeground = styles.inputForeground;\n    this.inputBorder = styles.inputBorder;\n    this.inputValidationInfoBackground = styles.inputValidationInfoBackground;\n    this.inputValidationInfoForeground = styles.inputValidationInfoForeground;\n    this.inputValidationInfoBorder = styles.inputValidationInfoBorder;\n    this.inputValidationWarningBackground = styles.inputValidationWarningBackground;\n    this.inputValidationWarningForeground = styles.inputValidationWarningForeground;\n    this.inputValidationWarningBorder = styles.inputValidationWarningBorder;\n    this.inputValidationErrorBackground = styles.inputValidationErrorBackground;\n    this.inputValidationErrorForeground = styles.inputValidationErrorForeground;\n    this.inputValidationErrorBorder = styles.inputValidationErrorBorder;\n    this.applyStyles();\n  }\n  applyStyles() {\n    if (this.domNode) {\n      const checkBoxStyles = {\n        inputActiveOptionBorder: this.inputActiveOptionBorder,\n        inputActiveOptionForeground: this.inputActiveOptionForeground,\n        inputActiveOptionBackground: this.inputActiveOptionBackground\n      };\n      this.preserveCase.style(checkBoxStyles);\n      const inputBoxStyles = {\n        inputBackground: this.inputBackground,\n        inputForeground: this.inputForeground,\n        inputBorder: this.inputBorder,\n        inputValidationInfoBackground: this.inputValidationInfoBackground,\n        inputValidationInfoForeground: this.inputValidationInfoForeground,\n        inputValidationInfoBorder: this.inputValidationInfoBorder,\n        inputValidationWarningBackground: this.inputValidationWarningBackground,\n        inputValidationWarningForeground: this.inputValidationWarningForeground,\n        inputValidationWarningBorder: this.inputValidationWarningBorder,\n        inputValidationErrorBackground: this.inputValidationErrorBackground,\n        inputValidationErrorForeground: this.inputValidationErrorForeground,\n        inputValidationErrorBorder: this.inputValidationErrorBorder\n      };\n      this.inputBox.style(inputBoxStyles);\n    }\n  }\n  select() {\n    this.inputBox.select();\n  }\n  focus() {\n    this.inputBox.focus();\n  }\n  getPreserveCase() {\n    return this.preserveCase.checked;\n  }\n  setPreserveCase(value) {\n    this.preserveCase.checked = value;\n  }\n  focusOnPreserve() {\n    this.preserveCase.focus();\n  }\n  validate() {\n    if (this.inputBox) {\n      this.inputBox.validate();\n    }\n  }\n  set width(newWidth) {\n    this.inputBox.paddingRight = this.cachedOptionsWidth;\n    this.inputBox.width = newWidth;\n    this.domNode.style.width = newWidth + 'px';\n  }\n  dispose() {\n    super.dispose();\n  }\n}","map":{"version":3,"names":["nls","dom","HistoryInputBox","Widget","Emitter","Checkbox","Codicon","NLS_DEFAULT_LABEL","localize","NLS_PRESERVE_CASE_LABEL","PreserveCaseCheckbox","constructor","opts","icon","preserveCase","title","appendTitle","isChecked","inputActiveOptionBorder","inputActiveOptionForeground","inputActiveOptionBackground","ReplaceInput","parent","contextViewProvider","_showOptionButtons","options","fixFocusOnOptionClickEnabled","cachedOptionsWidth","_onDidOptionChange","_register","onDidOptionChange","event","_onKeyDown","onKeyDown","_onMouseDown","_onInput","_onKeyUp","_onPreserveCaseKeyDown","onPreserveCaseKeyDown","placeholder","validation","label","inputBackground","inputForeground","inputBorder","inputValidationInfoBorder","inputValidationInfoBackground","inputValidationInfoForeground","inputValidationWarningBorder","inputValidationWarningBackground","inputValidationWarningForeground","inputValidationErrorBorder","inputValidationErrorBackground","inputValidationErrorForeground","appendPreserveCaseLabel","history","flexibleHeight","flexibleWidth","flexibleMaxHeight","domNode","document","createElement","classList","add","inputBox","ariaLabel","validationOptions","onChange","viaKeyboard","fire","focus","validate","e","width","indexes","onkeydown","equals","index","indexOf","activeElement","newIndex","length","blur","EventHelper","stop","controls","className","style","display","appendChild","inputElement","onkeyup","oninput","onmousedown","enable","remove","disable","setEnabled","enabled","styles","applyStyles","checkBoxStyles","inputBoxStyles","select","getPreserveCase","checked","setPreserveCase","value","focusOnPreserve","newWidth","paddingRight","dispose"],"sources":["C:/Users/Administrator/Desktop/sqllineage-master/sqllineagejs/node_modules/monaco-editor/esm/vs/base/browser/ui/findinput/replaceInput.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport './findInput.css';\r\nimport * as nls from '../../../../nls.js';\r\nimport * as dom from '../../dom.js';\r\nimport { HistoryInputBox } from '../inputbox/inputBox.js';\r\nimport { Widget } from '../widget.js';\r\nimport { Emitter } from '../../../common/event.js';\r\nimport { Checkbox } from '../checkbox/checkbox.js';\r\nimport { Codicon } from '../../../common/codicons.js';\r\nconst NLS_DEFAULT_LABEL = nls.localize('defaultLabel', \"input\");\r\nconst NLS_PRESERVE_CASE_LABEL = nls.localize('label.preserveCaseCheckbox', \"Preserve Case\");\r\nexport class PreserveCaseCheckbox extends Checkbox {\r\n    constructor(opts) {\r\n        super({\r\n            // TODO: does this need its own icon?\r\n            icon: Codicon.preserveCase,\r\n            title: NLS_PRESERVE_CASE_LABEL + opts.appendTitle,\r\n            isChecked: opts.isChecked,\r\n            inputActiveOptionBorder: opts.inputActiveOptionBorder,\r\n            inputActiveOptionForeground: opts.inputActiveOptionForeground,\r\n            inputActiveOptionBackground: opts.inputActiveOptionBackground\r\n        });\r\n    }\r\n}\r\nexport class ReplaceInput extends Widget {\r\n    constructor(parent, contextViewProvider, _showOptionButtons, options) {\r\n        super();\r\n        this._showOptionButtons = _showOptionButtons;\r\n        this.fixFocusOnOptionClickEnabled = true;\r\n        this.cachedOptionsWidth = 0;\r\n        this._onDidOptionChange = this._register(new Emitter());\r\n        this.onDidOptionChange = this._onDidOptionChange.event;\r\n        this._onKeyDown = this._register(new Emitter());\r\n        this.onKeyDown = this._onKeyDown.event;\r\n        this._onMouseDown = this._register(new Emitter());\r\n        this._onInput = this._register(new Emitter());\r\n        this._onKeyUp = this._register(new Emitter());\r\n        this._onPreserveCaseKeyDown = this._register(new Emitter());\r\n        this.onPreserveCaseKeyDown = this._onPreserveCaseKeyDown.event;\r\n        this.contextViewProvider = contextViewProvider;\r\n        this.placeholder = options.placeholder || '';\r\n        this.validation = options.validation;\r\n        this.label = options.label || NLS_DEFAULT_LABEL;\r\n        this.inputActiveOptionBorder = options.inputActiveOptionBorder;\r\n        this.inputActiveOptionForeground = options.inputActiveOptionForeground;\r\n        this.inputActiveOptionBackground = options.inputActiveOptionBackground;\r\n        this.inputBackground = options.inputBackground;\r\n        this.inputForeground = options.inputForeground;\r\n        this.inputBorder = options.inputBorder;\r\n        this.inputValidationInfoBorder = options.inputValidationInfoBorder;\r\n        this.inputValidationInfoBackground = options.inputValidationInfoBackground;\r\n        this.inputValidationInfoForeground = options.inputValidationInfoForeground;\r\n        this.inputValidationWarningBorder = options.inputValidationWarningBorder;\r\n        this.inputValidationWarningBackground = options.inputValidationWarningBackground;\r\n        this.inputValidationWarningForeground = options.inputValidationWarningForeground;\r\n        this.inputValidationErrorBorder = options.inputValidationErrorBorder;\r\n        this.inputValidationErrorBackground = options.inputValidationErrorBackground;\r\n        this.inputValidationErrorForeground = options.inputValidationErrorForeground;\r\n        const appendPreserveCaseLabel = options.appendPreserveCaseLabel || '';\r\n        const history = options.history || [];\r\n        const flexibleHeight = !!options.flexibleHeight;\r\n        const flexibleWidth = !!options.flexibleWidth;\r\n        const flexibleMaxHeight = options.flexibleMaxHeight;\r\n        this.domNode = document.createElement('div');\r\n        this.domNode.classList.add('monaco-findInput');\r\n        this.inputBox = this._register(new HistoryInputBox(this.domNode, this.contextViewProvider, {\r\n            ariaLabel: this.label || '',\r\n            placeholder: this.placeholder || '',\r\n            validationOptions: {\r\n                validation: this.validation\r\n            },\r\n            inputBackground: this.inputBackground,\r\n            inputForeground: this.inputForeground,\r\n            inputBorder: this.inputBorder,\r\n            inputValidationInfoBackground: this.inputValidationInfoBackground,\r\n            inputValidationInfoForeground: this.inputValidationInfoForeground,\r\n            inputValidationInfoBorder: this.inputValidationInfoBorder,\r\n            inputValidationWarningBackground: this.inputValidationWarningBackground,\r\n            inputValidationWarningForeground: this.inputValidationWarningForeground,\r\n            inputValidationWarningBorder: this.inputValidationWarningBorder,\r\n            inputValidationErrorBackground: this.inputValidationErrorBackground,\r\n            inputValidationErrorForeground: this.inputValidationErrorForeground,\r\n            inputValidationErrorBorder: this.inputValidationErrorBorder,\r\n            history,\r\n            flexibleHeight,\r\n            flexibleWidth,\r\n            flexibleMaxHeight\r\n        }));\r\n        this.preserveCase = this._register(new PreserveCaseCheckbox({\r\n            appendTitle: appendPreserveCaseLabel,\r\n            isChecked: false,\r\n            inputActiveOptionBorder: this.inputActiveOptionBorder,\r\n            inputActiveOptionForeground: this.inputActiveOptionForeground,\r\n            inputActiveOptionBackground: this.inputActiveOptionBackground,\r\n        }));\r\n        this._register(this.preserveCase.onChange(viaKeyboard => {\r\n            this._onDidOptionChange.fire(viaKeyboard);\r\n            if (!viaKeyboard && this.fixFocusOnOptionClickEnabled) {\r\n                this.inputBox.focus();\r\n            }\r\n            this.validate();\r\n        }));\r\n        this._register(this.preserveCase.onKeyDown(e => {\r\n            this._onPreserveCaseKeyDown.fire(e);\r\n        }));\r\n        if (this._showOptionButtons) {\r\n            this.cachedOptionsWidth = this.preserveCase.width();\r\n        }\r\n        else {\r\n            this.cachedOptionsWidth = 0;\r\n        }\r\n        // Arrow-Key support to navigate between options\r\n        let indexes = [this.preserveCase.domNode];\r\n        this.onkeydown(this.domNode, (event) => {\r\n            if (event.equals(15 /* LeftArrow */) || event.equals(17 /* RightArrow */) || event.equals(9 /* Escape */)) {\r\n                let index = indexes.indexOf(document.activeElement);\r\n                if (index >= 0) {\r\n                    let newIndex = -1;\r\n                    if (event.equals(17 /* RightArrow */)) {\r\n                        newIndex = (index + 1) % indexes.length;\r\n                    }\r\n                    else if (event.equals(15 /* LeftArrow */)) {\r\n                        if (index === 0) {\r\n                            newIndex = indexes.length - 1;\r\n                        }\r\n                        else {\r\n                            newIndex = index - 1;\r\n                        }\r\n                    }\r\n                    if (event.equals(9 /* Escape */)) {\r\n                        indexes[index].blur();\r\n                        this.inputBox.focus();\r\n                    }\r\n                    else if (newIndex >= 0) {\r\n                        indexes[newIndex].focus();\r\n                    }\r\n                    dom.EventHelper.stop(event, true);\r\n                }\r\n            }\r\n        });\r\n        let controls = document.createElement('div');\r\n        controls.className = 'controls';\r\n        controls.style.display = this._showOptionButtons ? 'block' : 'none';\r\n        controls.appendChild(this.preserveCase.domNode);\r\n        this.domNode.appendChild(controls);\r\n        if (parent) {\r\n            parent.appendChild(this.domNode);\r\n        }\r\n        this.onkeydown(this.inputBox.inputElement, (e) => this._onKeyDown.fire(e));\r\n        this.onkeyup(this.inputBox.inputElement, (e) => this._onKeyUp.fire(e));\r\n        this.oninput(this.inputBox.inputElement, (e) => this._onInput.fire());\r\n        this.onmousedown(this.inputBox.inputElement, (e) => this._onMouseDown.fire(e));\r\n    }\r\n    enable() {\r\n        this.domNode.classList.remove('disabled');\r\n        this.inputBox.enable();\r\n        this.preserveCase.enable();\r\n    }\r\n    disable() {\r\n        this.domNode.classList.add('disabled');\r\n        this.inputBox.disable();\r\n        this.preserveCase.disable();\r\n    }\r\n    setEnabled(enabled) {\r\n        if (enabled) {\r\n            this.enable();\r\n        }\r\n        else {\r\n            this.disable();\r\n        }\r\n    }\r\n    style(styles) {\r\n        this.inputActiveOptionBorder = styles.inputActiveOptionBorder;\r\n        this.inputActiveOptionForeground = styles.inputActiveOptionForeground;\r\n        this.inputActiveOptionBackground = styles.inputActiveOptionBackground;\r\n        this.inputBackground = styles.inputBackground;\r\n        this.inputForeground = styles.inputForeground;\r\n        this.inputBorder = styles.inputBorder;\r\n        this.inputValidationInfoBackground = styles.inputValidationInfoBackground;\r\n        this.inputValidationInfoForeground = styles.inputValidationInfoForeground;\r\n        this.inputValidationInfoBorder = styles.inputValidationInfoBorder;\r\n        this.inputValidationWarningBackground = styles.inputValidationWarningBackground;\r\n        this.inputValidationWarningForeground = styles.inputValidationWarningForeground;\r\n        this.inputValidationWarningBorder = styles.inputValidationWarningBorder;\r\n        this.inputValidationErrorBackground = styles.inputValidationErrorBackground;\r\n        this.inputValidationErrorForeground = styles.inputValidationErrorForeground;\r\n        this.inputValidationErrorBorder = styles.inputValidationErrorBorder;\r\n        this.applyStyles();\r\n    }\r\n    applyStyles() {\r\n        if (this.domNode) {\r\n            const checkBoxStyles = {\r\n                inputActiveOptionBorder: this.inputActiveOptionBorder,\r\n                inputActiveOptionForeground: this.inputActiveOptionForeground,\r\n                inputActiveOptionBackground: this.inputActiveOptionBackground,\r\n            };\r\n            this.preserveCase.style(checkBoxStyles);\r\n            const inputBoxStyles = {\r\n                inputBackground: this.inputBackground,\r\n                inputForeground: this.inputForeground,\r\n                inputBorder: this.inputBorder,\r\n                inputValidationInfoBackground: this.inputValidationInfoBackground,\r\n                inputValidationInfoForeground: this.inputValidationInfoForeground,\r\n                inputValidationInfoBorder: this.inputValidationInfoBorder,\r\n                inputValidationWarningBackground: this.inputValidationWarningBackground,\r\n                inputValidationWarningForeground: this.inputValidationWarningForeground,\r\n                inputValidationWarningBorder: this.inputValidationWarningBorder,\r\n                inputValidationErrorBackground: this.inputValidationErrorBackground,\r\n                inputValidationErrorForeground: this.inputValidationErrorForeground,\r\n                inputValidationErrorBorder: this.inputValidationErrorBorder\r\n            };\r\n            this.inputBox.style(inputBoxStyles);\r\n        }\r\n    }\r\n    select() {\r\n        this.inputBox.select();\r\n    }\r\n    focus() {\r\n        this.inputBox.focus();\r\n    }\r\n    getPreserveCase() {\r\n        return this.preserveCase.checked;\r\n    }\r\n    setPreserveCase(value) {\r\n        this.preserveCase.checked = value;\r\n    }\r\n    focusOnPreserve() {\r\n        this.preserveCase.focus();\r\n    }\r\n    validate() {\r\n        if (this.inputBox) {\r\n            this.inputBox.validate();\r\n        }\r\n    }\r\n    set width(newWidth) {\r\n        this.inputBox.paddingRight = this.cachedOptionsWidth;\r\n        this.inputBox.width = newWidth;\r\n        this.domNode.style.width = newWidth + 'px';\r\n    }\r\n    dispose() {\r\n        super.dispose();\r\n    }\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAO,iBAAiB;AACxB,OAAO,KAAKA,GAAG,MAAM,oBAAoB;AACzC,OAAO,KAAKC,GAAG,MAAM,cAAc;AACnC,SAASC,eAAe,QAAQ,yBAAyB;AACzD,SAASC,MAAM,QAAQ,cAAc;AACrC,SAASC,OAAO,QAAQ,0BAA0B;AAClD,SAASC,QAAQ,QAAQ,yBAAyB;AAClD,SAASC,OAAO,QAAQ,6BAA6B;AACrD,MAAMC,iBAAiB,GAAGP,GAAG,CAACQ,QAAQ,CAAC,cAAc,EAAE,OAAO,CAAC;AAC/D,MAAMC,uBAAuB,GAAGT,GAAG,CAACQ,QAAQ,CAAC,4BAA4B,EAAE,eAAe,CAAC;AAC3F,OAAO,MAAME,oBAAoB,SAASL,QAAQ,CAAC;EAC/CM,WAAWA,CAACC,IAAI,EAAE;IACd,KAAK,CAAC;MACF;MACAC,IAAI,EAAEP,OAAO,CAACQ,YAAY;MAC1BC,KAAK,EAAEN,uBAAuB,GAAGG,IAAI,CAACI,WAAW;MACjDC,SAAS,EAAEL,IAAI,CAACK,SAAS;MACzBC,uBAAuB,EAAEN,IAAI,CAACM,uBAAuB;MACrDC,2BAA2B,EAAEP,IAAI,CAACO,2BAA2B;MAC7DC,2BAA2B,EAAER,IAAI,CAACQ;IACtC,CAAC,CAAC;EACN;AACJ;AACA,OAAO,MAAMC,YAAY,SAASlB,MAAM,CAAC;EACrCQ,WAAWA,CAACW,MAAM,EAAEC,mBAAmB,EAAEC,kBAAkB,EAAEC,OAAO,EAAE;IAClE,KAAK,CAAC,CAAC;IACP,IAAI,CAACD,kBAAkB,GAAGA,kBAAkB;IAC5C,IAAI,CAACE,4BAA4B,GAAG,IAAI;IACxC,IAAI,CAACC,kBAAkB,GAAG,CAAC;IAC3B,IAAI,CAACC,kBAAkB,GAAG,IAAI,CAACC,SAAS,CAAC,IAAIzB,OAAO,CAAC,CAAC,CAAC;IACvD,IAAI,CAAC0B,iBAAiB,GAAG,IAAI,CAACF,kBAAkB,CAACG,KAAK;IACtD,IAAI,CAACC,UAAU,GAAG,IAAI,CAACH,SAAS,CAAC,IAAIzB,OAAO,CAAC,CAAC,CAAC;IAC/C,IAAI,CAAC6B,SAAS,GAAG,IAAI,CAACD,UAAU,CAACD,KAAK;IACtC,IAAI,CAACG,YAAY,GAAG,IAAI,CAACL,SAAS,CAAC,IAAIzB,OAAO,CAAC,CAAC,CAAC;IACjD,IAAI,CAAC+B,QAAQ,GAAG,IAAI,CAACN,SAAS,CAAC,IAAIzB,OAAO,CAAC,CAAC,CAAC;IAC7C,IAAI,CAACgC,QAAQ,GAAG,IAAI,CAACP,SAAS,CAAC,IAAIzB,OAAO,CAAC,CAAC,CAAC;IAC7C,IAAI,CAACiC,sBAAsB,GAAG,IAAI,CAACR,SAAS,CAAC,IAAIzB,OAAO,CAAC,CAAC,CAAC;IAC3D,IAAI,CAACkC,qBAAqB,GAAG,IAAI,CAACD,sBAAsB,CAACN,KAAK;IAC9D,IAAI,CAACR,mBAAmB,GAAGA,mBAAmB;IAC9C,IAAI,CAACgB,WAAW,GAAGd,OAAO,CAACc,WAAW,IAAI,EAAE;IAC5C,IAAI,CAACC,UAAU,GAAGf,OAAO,CAACe,UAAU;IACpC,IAAI,CAACC,KAAK,GAAGhB,OAAO,CAACgB,KAAK,IAAIlC,iBAAiB;IAC/C,IAAI,CAACW,uBAAuB,GAAGO,OAAO,CAACP,uBAAuB;IAC9D,IAAI,CAACC,2BAA2B,GAAGM,OAAO,CAACN,2BAA2B;IACtE,IAAI,CAACC,2BAA2B,GAAGK,OAAO,CAACL,2BAA2B;IACtE,IAAI,CAACsB,eAAe,GAAGjB,OAAO,CAACiB,eAAe;IAC9C,IAAI,CAACC,eAAe,GAAGlB,OAAO,CAACkB,eAAe;IAC9C,IAAI,CAACC,WAAW,GAAGnB,OAAO,CAACmB,WAAW;IACtC,IAAI,CAACC,yBAAyB,GAAGpB,OAAO,CAACoB,yBAAyB;IAClE,IAAI,CAACC,6BAA6B,GAAGrB,OAAO,CAACqB,6BAA6B;IAC1E,IAAI,CAACC,6BAA6B,GAAGtB,OAAO,CAACsB,6BAA6B;IAC1E,IAAI,CAACC,4BAA4B,GAAGvB,OAAO,CAACuB,4BAA4B;IACxE,IAAI,CAACC,gCAAgC,GAAGxB,OAAO,CAACwB,gCAAgC;IAChF,IAAI,CAACC,gCAAgC,GAAGzB,OAAO,CAACyB,gCAAgC;IAChF,IAAI,CAACC,0BAA0B,GAAG1B,OAAO,CAAC0B,0BAA0B;IACpE,IAAI,CAACC,8BAA8B,GAAG3B,OAAO,CAAC2B,8BAA8B;IAC5E,IAAI,CAACC,8BAA8B,GAAG5B,OAAO,CAAC4B,8BAA8B;IAC5E,MAAMC,uBAAuB,GAAG7B,OAAO,CAAC6B,uBAAuB,IAAI,EAAE;IACrE,MAAMC,OAAO,GAAG9B,OAAO,CAAC8B,OAAO,IAAI,EAAE;IACrC,MAAMC,cAAc,GAAG,CAAC,CAAC/B,OAAO,CAAC+B,cAAc;IAC/C,MAAMC,aAAa,GAAG,CAAC,CAAChC,OAAO,CAACgC,aAAa;IAC7C,MAAMC,iBAAiB,GAAGjC,OAAO,CAACiC,iBAAiB;IACnD,IAAI,CAACC,OAAO,GAAGC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;IAC5C,IAAI,CAACF,OAAO,CAACG,SAAS,CAACC,GAAG,CAAC,kBAAkB,CAAC;IAC9C,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACnC,SAAS,CAAC,IAAI3B,eAAe,CAAC,IAAI,CAACyD,OAAO,EAAE,IAAI,CAACpC,mBAAmB,EAAE;MACvF0C,SAAS,EAAE,IAAI,CAACxB,KAAK,IAAI,EAAE;MAC3BF,WAAW,EAAE,IAAI,CAACA,WAAW,IAAI,EAAE;MACnC2B,iBAAiB,EAAE;QACf1B,UAAU,EAAE,IAAI,CAACA;MACrB,CAAC;MACDE,eAAe,EAAE,IAAI,CAACA,eAAe;MACrCC,eAAe,EAAE,IAAI,CAACA,eAAe;MACrCC,WAAW,EAAE,IAAI,CAACA,WAAW;MAC7BE,6BAA6B,EAAE,IAAI,CAACA,6BAA6B;MACjEC,6BAA6B,EAAE,IAAI,CAACA,6BAA6B;MACjEF,yBAAyB,EAAE,IAAI,CAACA,yBAAyB;MACzDI,gCAAgC,EAAE,IAAI,CAACA,gCAAgC;MACvEC,gCAAgC,EAAE,IAAI,CAACA,gCAAgC;MACvEF,4BAA4B,EAAE,IAAI,CAACA,4BAA4B;MAC/DI,8BAA8B,EAAE,IAAI,CAACA,8BAA8B;MACnEC,8BAA8B,EAAE,IAAI,CAACA,8BAA8B;MACnEF,0BAA0B,EAAE,IAAI,CAACA,0BAA0B;MAC3DI,OAAO;MACPC,cAAc;MACdC,aAAa;MACbC;IACJ,CAAC,CAAC,CAAC;IACH,IAAI,CAAC5C,YAAY,GAAG,IAAI,CAACe,SAAS,CAAC,IAAInB,oBAAoB,CAAC;MACxDM,WAAW,EAAEsC,uBAAuB;MACpCrC,SAAS,EAAE,KAAK;MAChBC,uBAAuB,EAAE,IAAI,CAACA,uBAAuB;MACrDC,2BAA2B,EAAE,IAAI,CAACA,2BAA2B;MAC7DC,2BAA2B,EAAE,IAAI,CAACA;IACtC,CAAC,CAAC,CAAC;IACH,IAAI,CAACS,SAAS,CAAC,IAAI,CAACf,YAAY,CAACqD,QAAQ,CAACC,WAAW,IAAI;MACrD,IAAI,CAACxC,kBAAkB,CAACyC,IAAI,CAACD,WAAW,CAAC;MACzC,IAAI,CAACA,WAAW,IAAI,IAAI,CAAC1C,4BAA4B,EAAE;QACnD,IAAI,CAACsC,QAAQ,CAACM,KAAK,CAAC,CAAC;MACzB;MACA,IAAI,CAACC,QAAQ,CAAC,CAAC;IACnB,CAAC,CAAC,CAAC;IACH,IAAI,CAAC1C,SAAS,CAAC,IAAI,CAACf,YAAY,CAACmB,SAAS,CAACuC,CAAC,IAAI;MAC5C,IAAI,CAACnC,sBAAsB,CAACgC,IAAI,CAACG,CAAC,CAAC;IACvC,CAAC,CAAC,CAAC;IACH,IAAI,IAAI,CAAChD,kBAAkB,EAAE;MACzB,IAAI,CAACG,kBAAkB,GAAG,IAAI,CAACb,YAAY,CAAC2D,KAAK,CAAC,CAAC;IACvD,CAAC,MACI;MACD,IAAI,CAAC9C,kBAAkB,GAAG,CAAC;IAC/B;IACA;IACA,IAAI+C,OAAO,GAAG,CAAC,IAAI,CAAC5D,YAAY,CAAC6C,OAAO,CAAC;IACzC,IAAI,CAACgB,SAAS,CAAC,IAAI,CAAChB,OAAO,EAAG5B,KAAK,IAAK;MACpC,IAAIA,KAAK,CAAC6C,MAAM,CAAC,EAAE,CAAC,eAAe,CAAC,IAAI7C,KAAK,CAAC6C,MAAM,CAAC,EAAE,CAAC,gBAAgB,CAAC,IAAI7C,KAAK,CAAC6C,MAAM,CAAC,CAAC,CAAC,YAAY,CAAC,EAAE;QACvG,IAAIC,KAAK,GAAGH,OAAO,CAACI,OAAO,CAAClB,QAAQ,CAACmB,aAAa,CAAC;QACnD,IAAIF,KAAK,IAAI,CAAC,EAAE;UACZ,IAAIG,QAAQ,GAAG,CAAC,CAAC;UACjB,IAAIjD,KAAK,CAAC6C,MAAM,CAAC,EAAE,CAAC,gBAAgB,CAAC,EAAE;YACnCI,QAAQ,GAAG,CAACH,KAAK,GAAG,CAAC,IAAIH,OAAO,CAACO,MAAM;UAC3C,CAAC,MACI,IAAIlD,KAAK,CAAC6C,MAAM,CAAC,EAAE,CAAC,eAAe,CAAC,EAAE;YACvC,IAAIC,KAAK,KAAK,CAAC,EAAE;cACbG,QAAQ,GAAGN,OAAO,CAACO,MAAM,GAAG,CAAC;YACjC,CAAC,MACI;cACDD,QAAQ,GAAGH,KAAK,GAAG,CAAC;YACxB;UACJ;UACA,IAAI9C,KAAK,CAAC6C,MAAM,CAAC,CAAC,CAAC,YAAY,CAAC,EAAE;YAC9BF,OAAO,CAACG,KAAK,CAAC,CAACK,IAAI,CAAC,CAAC;YACrB,IAAI,CAAClB,QAAQ,CAACM,KAAK,CAAC,CAAC;UACzB,CAAC,MACI,IAAIU,QAAQ,IAAI,CAAC,EAAE;YACpBN,OAAO,CAACM,QAAQ,CAAC,CAACV,KAAK,CAAC,CAAC;UAC7B;UACArE,GAAG,CAACkF,WAAW,CAACC,IAAI,CAACrD,KAAK,EAAE,IAAI,CAAC;QACrC;MACJ;IACJ,CAAC,CAAC;IACF,IAAIsD,QAAQ,GAAGzB,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;IAC5CwB,QAAQ,CAACC,SAAS,GAAG,UAAU;IAC/BD,QAAQ,CAACE,KAAK,CAACC,OAAO,GAAG,IAAI,CAAChE,kBAAkB,GAAG,OAAO,GAAG,MAAM;IACnE6D,QAAQ,CAACI,WAAW,CAAC,IAAI,CAAC3E,YAAY,CAAC6C,OAAO,CAAC;IAC/C,IAAI,CAACA,OAAO,CAAC8B,WAAW,CAACJ,QAAQ,CAAC;IAClC,IAAI/D,MAAM,EAAE;MACRA,MAAM,CAACmE,WAAW,CAAC,IAAI,CAAC9B,OAAO,CAAC;IACpC;IACA,IAAI,CAACgB,SAAS,CAAC,IAAI,CAACX,QAAQ,CAAC0B,YAAY,EAAGlB,CAAC,IAAK,IAAI,CAACxC,UAAU,CAACqC,IAAI,CAACG,CAAC,CAAC,CAAC;IAC1E,IAAI,CAACmB,OAAO,CAAC,IAAI,CAAC3B,QAAQ,CAAC0B,YAAY,EAAGlB,CAAC,IAAK,IAAI,CAACpC,QAAQ,CAACiC,IAAI,CAACG,CAAC,CAAC,CAAC;IACtE,IAAI,CAACoB,OAAO,CAAC,IAAI,CAAC5B,QAAQ,CAAC0B,YAAY,EAAGlB,CAAC,IAAK,IAAI,CAACrC,QAAQ,CAACkC,IAAI,CAAC,CAAC,CAAC;IACrE,IAAI,CAACwB,WAAW,CAAC,IAAI,CAAC7B,QAAQ,CAAC0B,YAAY,EAAGlB,CAAC,IAAK,IAAI,CAACtC,YAAY,CAACmC,IAAI,CAACG,CAAC,CAAC,CAAC;EAClF;EACAsB,MAAMA,CAAA,EAAG;IACL,IAAI,CAACnC,OAAO,CAACG,SAAS,CAACiC,MAAM,CAAC,UAAU,CAAC;IACzC,IAAI,CAAC/B,QAAQ,CAAC8B,MAAM,CAAC,CAAC;IACtB,IAAI,CAAChF,YAAY,CAACgF,MAAM,CAAC,CAAC;EAC9B;EACAE,OAAOA,CAAA,EAAG;IACN,IAAI,CAACrC,OAAO,CAACG,SAAS,CAACC,GAAG,CAAC,UAAU,CAAC;IACtC,IAAI,CAACC,QAAQ,CAACgC,OAAO,CAAC,CAAC;IACvB,IAAI,CAAClF,YAAY,CAACkF,OAAO,CAAC,CAAC;EAC/B;EACAC,UAAUA,CAACC,OAAO,EAAE;IAChB,IAAIA,OAAO,EAAE;MACT,IAAI,CAACJ,MAAM,CAAC,CAAC;IACjB,CAAC,MACI;MACD,IAAI,CAACE,OAAO,CAAC,CAAC;IAClB;EACJ;EACAT,KAAKA,CAACY,MAAM,EAAE;IACV,IAAI,CAACjF,uBAAuB,GAAGiF,MAAM,CAACjF,uBAAuB;IAC7D,IAAI,CAACC,2BAA2B,GAAGgF,MAAM,CAAChF,2BAA2B;IACrE,IAAI,CAACC,2BAA2B,GAAG+E,MAAM,CAAC/E,2BAA2B;IACrE,IAAI,CAACsB,eAAe,GAAGyD,MAAM,CAACzD,eAAe;IAC7C,IAAI,CAACC,eAAe,GAAGwD,MAAM,CAACxD,eAAe;IAC7C,IAAI,CAACC,WAAW,GAAGuD,MAAM,CAACvD,WAAW;IACrC,IAAI,CAACE,6BAA6B,GAAGqD,MAAM,CAACrD,6BAA6B;IACzE,IAAI,CAACC,6BAA6B,GAAGoD,MAAM,CAACpD,6BAA6B;IACzE,IAAI,CAACF,yBAAyB,GAAGsD,MAAM,CAACtD,yBAAyB;IACjE,IAAI,CAACI,gCAAgC,GAAGkD,MAAM,CAAClD,gCAAgC;IAC/E,IAAI,CAACC,gCAAgC,GAAGiD,MAAM,CAACjD,gCAAgC;IAC/E,IAAI,CAACF,4BAA4B,GAAGmD,MAAM,CAACnD,4BAA4B;IACvE,IAAI,CAACI,8BAA8B,GAAG+C,MAAM,CAAC/C,8BAA8B;IAC3E,IAAI,CAACC,8BAA8B,GAAG8C,MAAM,CAAC9C,8BAA8B;IAC3E,IAAI,CAACF,0BAA0B,GAAGgD,MAAM,CAAChD,0BAA0B;IACnE,IAAI,CAACiD,WAAW,CAAC,CAAC;EACtB;EACAA,WAAWA,CAAA,EAAG;IACV,IAAI,IAAI,CAACzC,OAAO,EAAE;MACd,MAAM0C,cAAc,GAAG;QACnBnF,uBAAuB,EAAE,IAAI,CAACA,uBAAuB;QACrDC,2BAA2B,EAAE,IAAI,CAACA,2BAA2B;QAC7DC,2BAA2B,EAAE,IAAI,CAACA;MACtC,CAAC;MACD,IAAI,CAACN,YAAY,CAACyE,KAAK,CAACc,cAAc,CAAC;MACvC,MAAMC,cAAc,GAAG;QACnB5D,eAAe,EAAE,IAAI,CAACA,eAAe;QACrCC,eAAe,EAAE,IAAI,CAACA,eAAe;QACrCC,WAAW,EAAE,IAAI,CAACA,WAAW;QAC7BE,6BAA6B,EAAE,IAAI,CAACA,6BAA6B;QACjEC,6BAA6B,EAAE,IAAI,CAACA,6BAA6B;QACjEF,yBAAyB,EAAE,IAAI,CAACA,yBAAyB;QACzDI,gCAAgC,EAAE,IAAI,CAACA,gCAAgC;QACvEC,gCAAgC,EAAE,IAAI,CAACA,gCAAgC;QACvEF,4BAA4B,EAAE,IAAI,CAACA,4BAA4B;QAC/DI,8BAA8B,EAAE,IAAI,CAACA,8BAA8B;QACnEC,8BAA8B,EAAE,IAAI,CAACA,8BAA8B;QACnEF,0BAA0B,EAAE,IAAI,CAACA;MACrC,CAAC;MACD,IAAI,CAACa,QAAQ,CAACuB,KAAK,CAACe,cAAc,CAAC;IACvC;EACJ;EACAC,MAAMA,CAAA,EAAG;IACL,IAAI,CAACvC,QAAQ,CAACuC,MAAM,CAAC,CAAC;EAC1B;EACAjC,KAAKA,CAAA,EAAG;IACJ,IAAI,CAACN,QAAQ,CAACM,KAAK,CAAC,CAAC;EACzB;EACAkC,eAAeA,CAAA,EAAG;IACd,OAAO,IAAI,CAAC1F,YAAY,CAAC2F,OAAO;EACpC;EACAC,eAAeA,CAACC,KAAK,EAAE;IACnB,IAAI,CAAC7F,YAAY,CAAC2F,OAAO,GAAGE,KAAK;EACrC;EACAC,eAAeA,CAAA,EAAG;IACd,IAAI,CAAC9F,YAAY,CAACwD,KAAK,CAAC,CAAC;EAC7B;EACAC,QAAQA,CAAA,EAAG;IACP,IAAI,IAAI,CAACP,QAAQ,EAAE;MACf,IAAI,CAACA,QAAQ,CAACO,QAAQ,CAAC,CAAC;IAC5B;EACJ;EACA,IAAIE,KAAKA,CAACoC,QAAQ,EAAE;IAChB,IAAI,CAAC7C,QAAQ,CAAC8C,YAAY,GAAG,IAAI,CAACnF,kBAAkB;IACpD,IAAI,CAACqC,QAAQ,CAACS,KAAK,GAAGoC,QAAQ;IAC9B,IAAI,CAAClD,OAAO,CAAC4B,KAAK,CAACd,KAAK,GAAGoC,QAAQ,GAAG,IAAI;EAC9C;EACAE,OAAOA,CAAA,EAAG;IACN,KAAK,CAACA,OAAO,CAAC,CAAC;EACnB;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}