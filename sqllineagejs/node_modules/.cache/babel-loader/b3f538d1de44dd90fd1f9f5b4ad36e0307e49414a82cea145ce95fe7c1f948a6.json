{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nimport { IQuickInputService } from '../common/quickInput.js';\nimport { Extensions } from '../common/quickAccess.js';\nimport { Registry } from '../../registry/common/platform.js';\nimport { localize } from '../../../nls.js';\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\nlet HelpQuickAccessProvider = class HelpQuickAccessProvider {\n  constructor(quickInputService) {\n    this.quickInputService = quickInputService;\n    this.registry = Registry.as(Extensions.Quickaccess);\n  }\n  provide(picker) {\n    const disposables = new DisposableStore();\n    // Open a picker with the selected value if picked\n    disposables.add(picker.onDidAccept(() => {\n      const [item] = picker.selectedItems;\n      if (item) {\n        this.quickInputService.quickAccess.show(item.prefix, {\n          preserveValue: true\n        });\n      }\n    }));\n    // Also open a picker when we detect the user typed the exact\n    // name of a provider (e.g. `?term` for terminals)\n    disposables.add(picker.onDidChangeValue(value => {\n      const providerDescriptor = this.registry.getQuickAccessProvider(value.substr(HelpQuickAccessProvider.PREFIX.length));\n      if (providerDescriptor && providerDescriptor.prefix && providerDescriptor.prefix !== HelpQuickAccessProvider.PREFIX) {\n        this.quickInputService.quickAccess.show(providerDescriptor.prefix, {\n          preserveValue: true\n        });\n      }\n    }));\n    // Fill in all providers separated by editor/global scope\n    const {\n      editorProviders,\n      globalProviders\n    } = this.getQuickAccessProviders();\n    picker.items = editorProviders.length === 0 || globalProviders.length === 0 ?\n    // Without groups\n    [...(editorProviders.length === 0 ? globalProviders : editorProviders)] :\n    // With groups\n    [{\n      label: localize('globalCommands', \"global commands\"),\n      type: 'separator'\n    }, ...globalProviders, {\n      label: localize('editorCommands', \"editor commands\"),\n      type: 'separator'\n    }, ...editorProviders];\n    return disposables;\n  }\n  getQuickAccessProviders() {\n    const globalProviders = [];\n    const editorProviders = [];\n    for (const provider of this.registry.getQuickAccessProviders().sort((providerA, providerB) => providerA.prefix.localeCompare(providerB.prefix))) {\n      if (provider.prefix === HelpQuickAccessProvider.PREFIX) {\n        continue; // exclude help which is already active\n      }\n\n      for (const helpEntry of provider.helpEntries) {\n        const prefix = helpEntry.prefix || provider.prefix;\n        const label = prefix || '\\u2026' /* ... */;\n        (helpEntry.needsEditor ? editorProviders : globalProviders).push({\n          prefix,\n          label,\n          ariaLabel: localize('helpPickAriaLabel', \"{0}, {1}\", label, helpEntry.description),\n          description: helpEntry.description\n        });\n      }\n    }\n    return {\n      editorProviders,\n      globalProviders\n    };\n  }\n};\nHelpQuickAccessProvider.PREFIX = '?';\nHelpQuickAccessProvider = __decorate([__param(0, IQuickInputService)], HelpQuickAccessProvider);\nexport { HelpQuickAccessProvider };","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","IQuickInputService","Extensions","Registry","localize","DisposableStore","HelpQuickAccessProvider","constructor","quickInputService","registry","as","Quickaccess","provide","picker","disposables","add","onDidAccept","item","selectedItems","quickAccess","show","prefix","preserveValue","onDidChangeValue","value","providerDescriptor","getQuickAccessProvider","substr","PREFIX","editorProviders","globalProviders","getQuickAccessProviders","items","label","type","provider","sort","providerA","providerB","localeCompare","helpEntry","helpEntries","needsEditor","push","ariaLabel","description"],"sources":["C:/Users/Administrator/Desktop/sqllineage-master/sqllineagejs/node_modules/monaco-editor/esm/vs/platform/quickinput/browser/helpQuickAccess.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { IQuickInputService } from '../common/quickInput.js';\r\nimport { Extensions } from '../common/quickAccess.js';\r\nimport { Registry } from '../../registry/common/platform.js';\r\nimport { localize } from '../../../nls.js';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nlet HelpQuickAccessProvider = class HelpQuickAccessProvider {\r\n    constructor(quickInputService) {\r\n        this.quickInputService = quickInputService;\r\n        this.registry = Registry.as(Extensions.Quickaccess);\r\n    }\r\n    provide(picker) {\r\n        const disposables = new DisposableStore();\r\n        // Open a picker with the selected value if picked\r\n        disposables.add(picker.onDidAccept(() => {\r\n            const [item] = picker.selectedItems;\r\n            if (item) {\r\n                this.quickInputService.quickAccess.show(item.prefix, { preserveValue: true });\r\n            }\r\n        }));\r\n        // Also open a picker when we detect the user typed the exact\r\n        // name of a provider (e.g. `?term` for terminals)\r\n        disposables.add(picker.onDidChangeValue(value => {\r\n            const providerDescriptor = this.registry.getQuickAccessProvider(value.substr(HelpQuickAccessProvider.PREFIX.length));\r\n            if (providerDescriptor && providerDescriptor.prefix && providerDescriptor.prefix !== HelpQuickAccessProvider.PREFIX) {\r\n                this.quickInputService.quickAccess.show(providerDescriptor.prefix, { preserveValue: true });\r\n            }\r\n        }));\r\n        // Fill in all providers separated by editor/global scope\r\n        const { editorProviders, globalProviders } = this.getQuickAccessProviders();\r\n        picker.items = editorProviders.length === 0 || globalProviders.length === 0 ?\r\n            // Without groups\r\n            [\r\n                ...(editorProviders.length === 0 ? globalProviders : editorProviders)\r\n            ] :\r\n            // With groups\r\n            [\r\n                { label: localize('globalCommands', \"global commands\"), type: 'separator' },\r\n                ...globalProviders,\r\n                { label: localize('editorCommands', \"editor commands\"), type: 'separator' },\r\n                ...editorProviders\r\n            ];\r\n        return disposables;\r\n    }\r\n    getQuickAccessProviders() {\r\n        const globalProviders = [];\r\n        const editorProviders = [];\r\n        for (const provider of this.registry.getQuickAccessProviders().sort((providerA, providerB) => providerA.prefix.localeCompare(providerB.prefix))) {\r\n            if (provider.prefix === HelpQuickAccessProvider.PREFIX) {\r\n                continue; // exclude help which is already active\r\n            }\r\n            for (const helpEntry of provider.helpEntries) {\r\n                const prefix = helpEntry.prefix || provider.prefix;\r\n                const label = prefix || '\\u2026' /* ... */;\r\n                (helpEntry.needsEditor ? editorProviders : globalProviders).push({\r\n                    prefix,\r\n                    label,\r\n                    ariaLabel: localize('helpPickAriaLabel', \"{0}, {1}\", label, helpEntry.description),\r\n                    description: helpEntry.description\r\n                });\r\n            }\r\n        }\r\n        return { editorProviders, globalProviders };\r\n    }\r\n};\r\nHelpQuickAccessProvider.PREFIX = '?';\r\nHelpQuickAccessProvider = __decorate([\r\n    __param(0, IQuickInputService)\r\n], HelpQuickAccessProvider);\r\nexport { HelpQuickAccessProvider };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}