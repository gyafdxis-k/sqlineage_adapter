{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport * as DOM from './dom.js';\nexport function renderText(text) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const element = createElement(options);\n  element.textContent = text;\n  return element;\n}\nexport function renderFormattedText(formattedText) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const element = createElement(options);\n  _renderFormattedText(element, parseFormattedText(formattedText), options.actionHandler);\n  return element;\n}\nexport function createElement(options) {\n  const tagName = options.inline ? 'span' : 'div';\n  const element = document.createElement(tagName);\n  if (options.className) {\n    element.className = options.className;\n  }\n  return element;\n}\nclass StringStream {\n  constructor(source) {\n    this.source = source;\n    this.index = 0;\n  }\n  eos() {\n    return this.index >= this.source.length;\n  }\n  next() {\n    const next = this.peek();\n    this.advance();\n    return next;\n  }\n  peek() {\n    return this.source[this.index];\n  }\n  advance() {\n    this.index++;\n  }\n}\nfunction _renderFormattedText(element, treeNode, actionHandler) {\n  let child;\n  if (treeNode.type === 2 /* Text */) {\n    child = document.createTextNode(treeNode.content || '');\n  } else if (treeNode.type === 3 /* Bold */) {\n    child = document.createElement('b');\n  } else if (treeNode.type === 4 /* Italics */) {\n    child = document.createElement('i');\n  } else if (treeNode.type === 5 /* Action */ && actionHandler) {\n    const a = document.createElement('a');\n    a.href = '#';\n    actionHandler.disposeables.add(DOM.addStandardDisposableListener(a, 'click', event => {\n      actionHandler.callback(String(treeNode.index), event);\n    }));\n    child = a;\n  } else if (treeNode.type === 7 /* NewLine */) {\n    child = document.createElement('br');\n  } else if (treeNode.type === 1 /* Root */) {\n    child = element;\n  }\n  if (child && element !== child) {\n    element.appendChild(child);\n  }\n  if (child && Array.isArray(treeNode.children)) {\n    treeNode.children.forEach(nodeChild => {\n      _renderFormattedText(child, nodeChild, actionHandler);\n    });\n  }\n}\nfunction parseFormattedText(content) {\n  const root = {\n    type: 1 /* Root */,\n    children: []\n  };\n  let actionViewItemIndex = 0;\n  let current = root;\n  const stack = [];\n  const stream = new StringStream(content);\n  while (!stream.eos()) {\n    let next = stream.next();\n    const isEscapedFormatType = next === '\\\\' && formatTagType(stream.peek()) !== 0 /* Invalid */;\n    if (isEscapedFormatType) {\n      next = stream.next(); // unread the backslash if it escapes a format tag type\n    }\n\n    if (!isEscapedFormatType && isFormatTag(next) && next === stream.peek()) {\n      stream.advance();\n      if (current.type === 2 /* Text */) {\n        current = stack.pop();\n      }\n      const type = formatTagType(next);\n      if (current.type === type || current.type === 5 /* Action */ && type === 6 /* ActionClose */) {\n        current = stack.pop();\n      } else {\n        const newCurrent = {\n          type: type,\n          children: []\n        };\n        if (type === 5 /* Action */) {\n          newCurrent.index = actionViewItemIndex;\n          actionViewItemIndex++;\n        }\n        current.children.push(newCurrent);\n        stack.push(current);\n        current = newCurrent;\n      }\n    } else if (next === '\\n') {\n      if (current.type === 2 /* Text */) {\n        current = stack.pop();\n      }\n      current.children.push({\n        type: 7 /* NewLine */\n      });\n    } else {\n      if (current.type !== 2 /* Text */) {\n        const textCurrent = {\n          type: 2 /* Text */,\n          content: next\n        };\n        current.children.push(textCurrent);\n        stack.push(current);\n        current = textCurrent;\n      } else {\n        current.content += next;\n      }\n    }\n  }\n  if (current.type === 2 /* Text */) {\n    current = stack.pop();\n  }\n  if (stack.length) {\n    // incorrectly formatted string literal\n  }\n  return root;\n}\nfunction isFormatTag(char) {\n  return formatTagType(char) !== 0 /* Invalid */;\n}\n\nfunction formatTagType(char) {\n  switch (char) {\n    case '*':\n      return 3 /* Bold */;\n    case '_':\n      return 4 /* Italics */;\n    case '[':\n      return 5 /* Action */;\n    case ']':\n      return 6 /* ActionClose */;\n    default:\n      return 0 /* Invalid */;\n  }\n}","map":{"version":3,"names":["DOM","renderText","text","options","arguments","length","undefined","element","createElement","textContent","renderFormattedText","formattedText","_renderFormattedText","parseFormattedText","actionHandler","tagName","inline","document","className","StringStream","constructor","source","index","eos","next","peek","advance","treeNode","child","type","createTextNode","content","a","href","disposeables","add","addStandardDisposableListener","event","callback","String","appendChild","Array","isArray","children","forEach","nodeChild","root","actionViewItemIndex","current","stack","stream","isEscapedFormatType","formatTagType","isFormatTag","pop","newCurrent","push","textCurrent","char"],"sources":["C:/Users/Administrator/Desktop/sqllineage-master/sqllineagejs/node_modules/monaco-editor/esm/vs/base/browser/formattedTextRenderer.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as DOM from './dom.js';\r\nexport function renderText(text, options = {}) {\r\n    const element = createElement(options);\r\n    element.textContent = text;\r\n    return element;\r\n}\r\nexport function renderFormattedText(formattedText, options = {}) {\r\n    const element = createElement(options);\r\n    _renderFormattedText(element, parseFormattedText(formattedText), options.actionHandler);\r\n    return element;\r\n}\r\nexport function createElement(options) {\r\n    const tagName = options.inline ? 'span' : 'div';\r\n    const element = document.createElement(tagName);\r\n    if (options.className) {\r\n        element.className = options.className;\r\n    }\r\n    return element;\r\n}\r\nclass StringStream {\r\n    constructor(source) {\r\n        this.source = source;\r\n        this.index = 0;\r\n    }\r\n    eos() {\r\n        return this.index >= this.source.length;\r\n    }\r\n    next() {\r\n        const next = this.peek();\r\n        this.advance();\r\n        return next;\r\n    }\r\n    peek() {\r\n        return this.source[this.index];\r\n    }\r\n    advance() {\r\n        this.index++;\r\n    }\r\n}\r\nfunction _renderFormattedText(element, treeNode, actionHandler) {\r\n    let child;\r\n    if (treeNode.type === 2 /* Text */) {\r\n        child = document.createTextNode(treeNode.content || '');\r\n    }\r\n    else if (treeNode.type === 3 /* Bold */) {\r\n        child = document.createElement('b');\r\n    }\r\n    else if (treeNode.type === 4 /* Italics */) {\r\n        child = document.createElement('i');\r\n    }\r\n    else if (treeNode.type === 5 /* Action */ && actionHandler) {\r\n        const a = document.createElement('a');\r\n        a.href = '#';\r\n        actionHandler.disposeables.add(DOM.addStandardDisposableListener(a, 'click', (event) => {\r\n            actionHandler.callback(String(treeNode.index), event);\r\n        }));\r\n        child = a;\r\n    }\r\n    else if (treeNode.type === 7 /* NewLine */) {\r\n        child = document.createElement('br');\r\n    }\r\n    else if (treeNode.type === 1 /* Root */) {\r\n        child = element;\r\n    }\r\n    if (child && element !== child) {\r\n        element.appendChild(child);\r\n    }\r\n    if (child && Array.isArray(treeNode.children)) {\r\n        treeNode.children.forEach((nodeChild) => {\r\n            _renderFormattedText(child, nodeChild, actionHandler);\r\n        });\r\n    }\r\n}\r\nfunction parseFormattedText(content) {\r\n    const root = {\r\n        type: 1 /* Root */,\r\n        children: []\r\n    };\r\n    let actionViewItemIndex = 0;\r\n    let current = root;\r\n    const stack = [];\r\n    const stream = new StringStream(content);\r\n    while (!stream.eos()) {\r\n        let next = stream.next();\r\n        const isEscapedFormatType = (next === '\\\\' && formatTagType(stream.peek()) !== 0 /* Invalid */);\r\n        if (isEscapedFormatType) {\r\n            next = stream.next(); // unread the backslash if it escapes a format tag type\r\n        }\r\n        if (!isEscapedFormatType && isFormatTag(next) && next === stream.peek()) {\r\n            stream.advance();\r\n            if (current.type === 2 /* Text */) {\r\n                current = stack.pop();\r\n            }\r\n            const type = formatTagType(next);\r\n            if (current.type === type || (current.type === 5 /* Action */ && type === 6 /* ActionClose */)) {\r\n                current = stack.pop();\r\n            }\r\n            else {\r\n                const newCurrent = {\r\n                    type: type,\r\n                    children: []\r\n                };\r\n                if (type === 5 /* Action */) {\r\n                    newCurrent.index = actionViewItemIndex;\r\n                    actionViewItemIndex++;\r\n                }\r\n                current.children.push(newCurrent);\r\n                stack.push(current);\r\n                current = newCurrent;\r\n            }\r\n        }\r\n        else if (next === '\\n') {\r\n            if (current.type === 2 /* Text */) {\r\n                current = stack.pop();\r\n            }\r\n            current.children.push({\r\n                type: 7 /* NewLine */\r\n            });\r\n        }\r\n        else {\r\n            if (current.type !== 2 /* Text */) {\r\n                const textCurrent = {\r\n                    type: 2 /* Text */,\r\n                    content: next\r\n                };\r\n                current.children.push(textCurrent);\r\n                stack.push(current);\r\n                current = textCurrent;\r\n            }\r\n            else {\r\n                current.content += next;\r\n            }\r\n        }\r\n    }\r\n    if (current.type === 2 /* Text */) {\r\n        current = stack.pop();\r\n    }\r\n    if (stack.length) {\r\n        // incorrectly formatted string literal\r\n    }\r\n    return root;\r\n}\r\nfunction isFormatTag(char) {\r\n    return formatTagType(char) !== 0 /* Invalid */;\r\n}\r\nfunction formatTagType(char) {\r\n    switch (char) {\r\n        case '*':\r\n            return 3 /* Bold */;\r\n        case '_':\r\n            return 4 /* Italics */;\r\n        case '[':\r\n            return 5 /* Action */;\r\n        case ']':\r\n            return 6 /* ActionClose */;\r\n        default:\r\n            return 0 /* Invalid */;\r\n    }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}