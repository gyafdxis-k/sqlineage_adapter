{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nimport { RunOnceScheduler } from '../../../base/common/async.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\nimport { IMenuService, isIMenuItem, MenuItemAction, MenuRegistry, SubmenuItemAction } from './actions.js';\nimport { ICommandService } from '../../commands/common/commands.js';\nimport { IContextKeyService } from '../../contextkey/common/contextkey.js';\nlet MenuService = class MenuService {\n  constructor(_commandService) {\n    this._commandService = _commandService;\n    //\n  }\n\n  createMenu(id, contextKeyService) {\n    return new Menu(id, this._commandService, contextKeyService, this);\n  }\n};\nMenuService = __decorate([__param(0, ICommandService)], MenuService);\nexport { MenuService };\nlet Menu = class Menu {\n  constructor(_id, _commandService, _contextKeyService, _menuService) {\n    this._id = _id;\n    this._commandService = _commandService;\n    this._contextKeyService = _contextKeyService;\n    this._menuService = _menuService;\n    this._dispoables = new DisposableStore();\n    this._onDidChange = new Emitter();\n    this.onDidChange = this._onDidChange.event;\n    this._menuGroups = [];\n    this._contextKeys = new Set();\n    this._build();\n    // rebuild this menu whenever the menu registry reports an\n    // event for this MenuId\n    const rebuildMenuSoon = new RunOnceScheduler(() => this._build(), 50);\n    this._dispoables.add(rebuildMenuSoon);\n    this._dispoables.add(MenuRegistry.onDidChangeMenu(e => {\n      if (e.has(_id)) {\n        rebuildMenuSoon.schedule();\n      }\n    }));\n    // when context keys change we need to check if the menu also\n    // has changed\n    const fireChangeSoon = new RunOnceScheduler(() => this._onDidChange.fire(this), 50);\n    this._dispoables.add(fireChangeSoon);\n    this._dispoables.add(_contextKeyService.onDidChangeContext(e => {\n      if (e.affectsSome(this._contextKeys)) {\n        fireChangeSoon.schedule();\n      }\n    }));\n  }\n  dispose() {\n    this._dispoables.dispose();\n    this._onDidChange.dispose();\n  }\n  _build() {\n    // reset\n    this._menuGroups.length = 0;\n    this._contextKeys.clear();\n    const menuItems = MenuRegistry.getMenuItems(this._id);\n    let group;\n    menuItems.sort(Menu._compareMenuItems);\n    for (let item of menuItems) {\n      // group by groupId\n      const groupName = item.group || '';\n      if (!group || group[0] !== groupName) {\n        group = [groupName, []];\n        this._menuGroups.push(group);\n      }\n      group[1].push(item);\n      // keep keys for eventing\n      Menu._fillInKbExprKeys(item.when, this._contextKeys);\n      if (isIMenuItem(item)) {\n        // keep precondition keys for event if applicable\n        if (item.command.precondition) {\n          Menu._fillInKbExprKeys(item.command.precondition, this._contextKeys);\n        }\n        // keep toggled keys for event if applicable\n        if (item.command.toggled) {\n          const toggledExpression = item.command.toggled.condition || item.command.toggled;\n          Menu._fillInKbExprKeys(toggledExpression, this._contextKeys);\n        }\n      }\n    }\n    this._onDidChange.fire(this);\n  }\n  getActions(options) {\n    const result = [];\n    for (let group of this._menuGroups) {\n      const [id, items] = group;\n      const activeActions = [];\n      for (const item of items) {\n        if (this._contextKeyService.contextMatchesRules(item.when)) {\n          const action = isIMenuItem(item) ? new MenuItemAction(item.command, item.alt, options, this._contextKeyService, this._commandService) : new SubmenuItemAction(item, this._menuService, this._contextKeyService, options);\n          activeActions.push(action);\n        }\n      }\n      if (activeActions.length > 0) {\n        result.push([id, activeActions]);\n      }\n    }\n    return result;\n  }\n  static _fillInKbExprKeys(exp, set) {\n    if (exp) {\n      for (let key of exp.keys()) {\n        set.add(key);\n      }\n    }\n  }\n  static _compareMenuItems(a, b) {\n    let aGroup = a.group;\n    let bGroup = b.group;\n    if (aGroup !== bGroup) {\n      // Falsy groups come last\n      if (!aGroup) {\n        return 1;\n      } else if (!bGroup) {\n        return -1;\n      }\n      // 'navigation' group comes first\n      if (aGroup === 'navigation') {\n        return -1;\n      } else if (bGroup === 'navigation') {\n        return 1;\n      }\n      // lexical sort for groups\n      let value = aGroup.localeCompare(bGroup);\n      if (value !== 0) {\n        return value;\n      }\n    }\n    // sort on priority - default is 0\n    let aPrio = a.order || 0;\n    let bPrio = b.order || 0;\n    if (aPrio < bPrio) {\n      return -1;\n    } else if (aPrio > bPrio) {\n      return 1;\n    }\n    // sort on titles\n    return Menu._compareTitles(isIMenuItem(a) ? a.command.title : a.title, isIMenuItem(b) ? b.command.title : b.title);\n  }\n  static _compareTitles(a, b) {\n    const aStr = typeof a === 'string' ? a : a.original;\n    const bStr = typeof b === 'string' ? b : b.original;\n    return aStr.localeCompare(bStr);\n  }\n};\nMenu = __decorate([__param(1, ICommandService), __param(2, IContextKeyService), __param(3, IMenuService)], Menu);","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","RunOnceScheduler","Emitter","DisposableStore","IMenuService","isIMenuItem","MenuItemAction","MenuRegistry","SubmenuItemAction","ICommandService","IContextKeyService","MenuService","constructor","_commandService","createMenu","id","contextKeyService","Menu","_id","_contextKeyService","_menuService","_dispoables","_onDidChange","onDidChange","event","_menuGroups","_contextKeys","Set","_build","rebuildMenuSoon","add","onDidChangeMenu","e","has","schedule","fireChangeSoon","fire","onDidChangeContext","affectsSome","dispose","clear","menuItems","getMenuItems","group","sort","_compareMenuItems","item","groupName","push","_fillInKbExprKeys","when","command","precondition","toggled","toggledExpression","condition","getActions","options","result","items","activeActions","contextMatchesRules","action","alt","exp","set","keys","a","b","aGroup","bGroup","value","localeCompare","aPrio","order","bPrio","_compareTitles","title","aStr","original","bStr"],"sources":["C:/Users/Administrator/Desktop/sqllineage-master/sqllineagejs/node_modules/monaco-editor/esm/vs/platform/actions/common/menuService.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { RunOnceScheduler } from '../../../base/common/async.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { IMenuService, isIMenuItem, MenuItemAction, MenuRegistry, SubmenuItemAction } from './actions.js';\r\nimport { ICommandService } from '../../commands/common/commands.js';\r\nimport { IContextKeyService } from '../../contextkey/common/contextkey.js';\r\nlet MenuService = class MenuService {\r\n    constructor(_commandService) {\r\n        this._commandService = _commandService;\r\n        //\r\n    }\r\n    createMenu(id, contextKeyService) {\r\n        return new Menu(id, this._commandService, contextKeyService, this);\r\n    }\r\n};\r\nMenuService = __decorate([\r\n    __param(0, ICommandService)\r\n], MenuService);\r\nexport { MenuService };\r\nlet Menu = class Menu {\r\n    constructor(_id, _commandService, _contextKeyService, _menuService) {\r\n        this._id = _id;\r\n        this._commandService = _commandService;\r\n        this._contextKeyService = _contextKeyService;\r\n        this._menuService = _menuService;\r\n        this._dispoables = new DisposableStore();\r\n        this._onDidChange = new Emitter();\r\n        this.onDidChange = this._onDidChange.event;\r\n        this._menuGroups = [];\r\n        this._contextKeys = new Set();\r\n        this._build();\r\n        // rebuild this menu whenever the menu registry reports an\r\n        // event for this MenuId\r\n        const rebuildMenuSoon = new RunOnceScheduler(() => this._build(), 50);\r\n        this._dispoables.add(rebuildMenuSoon);\r\n        this._dispoables.add(MenuRegistry.onDidChangeMenu(e => {\r\n            if (e.has(_id)) {\r\n                rebuildMenuSoon.schedule();\r\n            }\r\n        }));\r\n        // when context keys change we need to check if the menu also\r\n        // has changed\r\n        const fireChangeSoon = new RunOnceScheduler(() => this._onDidChange.fire(this), 50);\r\n        this._dispoables.add(fireChangeSoon);\r\n        this._dispoables.add(_contextKeyService.onDidChangeContext(e => {\r\n            if (e.affectsSome(this._contextKeys)) {\r\n                fireChangeSoon.schedule();\r\n            }\r\n        }));\r\n    }\r\n    dispose() {\r\n        this._dispoables.dispose();\r\n        this._onDidChange.dispose();\r\n    }\r\n    _build() {\r\n        // reset\r\n        this._menuGroups.length = 0;\r\n        this._contextKeys.clear();\r\n        const menuItems = MenuRegistry.getMenuItems(this._id);\r\n        let group;\r\n        menuItems.sort(Menu._compareMenuItems);\r\n        for (let item of menuItems) {\r\n            // group by groupId\r\n            const groupName = item.group || '';\r\n            if (!group || group[0] !== groupName) {\r\n                group = [groupName, []];\r\n                this._menuGroups.push(group);\r\n            }\r\n            group[1].push(item);\r\n            // keep keys for eventing\r\n            Menu._fillInKbExprKeys(item.when, this._contextKeys);\r\n            if (isIMenuItem(item)) {\r\n                // keep precondition keys for event if applicable\r\n                if (item.command.precondition) {\r\n                    Menu._fillInKbExprKeys(item.command.precondition, this._contextKeys);\r\n                }\r\n                // keep toggled keys for event if applicable\r\n                if (item.command.toggled) {\r\n                    const toggledExpression = item.command.toggled.condition || item.command.toggled;\r\n                    Menu._fillInKbExprKeys(toggledExpression, this._contextKeys);\r\n                }\r\n            }\r\n        }\r\n        this._onDidChange.fire(this);\r\n    }\r\n    getActions(options) {\r\n        const result = [];\r\n        for (let group of this._menuGroups) {\r\n            const [id, items] = group;\r\n            const activeActions = [];\r\n            for (const item of items) {\r\n                if (this._contextKeyService.contextMatchesRules(item.when)) {\r\n                    const action = isIMenuItem(item)\r\n                        ? new MenuItemAction(item.command, item.alt, options, this._contextKeyService, this._commandService)\r\n                        : new SubmenuItemAction(item, this._menuService, this._contextKeyService, options);\r\n                    activeActions.push(action);\r\n                }\r\n            }\r\n            if (activeActions.length > 0) {\r\n                result.push([id, activeActions]);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    static _fillInKbExprKeys(exp, set) {\r\n        if (exp) {\r\n            for (let key of exp.keys()) {\r\n                set.add(key);\r\n            }\r\n        }\r\n    }\r\n    static _compareMenuItems(a, b) {\r\n        let aGroup = a.group;\r\n        let bGroup = b.group;\r\n        if (aGroup !== bGroup) {\r\n            // Falsy groups come last\r\n            if (!aGroup) {\r\n                return 1;\r\n            }\r\n            else if (!bGroup) {\r\n                return -1;\r\n            }\r\n            // 'navigation' group comes first\r\n            if (aGroup === 'navigation') {\r\n                return -1;\r\n            }\r\n            else if (bGroup === 'navigation') {\r\n                return 1;\r\n            }\r\n            // lexical sort for groups\r\n            let value = aGroup.localeCompare(bGroup);\r\n            if (value !== 0) {\r\n                return value;\r\n            }\r\n        }\r\n        // sort on priority - default is 0\r\n        let aPrio = a.order || 0;\r\n        let bPrio = b.order || 0;\r\n        if (aPrio < bPrio) {\r\n            return -1;\r\n        }\r\n        else if (aPrio > bPrio) {\r\n            return 1;\r\n        }\r\n        // sort on titles\r\n        return Menu._compareTitles(isIMenuItem(a) ? a.command.title : a.title, isIMenuItem(b) ? b.command.title : b.title);\r\n    }\r\n    static _compareTitles(a, b) {\r\n        const aStr = typeof a === 'string' ? a : a.original;\r\n        const bStr = typeof b === 'string' ? b : b.original;\r\n        return aStr.localeCompare(bStr);\r\n    }\r\n};\r\nMenu = __decorate([\r\n    __param(1, ICommandService),\r\n    __param(2, IContextKeyService),\r\n    __param(3, IMenuService)\r\n], Menu);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}