{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { equals } from './arrays.js';\nimport { escapeIcons } from './iconLabels.js';\nimport { illegalArgument } from './errors.js';\nexport class MarkdownString {\n  constructor() {\n    let value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    let isTrustedOrOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var _a, _b;\n    this.value = value;\n    if (typeof this.value !== 'string') {\n      throw illegalArgument('value');\n    }\n    if (typeof isTrustedOrOptions === 'boolean') {\n      this.isTrusted = isTrustedOrOptions;\n      this.supportThemeIcons = false;\n    } else {\n      this.isTrusted = (_a = isTrustedOrOptions.isTrusted) !== null && _a !== void 0 ? _a : undefined;\n      this.supportThemeIcons = (_b = isTrustedOrOptions.supportThemeIcons) !== null && _b !== void 0 ? _b : false;\n    }\n  }\n  appendText(value) {\n    let newlineStyle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    this.value += escapeMarkdownSyntaxTokens(this.supportThemeIcons ? escapeIcons(value) : value).replace(/([ \\t]+)/g, (_match, g1) => '&nbsp;'.repeat(g1.length)).replace(/^>/gm, '\\\\>').replace(/\\n/g, newlineStyle === 1 /* Break */ ? '\\\\\\n' : '\\n\\n');\n    return this;\n  }\n  appendMarkdown(value) {\n    this.value += value;\n    return this;\n  }\n  appendCodeblock(langId, code) {\n    this.value += '\\n```';\n    this.value += langId;\n    this.value += '\\n';\n    this.value += code;\n    this.value += '\\n```\\n';\n    return this;\n  }\n}\nexport function isEmptyMarkdownString(oneOrMany) {\n  if (isMarkdownString(oneOrMany)) {\n    return !oneOrMany.value;\n  } else if (Array.isArray(oneOrMany)) {\n    return oneOrMany.every(isEmptyMarkdownString);\n  } else {\n    return true;\n  }\n}\nexport function isMarkdownString(thing) {\n  if (thing instanceof MarkdownString) {\n    return true;\n  } else if (thing && typeof thing === 'object') {\n    return typeof thing.value === 'string' && (typeof thing.isTrusted === 'boolean' || thing.isTrusted === undefined) && (typeof thing.supportThemeIcons === 'boolean' || thing.supportThemeIcons === undefined);\n  }\n  return false;\n}\nexport function markedStringsEquals(a, b) {\n  if (!a && !b) {\n    return true;\n  } else if (!a || !b) {\n    return false;\n  } else if (Array.isArray(a) && Array.isArray(b)) {\n    return equals(a, b, markdownStringEqual);\n  } else if (isMarkdownString(a) && isMarkdownString(b)) {\n    return markdownStringEqual(a, b);\n  } else {\n    return false;\n  }\n}\nfunction markdownStringEqual(a, b) {\n  if (a === b) {\n    return true;\n  } else if (!a || !b) {\n    return false;\n  } else {\n    return a.value === b.value && a.isTrusted === b.isTrusted && a.supportThemeIcons === b.supportThemeIcons;\n  }\n}\nexport function escapeMarkdownSyntaxTokens(text) {\n  // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\n  return text.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&');\n}\nexport function removeMarkdownEscapes(text) {\n  if (!text) {\n    return text;\n  }\n  return text.replace(/\\\\([\\\\`*_{}[\\]()#+\\-.!])/g, '$1');\n}\nexport function parseHrefAndDimensions(href) {\n  const dimensions = [];\n  const splitted = href.split('|').map(s => s.trim());\n  href = splitted[0];\n  const parameters = splitted[1];\n  if (parameters) {\n    const heightFromParams = /height=(\\d+)/.exec(parameters);\n    const widthFromParams = /width=(\\d+)/.exec(parameters);\n    const height = heightFromParams ? heightFromParams[1] : '';\n    const width = widthFromParams ? widthFromParams[1] : '';\n    const widthIsFinite = isFinite(parseInt(width));\n    const heightIsFinite = isFinite(parseInt(height));\n    if (widthIsFinite) {\n      dimensions.push(\"width=\\\"\".concat(width, \"\\\"\"));\n    }\n    if (heightIsFinite) {\n      dimensions.push(\"height=\\\"\".concat(height, \"\\\"\"));\n    }\n  }\n  return {\n    href,\n    dimensions\n  };\n}","map":{"version":3,"names":["equals","escapeIcons","illegalArgument","MarkdownString","constructor","value","arguments","length","undefined","isTrustedOrOptions","_a","_b","isTrusted","supportThemeIcons","appendText","newlineStyle","escapeMarkdownSyntaxTokens","replace","_match","g1","repeat","appendMarkdown","appendCodeblock","langId","code","isEmptyMarkdownString","oneOrMany","isMarkdownString","Array","isArray","every","thing","markedStringsEquals","a","b","markdownStringEqual","text","removeMarkdownEscapes","parseHrefAndDimensions","href","dimensions","splitted","split","map","s","trim","parameters","heightFromParams","exec","widthFromParams","height","width","widthIsFinite","isFinite","parseInt","heightIsFinite","push","concat"],"sources":["C:/Users/Administrator/Desktop/sqllineage-master/sqllineagejs/node_modules/monaco-editor/esm/vs/base/common/htmlContent.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { equals } from './arrays.js';\r\nimport { escapeIcons } from './iconLabels.js';\r\nimport { illegalArgument } from './errors.js';\r\nexport class MarkdownString {\r\n    constructor(value = '', isTrustedOrOptions = false) {\r\n        var _a, _b;\r\n        this.value = value;\r\n        if (typeof this.value !== 'string') {\r\n            throw illegalArgument('value');\r\n        }\r\n        if (typeof isTrustedOrOptions === 'boolean') {\r\n            this.isTrusted = isTrustedOrOptions;\r\n            this.supportThemeIcons = false;\r\n        }\r\n        else {\r\n            this.isTrusted = (_a = isTrustedOrOptions.isTrusted) !== null && _a !== void 0 ? _a : undefined;\r\n            this.supportThemeIcons = (_b = isTrustedOrOptions.supportThemeIcons) !== null && _b !== void 0 ? _b : false;\r\n        }\r\n    }\r\n    appendText(value, newlineStyle = 0 /* Paragraph */) {\r\n        this.value += escapeMarkdownSyntaxTokens(this.supportThemeIcons ? escapeIcons(value) : value)\r\n            .replace(/([ \\t]+)/g, (_match, g1) => '&nbsp;'.repeat(g1.length))\r\n            .replace(/^>/gm, '\\\\>')\r\n            .replace(/\\n/g, newlineStyle === 1 /* Break */ ? '\\\\\\n' : '\\n\\n');\r\n        return this;\r\n    }\r\n    appendMarkdown(value) {\r\n        this.value += value;\r\n        return this;\r\n    }\r\n    appendCodeblock(langId, code) {\r\n        this.value += '\\n```';\r\n        this.value += langId;\r\n        this.value += '\\n';\r\n        this.value += code;\r\n        this.value += '\\n```\\n';\r\n        return this;\r\n    }\r\n}\r\nexport function isEmptyMarkdownString(oneOrMany) {\r\n    if (isMarkdownString(oneOrMany)) {\r\n        return !oneOrMany.value;\r\n    }\r\n    else if (Array.isArray(oneOrMany)) {\r\n        return oneOrMany.every(isEmptyMarkdownString);\r\n    }\r\n    else {\r\n        return true;\r\n    }\r\n}\r\nexport function isMarkdownString(thing) {\r\n    if (thing instanceof MarkdownString) {\r\n        return true;\r\n    }\r\n    else if (thing && typeof thing === 'object') {\r\n        return typeof thing.value === 'string'\r\n            && (typeof thing.isTrusted === 'boolean' || thing.isTrusted === undefined)\r\n            && (typeof thing.supportThemeIcons === 'boolean' || thing.supportThemeIcons === undefined);\r\n    }\r\n    return false;\r\n}\r\nexport function markedStringsEquals(a, b) {\r\n    if (!a && !b) {\r\n        return true;\r\n    }\r\n    else if (!a || !b) {\r\n        return false;\r\n    }\r\n    else if (Array.isArray(a) && Array.isArray(b)) {\r\n        return equals(a, b, markdownStringEqual);\r\n    }\r\n    else if (isMarkdownString(a) && isMarkdownString(b)) {\r\n        return markdownStringEqual(a, b);\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\nfunction markdownStringEqual(a, b) {\r\n    if (a === b) {\r\n        return true;\r\n    }\r\n    else if (!a || !b) {\r\n        return false;\r\n    }\r\n    else {\r\n        return a.value === b.value && a.isTrusted === b.isTrusted && a.supportThemeIcons === b.supportThemeIcons;\r\n    }\r\n}\r\nexport function escapeMarkdownSyntaxTokens(text) {\r\n    // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\r\n    return text.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&');\r\n}\r\nexport function removeMarkdownEscapes(text) {\r\n    if (!text) {\r\n        return text;\r\n    }\r\n    return text.replace(/\\\\([\\\\`*_{}[\\]()#+\\-.!])/g, '$1');\r\n}\r\nexport function parseHrefAndDimensions(href) {\r\n    const dimensions = [];\r\n    const splitted = href.split('|').map(s => s.trim());\r\n    href = splitted[0];\r\n    const parameters = splitted[1];\r\n    if (parameters) {\r\n        const heightFromParams = /height=(\\d+)/.exec(parameters);\r\n        const widthFromParams = /width=(\\d+)/.exec(parameters);\r\n        const height = heightFromParams ? heightFromParams[1] : '';\r\n        const width = widthFromParams ? widthFromParams[1] : '';\r\n        const widthIsFinite = isFinite(parseInt(width));\r\n        const heightIsFinite = isFinite(parseInt(height));\r\n        if (widthIsFinite) {\r\n            dimensions.push(`width=\"${width}\"`);\r\n        }\r\n        if (heightIsFinite) {\r\n            dimensions.push(`height=\"${height}\"`);\r\n        }\r\n    }\r\n    return { href, dimensions };\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}