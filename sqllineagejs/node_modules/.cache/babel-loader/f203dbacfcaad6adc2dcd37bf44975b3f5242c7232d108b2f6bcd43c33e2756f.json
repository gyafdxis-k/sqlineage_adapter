{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport * as nls from '../../../nls.js';\nimport { Delayer } from '../../../base/common/async.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport * as strings from '../../../base/common/strings.js';\nimport { EditorAction, EditorCommand, registerEditorAction, registerEditorCommand, registerEditorContribution, MultiEditorAction, registerMultiEditorAction } from '../../browser/editorExtensions.js';\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\nimport { CONTEXT_FIND_INPUT_FOCUSED, CONTEXT_FIND_WIDGET_VISIBLE, FIND_IDS, FindModelBoundToEditorModel, ToggleCaseSensitiveKeybinding, TogglePreserveCaseKeybinding, ToggleRegexKeybinding, ToggleSearchScopeKeybinding, ToggleWholeWordKeybinding, CONTEXT_REPLACE_INPUT_FOCUSED } from './findModel.js';\nimport { FindOptionsWidget } from './findOptionsWidget.js';\nimport { FindReplaceState } from './findState.js';\nimport { FindWidget } from './findWidget.js';\nimport { MenuId } from '../../../platform/actions/common/actions.js';\nimport { IClipboardService } from '../../../platform/clipboard/common/clipboardService.js';\nimport { IContextKeyService, ContextKeyExpr } from '../../../platform/contextkey/common/contextkey.js';\nimport { IContextViewService } from '../../../platform/contextview/browser/contextView.js';\nimport { IKeybindingService } from '../../../platform/keybinding/common/keybinding.js';\nimport { IStorageService } from '../../../platform/storage/common/storage.js';\nimport { IThemeService } from '../../../platform/theme/common/themeService.js';\nimport { INotificationService } from '../../../platform/notification/common/notification.js';\nconst SEARCH_STRING_MAX_LENGTH = 524288;\nexport function getSelectionSearchString(editor) {\n  let seedSearchStringFromSelection = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'single';\n  if (!editor.hasModel()) {\n    return null;\n  }\n  const selection = editor.getSelection();\n  // if selection spans multiple lines, default search string to empty\n  if (seedSearchStringFromSelection === 'single' && selection.startLineNumber === selection.endLineNumber || seedSearchStringFromSelection === 'multiple') {\n    if (selection.isEmpty()) {\n      const wordAtPosition = editor.getConfiguredWordAtPosition(selection.getStartPosition());\n      if (wordAtPosition) {\n        return wordAtPosition.word;\n      }\n    } else {\n      if (editor.getModel().getValueLengthInRange(selection) < SEARCH_STRING_MAX_LENGTH) {\n        return editor.getModel().getValueInRange(selection);\n      }\n    }\n  }\n  return null;\n}\nlet CommonFindController = class CommonFindController extends Disposable {\n  constructor(editor, contextKeyService, storageService, clipboardService) {\n    super();\n    this._editor = editor;\n    this._findWidgetVisible = CONTEXT_FIND_WIDGET_VISIBLE.bindTo(contextKeyService);\n    this._contextKeyService = contextKeyService;\n    this._storageService = storageService;\n    this._clipboardService = clipboardService;\n    this._updateHistoryDelayer = new Delayer(500);\n    this._state = this._register(new FindReplaceState());\n    this.loadQueryState();\n    this._register(this._state.onFindReplaceStateChange(e => this._onStateChanged(e)));\n    this._model = null;\n    this._register(this._editor.onDidChangeModel(() => {\n      let shouldRestartFind = this._editor.getModel() && this._state.isRevealed;\n      this.disposeModel();\n      this._state.change({\n        searchScope: null,\n        matchCase: this._storageService.getBoolean('editor.matchCase', 1 /* WORKSPACE */, false),\n        wholeWord: this._storageService.getBoolean('editor.wholeWord', 1 /* WORKSPACE */, false),\n        isRegex: this._storageService.getBoolean('editor.isRegex', 1 /* WORKSPACE */, false),\n        preserveCase: this._storageService.getBoolean('editor.preserveCase', 1 /* WORKSPACE */, false)\n      }, false);\n      if (shouldRestartFind) {\n        this._start({\n          forceRevealReplace: false,\n          seedSearchStringFromSelection: 'none',\n          seedSearchStringFromGlobalClipboard: false,\n          shouldFocus: 0 /* NoFocusChange */,\n          shouldAnimate: false,\n          updateSearchScope: false,\n          loop: this._editor.getOption(31 /* find */).loop\n        });\n      }\n    }));\n  }\n  get editor() {\n    return this._editor;\n  }\n  static get(editor) {\n    return editor.getContribution(CommonFindController.ID);\n  }\n  dispose() {\n    this.disposeModel();\n    super.dispose();\n  }\n  disposeModel() {\n    if (this._model) {\n      this._model.dispose();\n      this._model = null;\n    }\n  }\n  _onStateChanged(e) {\n    this.saveQueryState(e);\n    if (e.isRevealed) {\n      if (this._state.isRevealed) {\n        this._findWidgetVisible.set(true);\n      } else {\n        this._findWidgetVisible.reset();\n        this.disposeModel();\n      }\n    }\n    if (e.searchString) {\n      this.setGlobalBufferTerm(this._state.searchString);\n    }\n  }\n  saveQueryState(e) {\n    if (e.isRegex) {\n      this._storageService.store('editor.isRegex', this._state.actualIsRegex, 1 /* WORKSPACE */, 0 /* USER */);\n    }\n\n    if (e.wholeWord) {\n      this._storageService.store('editor.wholeWord', this._state.actualWholeWord, 1 /* WORKSPACE */, 0 /* USER */);\n    }\n\n    if (e.matchCase) {\n      this._storageService.store('editor.matchCase', this._state.actualMatchCase, 1 /* WORKSPACE */, 0 /* USER */);\n    }\n\n    if (e.preserveCase) {\n      this._storageService.store('editor.preserveCase', this._state.actualPreserveCase, 1 /* WORKSPACE */, 0 /* USER */);\n    }\n  }\n\n  loadQueryState() {\n    this._state.change({\n      matchCase: this._storageService.getBoolean('editor.matchCase', 1 /* WORKSPACE */, this._state.matchCase),\n      wholeWord: this._storageService.getBoolean('editor.wholeWord', 1 /* WORKSPACE */, this._state.wholeWord),\n      isRegex: this._storageService.getBoolean('editor.isRegex', 1 /* WORKSPACE */, this._state.isRegex),\n      preserveCase: this._storageService.getBoolean('editor.preserveCase', 1 /* WORKSPACE */, this._state.preserveCase)\n    }, false);\n  }\n  isFindInputFocused() {\n    return !!CONTEXT_FIND_INPUT_FOCUSED.getValue(this._contextKeyService);\n  }\n  getState() {\n    return this._state;\n  }\n  closeFindWidget() {\n    this._state.change({\n      isRevealed: false,\n      searchScope: null\n    }, false);\n    this._editor.focus();\n  }\n  toggleCaseSensitive() {\n    this._state.change({\n      matchCase: !this._state.matchCase\n    }, false);\n    if (!this._state.isRevealed) {\n      this.highlightFindOptions();\n    }\n  }\n  toggleWholeWords() {\n    this._state.change({\n      wholeWord: !this._state.wholeWord\n    }, false);\n    if (!this._state.isRevealed) {\n      this.highlightFindOptions();\n    }\n  }\n  toggleRegex() {\n    this._state.change({\n      isRegex: !this._state.isRegex\n    }, false);\n    if (!this._state.isRevealed) {\n      this.highlightFindOptions();\n    }\n  }\n  togglePreserveCase() {\n    this._state.change({\n      preserveCase: !this._state.preserveCase\n    }, false);\n    if (!this._state.isRevealed) {\n      this.highlightFindOptions();\n    }\n  }\n  toggleSearchScope() {\n    if (this._state.searchScope) {\n      this._state.change({\n        searchScope: null\n      }, true);\n    } else {\n      if (this._editor.hasModel()) {\n        let selections = this._editor.getSelections();\n        selections.map(selection => {\n          if (selection.endColumn === 1 && selection.endLineNumber > selection.startLineNumber) {\n            selection = selection.setEndPosition(selection.endLineNumber - 1, this._editor.getModel().getLineMaxColumn(selection.endLineNumber - 1));\n          }\n          if (!selection.isEmpty()) {\n            return selection;\n          }\n          return null;\n        }).filter(element => !!element);\n        if (selections.length) {\n          this._state.change({\n            searchScope: selections\n          }, true);\n        }\n      }\n    }\n  }\n  setSearchString(searchString) {\n    if (this._state.isRegex) {\n      searchString = strings.escapeRegExpCharacters(searchString);\n    }\n    this._state.change({\n      searchString: searchString\n    }, false);\n  }\n  highlightFindOptions() {\n    let ignoreWhenVisible = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  } // overwritten in subclass\n\n  _start(opts) {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.disposeModel();\n      if (!this._editor.hasModel()) {\n        // cannot do anything with an editor that doesn't have a model...\n        return;\n      }\n      let stateChanges = {\n        isRevealed: true\n      };\n      if (opts.seedSearchStringFromSelection === 'single') {\n        let selectionSearchString = getSelectionSearchString(this._editor, opts.seedSearchStringFromSelection);\n        if (selectionSearchString) {\n          if (this._state.isRegex) {\n            stateChanges.searchString = strings.escapeRegExpCharacters(selectionSearchString);\n          } else {\n            stateChanges.searchString = selectionSearchString;\n          }\n        }\n      } else if (opts.seedSearchStringFromSelection === 'multiple' && !opts.updateSearchScope) {\n        let selectionSearchString = getSelectionSearchString(this._editor, opts.seedSearchStringFromSelection);\n        if (selectionSearchString) {\n          stateChanges.searchString = selectionSearchString;\n        }\n      }\n      if (!stateChanges.searchString && opts.seedSearchStringFromGlobalClipboard) {\n        let selectionSearchString = yield this.getGlobalBufferTerm();\n        if (!this._editor.hasModel()) {\n          // the editor has lost its model in the meantime\n          return;\n        }\n        if (selectionSearchString) {\n          stateChanges.searchString = selectionSearchString;\n        }\n      }\n      // Overwrite isReplaceRevealed\n      if (opts.forceRevealReplace) {\n        stateChanges.isReplaceRevealed = true;\n      } else if (!this._findWidgetVisible.get()) {\n        stateChanges.isReplaceRevealed = false;\n      }\n      if (opts.updateSearchScope) {\n        let currentSelections = this._editor.getSelections();\n        if (currentSelections.some(selection => !selection.isEmpty())) {\n          stateChanges.searchScope = currentSelections;\n        }\n      }\n      stateChanges.loop = opts.loop;\n      this._state.change(stateChanges, false);\n      if (!this._model) {\n        this._model = new FindModelBoundToEditorModel(this._editor, this._state);\n      }\n    });\n  }\n  start(opts) {\n    return this._start(opts);\n  }\n  moveToNextMatch() {\n    if (this._model) {\n      this._model.moveToNextMatch();\n      return true;\n    }\n    return false;\n  }\n  moveToPrevMatch() {\n    if (this._model) {\n      this._model.moveToPrevMatch();\n      return true;\n    }\n    return false;\n  }\n  replace() {\n    if (this._model) {\n      this._model.replace();\n      return true;\n    }\n    return false;\n  }\n  replaceAll() {\n    if (this._model) {\n      this._model.replaceAll();\n      return true;\n    }\n    return false;\n  }\n  selectAllMatches() {\n    if (this._model) {\n      this._model.selectAllMatches();\n      this._editor.focus();\n      return true;\n    }\n    return false;\n  }\n  getGlobalBufferTerm() {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (this._editor.getOption(31 /* find */).globalFindClipboard && this._editor.hasModel() && !this._editor.getModel().isTooLargeForSyncing()) {\n        return this._clipboardService.readFindText();\n      }\n      return '';\n    });\n  }\n  setGlobalBufferTerm(text) {\n    if (this._editor.getOption(31 /* find */).globalFindClipboard && this._editor.hasModel() && !this._editor.getModel().isTooLargeForSyncing()) {\n      // intentionally not awaited\n      this._clipboardService.writeFindText(text);\n    }\n  }\n};\nCommonFindController.ID = 'editor.contrib.findController';\nCommonFindController = __decorate([__param(1, IContextKeyService), __param(2, IStorageService), __param(3, IClipboardService)], CommonFindController);\nexport { CommonFindController };\nlet FindController = class FindController extends CommonFindController {\n  constructor(editor, _contextViewService, _contextKeyService, _keybindingService, _themeService, _notificationService, _storageService, clipboardService) {\n    super(editor, _contextKeyService, _storageService, clipboardService);\n    this._contextViewService = _contextViewService;\n    this._keybindingService = _keybindingService;\n    this._themeService = _themeService;\n    this._notificationService = _notificationService;\n    this._widget = null;\n    this._findOptionsWidget = null;\n  }\n  _start(opts) {\n    const _super = Object.create(null, {\n      _start: {\n        get: () => super._start\n      }\n    });\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!this._widget) {\n        this._createFindWidget();\n      }\n      const selection = this._editor.getSelection();\n      let updateSearchScope = false;\n      switch (this._editor.getOption(31 /* find */).autoFindInSelection) {\n        case 'always':\n          updateSearchScope = true;\n          break;\n        case 'never':\n          updateSearchScope = false;\n          break;\n        case 'multiline':\n          const isSelectionMultipleLine = !!selection && selection.startLineNumber !== selection.endLineNumber;\n          updateSearchScope = isSelectionMultipleLine;\n          break;\n        default:\n          break;\n      }\n      opts.updateSearchScope = updateSearchScope;\n      yield _super._start.call(this, opts);\n      if (this._widget) {\n        if (opts.shouldFocus === 2 /* FocusReplaceInput */) {\n          this._widget.focusReplaceInput();\n        } else if (opts.shouldFocus === 1 /* FocusFindInput */) {\n          this._widget.focusFindInput();\n        }\n      }\n    });\n  }\n  highlightFindOptions() {\n    let ignoreWhenVisible = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    if (!this._widget) {\n      this._createFindWidget();\n    }\n    if (this._state.isRevealed && !ignoreWhenVisible) {\n      this._widget.highlightFindOptions();\n    } else {\n      this._findOptionsWidget.highlightFindOptions();\n    }\n  }\n  _createFindWidget() {\n    this._widget = this._register(new FindWidget(this._editor, this, this._state, this._contextViewService, this._keybindingService, this._contextKeyService, this._themeService, this._storageService, this._notificationService));\n    this._findOptionsWidget = this._register(new FindOptionsWidget(this._editor, this._state, this._keybindingService, this._themeService));\n  }\n};\nFindController = __decorate([__param(1, IContextViewService), __param(2, IContextKeyService), __param(3, IKeybindingService), __param(4, IThemeService), __param(5, INotificationService), __param(6, IStorageService), __param(7, IClipboardService)], FindController);\nexport { FindController };\nexport class StartFindAction extends MultiEditorAction {\n  constructor() {\n    super({\n      id: FIND_IDS.StartFindAction,\n      label: nls.localize('startFindAction', \"Find\"),\n      alias: 'Find',\n      precondition: ContextKeyExpr.or(ContextKeyExpr.has('editorFocus'), ContextKeyExpr.has('editorIsOpen')),\n      kbOpts: {\n        kbExpr: null,\n        primary: 2048 /* CtrlCmd */ | 36 /* KEY_F */,\n        weight: 100 /* EditorContrib */\n      },\n\n      menuOpts: {\n        menuId: MenuId.MenubarEditMenu,\n        group: '3_find',\n        title: nls.localize({\n          key: 'miFind',\n          comment: ['&& denotes a mnemonic']\n        }, \"&&Find\"),\n        order: 1\n      }\n    });\n  }\n  run(accessor, editor) {\n    return __awaiter(this, void 0, void 0, function* () {\n      let controller = CommonFindController.get(editor);\n      if (controller) {\n        yield controller.start({\n          forceRevealReplace: false,\n          seedSearchStringFromSelection: editor.getOption(31 /* find */).seedSearchStringFromSelection ? 'single' : 'none',\n          seedSearchStringFromGlobalClipboard: editor.getOption(31 /* find */).globalFindClipboard,\n          shouldFocus: 1 /* FocusFindInput */,\n          shouldAnimate: true,\n          updateSearchScope: false,\n          loop: editor.getOption(31 /* find */).loop\n        });\n      }\n    });\n  }\n}\nexport class StartFindWithSelectionAction extends EditorAction {\n  constructor() {\n    super({\n      id: FIND_IDS.StartFindWithSelection,\n      label: nls.localize('startFindWithSelectionAction', \"Find With Selection\"),\n      alias: 'Find With Selection',\n      precondition: undefined,\n      kbOpts: {\n        kbExpr: null,\n        primary: 0,\n        mac: {\n          primary: 2048 /* CtrlCmd */ | 35 /* KEY_E */\n        },\n\n        weight: 100 /* EditorContrib */\n      }\n    });\n  }\n\n  run(accessor, editor) {\n    return __awaiter(this, void 0, void 0, function* () {\n      let controller = CommonFindController.get(editor);\n      if (controller) {\n        yield controller.start({\n          forceRevealReplace: false,\n          seedSearchStringFromSelection: 'multiple',\n          seedSearchStringFromGlobalClipboard: false,\n          shouldFocus: 0 /* NoFocusChange */,\n          shouldAnimate: true,\n          updateSearchScope: false,\n          loop: editor.getOption(31 /* find */).loop\n        });\n        controller.setGlobalBufferTerm(controller.getState().searchString);\n      }\n    });\n  }\n}\nexport class MatchFindAction extends EditorAction {\n  run(accessor, editor) {\n    return __awaiter(this, void 0, void 0, function* () {\n      let controller = CommonFindController.get(editor);\n      if (controller && !this._run(controller)) {\n        yield controller.start({\n          forceRevealReplace: false,\n          seedSearchStringFromSelection: controller.getState().searchString.length === 0 && editor.getOption(31 /* find */).seedSearchStringFromSelection ? 'single' : 'none',\n          seedSearchStringFromGlobalClipboard: true,\n          shouldFocus: 0 /* NoFocusChange */,\n          shouldAnimate: true,\n          updateSearchScope: false,\n          loop: editor.getOption(31 /* find */).loop\n        });\n        this._run(controller);\n      }\n    });\n  }\n}\nexport class NextMatchFindAction extends MatchFindAction {\n  constructor() {\n    super({\n      id: FIND_IDS.NextMatchFindAction,\n      label: nls.localize('findNextMatchAction', \"Find Next\"),\n      alias: 'Find Next',\n      precondition: undefined,\n      kbOpts: {\n        kbExpr: EditorContextKeys.focus,\n        primary: 61 /* F3 */,\n        mac: {\n          primary: 2048 /* CtrlCmd */ | 37 /* KEY_G */,\n          secondary: [61 /* F3 */]\n        },\n        weight: 100 /* EditorContrib */\n      }\n    });\n  }\n\n  _run(controller) {\n    const result = controller.moveToNextMatch();\n    if (result) {\n      controller.editor.pushUndoStop();\n      return true;\n    }\n    return false;\n  }\n}\nexport class NextMatchFindAction2 extends MatchFindAction {\n  constructor() {\n    super({\n      id: FIND_IDS.NextMatchFindAction,\n      label: nls.localize('findNextMatchAction', \"Find Next\"),\n      alias: 'Find Next',\n      precondition: undefined,\n      kbOpts: {\n        kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, CONTEXT_FIND_INPUT_FOCUSED),\n        primary: 3 /* Enter */,\n        weight: 100 /* EditorContrib */\n      }\n    });\n  }\n\n  _run(controller) {\n    const result = controller.moveToNextMatch();\n    if (result) {\n      controller.editor.pushUndoStop();\n      return true;\n    }\n    return false;\n  }\n}\nexport class PreviousMatchFindAction extends MatchFindAction {\n  constructor() {\n    super({\n      id: FIND_IDS.PreviousMatchFindAction,\n      label: nls.localize('findPreviousMatchAction', \"Find Previous\"),\n      alias: 'Find Previous',\n      precondition: undefined,\n      kbOpts: {\n        kbExpr: EditorContextKeys.focus,\n        primary: 1024 /* Shift */ | 61 /* F3 */,\n        mac: {\n          primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 37 /* KEY_G */,\n          secondary: [1024 /* Shift */ | 61 /* F3 */]\n        },\n        weight: 100 /* EditorContrib */\n      }\n    });\n  }\n\n  _run(controller) {\n    return controller.moveToPrevMatch();\n  }\n}\nexport class PreviousMatchFindAction2 extends MatchFindAction {\n  constructor() {\n    super({\n      id: FIND_IDS.PreviousMatchFindAction,\n      label: nls.localize('findPreviousMatchAction', \"Find Previous\"),\n      alias: 'Find Previous',\n      precondition: undefined,\n      kbOpts: {\n        kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, CONTEXT_FIND_INPUT_FOCUSED),\n        primary: 1024 /* Shift */ | 3 /* Enter */,\n        weight: 100 /* EditorContrib */\n      }\n    });\n  }\n\n  _run(controller) {\n    return controller.moveToPrevMatch();\n  }\n}\nexport class SelectionMatchFindAction extends EditorAction {\n  run(accessor, editor) {\n    return __awaiter(this, void 0, void 0, function* () {\n      let controller = CommonFindController.get(editor);\n      if (!controller) {\n        return;\n      }\n      let selectionSearchString = getSelectionSearchString(editor);\n      if (selectionSearchString) {\n        controller.setSearchString(selectionSearchString);\n      }\n      if (!this._run(controller)) {\n        yield controller.start({\n          forceRevealReplace: false,\n          seedSearchStringFromSelection: editor.getOption(31 /* find */).seedSearchStringFromSelection ? 'single' : 'none',\n          seedSearchStringFromGlobalClipboard: false,\n          shouldFocus: 0 /* NoFocusChange */,\n          shouldAnimate: true,\n          updateSearchScope: false,\n          loop: editor.getOption(31 /* find */).loop\n        });\n        this._run(controller);\n      }\n    });\n  }\n}\nexport class NextSelectionMatchFindAction extends SelectionMatchFindAction {\n  constructor() {\n    super({\n      id: FIND_IDS.NextSelectionMatchFindAction,\n      label: nls.localize('nextSelectionMatchFindAction', \"Find Next Selection\"),\n      alias: 'Find Next Selection',\n      precondition: undefined,\n      kbOpts: {\n        kbExpr: EditorContextKeys.focus,\n        primary: 2048 /* CtrlCmd */ | 61 /* F3 */,\n        weight: 100 /* EditorContrib */\n      }\n    });\n  }\n\n  _run(controller) {\n    return controller.moveToNextMatch();\n  }\n}\nexport class PreviousSelectionMatchFindAction extends SelectionMatchFindAction {\n  constructor() {\n    super({\n      id: FIND_IDS.PreviousSelectionMatchFindAction,\n      label: nls.localize('previousSelectionMatchFindAction', \"Find Previous Selection\"),\n      alias: 'Find Previous Selection',\n      precondition: undefined,\n      kbOpts: {\n        kbExpr: EditorContextKeys.focus,\n        primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 61 /* F3 */,\n        weight: 100 /* EditorContrib */\n      }\n    });\n  }\n\n  _run(controller) {\n    return controller.moveToPrevMatch();\n  }\n}\nexport class StartFindReplaceAction extends MultiEditorAction {\n  constructor() {\n    super({\n      id: FIND_IDS.StartFindReplaceAction,\n      label: nls.localize('startReplace', \"Replace\"),\n      alias: 'Replace',\n      precondition: ContextKeyExpr.or(ContextKeyExpr.has('editorFocus'), ContextKeyExpr.has('editorIsOpen')),\n      kbOpts: {\n        kbExpr: null,\n        primary: 2048 /* CtrlCmd */ | 38 /* KEY_H */,\n        mac: {\n          primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 36 /* KEY_F */\n        },\n        weight: 100 /* EditorContrib */\n      },\n\n      menuOpts: {\n        menuId: MenuId.MenubarEditMenu,\n        group: '3_find',\n        title: nls.localize({\n          key: 'miReplace',\n          comment: ['&& denotes a mnemonic']\n        }, \"&&Replace\"),\n        order: 2\n      }\n    });\n  }\n  run(accessor, editor) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!editor.hasModel() || editor.getOption(75 /* readOnly */)) {\n        return;\n      }\n      let controller = CommonFindController.get(editor);\n      let currentSelection = editor.getSelection();\n      let findInputFocused = controller.isFindInputFocused();\n      // we only seed search string from selection when the current selection is single line and not empty,\n      // + the find input is not focused\n      let seedSearchStringFromSelection = !currentSelection.isEmpty() && currentSelection.startLineNumber === currentSelection.endLineNumber && editor.getOption(31 /* find */).seedSearchStringFromSelection && !findInputFocused;\n      /*\r\n       * if the existing search string in find widget is empty and we don't seed search string from selection, it means the Find Input is still empty, so we should focus the Find Input instead of Replace Input.\r\n             * findInputFocused true -> seedSearchStringFromSelection false, FocusReplaceInput\r\n       * findInputFocused false, seedSearchStringFromSelection true FocusReplaceInput\r\n       * findInputFocused false seedSearchStringFromSelection false FocusFindInput\r\n       */\n      let shouldFocus = findInputFocused || seedSearchStringFromSelection ? 2 /* FocusReplaceInput */ : 1 /* FocusFindInput */;\n      if (controller) {\n        yield controller.start({\n          forceRevealReplace: true,\n          seedSearchStringFromSelection: seedSearchStringFromSelection ? 'single' : 'none',\n          seedSearchStringFromGlobalClipboard: editor.getOption(31 /* find */).seedSearchStringFromSelection,\n          shouldFocus: shouldFocus,\n          shouldAnimate: true,\n          updateSearchScope: false,\n          loop: editor.getOption(31 /* find */).loop\n        });\n      }\n    });\n  }\n}\nregisterEditorContribution(CommonFindController.ID, FindController);\nexport const EditorStartFindAction = new StartFindAction();\nregisterMultiEditorAction(EditorStartFindAction);\nregisterEditorAction(StartFindWithSelectionAction);\nregisterEditorAction(NextMatchFindAction);\nregisterEditorAction(NextMatchFindAction2);\nregisterEditorAction(PreviousMatchFindAction);\nregisterEditorAction(PreviousMatchFindAction2);\nregisterEditorAction(NextSelectionMatchFindAction);\nregisterEditorAction(PreviousSelectionMatchFindAction);\nexport const EditorStartFindReplaceAction = new StartFindReplaceAction();\nregisterMultiEditorAction(EditorStartFindReplaceAction);\nconst FindCommand = EditorCommand.bindToContribution(CommonFindController.get);\nregisterEditorCommand(new FindCommand({\n  id: FIND_IDS.CloseFindWidgetCommand,\n  precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n  handler: x => x.closeFindWidget(),\n  kbOpts: {\n    weight: 100 /* EditorContrib */ + 5,\n    kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, ContextKeyExpr.not('isComposing')),\n    primary: 9 /* Escape */,\n    secondary: [1024 /* Shift */ | 9 /* Escape */]\n  }\n}));\n\nregisterEditorCommand(new FindCommand({\n  id: FIND_IDS.ToggleCaseSensitiveCommand,\n  precondition: undefined,\n  handler: x => x.toggleCaseSensitive(),\n  kbOpts: {\n    weight: 100 /* EditorContrib */ + 5,\n    kbExpr: EditorContextKeys.focus,\n    primary: ToggleCaseSensitiveKeybinding.primary,\n    mac: ToggleCaseSensitiveKeybinding.mac,\n    win: ToggleCaseSensitiveKeybinding.win,\n    linux: ToggleCaseSensitiveKeybinding.linux\n  }\n}));\nregisterEditorCommand(new FindCommand({\n  id: FIND_IDS.ToggleWholeWordCommand,\n  precondition: undefined,\n  handler: x => x.toggleWholeWords(),\n  kbOpts: {\n    weight: 100 /* EditorContrib */ + 5,\n    kbExpr: EditorContextKeys.focus,\n    primary: ToggleWholeWordKeybinding.primary,\n    mac: ToggleWholeWordKeybinding.mac,\n    win: ToggleWholeWordKeybinding.win,\n    linux: ToggleWholeWordKeybinding.linux\n  }\n}));\nregisterEditorCommand(new FindCommand({\n  id: FIND_IDS.ToggleRegexCommand,\n  precondition: undefined,\n  handler: x => x.toggleRegex(),\n  kbOpts: {\n    weight: 100 /* EditorContrib */ + 5,\n    kbExpr: EditorContextKeys.focus,\n    primary: ToggleRegexKeybinding.primary,\n    mac: ToggleRegexKeybinding.mac,\n    win: ToggleRegexKeybinding.win,\n    linux: ToggleRegexKeybinding.linux\n  }\n}));\nregisterEditorCommand(new FindCommand({\n  id: FIND_IDS.ToggleSearchScopeCommand,\n  precondition: undefined,\n  handler: x => x.toggleSearchScope(),\n  kbOpts: {\n    weight: 100 /* EditorContrib */ + 5,\n    kbExpr: EditorContextKeys.focus,\n    primary: ToggleSearchScopeKeybinding.primary,\n    mac: ToggleSearchScopeKeybinding.mac,\n    win: ToggleSearchScopeKeybinding.win,\n    linux: ToggleSearchScopeKeybinding.linux\n  }\n}));\nregisterEditorCommand(new FindCommand({\n  id: FIND_IDS.TogglePreserveCaseCommand,\n  precondition: undefined,\n  handler: x => x.togglePreserveCase(),\n  kbOpts: {\n    weight: 100 /* EditorContrib */ + 5,\n    kbExpr: EditorContextKeys.focus,\n    primary: TogglePreserveCaseKeybinding.primary,\n    mac: TogglePreserveCaseKeybinding.mac,\n    win: TogglePreserveCaseKeybinding.win,\n    linux: TogglePreserveCaseKeybinding.linux\n  }\n}));\nregisterEditorCommand(new FindCommand({\n  id: FIND_IDS.ReplaceOneAction,\n  precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n  handler: x => x.replace(),\n  kbOpts: {\n    weight: 100 /* EditorContrib */ + 5,\n    kbExpr: EditorContextKeys.focus,\n    primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 22 /* KEY_1 */\n  }\n}));\n\nregisterEditorCommand(new FindCommand({\n  id: FIND_IDS.ReplaceOneAction,\n  precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n  handler: x => x.replace(),\n  kbOpts: {\n    weight: 100 /* EditorContrib */ + 5,\n    kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, CONTEXT_REPLACE_INPUT_FOCUSED),\n    primary: 3 /* Enter */\n  }\n}));\n\nregisterEditorCommand(new FindCommand({\n  id: FIND_IDS.ReplaceAllAction,\n  precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n  handler: x => x.replaceAll(),\n  kbOpts: {\n    weight: 100 /* EditorContrib */ + 5,\n    kbExpr: EditorContextKeys.focus,\n    primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 3 /* Enter */\n  }\n}));\n\nregisterEditorCommand(new FindCommand({\n  id: FIND_IDS.ReplaceAllAction,\n  precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n  handler: x => x.replaceAll(),\n  kbOpts: {\n    weight: 100 /* EditorContrib */ + 5,\n    kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, CONTEXT_REPLACE_INPUT_FOCUSED),\n    primary: undefined,\n    mac: {\n      primary: 2048 /* CtrlCmd */ | 3 /* Enter */\n    }\n  }\n}));\n\nregisterEditorCommand(new FindCommand({\n  id: FIND_IDS.SelectAllMatchesAction,\n  precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n  handler: x => x.selectAllMatches(),\n  kbOpts: {\n    weight: 100 /* EditorContrib */ + 5,\n    kbExpr: EditorContextKeys.focus,\n    primary: 512 /* Alt */ | 3 /* Enter */\n  }\n}));","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","nls","Delayer","Disposable","strings","EditorAction","EditorCommand","registerEditorAction","registerEditorCommand","registerEditorContribution","MultiEditorAction","registerMultiEditorAction","EditorContextKeys","CONTEXT_FIND_INPUT_FOCUSED","CONTEXT_FIND_WIDGET_VISIBLE","FIND_IDS","FindModelBoundToEditorModel","ToggleCaseSensitiveKeybinding","TogglePreserveCaseKeybinding","ToggleRegexKeybinding","ToggleSearchScopeKeybinding","ToggleWholeWordKeybinding","CONTEXT_REPLACE_INPUT_FOCUSED","FindOptionsWidget","FindReplaceState","FindWidget","MenuId","IClipboardService","IContextKeyService","ContextKeyExpr","IContextViewService","IKeybindingService","IStorageService","IThemeService","INotificationService","SEARCH_STRING_MAX_LENGTH","getSelectionSearchString","editor","seedSearchStringFromSelection","undefined","hasModel","selection","getSelection","startLineNumber","endLineNumber","isEmpty","wordAtPosition","getConfiguredWordAtPosition","getStartPosition","word","getModel","getValueLengthInRange","getValueInRange","CommonFindController","constructor","contextKeyService","storageService","clipboardService","_editor","_findWidgetVisible","bindTo","_contextKeyService","_storageService","_clipboardService","_updateHistoryDelayer","_state","_register","loadQueryState","onFindReplaceStateChange","_onStateChanged","_model","onDidChangeModel","shouldRestartFind","isRevealed","disposeModel","change","searchScope","matchCase","getBoolean","wholeWord","isRegex","preserveCase","_start","forceRevealReplace","seedSearchStringFromGlobalClipboard","shouldFocus","shouldAnimate","updateSearchScope","loop","getOption","get","getContribution","ID","dispose","saveQueryState","set","reset","searchString","setGlobalBufferTerm","store","actualIsRegex","actualWholeWord","actualMatchCase","actualPreserveCase","isFindInputFocused","getValue","getState","closeFindWidget","focus","toggleCaseSensitive","highlightFindOptions","toggleWholeWords","toggleRegex","togglePreserveCase","toggleSearchScope","selections","getSelections","map","endColumn","setEndPosition","getLineMaxColumn","filter","element","setSearchString","escapeRegExpCharacters","ignoreWhenVisible","opts","stateChanges","selectionSearchString","getGlobalBufferTerm","isReplaceRevealed","currentSelections","some","start","moveToNextMatch","moveToPrevMatch","replace","replaceAll","selectAllMatches","globalFindClipboard","isTooLargeForSyncing","readFindText","text","writeFindText","FindController","_contextViewService","_keybindingService","_themeService","_notificationService","_widget","_findOptionsWidget","_super","create","_createFindWidget","autoFindInSelection","isSelectionMultipleLine","call","focusReplaceInput","focusFindInput","StartFindAction","id","label","localize","alias","precondition","or","has","kbOpts","kbExpr","primary","weight","menuOpts","menuId","MenubarEditMenu","group","title","comment","order","run","accessor","controller","StartFindWithSelectionAction","StartFindWithSelection","mac","MatchFindAction","_run","NextMatchFindAction","secondary","pushUndoStop","NextMatchFindAction2","and","PreviousMatchFindAction","PreviousMatchFindAction2","SelectionMatchFindAction","NextSelectionMatchFindAction","PreviousSelectionMatchFindAction","StartFindReplaceAction","currentSelection","findInputFocused","EditorStartFindAction","EditorStartFindReplaceAction","FindCommand","bindToContribution","CloseFindWidgetCommand","handler","x","not","ToggleCaseSensitiveCommand","win","linux","ToggleWholeWordCommand","ToggleRegexCommand","ToggleSearchScopeCommand","TogglePreserveCaseCommand","ReplaceOneAction","ReplaceAllAction","SelectAllMatchesAction"],"sources":["C:/Users/Administrator/Desktop/sqllineage-master/sqllineagejs/node_modules/monaco-editor/esm/vs/editor/contrib/find/findController.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport * as nls from '../../../nls.js';\r\nimport { Delayer } from '../../../base/common/async.js';\r\nimport { Disposable } from '../../../base/common/lifecycle.js';\r\nimport * as strings from '../../../base/common/strings.js';\r\nimport { EditorAction, EditorCommand, registerEditorAction, registerEditorCommand, registerEditorContribution, MultiEditorAction, registerMultiEditorAction } from '../../browser/editorExtensions.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { CONTEXT_FIND_INPUT_FOCUSED, CONTEXT_FIND_WIDGET_VISIBLE, FIND_IDS, FindModelBoundToEditorModel, ToggleCaseSensitiveKeybinding, TogglePreserveCaseKeybinding, ToggleRegexKeybinding, ToggleSearchScopeKeybinding, ToggleWholeWordKeybinding, CONTEXT_REPLACE_INPUT_FOCUSED } from './findModel.js';\r\nimport { FindOptionsWidget } from './findOptionsWidget.js';\r\nimport { FindReplaceState } from './findState.js';\r\nimport { FindWidget } from './findWidget.js';\r\nimport { MenuId } from '../../../platform/actions/common/actions.js';\r\nimport { IClipboardService } from '../../../platform/clipboard/common/clipboardService.js';\r\nimport { IContextKeyService, ContextKeyExpr } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { IContextViewService } from '../../../platform/contextview/browser/contextView.js';\r\nimport { IKeybindingService } from '../../../platform/keybinding/common/keybinding.js';\r\nimport { IStorageService } from '../../../platform/storage/common/storage.js';\r\nimport { IThemeService } from '../../../platform/theme/common/themeService.js';\r\nimport { INotificationService } from '../../../platform/notification/common/notification.js';\r\nconst SEARCH_STRING_MAX_LENGTH = 524288;\r\nexport function getSelectionSearchString(editor, seedSearchStringFromSelection = 'single') {\r\n    if (!editor.hasModel()) {\r\n        return null;\r\n    }\r\n    const selection = editor.getSelection();\r\n    // if selection spans multiple lines, default search string to empty\r\n    if ((seedSearchStringFromSelection === 'single' && selection.startLineNumber === selection.endLineNumber)\r\n        || seedSearchStringFromSelection === 'multiple') {\r\n        if (selection.isEmpty()) {\r\n            const wordAtPosition = editor.getConfiguredWordAtPosition(selection.getStartPosition());\r\n            if (wordAtPosition) {\r\n                return wordAtPosition.word;\r\n            }\r\n        }\r\n        else {\r\n            if (editor.getModel().getValueLengthInRange(selection) < SEARCH_STRING_MAX_LENGTH) {\r\n                return editor.getModel().getValueInRange(selection);\r\n            }\r\n        }\r\n    }\r\n    return null;\r\n}\r\nlet CommonFindController = class CommonFindController extends Disposable {\r\n    constructor(editor, contextKeyService, storageService, clipboardService) {\r\n        super();\r\n        this._editor = editor;\r\n        this._findWidgetVisible = CONTEXT_FIND_WIDGET_VISIBLE.bindTo(contextKeyService);\r\n        this._contextKeyService = contextKeyService;\r\n        this._storageService = storageService;\r\n        this._clipboardService = clipboardService;\r\n        this._updateHistoryDelayer = new Delayer(500);\r\n        this._state = this._register(new FindReplaceState());\r\n        this.loadQueryState();\r\n        this._register(this._state.onFindReplaceStateChange((e) => this._onStateChanged(e)));\r\n        this._model = null;\r\n        this._register(this._editor.onDidChangeModel(() => {\r\n            let shouldRestartFind = (this._editor.getModel() && this._state.isRevealed);\r\n            this.disposeModel();\r\n            this._state.change({\r\n                searchScope: null,\r\n                matchCase: this._storageService.getBoolean('editor.matchCase', 1 /* WORKSPACE */, false),\r\n                wholeWord: this._storageService.getBoolean('editor.wholeWord', 1 /* WORKSPACE */, false),\r\n                isRegex: this._storageService.getBoolean('editor.isRegex', 1 /* WORKSPACE */, false),\r\n                preserveCase: this._storageService.getBoolean('editor.preserveCase', 1 /* WORKSPACE */, false)\r\n            }, false);\r\n            if (shouldRestartFind) {\r\n                this._start({\r\n                    forceRevealReplace: false,\r\n                    seedSearchStringFromSelection: 'none',\r\n                    seedSearchStringFromGlobalClipboard: false,\r\n                    shouldFocus: 0 /* NoFocusChange */,\r\n                    shouldAnimate: false,\r\n                    updateSearchScope: false,\r\n                    loop: this._editor.getOption(31 /* find */).loop\r\n                });\r\n            }\r\n        }));\r\n    }\r\n    get editor() {\r\n        return this._editor;\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(CommonFindController.ID);\r\n    }\r\n    dispose() {\r\n        this.disposeModel();\r\n        super.dispose();\r\n    }\r\n    disposeModel() {\r\n        if (this._model) {\r\n            this._model.dispose();\r\n            this._model = null;\r\n        }\r\n    }\r\n    _onStateChanged(e) {\r\n        this.saveQueryState(e);\r\n        if (e.isRevealed) {\r\n            if (this._state.isRevealed) {\r\n                this._findWidgetVisible.set(true);\r\n            }\r\n            else {\r\n                this._findWidgetVisible.reset();\r\n                this.disposeModel();\r\n            }\r\n        }\r\n        if (e.searchString) {\r\n            this.setGlobalBufferTerm(this._state.searchString);\r\n        }\r\n    }\r\n    saveQueryState(e) {\r\n        if (e.isRegex) {\r\n            this._storageService.store('editor.isRegex', this._state.actualIsRegex, 1 /* WORKSPACE */, 0 /* USER */);\r\n        }\r\n        if (e.wholeWord) {\r\n            this._storageService.store('editor.wholeWord', this._state.actualWholeWord, 1 /* WORKSPACE */, 0 /* USER */);\r\n        }\r\n        if (e.matchCase) {\r\n            this._storageService.store('editor.matchCase', this._state.actualMatchCase, 1 /* WORKSPACE */, 0 /* USER */);\r\n        }\r\n        if (e.preserveCase) {\r\n            this._storageService.store('editor.preserveCase', this._state.actualPreserveCase, 1 /* WORKSPACE */, 0 /* USER */);\r\n        }\r\n    }\r\n    loadQueryState() {\r\n        this._state.change({\r\n            matchCase: this._storageService.getBoolean('editor.matchCase', 1 /* WORKSPACE */, this._state.matchCase),\r\n            wholeWord: this._storageService.getBoolean('editor.wholeWord', 1 /* WORKSPACE */, this._state.wholeWord),\r\n            isRegex: this._storageService.getBoolean('editor.isRegex', 1 /* WORKSPACE */, this._state.isRegex),\r\n            preserveCase: this._storageService.getBoolean('editor.preserveCase', 1 /* WORKSPACE */, this._state.preserveCase)\r\n        }, false);\r\n    }\r\n    isFindInputFocused() {\r\n        return !!CONTEXT_FIND_INPUT_FOCUSED.getValue(this._contextKeyService);\r\n    }\r\n    getState() {\r\n        return this._state;\r\n    }\r\n    closeFindWidget() {\r\n        this._state.change({\r\n            isRevealed: false,\r\n            searchScope: null\r\n        }, false);\r\n        this._editor.focus();\r\n    }\r\n    toggleCaseSensitive() {\r\n        this._state.change({ matchCase: !this._state.matchCase }, false);\r\n        if (!this._state.isRevealed) {\r\n            this.highlightFindOptions();\r\n        }\r\n    }\r\n    toggleWholeWords() {\r\n        this._state.change({ wholeWord: !this._state.wholeWord }, false);\r\n        if (!this._state.isRevealed) {\r\n            this.highlightFindOptions();\r\n        }\r\n    }\r\n    toggleRegex() {\r\n        this._state.change({ isRegex: !this._state.isRegex }, false);\r\n        if (!this._state.isRevealed) {\r\n            this.highlightFindOptions();\r\n        }\r\n    }\r\n    togglePreserveCase() {\r\n        this._state.change({ preserveCase: !this._state.preserveCase }, false);\r\n        if (!this._state.isRevealed) {\r\n            this.highlightFindOptions();\r\n        }\r\n    }\r\n    toggleSearchScope() {\r\n        if (this._state.searchScope) {\r\n            this._state.change({ searchScope: null }, true);\r\n        }\r\n        else {\r\n            if (this._editor.hasModel()) {\r\n                let selections = this._editor.getSelections();\r\n                selections.map(selection => {\r\n                    if (selection.endColumn === 1 && selection.endLineNumber > selection.startLineNumber) {\r\n                        selection = selection.setEndPosition(selection.endLineNumber - 1, this._editor.getModel().getLineMaxColumn(selection.endLineNumber - 1));\r\n                    }\r\n                    if (!selection.isEmpty()) {\r\n                        return selection;\r\n                    }\r\n                    return null;\r\n                }).filter(element => !!element);\r\n                if (selections.length) {\r\n                    this._state.change({ searchScope: selections }, true);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    setSearchString(searchString) {\r\n        if (this._state.isRegex) {\r\n            searchString = strings.escapeRegExpCharacters(searchString);\r\n        }\r\n        this._state.change({ searchString: searchString }, false);\r\n    }\r\n    highlightFindOptions(ignoreWhenVisible = false) {\r\n        // overwritten in subclass\r\n    }\r\n    _start(opts) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this.disposeModel();\r\n            if (!this._editor.hasModel()) {\r\n                // cannot do anything with an editor that doesn't have a model...\r\n                return;\r\n            }\r\n            let stateChanges = {\r\n                isRevealed: true\r\n            };\r\n            if (opts.seedSearchStringFromSelection === 'single') {\r\n                let selectionSearchString = getSelectionSearchString(this._editor, opts.seedSearchStringFromSelection);\r\n                if (selectionSearchString) {\r\n                    if (this._state.isRegex) {\r\n                        stateChanges.searchString = strings.escapeRegExpCharacters(selectionSearchString);\r\n                    }\r\n                    else {\r\n                        stateChanges.searchString = selectionSearchString;\r\n                    }\r\n                }\r\n            }\r\n            else if (opts.seedSearchStringFromSelection === 'multiple' && !opts.updateSearchScope) {\r\n                let selectionSearchString = getSelectionSearchString(this._editor, opts.seedSearchStringFromSelection);\r\n                if (selectionSearchString) {\r\n                    stateChanges.searchString = selectionSearchString;\r\n                }\r\n            }\r\n            if (!stateChanges.searchString && opts.seedSearchStringFromGlobalClipboard) {\r\n                let selectionSearchString = yield this.getGlobalBufferTerm();\r\n                if (!this._editor.hasModel()) {\r\n                    // the editor has lost its model in the meantime\r\n                    return;\r\n                }\r\n                if (selectionSearchString) {\r\n                    stateChanges.searchString = selectionSearchString;\r\n                }\r\n            }\r\n            // Overwrite isReplaceRevealed\r\n            if (opts.forceRevealReplace) {\r\n                stateChanges.isReplaceRevealed = true;\r\n            }\r\n            else if (!this._findWidgetVisible.get()) {\r\n                stateChanges.isReplaceRevealed = false;\r\n            }\r\n            if (opts.updateSearchScope) {\r\n                let currentSelections = this._editor.getSelections();\r\n                if (currentSelections.some(selection => !selection.isEmpty())) {\r\n                    stateChanges.searchScope = currentSelections;\r\n                }\r\n            }\r\n            stateChanges.loop = opts.loop;\r\n            this._state.change(stateChanges, false);\r\n            if (!this._model) {\r\n                this._model = new FindModelBoundToEditorModel(this._editor, this._state);\r\n            }\r\n        });\r\n    }\r\n    start(opts) {\r\n        return this._start(opts);\r\n    }\r\n    moveToNextMatch() {\r\n        if (this._model) {\r\n            this._model.moveToNextMatch();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    moveToPrevMatch() {\r\n        if (this._model) {\r\n            this._model.moveToPrevMatch();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    replace() {\r\n        if (this._model) {\r\n            this._model.replace();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    replaceAll() {\r\n        if (this._model) {\r\n            this._model.replaceAll();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    selectAllMatches() {\r\n        if (this._model) {\r\n            this._model.selectAllMatches();\r\n            this._editor.focus();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    getGlobalBufferTerm() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (this._editor.getOption(31 /* find */).globalFindClipboard\r\n                && this._editor.hasModel()\r\n                && !this._editor.getModel().isTooLargeForSyncing()) {\r\n                return this._clipboardService.readFindText();\r\n            }\r\n            return '';\r\n        });\r\n    }\r\n    setGlobalBufferTerm(text) {\r\n        if (this._editor.getOption(31 /* find */).globalFindClipboard\r\n            && this._editor.hasModel()\r\n            && !this._editor.getModel().isTooLargeForSyncing()) {\r\n            // intentionally not awaited\r\n            this._clipboardService.writeFindText(text);\r\n        }\r\n    }\r\n};\r\nCommonFindController.ID = 'editor.contrib.findController';\r\nCommonFindController = __decorate([\r\n    __param(1, IContextKeyService),\r\n    __param(2, IStorageService),\r\n    __param(3, IClipboardService)\r\n], CommonFindController);\r\nexport { CommonFindController };\r\nlet FindController = class FindController extends CommonFindController {\r\n    constructor(editor, _contextViewService, _contextKeyService, _keybindingService, _themeService, _notificationService, _storageService, clipboardService) {\r\n        super(editor, _contextKeyService, _storageService, clipboardService);\r\n        this._contextViewService = _contextViewService;\r\n        this._keybindingService = _keybindingService;\r\n        this._themeService = _themeService;\r\n        this._notificationService = _notificationService;\r\n        this._widget = null;\r\n        this._findOptionsWidget = null;\r\n    }\r\n    _start(opts) {\r\n        const _super = Object.create(null, {\r\n            _start: { get: () => super._start }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!this._widget) {\r\n                this._createFindWidget();\r\n            }\r\n            const selection = this._editor.getSelection();\r\n            let updateSearchScope = false;\r\n            switch (this._editor.getOption(31 /* find */).autoFindInSelection) {\r\n                case 'always':\r\n                    updateSearchScope = true;\r\n                    break;\r\n                case 'never':\r\n                    updateSearchScope = false;\r\n                    break;\r\n                case 'multiline':\r\n                    const isSelectionMultipleLine = !!selection && selection.startLineNumber !== selection.endLineNumber;\r\n                    updateSearchScope = isSelectionMultipleLine;\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            opts.updateSearchScope = updateSearchScope;\r\n            yield _super._start.call(this, opts);\r\n            if (this._widget) {\r\n                if (opts.shouldFocus === 2 /* FocusReplaceInput */) {\r\n                    this._widget.focusReplaceInput();\r\n                }\r\n                else if (opts.shouldFocus === 1 /* FocusFindInput */) {\r\n                    this._widget.focusFindInput();\r\n                }\r\n            }\r\n        });\r\n    }\r\n    highlightFindOptions(ignoreWhenVisible = false) {\r\n        if (!this._widget) {\r\n            this._createFindWidget();\r\n        }\r\n        if (this._state.isRevealed && !ignoreWhenVisible) {\r\n            this._widget.highlightFindOptions();\r\n        }\r\n        else {\r\n            this._findOptionsWidget.highlightFindOptions();\r\n        }\r\n    }\r\n    _createFindWidget() {\r\n        this._widget = this._register(new FindWidget(this._editor, this, this._state, this._contextViewService, this._keybindingService, this._contextKeyService, this._themeService, this._storageService, this._notificationService));\r\n        this._findOptionsWidget = this._register(new FindOptionsWidget(this._editor, this._state, this._keybindingService, this._themeService));\r\n    }\r\n};\r\nFindController = __decorate([\r\n    __param(1, IContextViewService),\r\n    __param(2, IContextKeyService),\r\n    __param(3, IKeybindingService),\r\n    __param(4, IThemeService),\r\n    __param(5, INotificationService),\r\n    __param(6, IStorageService),\r\n    __param(7, IClipboardService)\r\n], FindController);\r\nexport { FindController };\r\nexport class StartFindAction extends MultiEditorAction {\r\n    constructor() {\r\n        super({\r\n            id: FIND_IDS.StartFindAction,\r\n            label: nls.localize('startFindAction', \"Find\"),\r\n            alias: 'Find',\r\n            precondition: ContextKeyExpr.or(ContextKeyExpr.has('editorFocus'), ContextKeyExpr.has('editorIsOpen')),\r\n            kbOpts: {\r\n                kbExpr: null,\r\n                primary: 2048 /* CtrlCmd */ | 36 /* KEY_F */,\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            menuOpts: {\r\n                menuId: MenuId.MenubarEditMenu,\r\n                group: '3_find',\r\n                title: nls.localize({ key: 'miFind', comment: ['&& denotes a mnemonic'] }, \"&&Find\"),\r\n                order: 1\r\n            }\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let controller = CommonFindController.get(editor);\r\n            if (controller) {\r\n                yield controller.start({\r\n                    forceRevealReplace: false,\r\n                    seedSearchStringFromSelection: editor.getOption(31 /* find */).seedSearchStringFromSelection ? 'single' : 'none',\r\n                    seedSearchStringFromGlobalClipboard: editor.getOption(31 /* find */).globalFindClipboard,\r\n                    shouldFocus: 1 /* FocusFindInput */,\r\n                    shouldAnimate: true,\r\n                    updateSearchScope: false,\r\n                    loop: editor.getOption(31 /* find */).loop\r\n                });\r\n            }\r\n        });\r\n    }\r\n}\r\nexport class StartFindWithSelectionAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: FIND_IDS.StartFindWithSelection,\r\n            label: nls.localize('startFindWithSelectionAction', \"Find With Selection\"),\r\n            alias: 'Find With Selection',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: null,\r\n                primary: 0,\r\n                mac: {\r\n                    primary: 2048 /* CtrlCmd */ | 35 /* KEY_E */,\r\n                },\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let controller = CommonFindController.get(editor);\r\n            if (controller) {\r\n                yield controller.start({\r\n                    forceRevealReplace: false,\r\n                    seedSearchStringFromSelection: 'multiple',\r\n                    seedSearchStringFromGlobalClipboard: false,\r\n                    shouldFocus: 0 /* NoFocusChange */,\r\n                    shouldAnimate: true,\r\n                    updateSearchScope: false,\r\n                    loop: editor.getOption(31 /* find */).loop\r\n                });\r\n                controller.setGlobalBufferTerm(controller.getState().searchString);\r\n            }\r\n        });\r\n    }\r\n}\r\nexport class MatchFindAction extends EditorAction {\r\n    run(accessor, editor) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let controller = CommonFindController.get(editor);\r\n            if (controller && !this._run(controller)) {\r\n                yield controller.start({\r\n                    forceRevealReplace: false,\r\n                    seedSearchStringFromSelection: (controller.getState().searchString.length === 0) && editor.getOption(31 /* find */).seedSearchStringFromSelection ? 'single' : 'none',\r\n                    seedSearchStringFromGlobalClipboard: true,\r\n                    shouldFocus: 0 /* NoFocusChange */,\r\n                    shouldAnimate: true,\r\n                    updateSearchScope: false,\r\n                    loop: editor.getOption(31 /* find */).loop\r\n                });\r\n                this._run(controller);\r\n            }\r\n        });\r\n    }\r\n}\r\nexport class NextMatchFindAction extends MatchFindAction {\r\n    constructor() {\r\n        super({\r\n            id: FIND_IDS.NextMatchFindAction,\r\n            label: nls.localize('findNextMatchAction', \"Find Next\"),\r\n            alias: 'Find Next',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.focus,\r\n                primary: 61 /* F3 */,\r\n                mac: { primary: 2048 /* CtrlCmd */ | 37 /* KEY_G */, secondary: [61 /* F3 */] },\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    _run(controller) {\r\n        const result = controller.moveToNextMatch();\r\n        if (result) {\r\n            controller.editor.pushUndoStop();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\nexport class NextMatchFindAction2 extends MatchFindAction {\r\n    constructor() {\r\n        super({\r\n            id: FIND_IDS.NextMatchFindAction,\r\n            label: nls.localize('findNextMatchAction', \"Find Next\"),\r\n            alias: 'Find Next',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, CONTEXT_FIND_INPUT_FOCUSED),\r\n                primary: 3 /* Enter */,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    _run(controller) {\r\n        const result = controller.moveToNextMatch();\r\n        if (result) {\r\n            controller.editor.pushUndoStop();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\nexport class PreviousMatchFindAction extends MatchFindAction {\r\n    constructor() {\r\n        super({\r\n            id: FIND_IDS.PreviousMatchFindAction,\r\n            label: nls.localize('findPreviousMatchAction', \"Find Previous\"),\r\n            alias: 'Find Previous',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.focus,\r\n                primary: 1024 /* Shift */ | 61 /* F3 */,\r\n                mac: { primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 37 /* KEY_G */, secondary: [1024 /* Shift */ | 61 /* F3 */] },\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    _run(controller) {\r\n        return controller.moveToPrevMatch();\r\n    }\r\n}\r\nexport class PreviousMatchFindAction2 extends MatchFindAction {\r\n    constructor() {\r\n        super({\r\n            id: FIND_IDS.PreviousMatchFindAction,\r\n            label: nls.localize('findPreviousMatchAction', \"Find Previous\"),\r\n            alias: 'Find Previous',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, CONTEXT_FIND_INPUT_FOCUSED),\r\n                primary: 1024 /* Shift */ | 3 /* Enter */,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    _run(controller) {\r\n        return controller.moveToPrevMatch();\r\n    }\r\n}\r\nexport class SelectionMatchFindAction extends EditorAction {\r\n    run(accessor, editor) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let controller = CommonFindController.get(editor);\r\n            if (!controller) {\r\n                return;\r\n            }\r\n            let selectionSearchString = getSelectionSearchString(editor);\r\n            if (selectionSearchString) {\r\n                controller.setSearchString(selectionSearchString);\r\n            }\r\n            if (!this._run(controller)) {\r\n                yield controller.start({\r\n                    forceRevealReplace: false,\r\n                    seedSearchStringFromSelection: editor.getOption(31 /* find */).seedSearchStringFromSelection ? 'single' : 'none',\r\n                    seedSearchStringFromGlobalClipboard: false,\r\n                    shouldFocus: 0 /* NoFocusChange */,\r\n                    shouldAnimate: true,\r\n                    updateSearchScope: false,\r\n                    loop: editor.getOption(31 /* find */).loop\r\n                });\r\n                this._run(controller);\r\n            }\r\n        });\r\n    }\r\n}\r\nexport class NextSelectionMatchFindAction extends SelectionMatchFindAction {\r\n    constructor() {\r\n        super({\r\n            id: FIND_IDS.NextSelectionMatchFindAction,\r\n            label: nls.localize('nextSelectionMatchFindAction', \"Find Next Selection\"),\r\n            alias: 'Find Next Selection',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.focus,\r\n                primary: 2048 /* CtrlCmd */ | 61 /* F3 */,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    _run(controller) {\r\n        return controller.moveToNextMatch();\r\n    }\r\n}\r\nexport class PreviousSelectionMatchFindAction extends SelectionMatchFindAction {\r\n    constructor() {\r\n        super({\r\n            id: FIND_IDS.PreviousSelectionMatchFindAction,\r\n            label: nls.localize('previousSelectionMatchFindAction', \"Find Previous Selection\"),\r\n            alias: 'Find Previous Selection',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.focus,\r\n                primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 61 /* F3 */,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    _run(controller) {\r\n        return controller.moveToPrevMatch();\r\n    }\r\n}\r\nexport class StartFindReplaceAction extends MultiEditorAction {\r\n    constructor() {\r\n        super({\r\n            id: FIND_IDS.StartFindReplaceAction,\r\n            label: nls.localize('startReplace', \"Replace\"),\r\n            alias: 'Replace',\r\n            precondition: ContextKeyExpr.or(ContextKeyExpr.has('editorFocus'), ContextKeyExpr.has('editorIsOpen')),\r\n            kbOpts: {\r\n                kbExpr: null,\r\n                primary: 2048 /* CtrlCmd */ | 38 /* KEY_H */,\r\n                mac: { primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 36 /* KEY_F */ },\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            menuOpts: {\r\n                menuId: MenuId.MenubarEditMenu,\r\n                group: '3_find',\r\n                title: nls.localize({ key: 'miReplace', comment: ['&& denotes a mnemonic'] }, \"&&Replace\"),\r\n                order: 2\r\n            }\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!editor.hasModel() || editor.getOption(75 /* readOnly */)) {\r\n                return;\r\n            }\r\n            let controller = CommonFindController.get(editor);\r\n            let currentSelection = editor.getSelection();\r\n            let findInputFocused = controller.isFindInputFocused();\r\n            // we only seed search string from selection when the current selection is single line and not empty,\r\n            // + the find input is not focused\r\n            let seedSearchStringFromSelection = !currentSelection.isEmpty()\r\n                && currentSelection.startLineNumber === currentSelection.endLineNumber && editor.getOption(31 /* find */).seedSearchStringFromSelection\r\n                && !findInputFocused;\r\n            /*\r\n             * if the existing search string in find widget is empty and we don't seed search string from selection, it means the Find Input is still empty, so we should focus the Find Input instead of Replace Input.\r\n    \r\n             * findInputFocused true -> seedSearchStringFromSelection false, FocusReplaceInput\r\n             * findInputFocused false, seedSearchStringFromSelection true FocusReplaceInput\r\n             * findInputFocused false seedSearchStringFromSelection false FocusFindInput\r\n             */\r\n            let shouldFocus = (findInputFocused || seedSearchStringFromSelection) ?\r\n                2 /* FocusReplaceInput */ : 1 /* FocusFindInput */;\r\n            if (controller) {\r\n                yield controller.start({\r\n                    forceRevealReplace: true,\r\n                    seedSearchStringFromSelection: seedSearchStringFromSelection ? 'single' : 'none',\r\n                    seedSearchStringFromGlobalClipboard: editor.getOption(31 /* find */).seedSearchStringFromSelection,\r\n                    shouldFocus: shouldFocus,\r\n                    shouldAnimate: true,\r\n                    updateSearchScope: false,\r\n                    loop: editor.getOption(31 /* find */).loop\r\n                });\r\n            }\r\n        });\r\n    }\r\n}\r\nregisterEditorContribution(CommonFindController.ID, FindController);\r\nexport const EditorStartFindAction = new StartFindAction();\r\nregisterMultiEditorAction(EditorStartFindAction);\r\nregisterEditorAction(StartFindWithSelectionAction);\r\nregisterEditorAction(NextMatchFindAction);\r\nregisterEditorAction(NextMatchFindAction2);\r\nregisterEditorAction(PreviousMatchFindAction);\r\nregisterEditorAction(PreviousMatchFindAction2);\r\nregisterEditorAction(NextSelectionMatchFindAction);\r\nregisterEditorAction(PreviousSelectionMatchFindAction);\r\nexport const EditorStartFindReplaceAction = new StartFindReplaceAction();\r\nregisterMultiEditorAction(EditorStartFindReplaceAction);\r\nconst FindCommand = EditorCommand.bindToContribution(CommonFindController.get);\r\nregisterEditorCommand(new FindCommand({\r\n    id: FIND_IDS.CloseFindWidgetCommand,\r\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\r\n    handler: x => x.closeFindWidget(),\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 5,\r\n        kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, ContextKeyExpr.not('isComposing')),\r\n        primary: 9 /* Escape */,\r\n        secondary: [1024 /* Shift */ | 9 /* Escape */]\r\n    }\r\n}));\r\nregisterEditorCommand(new FindCommand({\r\n    id: FIND_IDS.ToggleCaseSensitiveCommand,\r\n    precondition: undefined,\r\n    handler: x => x.toggleCaseSensitive(),\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 5,\r\n        kbExpr: EditorContextKeys.focus,\r\n        primary: ToggleCaseSensitiveKeybinding.primary,\r\n        mac: ToggleCaseSensitiveKeybinding.mac,\r\n        win: ToggleCaseSensitiveKeybinding.win,\r\n        linux: ToggleCaseSensitiveKeybinding.linux\r\n    }\r\n}));\r\nregisterEditorCommand(new FindCommand({\r\n    id: FIND_IDS.ToggleWholeWordCommand,\r\n    precondition: undefined,\r\n    handler: x => x.toggleWholeWords(),\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 5,\r\n        kbExpr: EditorContextKeys.focus,\r\n        primary: ToggleWholeWordKeybinding.primary,\r\n        mac: ToggleWholeWordKeybinding.mac,\r\n        win: ToggleWholeWordKeybinding.win,\r\n        linux: ToggleWholeWordKeybinding.linux\r\n    }\r\n}));\r\nregisterEditorCommand(new FindCommand({\r\n    id: FIND_IDS.ToggleRegexCommand,\r\n    precondition: undefined,\r\n    handler: x => x.toggleRegex(),\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 5,\r\n        kbExpr: EditorContextKeys.focus,\r\n        primary: ToggleRegexKeybinding.primary,\r\n        mac: ToggleRegexKeybinding.mac,\r\n        win: ToggleRegexKeybinding.win,\r\n        linux: ToggleRegexKeybinding.linux\r\n    }\r\n}));\r\nregisterEditorCommand(new FindCommand({\r\n    id: FIND_IDS.ToggleSearchScopeCommand,\r\n    precondition: undefined,\r\n    handler: x => x.toggleSearchScope(),\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 5,\r\n        kbExpr: EditorContextKeys.focus,\r\n        primary: ToggleSearchScopeKeybinding.primary,\r\n        mac: ToggleSearchScopeKeybinding.mac,\r\n        win: ToggleSearchScopeKeybinding.win,\r\n        linux: ToggleSearchScopeKeybinding.linux\r\n    }\r\n}));\r\nregisterEditorCommand(new FindCommand({\r\n    id: FIND_IDS.TogglePreserveCaseCommand,\r\n    precondition: undefined,\r\n    handler: x => x.togglePreserveCase(),\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 5,\r\n        kbExpr: EditorContextKeys.focus,\r\n        primary: TogglePreserveCaseKeybinding.primary,\r\n        mac: TogglePreserveCaseKeybinding.mac,\r\n        win: TogglePreserveCaseKeybinding.win,\r\n        linux: TogglePreserveCaseKeybinding.linux\r\n    }\r\n}));\r\nregisterEditorCommand(new FindCommand({\r\n    id: FIND_IDS.ReplaceOneAction,\r\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\r\n    handler: x => x.replace(),\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 5,\r\n        kbExpr: EditorContextKeys.focus,\r\n        primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 22 /* KEY_1 */\r\n    }\r\n}));\r\nregisterEditorCommand(new FindCommand({\r\n    id: FIND_IDS.ReplaceOneAction,\r\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\r\n    handler: x => x.replace(),\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 5,\r\n        kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, CONTEXT_REPLACE_INPUT_FOCUSED),\r\n        primary: 3 /* Enter */\r\n    }\r\n}));\r\nregisterEditorCommand(new FindCommand({\r\n    id: FIND_IDS.ReplaceAllAction,\r\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\r\n    handler: x => x.replaceAll(),\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 5,\r\n        kbExpr: EditorContextKeys.focus,\r\n        primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 3 /* Enter */\r\n    }\r\n}));\r\nregisterEditorCommand(new FindCommand({\r\n    id: FIND_IDS.ReplaceAllAction,\r\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\r\n    handler: x => x.replaceAll(),\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 5,\r\n        kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, CONTEXT_REPLACE_INPUT_FOCUSED),\r\n        primary: undefined,\r\n        mac: {\r\n            primary: 2048 /* CtrlCmd */ | 3 /* Enter */,\r\n        }\r\n    }\r\n}));\r\nregisterEditorCommand(new FindCommand({\r\n    id: FIND_IDS.SelectAllMatchesAction,\r\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\r\n    handler: x => x.selectAllMatches(),\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 5,\r\n        kbExpr: EditorContextKeys.focus,\r\n        primary: 512 /* Alt */ | 3 /* Enter */\r\n    }\r\n}));\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,IAAIA,UAAU,GAAI,IAAI,IAAI,IAAI,CAACA,UAAU,IAAK,UAAUC,UAAU,EAAEC,MAAM,EAAEC,GAAG,EAAEC,IAAI,EAAE;EACnF,IAAIC,CAAC,GAAGC,SAAS,CAACC,MAAM;IAAEC,CAAC,GAAGH,CAAC,GAAG,CAAC,GAAGH,MAAM,GAAGE,IAAI,KAAK,IAAI,GAAGA,IAAI,GAAGK,MAAM,CAACC,wBAAwB,CAACR,MAAM,EAAEC,GAAG,CAAC,GAAGC,IAAI;IAAEO,CAAC;EAC5H,IAAI,OAAOC,OAAO,KAAK,QAAQ,IAAI,OAAOA,OAAO,CAACC,QAAQ,KAAK,UAAU,EAAEL,CAAC,GAAGI,OAAO,CAACC,QAAQ,CAACZ,UAAU,EAAEC,MAAM,EAAEC,GAAG,EAAEC,IAAI,CAAC,CAAC,KAC1H,KAAK,IAAIU,CAAC,GAAGb,UAAU,CAACM,MAAM,GAAG,CAAC,EAAEO,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE,IAAIH,CAAC,GAAGV,UAAU,CAACa,CAAC,CAAC,EAAEN,CAAC,GAAG,CAACH,CAAC,GAAG,CAAC,GAAGM,CAAC,CAACH,CAAC,CAAC,GAAGH,CAAC,GAAG,CAAC,GAAGM,CAAC,CAACT,MAAM,EAAEC,GAAG,EAAEK,CAAC,CAAC,GAAGG,CAAC,CAACT,MAAM,EAAEC,GAAG,CAAC,KAAKK,CAAC;EACjJ,OAAOH,CAAC,GAAG,CAAC,IAAIG,CAAC,IAAIC,MAAM,CAACM,cAAc,CAACb,MAAM,EAAEC,GAAG,EAAEK,CAAC,CAAC,EAAEA,CAAC;AACjE,CAAC;AACD,IAAIQ,OAAO,GAAI,IAAI,IAAI,IAAI,CAACA,OAAO,IAAK,UAAUC,UAAU,EAAEC,SAAS,EAAE;EACrE,OAAO,UAAUhB,MAAM,EAAEC,GAAG,EAAE;IAAEe,SAAS,CAAChB,MAAM,EAAEC,GAAG,EAAEc,UAAU,CAAC;EAAE,CAAC;AACzE,CAAC;AACD,IAAIE,SAAS,GAAI,IAAI,IAAI,IAAI,CAACA,SAAS,IAAK,UAAUC,OAAO,EAAEC,UAAU,EAAEC,CAAC,EAAEC,SAAS,EAAE;EACrF,SAASC,KAAKA,CAACC,KAAK,EAAE;IAAE,OAAOA,KAAK,YAAYH,CAAC,GAAGG,KAAK,GAAG,IAAIH,CAAC,CAAC,UAAUI,OAAO,EAAE;MAAEA,OAAO,CAACD,KAAK,CAAC;IAAE,CAAC,CAAC;EAAE;EAC3G,OAAO,KAAKH,CAAC,KAAKA,CAAC,GAAGK,OAAO,CAAC,EAAE,UAAUD,OAAO,EAAEE,MAAM,EAAE;IACvD,SAASC,SAASA,CAACJ,KAAK,EAAE;MAAE,IAAI;QAAEK,IAAI,CAACP,SAAS,CAACQ,IAAI,CAACN,KAAK,CAAC,CAAC;MAAE,CAAC,CAAC,OAAOO,CAAC,EAAE;QAAEJ,MAAM,CAACI,CAAC,CAAC;MAAE;IAAE;IAC1F,SAASC,QAAQA,CAACR,KAAK,EAAE;MAAE,IAAI;QAAEK,IAAI,CAACP,SAAS,CAAC,OAAO,CAAC,CAACE,KAAK,CAAC,CAAC;MAAE,CAAC,CAAC,OAAOO,CAAC,EAAE;QAAEJ,MAAM,CAACI,CAAC,CAAC;MAAE;IAAE;IAC7F,SAASF,IAAIA,CAACI,MAAM,EAAE;MAAEA,MAAM,CAACC,IAAI,GAAGT,OAAO,CAACQ,MAAM,CAACT,KAAK,CAAC,GAAGD,KAAK,CAACU,MAAM,CAACT,KAAK,CAAC,CAACW,IAAI,CAACP,SAAS,EAAEI,QAAQ,CAAC;IAAE;IAC7GH,IAAI,CAAC,CAACP,SAAS,GAAGA,SAAS,CAACc,KAAK,CAACjB,OAAO,EAAEC,UAAU,IAAI,EAAE,CAAC,EAAEU,IAAI,CAAC,CAAC,CAAC;EACzE,CAAC,CAAC;AACN,CAAC;AACD,OAAO,KAAKO,GAAG,MAAM,iBAAiB;AACtC,SAASC,OAAO,QAAQ,+BAA+B;AACvD,SAASC,UAAU,QAAQ,mCAAmC;AAC9D,OAAO,KAAKC,OAAO,MAAM,iCAAiC;AAC1D,SAASC,YAAY,EAAEC,aAAa,EAAEC,oBAAoB,EAAEC,qBAAqB,EAAEC,0BAA0B,EAAEC,iBAAiB,EAAEC,yBAAyB,QAAQ,mCAAmC;AACtM,SAASC,iBAAiB,QAAQ,mCAAmC;AACrE,SAASC,0BAA0B,EAAEC,2BAA2B,EAAEC,QAAQ,EAAEC,2BAA2B,EAAEC,6BAA6B,EAAEC,4BAA4B,EAAEC,qBAAqB,EAAEC,2BAA2B,EAAEC,yBAAyB,EAAEC,6BAA6B,QAAQ,gBAAgB;AAC1S,SAASC,iBAAiB,QAAQ,wBAAwB;AAC1D,SAASC,gBAAgB,QAAQ,gBAAgB;AACjD,SAASC,UAAU,QAAQ,iBAAiB;AAC5C,SAASC,MAAM,QAAQ,6CAA6C;AACpE,SAASC,iBAAiB,QAAQ,wDAAwD;AAC1F,SAASC,kBAAkB,EAAEC,cAAc,QAAQ,mDAAmD;AACtG,SAASC,mBAAmB,QAAQ,sDAAsD;AAC1F,SAASC,kBAAkB,QAAQ,mDAAmD;AACtF,SAASC,eAAe,QAAQ,6CAA6C;AAC7E,SAASC,aAAa,QAAQ,gDAAgD;AAC9E,SAASC,oBAAoB,QAAQ,uDAAuD;AAC5F,MAAMC,wBAAwB,GAAG,MAAM;AACvC,OAAO,SAASC,wBAAwBA,CAACC,MAAM,EAA4C;EAAA,IAA1CC,6BAA6B,GAAArE,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAsE,SAAA,GAAAtE,SAAA,MAAG,QAAQ;EACrF,IAAI,CAACoE,MAAM,CAACG,QAAQ,CAAC,CAAC,EAAE;IACpB,OAAO,IAAI;EACf;EACA,MAAMC,SAAS,GAAGJ,MAAM,CAACK,YAAY,CAAC,CAAC;EACvC;EACA,IAAKJ,6BAA6B,KAAK,QAAQ,IAAIG,SAAS,CAACE,eAAe,KAAKF,SAAS,CAACG,aAAa,IACjGN,6BAA6B,KAAK,UAAU,EAAE;IACjD,IAAIG,SAAS,CAACI,OAAO,CAAC,CAAC,EAAE;MACrB,MAAMC,cAAc,GAAGT,MAAM,CAACU,2BAA2B,CAACN,SAAS,CAACO,gBAAgB,CAAC,CAAC,CAAC;MACvF,IAAIF,cAAc,EAAE;QAChB,OAAOA,cAAc,CAACG,IAAI;MAC9B;IACJ,CAAC,MACI;MACD,IAAIZ,MAAM,CAACa,QAAQ,CAAC,CAAC,CAACC,qBAAqB,CAACV,SAAS,CAAC,GAAGN,wBAAwB,EAAE;QAC/E,OAAOE,MAAM,CAACa,QAAQ,CAAC,CAAC,CAACE,eAAe,CAACX,SAAS,CAAC;MACvD;IACJ;EACJ;EACA,OAAO,IAAI;AACf;AACA,IAAIY,oBAAoB,GAAG,MAAMA,oBAAoB,SAASlD,UAAU,CAAC;EACrEmD,WAAWA,CAACjB,MAAM,EAAEkB,iBAAiB,EAAEC,cAAc,EAAEC,gBAAgB,EAAE;IACrE,KAAK,CAAC,CAAC;IACP,IAAI,CAACC,OAAO,GAAGrB,MAAM;IACrB,IAAI,CAACsB,kBAAkB,GAAG7C,2BAA2B,CAAC8C,MAAM,CAACL,iBAAiB,CAAC;IAC/E,IAAI,CAACM,kBAAkB,GAAGN,iBAAiB;IAC3C,IAAI,CAACO,eAAe,GAAGN,cAAc;IACrC,IAAI,CAACO,iBAAiB,GAAGN,gBAAgB;IACzC,IAAI,CAACO,qBAAqB,GAAG,IAAI9D,OAAO,CAAC,GAAG,CAAC;IAC7C,IAAI,CAAC+D,MAAM,GAAG,IAAI,CAACC,SAAS,CAAC,IAAI1C,gBAAgB,CAAC,CAAC,CAAC;IACpD,IAAI,CAAC2C,cAAc,CAAC,CAAC;IACrB,IAAI,CAACD,SAAS,CAAC,IAAI,CAACD,MAAM,CAACG,wBAAwB,CAAEzE,CAAC,IAAK,IAAI,CAAC0E,eAAe,CAAC1E,CAAC,CAAC,CAAC,CAAC;IACpF,IAAI,CAAC2E,MAAM,GAAG,IAAI;IAClB,IAAI,CAACJ,SAAS,CAAC,IAAI,CAACR,OAAO,CAACa,gBAAgB,CAAC,MAAM;MAC/C,IAAIC,iBAAiB,GAAI,IAAI,CAACd,OAAO,CAACR,QAAQ,CAAC,CAAC,IAAI,IAAI,CAACe,MAAM,CAACQ,UAAW;MAC3E,IAAI,CAACC,YAAY,CAAC,CAAC;MACnB,IAAI,CAACT,MAAM,CAACU,MAAM,CAAC;QACfC,WAAW,EAAE,IAAI;QACjBC,SAAS,EAAE,IAAI,CAACf,eAAe,CAACgB,UAAU,CAAC,kBAAkB,EAAE,CAAC,CAAC,iBAAiB,KAAK,CAAC;QACxFC,SAAS,EAAE,IAAI,CAACjB,eAAe,CAACgB,UAAU,CAAC,kBAAkB,EAAE,CAAC,CAAC,iBAAiB,KAAK,CAAC;QACxFE,OAAO,EAAE,IAAI,CAAClB,eAAe,CAACgB,UAAU,CAAC,gBAAgB,EAAE,CAAC,CAAC,iBAAiB,KAAK,CAAC;QACpFG,YAAY,EAAE,IAAI,CAACnB,eAAe,CAACgB,UAAU,CAAC,qBAAqB,EAAE,CAAC,CAAC,iBAAiB,KAAK;MACjG,CAAC,EAAE,KAAK,CAAC;MACT,IAAIN,iBAAiB,EAAE;QACnB,IAAI,CAACU,MAAM,CAAC;UACRC,kBAAkB,EAAE,KAAK;UACzB7C,6BAA6B,EAAE,MAAM;UACrC8C,mCAAmC,EAAE,KAAK;UAC1CC,WAAW,EAAE,CAAC,CAAC;UACfC,aAAa,EAAE,KAAK;UACpBC,iBAAiB,EAAE,KAAK;UACxBC,IAAI,EAAE,IAAI,CAAC9B,OAAO,CAAC+B,SAAS,CAAC,EAAE,CAAC,UAAU,CAAC,CAACD;QAChD,CAAC,CAAC;MACN;IACJ,CAAC,CAAC,CAAC;EACP;EACA,IAAInD,MAAMA,CAAA,EAAG;IACT,OAAO,IAAI,CAACqB,OAAO;EACvB;EACA,OAAOgC,GAAGA,CAACrD,MAAM,EAAE;IACf,OAAOA,MAAM,CAACsD,eAAe,CAACtC,oBAAoB,CAACuC,EAAE,CAAC;EAC1D;EACAC,OAAOA,CAAA,EAAG;IACN,IAAI,CAACnB,YAAY,CAAC,CAAC;IACnB,KAAK,CAACmB,OAAO,CAAC,CAAC;EACnB;EACAnB,YAAYA,CAAA,EAAG;IACX,IAAI,IAAI,CAACJ,MAAM,EAAE;MACb,IAAI,CAACA,MAAM,CAACuB,OAAO,CAAC,CAAC;MACrB,IAAI,CAACvB,MAAM,GAAG,IAAI;IACtB;EACJ;EACAD,eAAeA,CAAC1E,CAAC,EAAE;IACf,IAAI,CAACmG,cAAc,CAACnG,CAAC,CAAC;IACtB,IAAIA,CAAC,CAAC8E,UAAU,EAAE;MACd,IAAI,IAAI,CAACR,MAAM,CAACQ,UAAU,EAAE;QACxB,IAAI,CAACd,kBAAkB,CAACoC,GAAG,CAAC,IAAI,CAAC;MACrC,CAAC,MACI;QACD,IAAI,CAACpC,kBAAkB,CAACqC,KAAK,CAAC,CAAC;QAC/B,IAAI,CAACtB,YAAY,CAAC,CAAC;MACvB;IACJ;IACA,IAAI/E,CAAC,CAACsG,YAAY,EAAE;MAChB,IAAI,CAACC,mBAAmB,CAAC,IAAI,CAACjC,MAAM,CAACgC,YAAY,CAAC;IACtD;EACJ;EACAH,cAAcA,CAACnG,CAAC,EAAE;IACd,IAAIA,CAAC,CAACqF,OAAO,EAAE;MACX,IAAI,CAAClB,eAAe,CAACqC,KAAK,CAAC,gBAAgB,EAAE,IAAI,CAAClC,MAAM,CAACmC,aAAa,EAAE,CAAC,CAAC,iBAAiB,CAAC,CAAC,UAAU,CAAC;IAC5G;;IACA,IAAIzG,CAAC,CAACoF,SAAS,EAAE;MACb,IAAI,CAACjB,eAAe,CAACqC,KAAK,CAAC,kBAAkB,EAAE,IAAI,CAAClC,MAAM,CAACoC,eAAe,EAAE,CAAC,CAAC,iBAAiB,CAAC,CAAC,UAAU,CAAC;IAChH;;IACA,IAAI1G,CAAC,CAACkF,SAAS,EAAE;MACb,IAAI,CAACf,eAAe,CAACqC,KAAK,CAAC,kBAAkB,EAAE,IAAI,CAAClC,MAAM,CAACqC,eAAe,EAAE,CAAC,CAAC,iBAAiB,CAAC,CAAC,UAAU,CAAC;IAChH;;IACA,IAAI3G,CAAC,CAACsF,YAAY,EAAE;MAChB,IAAI,CAACnB,eAAe,CAACqC,KAAK,CAAC,qBAAqB,EAAE,IAAI,CAAClC,MAAM,CAACsC,kBAAkB,EAAE,CAAC,CAAC,iBAAiB,CAAC,CAAC,UAAU,CAAC;IACtH;EACJ;;EACApC,cAAcA,CAAA,EAAG;IACb,IAAI,CAACF,MAAM,CAACU,MAAM,CAAC;MACfE,SAAS,EAAE,IAAI,CAACf,eAAe,CAACgB,UAAU,CAAC,kBAAkB,EAAE,CAAC,CAAC,iBAAiB,IAAI,CAACb,MAAM,CAACY,SAAS,CAAC;MACxGE,SAAS,EAAE,IAAI,CAACjB,eAAe,CAACgB,UAAU,CAAC,kBAAkB,EAAE,CAAC,CAAC,iBAAiB,IAAI,CAACb,MAAM,CAACc,SAAS,CAAC;MACxGC,OAAO,EAAE,IAAI,CAAClB,eAAe,CAACgB,UAAU,CAAC,gBAAgB,EAAE,CAAC,CAAC,iBAAiB,IAAI,CAACb,MAAM,CAACe,OAAO,CAAC;MAClGC,YAAY,EAAE,IAAI,CAACnB,eAAe,CAACgB,UAAU,CAAC,qBAAqB,EAAE,CAAC,CAAC,iBAAiB,IAAI,CAACb,MAAM,CAACgB,YAAY;IACpH,CAAC,EAAE,KAAK,CAAC;EACb;EACAuB,kBAAkBA,CAAA,EAAG;IACjB,OAAO,CAAC,CAAC3F,0BAA0B,CAAC4F,QAAQ,CAAC,IAAI,CAAC5C,kBAAkB,CAAC;EACzE;EACA6C,QAAQA,CAAA,EAAG;IACP,OAAO,IAAI,CAACzC,MAAM;EACtB;EACA0C,eAAeA,CAAA,EAAG;IACd,IAAI,CAAC1C,MAAM,CAACU,MAAM,CAAC;MACfF,UAAU,EAAE,KAAK;MACjBG,WAAW,EAAE;IACjB,CAAC,EAAE,KAAK,CAAC;IACT,IAAI,CAAClB,OAAO,CAACkD,KAAK,CAAC,CAAC;EACxB;EACAC,mBAAmBA,CAAA,EAAG;IAClB,IAAI,CAAC5C,MAAM,CAACU,MAAM,CAAC;MAAEE,SAAS,EAAE,CAAC,IAAI,CAACZ,MAAM,CAACY;IAAU,CAAC,EAAE,KAAK,CAAC;IAChE,IAAI,CAAC,IAAI,CAACZ,MAAM,CAACQ,UAAU,EAAE;MACzB,IAAI,CAACqC,oBAAoB,CAAC,CAAC;IAC/B;EACJ;EACAC,gBAAgBA,CAAA,EAAG;IACf,IAAI,CAAC9C,MAAM,CAACU,MAAM,CAAC;MAAEI,SAAS,EAAE,CAAC,IAAI,CAACd,MAAM,CAACc;IAAU,CAAC,EAAE,KAAK,CAAC;IAChE,IAAI,CAAC,IAAI,CAACd,MAAM,CAACQ,UAAU,EAAE;MACzB,IAAI,CAACqC,oBAAoB,CAAC,CAAC;IAC/B;EACJ;EACAE,WAAWA,CAAA,EAAG;IACV,IAAI,CAAC/C,MAAM,CAACU,MAAM,CAAC;MAAEK,OAAO,EAAE,CAAC,IAAI,CAACf,MAAM,CAACe;IAAQ,CAAC,EAAE,KAAK,CAAC;IAC5D,IAAI,CAAC,IAAI,CAACf,MAAM,CAACQ,UAAU,EAAE;MACzB,IAAI,CAACqC,oBAAoB,CAAC,CAAC;IAC/B;EACJ;EACAG,kBAAkBA,CAAA,EAAG;IACjB,IAAI,CAAChD,MAAM,CAACU,MAAM,CAAC;MAAEM,YAAY,EAAE,CAAC,IAAI,CAAChB,MAAM,CAACgB;IAAa,CAAC,EAAE,KAAK,CAAC;IACtE,IAAI,CAAC,IAAI,CAAChB,MAAM,CAACQ,UAAU,EAAE;MACzB,IAAI,CAACqC,oBAAoB,CAAC,CAAC;IAC/B;EACJ;EACAI,iBAAiBA,CAAA,EAAG;IAChB,IAAI,IAAI,CAACjD,MAAM,CAACW,WAAW,EAAE;MACzB,IAAI,CAACX,MAAM,CAACU,MAAM,CAAC;QAAEC,WAAW,EAAE;MAAK,CAAC,EAAE,IAAI,CAAC;IACnD,CAAC,MACI;MACD,IAAI,IAAI,CAAClB,OAAO,CAAClB,QAAQ,CAAC,CAAC,EAAE;QACzB,IAAI2E,UAAU,GAAG,IAAI,CAACzD,OAAO,CAAC0D,aAAa,CAAC,CAAC;QAC7CD,UAAU,CAACE,GAAG,CAAC5E,SAAS,IAAI;UACxB,IAAIA,SAAS,CAAC6E,SAAS,KAAK,CAAC,IAAI7E,SAAS,CAACG,aAAa,GAAGH,SAAS,CAACE,eAAe,EAAE;YAClFF,SAAS,GAAGA,SAAS,CAAC8E,cAAc,CAAC9E,SAAS,CAACG,aAAa,GAAG,CAAC,EAAE,IAAI,CAACc,OAAO,CAACR,QAAQ,CAAC,CAAC,CAACsE,gBAAgB,CAAC/E,SAAS,CAACG,aAAa,GAAG,CAAC,CAAC,CAAC;UAC5I;UACA,IAAI,CAACH,SAAS,CAACI,OAAO,CAAC,CAAC,EAAE;YACtB,OAAOJ,SAAS;UACpB;UACA,OAAO,IAAI;QACf,CAAC,CAAC,CAACgF,MAAM,CAACC,OAAO,IAAI,CAAC,CAACA,OAAO,CAAC;QAC/B,IAAIP,UAAU,CAACjJ,MAAM,EAAE;UACnB,IAAI,CAAC+F,MAAM,CAACU,MAAM,CAAC;YAAEC,WAAW,EAAEuC;UAAW,CAAC,EAAE,IAAI,CAAC;QACzD;MACJ;IACJ;EACJ;EACAQ,eAAeA,CAAC1B,YAAY,EAAE;IAC1B,IAAI,IAAI,CAAChC,MAAM,CAACe,OAAO,EAAE;MACrBiB,YAAY,GAAG7F,OAAO,CAACwH,sBAAsB,CAAC3B,YAAY,CAAC;IAC/D;IACA,IAAI,CAAChC,MAAM,CAACU,MAAM,CAAC;MAAEsB,YAAY,EAAEA;IAAa,CAAC,EAAE,KAAK,CAAC;EAC7D;EACAa,oBAAoBA,CAAA,EAA4B;IAAA,IAA3Be,iBAAiB,GAAA5J,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAsE,SAAA,GAAAtE,SAAA,MAAG,KAAK;EAE9C,CAAC,CADG;;EAEJiH,MAAMA,CAAC4C,IAAI,EAAE;IACT,OAAOhJ,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;MAChD,IAAI,CAAC4F,YAAY,CAAC,CAAC;MACnB,IAAI,CAAC,IAAI,CAAChB,OAAO,CAAClB,QAAQ,CAAC,CAAC,EAAE;QAC1B;QACA;MACJ;MACA,IAAIuF,YAAY,GAAG;QACftD,UAAU,EAAE;MAChB,CAAC;MACD,IAAIqD,IAAI,CAACxF,6BAA6B,KAAK,QAAQ,EAAE;QACjD,IAAI0F,qBAAqB,GAAG5F,wBAAwB,CAAC,IAAI,CAACsB,OAAO,EAAEoE,IAAI,CAACxF,6BAA6B,CAAC;QACtG,IAAI0F,qBAAqB,EAAE;UACvB,IAAI,IAAI,CAAC/D,MAAM,CAACe,OAAO,EAAE;YACrB+C,YAAY,CAAC9B,YAAY,GAAG7F,OAAO,CAACwH,sBAAsB,CAACI,qBAAqB,CAAC;UACrF,CAAC,MACI;YACDD,YAAY,CAAC9B,YAAY,GAAG+B,qBAAqB;UACrD;QACJ;MACJ,CAAC,MACI,IAAIF,IAAI,CAACxF,6BAA6B,KAAK,UAAU,IAAI,CAACwF,IAAI,CAACvC,iBAAiB,EAAE;QACnF,IAAIyC,qBAAqB,GAAG5F,wBAAwB,CAAC,IAAI,CAACsB,OAAO,EAAEoE,IAAI,CAACxF,6BAA6B,CAAC;QACtG,IAAI0F,qBAAqB,EAAE;UACvBD,YAAY,CAAC9B,YAAY,GAAG+B,qBAAqB;QACrD;MACJ;MACA,IAAI,CAACD,YAAY,CAAC9B,YAAY,IAAI6B,IAAI,CAAC1C,mCAAmC,EAAE;QACxE,IAAI4C,qBAAqB,GAAG,MAAM,IAAI,CAACC,mBAAmB,CAAC,CAAC;QAC5D,IAAI,CAAC,IAAI,CAACvE,OAAO,CAAClB,QAAQ,CAAC,CAAC,EAAE;UAC1B;UACA;QACJ;QACA,IAAIwF,qBAAqB,EAAE;UACvBD,YAAY,CAAC9B,YAAY,GAAG+B,qBAAqB;QACrD;MACJ;MACA;MACA,IAAIF,IAAI,CAAC3C,kBAAkB,EAAE;QACzB4C,YAAY,CAACG,iBAAiB,GAAG,IAAI;MACzC,CAAC,MACI,IAAI,CAAC,IAAI,CAACvE,kBAAkB,CAAC+B,GAAG,CAAC,CAAC,EAAE;QACrCqC,YAAY,CAACG,iBAAiB,GAAG,KAAK;MAC1C;MACA,IAAIJ,IAAI,CAACvC,iBAAiB,EAAE;QACxB,IAAI4C,iBAAiB,GAAG,IAAI,CAACzE,OAAO,CAAC0D,aAAa,CAAC,CAAC;QACpD,IAAIe,iBAAiB,CAACC,IAAI,CAAC3F,SAAS,IAAI,CAACA,SAAS,CAACI,OAAO,CAAC,CAAC,CAAC,EAAE;UAC3DkF,YAAY,CAACnD,WAAW,GAAGuD,iBAAiB;QAChD;MACJ;MACAJ,YAAY,CAACvC,IAAI,GAAGsC,IAAI,CAACtC,IAAI;MAC7B,IAAI,CAACvB,MAAM,CAACU,MAAM,CAACoD,YAAY,EAAE,KAAK,CAAC;MACvC,IAAI,CAAC,IAAI,CAACzD,MAAM,EAAE;QACd,IAAI,CAACA,MAAM,GAAG,IAAItD,2BAA2B,CAAC,IAAI,CAAC0C,OAAO,EAAE,IAAI,CAACO,MAAM,CAAC;MAC5E;IACJ,CAAC,CAAC;EACN;EACAoE,KAAKA,CAACP,IAAI,EAAE;IACR,OAAO,IAAI,CAAC5C,MAAM,CAAC4C,IAAI,CAAC;EAC5B;EACAQ,eAAeA,CAAA,EAAG;IACd,IAAI,IAAI,CAAChE,MAAM,EAAE;MACb,IAAI,CAACA,MAAM,CAACgE,eAAe,CAAC,CAAC;MAC7B,OAAO,IAAI;IACf;IACA,OAAO,KAAK;EAChB;EACAC,eAAeA,CAAA,EAAG;IACd,IAAI,IAAI,CAACjE,MAAM,EAAE;MACb,IAAI,CAACA,MAAM,CAACiE,eAAe,CAAC,CAAC;MAC7B,OAAO,IAAI;IACf;IACA,OAAO,KAAK;EAChB;EACAC,OAAOA,CAAA,EAAG;IACN,IAAI,IAAI,CAAClE,MAAM,EAAE;MACb,IAAI,CAACA,MAAM,CAACkE,OAAO,CAAC,CAAC;MACrB,OAAO,IAAI;IACf;IACA,OAAO,KAAK;EAChB;EACAC,UAAUA,CAAA,EAAG;IACT,IAAI,IAAI,CAACnE,MAAM,EAAE;MACb,IAAI,CAACA,MAAM,CAACmE,UAAU,CAAC,CAAC;MACxB,OAAO,IAAI;IACf;IACA,OAAO,KAAK;EAChB;EACAC,gBAAgBA,CAAA,EAAG;IACf,IAAI,IAAI,CAACpE,MAAM,EAAE;MACb,IAAI,CAACA,MAAM,CAACoE,gBAAgB,CAAC,CAAC;MAC9B,IAAI,CAAChF,OAAO,CAACkD,KAAK,CAAC,CAAC;MACpB,OAAO,IAAI;IACf;IACA,OAAO,KAAK;EAChB;EACAqB,mBAAmBA,CAAA,EAAG;IAClB,OAAOnJ,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;MAChD,IAAI,IAAI,CAAC4E,OAAO,CAAC+B,SAAS,CAAC,EAAE,CAAC,UAAU,CAAC,CAACkD,mBAAmB,IACtD,IAAI,CAACjF,OAAO,CAAClB,QAAQ,CAAC,CAAC,IACvB,CAAC,IAAI,CAACkB,OAAO,CAACR,QAAQ,CAAC,CAAC,CAAC0F,oBAAoB,CAAC,CAAC,EAAE;QACpD,OAAO,IAAI,CAAC7E,iBAAiB,CAAC8E,YAAY,CAAC,CAAC;MAChD;MACA,OAAO,EAAE;IACb,CAAC,CAAC;EACN;EACA3C,mBAAmBA,CAAC4C,IAAI,EAAE;IACtB,IAAI,IAAI,CAACpF,OAAO,CAAC+B,SAAS,CAAC,EAAE,CAAC,UAAU,CAAC,CAACkD,mBAAmB,IACtD,IAAI,CAACjF,OAAO,CAAClB,QAAQ,CAAC,CAAC,IACvB,CAAC,IAAI,CAACkB,OAAO,CAACR,QAAQ,CAAC,CAAC,CAAC0F,oBAAoB,CAAC,CAAC,EAAE;MACpD;MACA,IAAI,CAAC7E,iBAAiB,CAACgF,aAAa,CAACD,IAAI,CAAC;IAC9C;EACJ;AACJ,CAAC;AACDzF,oBAAoB,CAACuC,EAAE,GAAG,+BAA+B;AACzDvC,oBAAoB,GAAG1F,UAAU,CAAC,CAC9BgB,OAAO,CAAC,CAAC,EAAEiD,kBAAkB,CAAC,EAC9BjD,OAAO,CAAC,CAAC,EAAEqD,eAAe,CAAC,EAC3BrD,OAAO,CAAC,CAAC,EAAEgD,iBAAiB,CAAC,CAChC,EAAE0B,oBAAoB,CAAC;AACxB,SAASA,oBAAoB;AAC7B,IAAI2F,cAAc,GAAG,MAAMA,cAAc,SAAS3F,oBAAoB,CAAC;EACnEC,WAAWA,CAACjB,MAAM,EAAE4G,mBAAmB,EAAEpF,kBAAkB,EAAEqF,kBAAkB,EAAEC,aAAa,EAAEC,oBAAoB,EAAEtF,eAAe,EAAEL,gBAAgB,EAAE;IACrJ,KAAK,CAACpB,MAAM,EAAEwB,kBAAkB,EAAEC,eAAe,EAAEL,gBAAgB,CAAC;IACpE,IAAI,CAACwF,mBAAmB,GAAGA,mBAAmB;IAC9C,IAAI,CAACC,kBAAkB,GAAGA,kBAAkB;IAC5C,IAAI,CAACC,aAAa,GAAGA,aAAa;IAClC,IAAI,CAACC,oBAAoB,GAAGA,oBAAoB;IAChD,IAAI,CAACC,OAAO,GAAG,IAAI;IACnB,IAAI,CAACC,kBAAkB,GAAG,IAAI;EAClC;EACApE,MAAMA,CAAC4C,IAAI,EAAE;IACT,MAAMyB,MAAM,GAAGnL,MAAM,CAACoL,MAAM,CAAC,IAAI,EAAE;MAC/BtE,MAAM,EAAE;QAAEQ,GAAG,EAAEA,CAAA,KAAM,KAAK,CAACR;MAAO;IACtC,CAAC,CAAC;IACF,OAAOpG,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;MAChD,IAAI,CAAC,IAAI,CAACuK,OAAO,EAAE;QACf,IAAI,CAACI,iBAAiB,CAAC,CAAC;MAC5B;MACA,MAAMhH,SAAS,GAAG,IAAI,CAACiB,OAAO,CAAChB,YAAY,CAAC,CAAC;MAC7C,IAAI6C,iBAAiB,GAAG,KAAK;MAC7B,QAAQ,IAAI,CAAC7B,OAAO,CAAC+B,SAAS,CAAC,EAAE,CAAC,UAAU,CAAC,CAACiE,mBAAmB;QAC7D,KAAK,QAAQ;UACTnE,iBAAiB,GAAG,IAAI;UACxB;QACJ,KAAK,OAAO;UACRA,iBAAiB,GAAG,KAAK;UACzB;QACJ,KAAK,WAAW;UACZ,MAAMoE,uBAAuB,GAAG,CAAC,CAAClH,SAAS,IAAIA,SAAS,CAACE,eAAe,KAAKF,SAAS,CAACG,aAAa;UACpG2C,iBAAiB,GAAGoE,uBAAuB;UAC3C;QACJ;UACI;MACR;MACA7B,IAAI,CAACvC,iBAAiB,GAAGA,iBAAiB;MAC1C,MAAMgE,MAAM,CAACrE,MAAM,CAAC0E,IAAI,CAAC,IAAI,EAAE9B,IAAI,CAAC;MACpC,IAAI,IAAI,CAACuB,OAAO,EAAE;QACd,IAAIvB,IAAI,CAACzC,WAAW,KAAK,CAAC,CAAC,yBAAyB;UAChD,IAAI,CAACgE,OAAO,CAACQ,iBAAiB,CAAC,CAAC;QACpC,CAAC,MACI,IAAI/B,IAAI,CAACzC,WAAW,KAAK,CAAC,CAAC,sBAAsB;UAClD,IAAI,CAACgE,OAAO,CAACS,cAAc,CAAC,CAAC;QACjC;MACJ;IACJ,CAAC,CAAC;EACN;EACAhD,oBAAoBA,CAAA,EAA4B;IAAA,IAA3Be,iBAAiB,GAAA5J,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAsE,SAAA,GAAAtE,SAAA,MAAG,KAAK;IAC1C,IAAI,CAAC,IAAI,CAACoL,OAAO,EAAE;MACf,IAAI,CAACI,iBAAiB,CAAC,CAAC;IAC5B;IACA,IAAI,IAAI,CAACxF,MAAM,CAACQ,UAAU,IAAI,CAACoD,iBAAiB,EAAE;MAC9C,IAAI,CAACwB,OAAO,CAACvC,oBAAoB,CAAC,CAAC;IACvC,CAAC,MACI;MACD,IAAI,CAACwC,kBAAkB,CAACxC,oBAAoB,CAAC,CAAC;IAClD;EACJ;EACA2C,iBAAiBA,CAAA,EAAG;IAChB,IAAI,CAACJ,OAAO,GAAG,IAAI,CAACnF,SAAS,CAAC,IAAIzC,UAAU,CAAC,IAAI,CAACiC,OAAO,EAAE,IAAI,EAAE,IAAI,CAACO,MAAM,EAAE,IAAI,CAACgF,mBAAmB,EAAE,IAAI,CAACC,kBAAkB,EAAE,IAAI,CAACrF,kBAAkB,EAAE,IAAI,CAACsF,aAAa,EAAE,IAAI,CAACrF,eAAe,EAAE,IAAI,CAACsF,oBAAoB,CAAC,CAAC;IAC/N,IAAI,CAACE,kBAAkB,GAAG,IAAI,CAACpF,SAAS,CAAC,IAAI3C,iBAAiB,CAAC,IAAI,CAACmC,OAAO,EAAE,IAAI,CAACO,MAAM,EAAE,IAAI,CAACiF,kBAAkB,EAAE,IAAI,CAACC,aAAa,CAAC,CAAC;EAC3I;AACJ,CAAC;AACDH,cAAc,GAAGrL,UAAU,CAAC,CACxBgB,OAAO,CAAC,CAAC,EAAEmD,mBAAmB,CAAC,EAC/BnD,OAAO,CAAC,CAAC,EAAEiD,kBAAkB,CAAC,EAC9BjD,OAAO,CAAC,CAAC,EAAEoD,kBAAkB,CAAC,EAC9BpD,OAAO,CAAC,CAAC,EAAEsD,aAAa,CAAC,EACzBtD,OAAO,CAAC,CAAC,EAAEuD,oBAAoB,CAAC,EAChCvD,OAAO,CAAC,CAAC,EAAEqD,eAAe,CAAC,EAC3BrD,OAAO,CAAC,CAAC,EAAEgD,iBAAiB,CAAC,CAChC,EAAEqH,cAAc,CAAC;AAClB,SAASA,cAAc;AACvB,OAAO,MAAMe,eAAe,SAASrJ,iBAAiB,CAAC;EACnD4C,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC;MACF0G,EAAE,EAAEjJ,QAAQ,CAACgJ,eAAe;MAC5BE,KAAK,EAAEhK,GAAG,CAACiK,QAAQ,CAAC,iBAAiB,EAAE,MAAM,CAAC;MAC9CC,KAAK,EAAE,MAAM;MACbC,YAAY,EAAEvI,cAAc,CAACwI,EAAE,CAACxI,cAAc,CAACyI,GAAG,CAAC,aAAa,CAAC,EAAEzI,cAAc,CAACyI,GAAG,CAAC,cAAc,CAAC,CAAC;MACtGC,MAAM,EAAE;QACJC,MAAM,EAAE,IAAI;QACZC,OAAO,EAAE,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACjCC,MAAM,EAAE,GAAG,CAAC;MAChB,CAAC;;MACDC,QAAQ,EAAE;QACNC,MAAM,EAAElJ,MAAM,CAACmJ,eAAe;QAC9BC,KAAK,EAAE,QAAQ;QACfC,KAAK,EAAE9K,GAAG,CAACiK,QAAQ,CAAC;UAAEpM,GAAG,EAAE,QAAQ;UAAEkN,OAAO,EAAE,CAAC,uBAAuB;QAAE,CAAC,EAAE,QAAQ,CAAC;QACpFC,KAAK,EAAE;MACX;IACJ,CAAC,CAAC;EACN;EACAC,GAAGA,CAACC,QAAQ,EAAE9I,MAAM,EAAE;IAClB,OAAOvD,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;MAChD,IAAIsM,UAAU,GAAG/H,oBAAoB,CAACqC,GAAG,CAACrD,MAAM,CAAC;MACjD,IAAI+I,UAAU,EAAE;QACZ,MAAMA,UAAU,CAAC/C,KAAK,CAAC;UACnBlD,kBAAkB,EAAE,KAAK;UACzB7C,6BAA6B,EAAED,MAAM,CAACoD,SAAS,CAAC,EAAE,CAAC,UAAU,CAAC,CAACnD,6BAA6B,GAAG,QAAQ,GAAG,MAAM;UAChH8C,mCAAmC,EAAE/C,MAAM,CAACoD,SAAS,CAAC,EAAE,CAAC,UAAU,CAAC,CAACkD,mBAAmB;UACxFtD,WAAW,EAAE,CAAC,CAAC;UACfC,aAAa,EAAE,IAAI;UACnBC,iBAAiB,EAAE,KAAK;UACxBC,IAAI,EAAEnD,MAAM,CAACoD,SAAS,CAAC,EAAE,CAAC,UAAU,CAAC,CAACD;QAC1C,CAAC,CAAC;MACN;IACJ,CAAC,CAAC;EACN;AACJ;AACA,OAAO,MAAM6F,4BAA4B,SAAShL,YAAY,CAAC;EAC3DiD,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC;MACF0G,EAAE,EAAEjJ,QAAQ,CAACuK,sBAAsB;MACnCrB,KAAK,EAAEhK,GAAG,CAACiK,QAAQ,CAAC,8BAA8B,EAAE,qBAAqB,CAAC;MAC1EC,KAAK,EAAE,qBAAqB;MAC5BC,YAAY,EAAE7H,SAAS;MACvBgI,MAAM,EAAE;QACJC,MAAM,EAAE,IAAI;QACZC,OAAO,EAAE,CAAC;QACVc,GAAG,EAAE;UACDd,OAAO,EAAE,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACrC,CAAC;;QACDC,MAAM,EAAE,GAAG,CAAC;MAChB;IACJ,CAAC,CAAC;EACN;;EACAQ,GAAGA,CAACC,QAAQ,EAAE9I,MAAM,EAAE;IAClB,OAAOvD,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;MAChD,IAAIsM,UAAU,GAAG/H,oBAAoB,CAACqC,GAAG,CAACrD,MAAM,CAAC;MACjD,IAAI+I,UAAU,EAAE;QACZ,MAAMA,UAAU,CAAC/C,KAAK,CAAC;UACnBlD,kBAAkB,EAAE,KAAK;UACzB7C,6BAA6B,EAAE,UAAU;UACzC8C,mCAAmC,EAAE,KAAK;UAC1CC,WAAW,EAAE,CAAC,CAAC;UACfC,aAAa,EAAE,IAAI;UACnBC,iBAAiB,EAAE,KAAK;UACxBC,IAAI,EAAEnD,MAAM,CAACoD,SAAS,CAAC,EAAE,CAAC,UAAU,CAAC,CAACD;QAC1C,CAAC,CAAC;QACF4F,UAAU,CAAClF,mBAAmB,CAACkF,UAAU,CAAC1E,QAAQ,CAAC,CAAC,CAACT,YAAY,CAAC;MACtE;IACJ,CAAC,CAAC;EACN;AACJ;AACA,OAAO,MAAMuF,eAAe,SAASnL,YAAY,CAAC;EAC9C6K,GAAGA,CAACC,QAAQ,EAAE9I,MAAM,EAAE;IAClB,OAAOvD,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;MAChD,IAAIsM,UAAU,GAAG/H,oBAAoB,CAACqC,GAAG,CAACrD,MAAM,CAAC;MACjD,IAAI+I,UAAU,IAAI,CAAC,IAAI,CAACK,IAAI,CAACL,UAAU,CAAC,EAAE;QACtC,MAAMA,UAAU,CAAC/C,KAAK,CAAC;UACnBlD,kBAAkB,EAAE,KAAK;UACzB7C,6BAA6B,EAAG8I,UAAU,CAAC1E,QAAQ,CAAC,CAAC,CAACT,YAAY,CAAC/H,MAAM,KAAK,CAAC,IAAKmE,MAAM,CAACoD,SAAS,CAAC,EAAE,CAAC,UAAU,CAAC,CAACnD,6BAA6B,GAAG,QAAQ,GAAG,MAAM;UACrK8C,mCAAmC,EAAE,IAAI;UACzCC,WAAW,EAAE,CAAC,CAAC;UACfC,aAAa,EAAE,IAAI;UACnBC,iBAAiB,EAAE,KAAK;UACxBC,IAAI,EAAEnD,MAAM,CAACoD,SAAS,CAAC,EAAE,CAAC,UAAU,CAAC,CAACD;QAC1C,CAAC,CAAC;QACF,IAAI,CAACiG,IAAI,CAACL,UAAU,CAAC;MACzB;IACJ,CAAC,CAAC;EACN;AACJ;AACA,OAAO,MAAMM,mBAAmB,SAASF,eAAe,CAAC;EACrDlI,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC;MACF0G,EAAE,EAAEjJ,QAAQ,CAAC2K,mBAAmB;MAChCzB,KAAK,EAAEhK,GAAG,CAACiK,QAAQ,CAAC,qBAAqB,EAAE,WAAW,CAAC;MACvDC,KAAK,EAAE,WAAW;MAClBC,YAAY,EAAE7H,SAAS;MACvBgI,MAAM,EAAE;QACJC,MAAM,EAAE5J,iBAAiB,CAACgG,KAAK;QAC/B6D,OAAO,EAAE,EAAE,CAAC;QACZc,GAAG,EAAE;UAAEd,OAAO,EAAE,IAAI,CAAC,gBAAgB,EAAE,CAAC;UAAakB,SAAS,EAAE,CAAC,EAAE,CAAC;QAAU,CAAC;QAC/EjB,MAAM,EAAE,GAAG,CAAC;MAChB;IACJ,CAAC,CAAC;EACN;;EACAe,IAAIA,CAACL,UAAU,EAAE;IACb,MAAMvL,MAAM,GAAGuL,UAAU,CAAC9C,eAAe,CAAC,CAAC;IAC3C,IAAIzI,MAAM,EAAE;MACRuL,UAAU,CAAC/I,MAAM,CAACuJ,YAAY,CAAC,CAAC;MAChC,OAAO,IAAI;IACf;IACA,OAAO,KAAK;EAChB;AACJ;AACA,OAAO,MAAMC,oBAAoB,SAASL,eAAe,CAAC;EACtDlI,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC;MACF0G,EAAE,EAAEjJ,QAAQ,CAAC2K,mBAAmB;MAChCzB,KAAK,EAAEhK,GAAG,CAACiK,QAAQ,CAAC,qBAAqB,EAAE,WAAW,CAAC;MACvDC,KAAK,EAAE,WAAW;MAClBC,YAAY,EAAE7H,SAAS;MACvBgI,MAAM,EAAE;QACJC,MAAM,EAAE3I,cAAc,CAACiK,GAAG,CAAClL,iBAAiB,CAACgG,KAAK,EAAE/F,0BAA0B,CAAC;QAC/E4J,OAAO,EAAE,CAAC,CAAC;QACXC,MAAM,EAAE,GAAG,CAAC;MAChB;IACJ,CAAC,CAAC;EACN;;EACAe,IAAIA,CAACL,UAAU,EAAE;IACb,MAAMvL,MAAM,GAAGuL,UAAU,CAAC9C,eAAe,CAAC,CAAC;IAC3C,IAAIzI,MAAM,EAAE;MACRuL,UAAU,CAAC/I,MAAM,CAACuJ,YAAY,CAAC,CAAC;MAChC,OAAO,IAAI;IACf;IACA,OAAO,KAAK;EAChB;AACJ;AACA,OAAO,MAAMG,uBAAuB,SAASP,eAAe,CAAC;EACzDlI,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC;MACF0G,EAAE,EAAEjJ,QAAQ,CAACgL,uBAAuB;MACpC9B,KAAK,EAAEhK,GAAG,CAACiK,QAAQ,CAAC,yBAAyB,EAAE,eAAe,CAAC;MAC/DC,KAAK,EAAE,eAAe;MACtBC,YAAY,EAAE7H,SAAS;MACvBgI,MAAM,EAAE;QACJC,MAAM,EAAE5J,iBAAiB,CAACgG,KAAK;QAC/B6D,OAAO,EAAE,IAAI,CAAC,cAAc,EAAE,CAAC;QAC/Bc,GAAG,EAAE;UAAEd,OAAO,EAAE,IAAI,CAAC,gBAAgB,IAAI,CAAC,cAAc,EAAE,CAAC;UAAakB,SAAS,EAAE,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC;QAAU,CAAC;QACrHjB,MAAM,EAAE,GAAG,CAAC;MAChB;IACJ,CAAC,CAAC;EACN;;EACAe,IAAIA,CAACL,UAAU,EAAE;IACb,OAAOA,UAAU,CAAC7C,eAAe,CAAC,CAAC;EACvC;AACJ;AACA,OAAO,MAAMyD,wBAAwB,SAASR,eAAe,CAAC;EAC1DlI,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC;MACF0G,EAAE,EAAEjJ,QAAQ,CAACgL,uBAAuB;MACpC9B,KAAK,EAAEhK,GAAG,CAACiK,QAAQ,CAAC,yBAAyB,EAAE,eAAe,CAAC;MAC/DC,KAAK,EAAE,eAAe;MACtBC,YAAY,EAAE7H,SAAS;MACvBgI,MAAM,EAAE;QACJC,MAAM,EAAE3I,cAAc,CAACiK,GAAG,CAAClL,iBAAiB,CAACgG,KAAK,EAAE/F,0BAA0B,CAAC;QAC/E4J,OAAO,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;QAC9BC,MAAM,EAAE,GAAG,CAAC;MAChB;IACJ,CAAC,CAAC;EACN;;EACAe,IAAIA,CAACL,UAAU,EAAE;IACb,OAAOA,UAAU,CAAC7C,eAAe,CAAC,CAAC;EACvC;AACJ;AACA,OAAO,MAAM0D,wBAAwB,SAAS5L,YAAY,CAAC;EACvD6K,GAAGA,CAACC,QAAQ,EAAE9I,MAAM,EAAE;IAClB,OAAOvD,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;MAChD,IAAIsM,UAAU,GAAG/H,oBAAoB,CAACqC,GAAG,CAACrD,MAAM,CAAC;MACjD,IAAI,CAAC+I,UAAU,EAAE;QACb;MACJ;MACA,IAAIpD,qBAAqB,GAAG5F,wBAAwB,CAACC,MAAM,CAAC;MAC5D,IAAI2F,qBAAqB,EAAE;QACvBoD,UAAU,CAACzD,eAAe,CAACK,qBAAqB,CAAC;MACrD;MACA,IAAI,CAAC,IAAI,CAACyD,IAAI,CAACL,UAAU,CAAC,EAAE;QACxB,MAAMA,UAAU,CAAC/C,KAAK,CAAC;UACnBlD,kBAAkB,EAAE,KAAK;UACzB7C,6BAA6B,EAAED,MAAM,CAACoD,SAAS,CAAC,EAAE,CAAC,UAAU,CAAC,CAACnD,6BAA6B,GAAG,QAAQ,GAAG,MAAM;UAChH8C,mCAAmC,EAAE,KAAK;UAC1CC,WAAW,EAAE,CAAC,CAAC;UACfC,aAAa,EAAE,IAAI;UACnBC,iBAAiB,EAAE,KAAK;UACxBC,IAAI,EAAEnD,MAAM,CAACoD,SAAS,CAAC,EAAE,CAAC,UAAU,CAAC,CAACD;QAC1C,CAAC,CAAC;QACF,IAAI,CAACiG,IAAI,CAACL,UAAU,CAAC;MACzB;IACJ,CAAC,CAAC;EACN;AACJ;AACA,OAAO,MAAMc,4BAA4B,SAASD,wBAAwB,CAAC;EACvE3I,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC;MACF0G,EAAE,EAAEjJ,QAAQ,CAACmL,4BAA4B;MACzCjC,KAAK,EAAEhK,GAAG,CAACiK,QAAQ,CAAC,8BAA8B,EAAE,qBAAqB,CAAC;MAC1EC,KAAK,EAAE,qBAAqB;MAC5BC,YAAY,EAAE7H,SAAS;MACvBgI,MAAM,EAAE;QACJC,MAAM,EAAE5J,iBAAiB,CAACgG,KAAK;QAC/B6D,OAAO,EAAE,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACjCC,MAAM,EAAE,GAAG,CAAC;MAChB;IACJ,CAAC,CAAC;EACN;;EACAe,IAAIA,CAACL,UAAU,EAAE;IACb,OAAOA,UAAU,CAAC9C,eAAe,CAAC,CAAC;EACvC;AACJ;AACA,OAAO,MAAM6D,gCAAgC,SAASF,wBAAwB,CAAC;EAC3E3I,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC;MACF0G,EAAE,EAAEjJ,QAAQ,CAACoL,gCAAgC;MAC7ClC,KAAK,EAAEhK,GAAG,CAACiK,QAAQ,CAAC,kCAAkC,EAAE,yBAAyB,CAAC;MAClFC,KAAK,EAAE,yBAAyB;MAChCC,YAAY,EAAE7H,SAAS;MACvBgI,MAAM,EAAE;QACJC,MAAM,EAAE5J,iBAAiB,CAACgG,KAAK;QAC/B6D,OAAO,EAAE,IAAI,CAAC,gBAAgB,IAAI,CAAC,cAAc,EAAE,CAAC;QACpDC,MAAM,EAAE,GAAG,CAAC;MAChB;IACJ,CAAC,CAAC;EACN;;EACAe,IAAIA,CAACL,UAAU,EAAE;IACb,OAAOA,UAAU,CAAC7C,eAAe,CAAC,CAAC;EACvC;AACJ;AACA,OAAO,MAAM6D,sBAAsB,SAAS1L,iBAAiB,CAAC;EAC1D4C,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC;MACF0G,EAAE,EAAEjJ,QAAQ,CAACqL,sBAAsB;MACnCnC,KAAK,EAAEhK,GAAG,CAACiK,QAAQ,CAAC,cAAc,EAAE,SAAS,CAAC;MAC9CC,KAAK,EAAE,SAAS;MAChBC,YAAY,EAAEvI,cAAc,CAACwI,EAAE,CAACxI,cAAc,CAACyI,GAAG,CAAC,aAAa,CAAC,EAAEzI,cAAc,CAACyI,GAAG,CAAC,cAAc,CAAC,CAAC;MACtGC,MAAM,EAAE;QACJC,MAAM,EAAE,IAAI;QACZC,OAAO,EAAE,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACjCc,GAAG,EAAE;UAAEd,OAAO,EAAE,IAAI,CAAC,gBAAgB,GAAG,CAAC,YAAY,EAAE,CAAC;QAAY,CAAC;QACrEC,MAAM,EAAE,GAAG,CAAC;MAChB,CAAC;;MACDC,QAAQ,EAAE;QACNC,MAAM,EAAElJ,MAAM,CAACmJ,eAAe;QAC9BC,KAAK,EAAE,QAAQ;QACfC,KAAK,EAAE9K,GAAG,CAACiK,QAAQ,CAAC;UAAEpM,GAAG,EAAE,WAAW;UAAEkN,OAAO,EAAE,CAAC,uBAAuB;QAAE,CAAC,EAAE,WAAW,CAAC;QAC1FC,KAAK,EAAE;MACX;IACJ,CAAC,CAAC;EACN;EACAC,GAAGA,CAACC,QAAQ,EAAE9I,MAAM,EAAE;IAClB,OAAOvD,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;MAChD,IAAI,CAACuD,MAAM,CAACG,QAAQ,CAAC,CAAC,IAAIH,MAAM,CAACoD,SAAS,CAAC,EAAE,CAAC,cAAc,CAAC,EAAE;QAC3D;MACJ;MACA,IAAI2F,UAAU,GAAG/H,oBAAoB,CAACqC,GAAG,CAACrD,MAAM,CAAC;MACjD,IAAIgK,gBAAgB,GAAGhK,MAAM,CAACK,YAAY,CAAC,CAAC;MAC5C,IAAI4J,gBAAgB,GAAGlB,UAAU,CAAC5E,kBAAkB,CAAC,CAAC;MACtD;MACA;MACA,IAAIlE,6BAA6B,GAAG,CAAC+J,gBAAgB,CAACxJ,OAAO,CAAC,CAAC,IACxDwJ,gBAAgB,CAAC1J,eAAe,KAAK0J,gBAAgB,CAACzJ,aAAa,IAAIP,MAAM,CAACoD,SAAS,CAAC,EAAE,CAAC,UAAU,CAAC,CAACnD,6BAA6B,IACpI,CAACgK,gBAAgB;MACxB;AACZ;AACA;AACA;AACA;AACA;MAEY,IAAIjH,WAAW,GAAIiH,gBAAgB,IAAIhK,6BAA6B,GAChE,CAAC,CAAC,0BAA0B,CAAC,CAAC;MAClC,IAAI8I,UAAU,EAAE;QACZ,MAAMA,UAAU,CAAC/C,KAAK,CAAC;UACnBlD,kBAAkB,EAAE,IAAI;UACxB7C,6BAA6B,EAAEA,6BAA6B,GAAG,QAAQ,GAAG,MAAM;UAChF8C,mCAAmC,EAAE/C,MAAM,CAACoD,SAAS,CAAC,EAAE,CAAC,UAAU,CAAC,CAACnD,6BAA6B;UAClG+C,WAAW,EAAEA,WAAW;UACxBC,aAAa,EAAE,IAAI;UACnBC,iBAAiB,EAAE,KAAK;UACxBC,IAAI,EAAEnD,MAAM,CAACoD,SAAS,CAAC,EAAE,CAAC,UAAU,CAAC,CAACD;QAC1C,CAAC,CAAC;MACN;IACJ,CAAC,CAAC;EACN;AACJ;AACA/E,0BAA0B,CAAC4C,oBAAoB,CAACuC,EAAE,EAAEoD,cAAc,CAAC;AACnE,OAAO,MAAMuD,qBAAqB,GAAG,IAAIxC,eAAe,CAAC,CAAC;AAC1DpJ,yBAAyB,CAAC4L,qBAAqB,CAAC;AAChDhM,oBAAoB,CAAC8K,4BAA4B,CAAC;AAClD9K,oBAAoB,CAACmL,mBAAmB,CAAC;AACzCnL,oBAAoB,CAACsL,oBAAoB,CAAC;AAC1CtL,oBAAoB,CAACwL,uBAAuB,CAAC;AAC7CxL,oBAAoB,CAACyL,wBAAwB,CAAC;AAC9CzL,oBAAoB,CAAC2L,4BAA4B,CAAC;AAClD3L,oBAAoB,CAAC4L,gCAAgC,CAAC;AACtD,OAAO,MAAMK,4BAA4B,GAAG,IAAIJ,sBAAsB,CAAC,CAAC;AACxEzL,yBAAyB,CAAC6L,4BAA4B,CAAC;AACvD,MAAMC,WAAW,GAAGnM,aAAa,CAACoM,kBAAkB,CAACrJ,oBAAoB,CAACqC,GAAG,CAAC;AAC9ElF,qBAAqB,CAAC,IAAIiM,WAAW,CAAC;EAClCzC,EAAE,EAAEjJ,QAAQ,CAAC4L,sBAAsB;EACnCvC,YAAY,EAAEtJ,2BAA2B;EACzC8L,OAAO,EAAEC,CAAC,IAAIA,CAAC,CAAClG,eAAe,CAAC,CAAC;EACjC4D,MAAM,EAAE;IACJG,MAAM,EAAE,GAAG,CAAC,sBAAsB,CAAC;IACnCF,MAAM,EAAE3I,cAAc,CAACiK,GAAG,CAAClL,iBAAiB,CAACgG,KAAK,EAAE/E,cAAc,CAACiL,GAAG,CAAC,aAAa,CAAC,CAAC;IACtFrC,OAAO,EAAE,CAAC,CAAC;IACXkB,SAAS,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;EACrC;AACJ,CAAC,CAAC,CAAC;;AACHnL,qBAAqB,CAAC,IAAIiM,WAAW,CAAC;EAClCzC,EAAE,EAAEjJ,QAAQ,CAACgM,0BAA0B;EACvC3C,YAAY,EAAE7H,SAAS;EACvBqK,OAAO,EAAEC,CAAC,IAAIA,CAAC,CAAChG,mBAAmB,CAAC,CAAC;EACrC0D,MAAM,EAAE;IACJG,MAAM,EAAE,GAAG,CAAC,sBAAsB,CAAC;IACnCF,MAAM,EAAE5J,iBAAiB,CAACgG,KAAK;IAC/B6D,OAAO,EAAExJ,6BAA6B,CAACwJ,OAAO;IAC9Cc,GAAG,EAAEtK,6BAA6B,CAACsK,GAAG;IACtCyB,GAAG,EAAE/L,6BAA6B,CAAC+L,GAAG;IACtCC,KAAK,EAAEhM,6BAA6B,CAACgM;EACzC;AACJ,CAAC,CAAC,CAAC;AACHzM,qBAAqB,CAAC,IAAIiM,WAAW,CAAC;EAClCzC,EAAE,EAAEjJ,QAAQ,CAACmM,sBAAsB;EACnC9C,YAAY,EAAE7H,SAAS;EACvBqK,OAAO,EAAEC,CAAC,IAAIA,CAAC,CAAC9F,gBAAgB,CAAC,CAAC;EAClCwD,MAAM,EAAE;IACJG,MAAM,EAAE,GAAG,CAAC,sBAAsB,CAAC;IACnCF,MAAM,EAAE5J,iBAAiB,CAACgG,KAAK;IAC/B6D,OAAO,EAAEpJ,yBAAyB,CAACoJ,OAAO;IAC1Cc,GAAG,EAAElK,yBAAyB,CAACkK,GAAG;IAClCyB,GAAG,EAAE3L,yBAAyB,CAAC2L,GAAG;IAClCC,KAAK,EAAE5L,yBAAyB,CAAC4L;EACrC;AACJ,CAAC,CAAC,CAAC;AACHzM,qBAAqB,CAAC,IAAIiM,WAAW,CAAC;EAClCzC,EAAE,EAAEjJ,QAAQ,CAACoM,kBAAkB;EAC/B/C,YAAY,EAAE7H,SAAS;EACvBqK,OAAO,EAAEC,CAAC,IAAIA,CAAC,CAAC7F,WAAW,CAAC,CAAC;EAC7BuD,MAAM,EAAE;IACJG,MAAM,EAAE,GAAG,CAAC,sBAAsB,CAAC;IACnCF,MAAM,EAAE5J,iBAAiB,CAACgG,KAAK;IAC/B6D,OAAO,EAAEtJ,qBAAqB,CAACsJ,OAAO;IACtCc,GAAG,EAAEpK,qBAAqB,CAACoK,GAAG;IAC9ByB,GAAG,EAAE7L,qBAAqB,CAAC6L,GAAG;IAC9BC,KAAK,EAAE9L,qBAAqB,CAAC8L;EACjC;AACJ,CAAC,CAAC,CAAC;AACHzM,qBAAqB,CAAC,IAAIiM,WAAW,CAAC;EAClCzC,EAAE,EAAEjJ,QAAQ,CAACqM,wBAAwB;EACrChD,YAAY,EAAE7H,SAAS;EACvBqK,OAAO,EAAEC,CAAC,IAAIA,CAAC,CAAC3F,iBAAiB,CAAC,CAAC;EACnCqD,MAAM,EAAE;IACJG,MAAM,EAAE,GAAG,CAAC,sBAAsB,CAAC;IACnCF,MAAM,EAAE5J,iBAAiB,CAACgG,KAAK;IAC/B6D,OAAO,EAAErJ,2BAA2B,CAACqJ,OAAO;IAC5Cc,GAAG,EAAEnK,2BAA2B,CAACmK,GAAG;IACpCyB,GAAG,EAAE5L,2BAA2B,CAAC4L,GAAG;IACpCC,KAAK,EAAE7L,2BAA2B,CAAC6L;EACvC;AACJ,CAAC,CAAC,CAAC;AACHzM,qBAAqB,CAAC,IAAIiM,WAAW,CAAC;EAClCzC,EAAE,EAAEjJ,QAAQ,CAACsM,yBAAyB;EACtCjD,YAAY,EAAE7H,SAAS;EACvBqK,OAAO,EAAEC,CAAC,IAAIA,CAAC,CAAC5F,kBAAkB,CAAC,CAAC;EACpCsD,MAAM,EAAE;IACJG,MAAM,EAAE,GAAG,CAAC,sBAAsB,CAAC;IACnCF,MAAM,EAAE5J,iBAAiB,CAACgG,KAAK;IAC/B6D,OAAO,EAAEvJ,4BAA4B,CAACuJ,OAAO;IAC7Cc,GAAG,EAAErK,4BAA4B,CAACqK,GAAG;IACrCyB,GAAG,EAAE9L,4BAA4B,CAAC8L,GAAG;IACrCC,KAAK,EAAE/L,4BAA4B,CAAC+L;EACxC;AACJ,CAAC,CAAC,CAAC;AACHzM,qBAAqB,CAAC,IAAIiM,WAAW,CAAC;EAClCzC,EAAE,EAAEjJ,QAAQ,CAACuM,gBAAgB;EAC7BlD,YAAY,EAAEtJ,2BAA2B;EACzC8L,OAAO,EAAEC,CAAC,IAAIA,CAAC,CAACrE,OAAO,CAAC,CAAC;EACzB+B,MAAM,EAAE;IACJG,MAAM,EAAE,GAAG,CAAC,sBAAsB,CAAC;IACnCF,MAAM,EAAE5J,iBAAiB,CAACgG,KAAK;IAC/B6D,OAAO,EAAE,IAAI,CAAC,gBAAgB,IAAI,CAAC,cAAc,EAAE,CAAC;EACxD;AACJ,CAAC,CAAC,CAAC;;AACHjK,qBAAqB,CAAC,IAAIiM,WAAW,CAAC;EAClCzC,EAAE,EAAEjJ,QAAQ,CAACuM,gBAAgB;EAC7BlD,YAAY,EAAEtJ,2BAA2B;EACzC8L,OAAO,EAAEC,CAAC,IAAIA,CAAC,CAACrE,OAAO,CAAC,CAAC;EACzB+B,MAAM,EAAE;IACJG,MAAM,EAAE,GAAG,CAAC,sBAAsB,CAAC;IACnCF,MAAM,EAAE3I,cAAc,CAACiK,GAAG,CAAClL,iBAAiB,CAACgG,KAAK,EAAEtF,6BAA6B,CAAC;IAClFmJ,OAAO,EAAE,CAAC,CAAC;EACf;AACJ,CAAC,CAAC,CAAC;;AACHjK,qBAAqB,CAAC,IAAIiM,WAAW,CAAC;EAClCzC,EAAE,EAAEjJ,QAAQ,CAACwM,gBAAgB;EAC7BnD,YAAY,EAAEtJ,2BAA2B;EACzC8L,OAAO,EAAEC,CAAC,IAAIA,CAAC,CAACpE,UAAU,CAAC,CAAC;EAC5B8B,MAAM,EAAE;IACJG,MAAM,EAAE,GAAG,CAAC,sBAAsB,CAAC;IACnCF,MAAM,EAAE5J,iBAAiB,CAACgG,KAAK;IAC/B6D,OAAO,EAAE,IAAI,CAAC,gBAAgB,GAAG,CAAC,YAAY,CAAC,CAAC;EACpD;AACJ,CAAC,CAAC,CAAC;;AACHjK,qBAAqB,CAAC,IAAIiM,WAAW,CAAC;EAClCzC,EAAE,EAAEjJ,QAAQ,CAACwM,gBAAgB;EAC7BnD,YAAY,EAAEtJ,2BAA2B;EACzC8L,OAAO,EAAEC,CAAC,IAAIA,CAAC,CAACpE,UAAU,CAAC,CAAC;EAC5B8B,MAAM,EAAE;IACJG,MAAM,EAAE,GAAG,CAAC,sBAAsB,CAAC;IACnCF,MAAM,EAAE3I,cAAc,CAACiK,GAAG,CAAClL,iBAAiB,CAACgG,KAAK,EAAEtF,6BAA6B,CAAC;IAClFmJ,OAAO,EAAElI,SAAS;IAClBgJ,GAAG,EAAE;MACDd,OAAO,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;IACpC;EACJ;AACJ,CAAC,CAAC,CAAC;;AACHjK,qBAAqB,CAAC,IAAIiM,WAAW,CAAC;EAClCzC,EAAE,EAAEjJ,QAAQ,CAACyM,sBAAsB;EACnCpD,YAAY,EAAEtJ,2BAA2B;EACzC8L,OAAO,EAAEC,CAAC,IAAIA,CAAC,CAACnE,gBAAgB,CAAC,CAAC;EAClC6B,MAAM,EAAE;IACJG,MAAM,EAAE,GAAG,CAAC,sBAAsB,CAAC;IACnCF,MAAM,EAAE5J,iBAAiB,CAACgG,KAAK;IAC/B6D,OAAO,EAAE,GAAG,CAAC,YAAY,CAAC,CAAC;EAC/B;AACJ,CAAC,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}