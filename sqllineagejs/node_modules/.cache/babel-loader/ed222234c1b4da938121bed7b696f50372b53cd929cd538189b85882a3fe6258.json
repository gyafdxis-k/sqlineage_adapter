{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport * as dom from '../../../base/browser/dom.js';\nimport { CancellationToken } from '../../../base/common/cancellation.js';\nimport { LinkedList } from '../../../base/common/linkedList.js';\nimport { ResourceMap } from '../../../base/common/map.js';\nimport { parse } from '../../../base/common/marshalling.js';\nimport { Schemas } from '../../../base/common/network.js';\nimport { normalizePath } from '../../../base/common/resources.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { ICodeEditorService } from './codeEditorService.js';\nimport { ICommandService } from '../../../platform/commands/common/commands.js';\nimport { EditorOpenContext } from '../../../platform/editor/common/editor.js';\nimport { matchesScheme } from '../../../platform/opener/common/opener.js';\nlet CommandOpener = class CommandOpener {\n  constructor(_commandService) {\n    this._commandService = _commandService;\n  }\n  open(target) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!matchesScheme(target, Schemas.command)) {\n        return false;\n      }\n      // run command or bail out if command isn't known\n      if (typeof target === 'string') {\n        target = URI.parse(target);\n      }\n      // execute as command\n      let args = [];\n      try {\n        args = parse(decodeURIComponent(target.query));\n      } catch (_a) {\n        // ignore and retry\n        try {\n          args = parse(target.query);\n        } catch (_b) {\n          // ignore error\n        }\n      }\n      if (!Array.isArray(args)) {\n        args = [args];\n      }\n      yield this._commandService.executeCommand(target.path, ...args);\n      return true;\n    });\n  }\n};\nCommandOpener = __decorate([__param(0, ICommandService)], CommandOpener);\nlet EditorOpener = class EditorOpener {\n  constructor(_editorService) {\n    this._editorService = _editorService;\n  }\n  open(target, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (typeof target === 'string') {\n        target = URI.parse(target);\n      }\n      let selection = undefined;\n      const match = /^L?(\\d+)(?:,(\\d+))?/.exec(target.fragment);\n      if (match) {\n        // support file:///some/file.js#73,84\n        // support file:///some/file.js#L73\n        selection = {\n          startLineNumber: parseInt(match[1]),\n          startColumn: match[2] ? parseInt(match[2]) : 1\n        };\n        // remove fragment\n        target = target.with({\n          fragment: ''\n        });\n      }\n      if (target.scheme === Schemas.file) {\n        target = normalizePath(target); // workaround for non-normalized paths (https://github.com/microsoft/vscode/issues/12954)\n      }\n\n      yield this._editorService.openCodeEditor({\n        resource: target,\n        options: Object.assign({\n          selection,\n          context: (options === null || options === void 0 ? void 0 : options.fromUserGesture) ? EditorOpenContext.USER : EditorOpenContext.API\n        }, options === null || options === void 0 ? void 0 : options.editorOptions)\n      }, this._editorService.getFocusedCodeEditor(), options === null || options === void 0 ? void 0 : options.openToSide);\n      return true;\n    });\n  }\n};\nEditorOpener = __decorate([__param(0, ICodeEditorService)], EditorOpener);\nlet OpenerService = class OpenerService {\n  constructor(editorService, commandService) {\n    this._openers = new LinkedList();\n    this._validators = new LinkedList();\n    this._resolvers = new LinkedList();\n    this._resolvedUriTargets = new ResourceMap(uri => uri.with({\n      path: null,\n      fragment: null,\n      query: null\n    }).toString());\n    this._externalOpeners = new LinkedList();\n    // Default external opener is going through window.open()\n    this._defaultExternalOpener = {\n      openExternal: href => __awaiter(this, void 0, void 0, function* () {\n        // ensure to open HTTP/HTTPS links into new windows\n        // to not trigger a navigation. Any other link is\n        // safe to be set as HREF to prevent a blank window\n        // from opening.\n        if (matchesScheme(href, Schemas.http) || matchesScheme(href, Schemas.https)) {\n          dom.windowOpenNoOpener(href);\n        } else {\n          window.location.href = href;\n        }\n        return true;\n      })\n    };\n    // Default opener: any external, maito, http(s), command, and catch-all-editors\n    this._openers.push({\n      open: (target, options) => __awaiter(this, void 0, void 0, function* () {\n        if ((options === null || options === void 0 ? void 0 : options.openExternal) || matchesScheme(target, Schemas.mailto) || matchesScheme(target, Schemas.http) || matchesScheme(target, Schemas.https)) {\n          // open externally\n          yield this._doOpenExternal(target, options);\n          return true;\n        }\n        return false;\n      })\n    });\n    this._openers.push(new CommandOpener(commandService));\n    this._openers.push(new EditorOpener(editorService));\n  }\n  registerOpener(opener) {\n    const remove = this._openers.unshift(opener);\n    return {\n      dispose: remove\n    };\n  }\n  registerValidator(validator) {\n    const remove = this._validators.push(validator);\n    return {\n      dispose: remove\n    };\n  }\n  registerExternalUriResolver(resolver) {\n    const remove = this._resolvers.push(resolver);\n    return {\n      dispose: remove\n    };\n  }\n  setDefaultExternalOpener(externalOpener) {\n    this._defaultExternalOpener = externalOpener;\n  }\n  registerExternalOpener(opener) {\n    const remove = this._externalOpeners.push(opener);\n    return {\n      dispose: remove\n    };\n  }\n  open(target, options) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n      // check with contributed validators\n      const targetURI = typeof target === 'string' ? URI.parse(target) : target;\n      // validate against the original URI that this URI resolves to, if one exists\n      const validationTarget = (_a = this._resolvedUriTargets.get(targetURI)) !== null && _a !== void 0 ? _a : target;\n      for (const validator of this._validators) {\n        if (!(yield validator.shouldOpen(validationTarget))) {\n          return false;\n        }\n      }\n      // check with contributed openers\n      for (const opener of this._openers) {\n        const handled = yield opener.open(target, options);\n        if (handled) {\n          return true;\n        }\n      }\n      return false;\n    });\n  }\n  resolveExternalUri(resource, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n      for (const resolver of this._resolvers) {\n        const result = yield resolver.resolveExternalUri(resource, options);\n        if (result) {\n          this._resolvedUriTargets.set(result.resolved, resource);\n          return result;\n        }\n      }\n      return {\n        resolved: resource,\n        dispose: () => {}\n      };\n    });\n  }\n  _doOpenExternal(resource, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n      //todo@jrieken IExternalUriResolver should support `uri: URI | string`\n      const uri = typeof resource === 'string' ? URI.parse(resource) : resource;\n      const {\n        resolved\n      } = yield this.resolveExternalUri(uri, options);\n      let href;\n      if (typeof resource === 'string' && uri.toString() === resolved.toString()) {\n        // open the url-string AS IS\n        href = resource;\n      } else {\n        // open URI using the toString(noEncode)+encodeURI-trick\n        href = encodeURI(resolved.toString(true));\n      }\n      if (options === null || options === void 0 ? void 0 : options.allowContributedOpeners) {\n        const preferredOpenerId = typeof (options === null || options === void 0 ? void 0 : options.allowContributedOpeners) === 'string' ? options === null || options === void 0 ? void 0 : options.allowContributedOpeners : undefined;\n        for (const opener of this._externalOpeners) {\n          const didOpen = yield opener.openExternal(href, {\n            sourceUri: uri,\n            preferredOpenerId\n          }, CancellationToken.None);\n          if (didOpen) {\n            return true;\n          }\n        }\n      }\n      return this._defaultExternalOpener.openExternal(href, {\n        sourceUri: uri\n      }, CancellationToken.None);\n    });\n  }\n  dispose() {\n    this._validators.clear();\n  }\n};\nOpenerService = __decorate([__param(0, ICodeEditorService), __param(1, ICommandService)], OpenerService);\nexport { OpenerService };","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","dom","CancellationToken","LinkedList","ResourceMap","parse","Schemas","normalizePath","URI","ICodeEditorService","ICommandService","EditorOpenContext","matchesScheme","CommandOpener","constructor","_commandService","open","command","args","decodeURIComponent","query","_a","_b","Array","isArray","executeCommand","path","EditorOpener","_editorService","options","selection","undefined","match","exec","fragment","startLineNumber","parseInt","startColumn","with","scheme","file","openCodeEditor","resource","assign","context","fromUserGesture","USER","API","editorOptions","getFocusedCodeEditor","openToSide","OpenerService","editorService","commandService","_openers","_validators","_resolvers","_resolvedUriTargets","uri","toString","_externalOpeners","_defaultExternalOpener","openExternal","href","http","https","windowOpenNoOpener","window","location","push","mailto","_doOpenExternal","registerOpener","opener","remove","unshift","dispose","registerValidator","validator","registerExternalUriResolver","resolver","setDefaultExternalOpener","externalOpener","registerExternalOpener","targetURI","validationTarget","get","shouldOpen","handled","resolveExternalUri","set","resolved","encodeURI","allowContributedOpeners","preferredOpenerId","didOpen","sourceUri","None","clear"],"sources":["C:/Users/Administrator/Desktop/sqllineage-master/sqllineagejs/node_modules/monaco-editor/esm/vs/editor/browser/services/openerService.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport * as dom from '../../../base/browser/dom.js';\r\nimport { CancellationToken } from '../../../base/common/cancellation.js';\r\nimport { LinkedList } from '../../../base/common/linkedList.js';\r\nimport { ResourceMap } from '../../../base/common/map.js';\r\nimport { parse } from '../../../base/common/marshalling.js';\r\nimport { Schemas } from '../../../base/common/network.js';\r\nimport { normalizePath } from '../../../base/common/resources.js';\r\nimport { URI } from '../../../base/common/uri.js';\r\nimport { ICodeEditorService } from './codeEditorService.js';\r\nimport { ICommandService } from '../../../platform/commands/common/commands.js';\r\nimport { EditorOpenContext } from '../../../platform/editor/common/editor.js';\r\nimport { matchesScheme } from '../../../platform/opener/common/opener.js';\r\nlet CommandOpener = class CommandOpener {\r\n    constructor(_commandService) {\r\n        this._commandService = _commandService;\r\n    }\r\n    open(target) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!matchesScheme(target, Schemas.command)) {\r\n                return false;\r\n            }\r\n            // run command or bail out if command isn't known\r\n            if (typeof target === 'string') {\r\n                target = URI.parse(target);\r\n            }\r\n            // execute as command\r\n            let args = [];\r\n            try {\r\n                args = parse(decodeURIComponent(target.query));\r\n            }\r\n            catch (_a) {\r\n                // ignore and retry\r\n                try {\r\n                    args = parse(target.query);\r\n                }\r\n                catch (_b) {\r\n                    // ignore error\r\n                }\r\n            }\r\n            if (!Array.isArray(args)) {\r\n                args = [args];\r\n            }\r\n            yield this._commandService.executeCommand(target.path, ...args);\r\n            return true;\r\n        });\r\n    }\r\n};\r\nCommandOpener = __decorate([\r\n    __param(0, ICommandService)\r\n], CommandOpener);\r\nlet EditorOpener = class EditorOpener {\r\n    constructor(_editorService) {\r\n        this._editorService = _editorService;\r\n    }\r\n    open(target, options) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (typeof target === 'string') {\r\n                target = URI.parse(target);\r\n            }\r\n            let selection = undefined;\r\n            const match = /^L?(\\d+)(?:,(\\d+))?/.exec(target.fragment);\r\n            if (match) {\r\n                // support file:///some/file.js#73,84\r\n                // support file:///some/file.js#L73\r\n                selection = {\r\n                    startLineNumber: parseInt(match[1]),\r\n                    startColumn: match[2] ? parseInt(match[2]) : 1\r\n                };\r\n                // remove fragment\r\n                target = target.with({ fragment: '' });\r\n            }\r\n            if (target.scheme === Schemas.file) {\r\n                target = normalizePath(target); // workaround for non-normalized paths (https://github.com/microsoft/vscode/issues/12954)\r\n            }\r\n            yield this._editorService.openCodeEditor({\r\n                resource: target,\r\n                options: Object.assign({ selection, context: (options === null || options === void 0 ? void 0 : options.fromUserGesture) ? EditorOpenContext.USER : EditorOpenContext.API }, options === null || options === void 0 ? void 0 : options.editorOptions)\r\n            }, this._editorService.getFocusedCodeEditor(), options === null || options === void 0 ? void 0 : options.openToSide);\r\n            return true;\r\n        });\r\n    }\r\n};\r\nEditorOpener = __decorate([\r\n    __param(0, ICodeEditorService)\r\n], EditorOpener);\r\nlet OpenerService = class OpenerService {\r\n    constructor(editorService, commandService) {\r\n        this._openers = new LinkedList();\r\n        this._validators = new LinkedList();\r\n        this._resolvers = new LinkedList();\r\n        this._resolvedUriTargets = new ResourceMap(uri => uri.with({ path: null, fragment: null, query: null }).toString());\r\n        this._externalOpeners = new LinkedList();\r\n        // Default external opener is going through window.open()\r\n        this._defaultExternalOpener = {\r\n            openExternal: (href) => __awaiter(this, void 0, void 0, function* () {\r\n                // ensure to open HTTP/HTTPS links into new windows\r\n                // to not trigger a navigation. Any other link is\r\n                // safe to be set as HREF to prevent a blank window\r\n                // from opening.\r\n                if (matchesScheme(href, Schemas.http) || matchesScheme(href, Schemas.https)) {\r\n                    dom.windowOpenNoOpener(href);\r\n                }\r\n                else {\r\n                    window.location.href = href;\r\n                }\r\n                return true;\r\n            })\r\n        };\r\n        // Default opener: any external, maito, http(s), command, and catch-all-editors\r\n        this._openers.push({\r\n            open: (target, options) => __awaiter(this, void 0, void 0, function* () {\r\n                if ((options === null || options === void 0 ? void 0 : options.openExternal) || matchesScheme(target, Schemas.mailto) || matchesScheme(target, Schemas.http) || matchesScheme(target, Schemas.https)) {\r\n                    // open externally\r\n                    yield this._doOpenExternal(target, options);\r\n                    return true;\r\n                }\r\n                return false;\r\n            })\r\n        });\r\n        this._openers.push(new CommandOpener(commandService));\r\n        this._openers.push(new EditorOpener(editorService));\r\n    }\r\n    registerOpener(opener) {\r\n        const remove = this._openers.unshift(opener);\r\n        return { dispose: remove };\r\n    }\r\n    registerValidator(validator) {\r\n        const remove = this._validators.push(validator);\r\n        return { dispose: remove };\r\n    }\r\n    registerExternalUriResolver(resolver) {\r\n        const remove = this._resolvers.push(resolver);\r\n        return { dispose: remove };\r\n    }\r\n    setDefaultExternalOpener(externalOpener) {\r\n        this._defaultExternalOpener = externalOpener;\r\n    }\r\n    registerExternalOpener(opener) {\r\n        const remove = this._externalOpeners.push(opener);\r\n        return { dispose: remove };\r\n    }\r\n    open(target, options) {\r\n        var _a;\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            // check with contributed validators\r\n            const targetURI = typeof target === 'string' ? URI.parse(target) : target;\r\n            // validate against the original URI that this URI resolves to, if one exists\r\n            const validationTarget = (_a = this._resolvedUriTargets.get(targetURI)) !== null && _a !== void 0 ? _a : target;\r\n            for (const validator of this._validators) {\r\n                if (!(yield validator.shouldOpen(validationTarget))) {\r\n                    return false;\r\n                }\r\n            }\r\n            // check with contributed openers\r\n            for (const opener of this._openers) {\r\n                const handled = yield opener.open(target, options);\r\n                if (handled) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        });\r\n    }\r\n    resolveExternalUri(resource, options) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            for (const resolver of this._resolvers) {\r\n                const result = yield resolver.resolveExternalUri(resource, options);\r\n                if (result) {\r\n                    this._resolvedUriTargets.set(result.resolved, resource);\r\n                    return result;\r\n                }\r\n            }\r\n            return { resolved: resource, dispose: () => { } };\r\n        });\r\n    }\r\n    _doOpenExternal(resource, options) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            //todo@jrieken IExternalUriResolver should support `uri: URI | string`\r\n            const uri = typeof resource === 'string' ? URI.parse(resource) : resource;\r\n            const { resolved } = yield this.resolveExternalUri(uri, options);\r\n            let href;\r\n            if (typeof resource === 'string' && uri.toString() === resolved.toString()) {\r\n                // open the url-string AS IS\r\n                href = resource;\r\n            }\r\n            else {\r\n                // open URI using the toString(noEncode)+encodeURI-trick\r\n                href = encodeURI(resolved.toString(true));\r\n            }\r\n            if (options === null || options === void 0 ? void 0 : options.allowContributedOpeners) {\r\n                const preferredOpenerId = typeof (options === null || options === void 0 ? void 0 : options.allowContributedOpeners) === 'string' ? options === null || options === void 0 ? void 0 : options.allowContributedOpeners : undefined;\r\n                for (const opener of this._externalOpeners) {\r\n                    const didOpen = yield opener.openExternal(href, {\r\n                        sourceUri: uri,\r\n                        preferredOpenerId,\r\n                    }, CancellationToken.None);\r\n                    if (didOpen) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n            return this._defaultExternalOpener.openExternal(href, { sourceUri: uri }, CancellationToken.None);\r\n        });\r\n    }\r\n    dispose() {\r\n        this._validators.clear();\r\n    }\r\n};\r\nOpenerService = __decorate([\r\n    __param(0, ICodeEditorService),\r\n    __param(1, ICommandService)\r\n], OpenerService);\r\nexport { OpenerService };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}