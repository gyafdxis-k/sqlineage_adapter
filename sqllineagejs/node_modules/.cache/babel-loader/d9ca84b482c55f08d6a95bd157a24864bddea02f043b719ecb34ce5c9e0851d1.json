{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\n/**\r\n * Describes what to do with the indentation when pressing Enter.\r\n */\nexport var IndentAction;\n(function (IndentAction) {\n  /**\r\n   * Insert new line and copy the previous line's indentation.\r\n   */\n  IndentAction[IndentAction[\"None\"] = 0] = \"None\";\n  /**\r\n   * Insert new line and indent once (relative to the previous line's indentation).\r\n   */\n  IndentAction[IndentAction[\"Indent\"] = 1] = \"Indent\";\n  /**\r\n   * Insert two new lines:\r\n   *  - the first one indented which will hold the cursor\r\n   *  - the second one at the same indentation level\r\n   */\n  IndentAction[IndentAction[\"IndentOutdent\"] = 2] = \"IndentOutdent\";\n  /**\r\n   * Insert new line and outdent once (relative to the previous line's indentation).\r\n   */\n  IndentAction[IndentAction[\"Outdent\"] = 3] = \"Outdent\";\n})(IndentAction || (IndentAction = {}));\n/**\r\n * @internal\r\n */\nexport class StandardAutoClosingPairConditional {\n  constructor(source) {\n    this.open = source.open;\n    this.close = source.close;\n    // initially allowed in all tokens\n    this._standardTokenMask = 0;\n    if (Array.isArray(source.notIn)) {\n      for (let i = 0, len = source.notIn.length; i < len; i++) {\n        const notIn = source.notIn[i];\n        switch (notIn) {\n          case 'string':\n            this._standardTokenMask |= 2 /* String */;\n            break;\n          case 'comment':\n            this._standardTokenMask |= 1 /* Comment */;\n            break;\n          case 'regex':\n            this._standardTokenMask |= 4 /* RegEx */;\n            break;\n        }\n      }\n    }\n  }\n  isOK(standardToken) {\n    return (this._standardTokenMask & standardToken) === 0;\n  }\n}\n/**\r\n * @internal\r\n */\nexport class AutoClosingPairs {\n  constructor(autoClosingPairs) {\n    this.autoClosingPairsOpenByStart = new Map();\n    this.autoClosingPairsOpenByEnd = new Map();\n    this.autoClosingPairsCloseByStart = new Map();\n    this.autoClosingPairsCloseByEnd = new Map();\n    this.autoClosingPairsCloseSingleChar = new Map();\n    for (const pair of autoClosingPairs) {\n      appendEntry(this.autoClosingPairsOpenByStart, pair.open.charAt(0), pair);\n      appendEntry(this.autoClosingPairsOpenByEnd, pair.open.charAt(pair.open.length - 1), pair);\n      appendEntry(this.autoClosingPairsCloseByStart, pair.close.charAt(0), pair);\n      appendEntry(this.autoClosingPairsCloseByEnd, pair.close.charAt(pair.close.length - 1), pair);\n      if (pair.close.length === 1 && pair.open.length === 1) {\n        appendEntry(this.autoClosingPairsCloseSingleChar, pair.close, pair);\n      }\n    }\n  }\n}\nfunction appendEntry(target, key, value) {\n  if (target.has(key)) {\n    target.get(key).push(value);\n  } else {\n    target.set(key, [value]);\n  }\n}","map":{"version":3,"names":["IndentAction","StandardAutoClosingPairConditional","constructor","source","open","close","_standardTokenMask","Array","isArray","notIn","i","len","length","isOK","standardToken","AutoClosingPairs","autoClosingPairs","autoClosingPairsOpenByStart","Map","autoClosingPairsOpenByEnd","autoClosingPairsCloseByStart","autoClosingPairsCloseByEnd","autoClosingPairsCloseSingleChar","pair","appendEntry","charAt","target","key","value","has","get","push","set"],"sources":["C:/Users/Administrator/Desktop/sqllineage-master/sqllineagejs/node_modules/monaco-editor/esm/vs/editor/common/modes/languageConfiguration.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n/**\r\n * Describes what to do with the indentation when pressing Enter.\r\n */\r\nexport var IndentAction;\r\n(function (IndentAction) {\r\n    /**\r\n     * Insert new line and copy the previous line's indentation.\r\n     */\r\n    IndentAction[IndentAction[\"None\"] = 0] = \"None\";\r\n    /**\r\n     * Insert new line and indent once (relative to the previous line's indentation).\r\n     */\r\n    IndentAction[IndentAction[\"Indent\"] = 1] = \"Indent\";\r\n    /**\r\n     * Insert two new lines:\r\n     *  - the first one indented which will hold the cursor\r\n     *  - the second one at the same indentation level\r\n     */\r\n    IndentAction[IndentAction[\"IndentOutdent\"] = 2] = \"IndentOutdent\";\r\n    /**\r\n     * Insert new line and outdent once (relative to the previous line's indentation).\r\n     */\r\n    IndentAction[IndentAction[\"Outdent\"] = 3] = \"Outdent\";\r\n})(IndentAction || (IndentAction = {}));\r\n/**\r\n * @internal\r\n */\r\nexport class StandardAutoClosingPairConditional {\r\n    constructor(source) {\r\n        this.open = source.open;\r\n        this.close = source.close;\r\n        // initially allowed in all tokens\r\n        this._standardTokenMask = 0;\r\n        if (Array.isArray(source.notIn)) {\r\n            for (let i = 0, len = source.notIn.length; i < len; i++) {\r\n                const notIn = source.notIn[i];\r\n                switch (notIn) {\r\n                    case 'string':\r\n                        this._standardTokenMask |= 2 /* String */;\r\n                        break;\r\n                    case 'comment':\r\n                        this._standardTokenMask |= 1 /* Comment */;\r\n                        break;\r\n                    case 'regex':\r\n                        this._standardTokenMask |= 4 /* RegEx */;\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    isOK(standardToken) {\r\n        return (this._standardTokenMask & standardToken) === 0;\r\n    }\r\n}\r\n/**\r\n * @internal\r\n */\r\nexport class AutoClosingPairs {\r\n    constructor(autoClosingPairs) {\r\n        this.autoClosingPairsOpenByStart = new Map();\r\n        this.autoClosingPairsOpenByEnd = new Map();\r\n        this.autoClosingPairsCloseByStart = new Map();\r\n        this.autoClosingPairsCloseByEnd = new Map();\r\n        this.autoClosingPairsCloseSingleChar = new Map();\r\n        for (const pair of autoClosingPairs) {\r\n            appendEntry(this.autoClosingPairsOpenByStart, pair.open.charAt(0), pair);\r\n            appendEntry(this.autoClosingPairsOpenByEnd, pair.open.charAt(pair.open.length - 1), pair);\r\n            appendEntry(this.autoClosingPairsCloseByStart, pair.close.charAt(0), pair);\r\n            appendEntry(this.autoClosingPairsCloseByEnd, pair.close.charAt(pair.close.length - 1), pair);\r\n            if (pair.close.length === 1 && pair.open.length === 1) {\r\n                appendEntry(this.autoClosingPairsCloseSingleChar, pair.close, pair);\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction appendEntry(target, key, value) {\r\n    if (target.has(key)) {\r\n        target.get(key).push(value);\r\n    }\r\n    else {\r\n        target.set(key, [value]);\r\n    }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}