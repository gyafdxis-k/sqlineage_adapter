{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from './event.js';\nimport { Disposable } from './lifecycle.js';\nexport class ScrollState {\n  constructor(width, scrollWidth, scrollLeft, height, scrollHeight, scrollTop) {\n    width = width | 0;\n    scrollWidth = scrollWidth | 0;\n    scrollLeft = scrollLeft | 0;\n    height = height | 0;\n    scrollHeight = scrollHeight | 0;\n    scrollTop = scrollTop | 0;\n    this.rawScrollLeft = scrollLeft; // before validation\n    this.rawScrollTop = scrollTop; // before validation\n    if (width < 0) {\n      width = 0;\n    }\n    if (scrollLeft + width > scrollWidth) {\n      scrollLeft = scrollWidth - width;\n    }\n    if (scrollLeft < 0) {\n      scrollLeft = 0;\n    }\n    if (height < 0) {\n      height = 0;\n    }\n    if (scrollTop + height > scrollHeight) {\n      scrollTop = scrollHeight - height;\n    }\n    if (scrollTop < 0) {\n      scrollTop = 0;\n    }\n    this.width = width;\n    this.scrollWidth = scrollWidth;\n    this.scrollLeft = scrollLeft;\n    this.height = height;\n    this.scrollHeight = scrollHeight;\n    this.scrollTop = scrollTop;\n  }\n  equals(other) {\n    return this.rawScrollLeft === other.rawScrollLeft && this.rawScrollTop === other.rawScrollTop && this.width === other.width && this.scrollWidth === other.scrollWidth && this.scrollLeft === other.scrollLeft && this.height === other.height && this.scrollHeight === other.scrollHeight && this.scrollTop === other.scrollTop;\n  }\n  withScrollDimensions(update, useRawScrollPositions) {\n    return new ScrollState(typeof update.width !== 'undefined' ? update.width : this.width, typeof update.scrollWidth !== 'undefined' ? update.scrollWidth : this.scrollWidth, useRawScrollPositions ? this.rawScrollLeft : this.scrollLeft, typeof update.height !== 'undefined' ? update.height : this.height, typeof update.scrollHeight !== 'undefined' ? update.scrollHeight : this.scrollHeight, useRawScrollPositions ? this.rawScrollTop : this.scrollTop);\n  }\n  withScrollPosition(update) {\n    return new ScrollState(this.width, this.scrollWidth, typeof update.scrollLeft !== 'undefined' ? update.scrollLeft : this.rawScrollLeft, this.height, this.scrollHeight, typeof update.scrollTop !== 'undefined' ? update.scrollTop : this.rawScrollTop);\n  }\n  createScrollEvent(previous, inSmoothScrolling) {\n    const widthChanged = this.width !== previous.width;\n    const scrollWidthChanged = this.scrollWidth !== previous.scrollWidth;\n    const scrollLeftChanged = this.scrollLeft !== previous.scrollLeft;\n    const heightChanged = this.height !== previous.height;\n    const scrollHeightChanged = this.scrollHeight !== previous.scrollHeight;\n    const scrollTopChanged = this.scrollTop !== previous.scrollTop;\n    return {\n      inSmoothScrolling: inSmoothScrolling,\n      oldWidth: previous.width,\n      oldScrollWidth: previous.scrollWidth,\n      oldScrollLeft: previous.scrollLeft,\n      width: this.width,\n      scrollWidth: this.scrollWidth,\n      scrollLeft: this.scrollLeft,\n      oldHeight: previous.height,\n      oldScrollHeight: previous.scrollHeight,\n      oldScrollTop: previous.scrollTop,\n      height: this.height,\n      scrollHeight: this.scrollHeight,\n      scrollTop: this.scrollTop,\n      widthChanged: widthChanged,\n      scrollWidthChanged: scrollWidthChanged,\n      scrollLeftChanged: scrollLeftChanged,\n      heightChanged: heightChanged,\n      scrollHeightChanged: scrollHeightChanged,\n      scrollTopChanged: scrollTopChanged\n    };\n  }\n}\nexport class Scrollable extends Disposable {\n  constructor(smoothScrollDuration, scheduleAtNextAnimationFrame) {\n    super();\n    this._onScroll = this._register(new Emitter());\n    this.onScroll = this._onScroll.event;\n    this._smoothScrollDuration = smoothScrollDuration;\n    this._scheduleAtNextAnimationFrame = scheduleAtNextAnimationFrame;\n    this._state = new ScrollState(0, 0, 0, 0, 0, 0);\n    this._smoothScrolling = null;\n  }\n  dispose() {\n    if (this._smoothScrolling) {\n      this._smoothScrolling.dispose();\n      this._smoothScrolling = null;\n    }\n    super.dispose();\n  }\n  setSmoothScrollDuration(smoothScrollDuration) {\n    this._smoothScrollDuration = smoothScrollDuration;\n  }\n  validateScrollPosition(scrollPosition) {\n    return this._state.withScrollPosition(scrollPosition);\n  }\n  getScrollDimensions() {\n    return this._state;\n  }\n  setScrollDimensions(dimensions, useRawScrollPositions) {\n    const newState = this._state.withScrollDimensions(dimensions, useRawScrollPositions);\n    this._setState(newState, Boolean(this._smoothScrolling));\n    // Validate outstanding animated scroll position target\n    if (this._smoothScrolling) {\n      this._smoothScrolling.acceptScrollDimensions(this._state);\n    }\n  }\n  /**\r\n   * Returns the final scroll position that the instance will have once the smooth scroll animation concludes.\r\n   * If no scroll animation is occurring, it will return the current scroll position instead.\r\n   */\n  getFutureScrollPosition() {\n    if (this._smoothScrolling) {\n      return this._smoothScrolling.to;\n    }\n    return this._state;\n  }\n  /**\r\n   * Returns the current scroll position.\r\n   * Note: This result might be an intermediate scroll position, as there might be an ongoing smooth scroll animation.\r\n   */\n  getCurrentScrollPosition() {\n    return this._state;\n  }\n  setScrollPositionNow(update) {\n    // no smooth scrolling requested\n    const newState = this._state.withScrollPosition(update);\n    // Terminate any outstanding smooth scrolling\n    if (this._smoothScrolling) {\n      this._smoothScrolling.dispose();\n      this._smoothScrolling = null;\n    }\n    this._setState(newState, false);\n  }\n  setScrollPositionSmooth(update, reuseAnimation) {\n    if (this._smoothScrollDuration === 0) {\n      // Smooth scrolling not supported.\n      return this.setScrollPositionNow(update);\n    }\n    if (this._smoothScrolling) {\n      // Combine our pending scrollLeft/scrollTop with incoming scrollLeft/scrollTop\n      update = {\n        scrollLeft: typeof update.scrollLeft === 'undefined' ? this._smoothScrolling.to.scrollLeft : update.scrollLeft,\n        scrollTop: typeof update.scrollTop === 'undefined' ? this._smoothScrolling.to.scrollTop : update.scrollTop\n      };\n      // Validate `update`\n      const validTarget = this._state.withScrollPosition(update);\n      if (this._smoothScrolling.to.scrollLeft === validTarget.scrollLeft && this._smoothScrolling.to.scrollTop === validTarget.scrollTop) {\n        // No need to interrupt or extend the current animation since we're going to the same place\n        return;\n      }\n      let newSmoothScrolling;\n      if (reuseAnimation) {\n        newSmoothScrolling = new SmoothScrollingOperation(this._smoothScrolling.from, validTarget, this._smoothScrolling.startTime, this._smoothScrolling.duration);\n      } else {\n        newSmoothScrolling = this._smoothScrolling.combine(this._state, validTarget, this._smoothScrollDuration);\n      }\n      this._smoothScrolling.dispose();\n      this._smoothScrolling = newSmoothScrolling;\n    } else {\n      // Validate `update`\n      const validTarget = this._state.withScrollPosition(update);\n      this._smoothScrolling = SmoothScrollingOperation.start(this._state, validTarget, this._smoothScrollDuration);\n    }\n    // Begin smooth scrolling animation\n    this._smoothScrolling.animationFrameDisposable = this._scheduleAtNextAnimationFrame(() => {\n      if (!this._smoothScrolling) {\n        return;\n      }\n      this._smoothScrolling.animationFrameDisposable = null;\n      this._performSmoothScrolling();\n    });\n  }\n  _performSmoothScrolling() {\n    if (!this._smoothScrolling) {\n      return;\n    }\n    const update = this._smoothScrolling.tick();\n    const newState = this._state.withScrollPosition(update);\n    this._setState(newState, true);\n    if (!this._smoothScrolling) {\n      // Looks like someone canceled the smooth scrolling\n      // from the scroll event handler\n      return;\n    }\n    if (update.isDone) {\n      this._smoothScrolling.dispose();\n      this._smoothScrolling = null;\n      return;\n    }\n    // Continue smooth scrolling animation\n    this._smoothScrolling.animationFrameDisposable = this._scheduleAtNextAnimationFrame(() => {\n      if (!this._smoothScrolling) {\n        return;\n      }\n      this._smoothScrolling.animationFrameDisposable = null;\n      this._performSmoothScrolling();\n    });\n  }\n  _setState(newState, inSmoothScrolling) {\n    const oldState = this._state;\n    if (oldState.equals(newState)) {\n      // no change\n      return;\n    }\n    this._state = newState;\n    this._onScroll.fire(this._state.createScrollEvent(oldState, inSmoothScrolling));\n  }\n}\nexport class SmoothScrollingUpdate {\n  constructor(scrollLeft, scrollTop, isDone) {\n    this.scrollLeft = scrollLeft;\n    this.scrollTop = scrollTop;\n    this.isDone = isDone;\n  }\n}\nfunction createEaseOutCubic(from, to) {\n  const delta = to - from;\n  return function (completion) {\n    return from + delta * easeOutCubic(completion);\n  };\n}\nfunction createComposed(a, b, cut) {\n  return function (completion) {\n    if (completion < cut) {\n      return a(completion / cut);\n    }\n    return b((completion - cut) / (1 - cut));\n  };\n}\nexport class SmoothScrollingOperation {\n  constructor(from, to, startTime, duration) {\n    this.from = from;\n    this.to = to;\n    this.duration = duration;\n    this.startTime = startTime;\n    this.animationFrameDisposable = null;\n    this._initAnimations();\n  }\n  _initAnimations() {\n    this.scrollLeft = this._initAnimation(this.from.scrollLeft, this.to.scrollLeft, this.to.width);\n    this.scrollTop = this._initAnimation(this.from.scrollTop, this.to.scrollTop, this.to.height);\n  }\n  _initAnimation(from, to, viewportSize) {\n    const delta = Math.abs(from - to);\n    if (delta > 2.5 * viewportSize) {\n      let stop1, stop2;\n      if (from < to) {\n        // scroll to 75% of the viewportSize\n        stop1 = from + 0.75 * viewportSize;\n        stop2 = to - 0.75 * viewportSize;\n      } else {\n        stop1 = from - 0.75 * viewportSize;\n        stop2 = to + 0.75 * viewportSize;\n      }\n      return createComposed(createEaseOutCubic(from, stop1), createEaseOutCubic(stop2, to), 0.33);\n    }\n    return createEaseOutCubic(from, to);\n  }\n  dispose() {\n    if (this.animationFrameDisposable !== null) {\n      this.animationFrameDisposable.dispose();\n      this.animationFrameDisposable = null;\n    }\n  }\n  acceptScrollDimensions(state) {\n    this.to = state.withScrollPosition(this.to);\n    this._initAnimations();\n  }\n  tick() {\n    return this._tick(Date.now());\n  }\n  _tick(now) {\n    const completion = (now - this.startTime) / this.duration;\n    if (completion < 1) {\n      const newScrollLeft = this.scrollLeft(completion);\n      const newScrollTop = this.scrollTop(completion);\n      return new SmoothScrollingUpdate(newScrollLeft, newScrollTop, false);\n    }\n    return new SmoothScrollingUpdate(this.to.scrollLeft, this.to.scrollTop, true);\n  }\n  combine(from, to, duration) {\n    return SmoothScrollingOperation.start(from, to, duration);\n  }\n  static start(from, to, duration) {\n    // +10 / -10 : pretend the animation already started for a quicker response to a scroll request\n    duration = duration + 10;\n    const startTime = Date.now() - 10;\n    return new SmoothScrollingOperation(from, to, startTime, duration);\n  }\n}\nfunction easeInCubic(t) {\n  return Math.pow(t, 3);\n}\nfunction easeOutCubic(t) {\n  return 1 - easeInCubic(1 - t);\n}","map":{"version":3,"names":["Emitter","Disposable","ScrollState","constructor","width","scrollWidth","scrollLeft","height","scrollHeight","scrollTop","rawScrollLeft","rawScrollTop","equals","other","withScrollDimensions","update","useRawScrollPositions","withScrollPosition","createScrollEvent","previous","inSmoothScrolling","widthChanged","scrollWidthChanged","scrollLeftChanged","heightChanged","scrollHeightChanged","scrollTopChanged","oldWidth","oldScrollWidth","oldScrollLeft","oldHeight","oldScrollHeight","oldScrollTop","Scrollable","smoothScrollDuration","scheduleAtNextAnimationFrame","_onScroll","_register","onScroll","event","_smoothScrollDuration","_scheduleAtNextAnimationFrame","_state","_smoothScrolling","dispose","setSmoothScrollDuration","validateScrollPosition","scrollPosition","getScrollDimensions","setScrollDimensions","dimensions","newState","_setState","Boolean","acceptScrollDimensions","getFutureScrollPosition","to","getCurrentScrollPosition","setScrollPositionNow","setScrollPositionSmooth","reuseAnimation","validTarget","newSmoothScrolling","SmoothScrollingOperation","from","startTime","duration","combine","start","animationFrameDisposable","_performSmoothScrolling","tick","isDone","oldState","fire","SmoothScrollingUpdate","createEaseOutCubic","delta","completion","easeOutCubic","createComposed","a","b","cut","_initAnimations","_initAnimation","viewportSize","Math","abs","stop1","stop2","state","_tick","Date","now","newScrollLeft","newScrollTop","easeInCubic","t","pow"],"sources":["C:/Users/Administrator/Desktop/sqllineage-master/sqllineagejs/node_modules/monaco-editor/esm/vs/base/common/scrollable.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Emitter } from './event.js';\r\nimport { Disposable } from './lifecycle.js';\r\nexport class ScrollState {\r\n    constructor(width, scrollWidth, scrollLeft, height, scrollHeight, scrollTop) {\r\n        width = width | 0;\r\n        scrollWidth = scrollWidth | 0;\r\n        scrollLeft = scrollLeft | 0;\r\n        height = height | 0;\r\n        scrollHeight = scrollHeight | 0;\r\n        scrollTop = scrollTop | 0;\r\n        this.rawScrollLeft = scrollLeft; // before validation\r\n        this.rawScrollTop = scrollTop; // before validation\r\n        if (width < 0) {\r\n            width = 0;\r\n        }\r\n        if (scrollLeft + width > scrollWidth) {\r\n            scrollLeft = scrollWidth - width;\r\n        }\r\n        if (scrollLeft < 0) {\r\n            scrollLeft = 0;\r\n        }\r\n        if (height < 0) {\r\n            height = 0;\r\n        }\r\n        if (scrollTop + height > scrollHeight) {\r\n            scrollTop = scrollHeight - height;\r\n        }\r\n        if (scrollTop < 0) {\r\n            scrollTop = 0;\r\n        }\r\n        this.width = width;\r\n        this.scrollWidth = scrollWidth;\r\n        this.scrollLeft = scrollLeft;\r\n        this.height = height;\r\n        this.scrollHeight = scrollHeight;\r\n        this.scrollTop = scrollTop;\r\n    }\r\n    equals(other) {\r\n        return (this.rawScrollLeft === other.rawScrollLeft\r\n            && this.rawScrollTop === other.rawScrollTop\r\n            && this.width === other.width\r\n            && this.scrollWidth === other.scrollWidth\r\n            && this.scrollLeft === other.scrollLeft\r\n            && this.height === other.height\r\n            && this.scrollHeight === other.scrollHeight\r\n            && this.scrollTop === other.scrollTop);\r\n    }\r\n    withScrollDimensions(update, useRawScrollPositions) {\r\n        return new ScrollState((typeof update.width !== 'undefined' ? update.width : this.width), (typeof update.scrollWidth !== 'undefined' ? update.scrollWidth : this.scrollWidth), useRawScrollPositions ? this.rawScrollLeft : this.scrollLeft, (typeof update.height !== 'undefined' ? update.height : this.height), (typeof update.scrollHeight !== 'undefined' ? update.scrollHeight : this.scrollHeight), useRawScrollPositions ? this.rawScrollTop : this.scrollTop);\r\n    }\r\n    withScrollPosition(update) {\r\n        return new ScrollState(this.width, this.scrollWidth, (typeof update.scrollLeft !== 'undefined' ? update.scrollLeft : this.rawScrollLeft), this.height, this.scrollHeight, (typeof update.scrollTop !== 'undefined' ? update.scrollTop : this.rawScrollTop));\r\n    }\r\n    createScrollEvent(previous, inSmoothScrolling) {\r\n        const widthChanged = (this.width !== previous.width);\r\n        const scrollWidthChanged = (this.scrollWidth !== previous.scrollWidth);\r\n        const scrollLeftChanged = (this.scrollLeft !== previous.scrollLeft);\r\n        const heightChanged = (this.height !== previous.height);\r\n        const scrollHeightChanged = (this.scrollHeight !== previous.scrollHeight);\r\n        const scrollTopChanged = (this.scrollTop !== previous.scrollTop);\r\n        return {\r\n            inSmoothScrolling: inSmoothScrolling,\r\n            oldWidth: previous.width,\r\n            oldScrollWidth: previous.scrollWidth,\r\n            oldScrollLeft: previous.scrollLeft,\r\n            width: this.width,\r\n            scrollWidth: this.scrollWidth,\r\n            scrollLeft: this.scrollLeft,\r\n            oldHeight: previous.height,\r\n            oldScrollHeight: previous.scrollHeight,\r\n            oldScrollTop: previous.scrollTop,\r\n            height: this.height,\r\n            scrollHeight: this.scrollHeight,\r\n            scrollTop: this.scrollTop,\r\n            widthChanged: widthChanged,\r\n            scrollWidthChanged: scrollWidthChanged,\r\n            scrollLeftChanged: scrollLeftChanged,\r\n            heightChanged: heightChanged,\r\n            scrollHeightChanged: scrollHeightChanged,\r\n            scrollTopChanged: scrollTopChanged,\r\n        };\r\n    }\r\n}\r\nexport class Scrollable extends Disposable {\r\n    constructor(smoothScrollDuration, scheduleAtNextAnimationFrame) {\r\n        super();\r\n        this._onScroll = this._register(new Emitter());\r\n        this.onScroll = this._onScroll.event;\r\n        this._smoothScrollDuration = smoothScrollDuration;\r\n        this._scheduleAtNextAnimationFrame = scheduleAtNextAnimationFrame;\r\n        this._state = new ScrollState(0, 0, 0, 0, 0, 0);\r\n        this._smoothScrolling = null;\r\n    }\r\n    dispose() {\r\n        if (this._smoothScrolling) {\r\n            this._smoothScrolling.dispose();\r\n            this._smoothScrolling = null;\r\n        }\r\n        super.dispose();\r\n    }\r\n    setSmoothScrollDuration(smoothScrollDuration) {\r\n        this._smoothScrollDuration = smoothScrollDuration;\r\n    }\r\n    validateScrollPosition(scrollPosition) {\r\n        return this._state.withScrollPosition(scrollPosition);\r\n    }\r\n    getScrollDimensions() {\r\n        return this._state;\r\n    }\r\n    setScrollDimensions(dimensions, useRawScrollPositions) {\r\n        const newState = this._state.withScrollDimensions(dimensions, useRawScrollPositions);\r\n        this._setState(newState, Boolean(this._smoothScrolling));\r\n        // Validate outstanding animated scroll position target\r\n        if (this._smoothScrolling) {\r\n            this._smoothScrolling.acceptScrollDimensions(this._state);\r\n        }\r\n    }\r\n    /**\r\n     * Returns the final scroll position that the instance will have once the smooth scroll animation concludes.\r\n     * If no scroll animation is occurring, it will return the current scroll position instead.\r\n     */\r\n    getFutureScrollPosition() {\r\n        if (this._smoothScrolling) {\r\n            return this._smoothScrolling.to;\r\n        }\r\n        return this._state;\r\n    }\r\n    /**\r\n     * Returns the current scroll position.\r\n     * Note: This result might be an intermediate scroll position, as there might be an ongoing smooth scroll animation.\r\n     */\r\n    getCurrentScrollPosition() {\r\n        return this._state;\r\n    }\r\n    setScrollPositionNow(update) {\r\n        // no smooth scrolling requested\r\n        const newState = this._state.withScrollPosition(update);\r\n        // Terminate any outstanding smooth scrolling\r\n        if (this._smoothScrolling) {\r\n            this._smoothScrolling.dispose();\r\n            this._smoothScrolling = null;\r\n        }\r\n        this._setState(newState, false);\r\n    }\r\n    setScrollPositionSmooth(update, reuseAnimation) {\r\n        if (this._smoothScrollDuration === 0) {\r\n            // Smooth scrolling not supported.\r\n            return this.setScrollPositionNow(update);\r\n        }\r\n        if (this._smoothScrolling) {\r\n            // Combine our pending scrollLeft/scrollTop with incoming scrollLeft/scrollTop\r\n            update = {\r\n                scrollLeft: (typeof update.scrollLeft === 'undefined' ? this._smoothScrolling.to.scrollLeft : update.scrollLeft),\r\n                scrollTop: (typeof update.scrollTop === 'undefined' ? this._smoothScrolling.to.scrollTop : update.scrollTop)\r\n            };\r\n            // Validate `update`\r\n            const validTarget = this._state.withScrollPosition(update);\r\n            if (this._smoothScrolling.to.scrollLeft === validTarget.scrollLeft && this._smoothScrolling.to.scrollTop === validTarget.scrollTop) {\r\n                // No need to interrupt or extend the current animation since we're going to the same place\r\n                return;\r\n            }\r\n            let newSmoothScrolling;\r\n            if (reuseAnimation) {\r\n                newSmoothScrolling = new SmoothScrollingOperation(this._smoothScrolling.from, validTarget, this._smoothScrolling.startTime, this._smoothScrolling.duration);\r\n            }\r\n            else {\r\n                newSmoothScrolling = this._smoothScrolling.combine(this._state, validTarget, this._smoothScrollDuration);\r\n            }\r\n            this._smoothScrolling.dispose();\r\n            this._smoothScrolling = newSmoothScrolling;\r\n        }\r\n        else {\r\n            // Validate `update`\r\n            const validTarget = this._state.withScrollPosition(update);\r\n            this._smoothScrolling = SmoothScrollingOperation.start(this._state, validTarget, this._smoothScrollDuration);\r\n        }\r\n        // Begin smooth scrolling animation\r\n        this._smoothScrolling.animationFrameDisposable = this._scheduleAtNextAnimationFrame(() => {\r\n            if (!this._smoothScrolling) {\r\n                return;\r\n            }\r\n            this._smoothScrolling.animationFrameDisposable = null;\r\n            this._performSmoothScrolling();\r\n        });\r\n    }\r\n    _performSmoothScrolling() {\r\n        if (!this._smoothScrolling) {\r\n            return;\r\n        }\r\n        const update = this._smoothScrolling.tick();\r\n        const newState = this._state.withScrollPosition(update);\r\n        this._setState(newState, true);\r\n        if (!this._smoothScrolling) {\r\n            // Looks like someone canceled the smooth scrolling\r\n            // from the scroll event handler\r\n            return;\r\n        }\r\n        if (update.isDone) {\r\n            this._smoothScrolling.dispose();\r\n            this._smoothScrolling = null;\r\n            return;\r\n        }\r\n        // Continue smooth scrolling animation\r\n        this._smoothScrolling.animationFrameDisposable = this._scheduleAtNextAnimationFrame(() => {\r\n            if (!this._smoothScrolling) {\r\n                return;\r\n            }\r\n            this._smoothScrolling.animationFrameDisposable = null;\r\n            this._performSmoothScrolling();\r\n        });\r\n    }\r\n    _setState(newState, inSmoothScrolling) {\r\n        const oldState = this._state;\r\n        if (oldState.equals(newState)) {\r\n            // no change\r\n            return;\r\n        }\r\n        this._state = newState;\r\n        this._onScroll.fire(this._state.createScrollEvent(oldState, inSmoothScrolling));\r\n    }\r\n}\r\nexport class SmoothScrollingUpdate {\r\n    constructor(scrollLeft, scrollTop, isDone) {\r\n        this.scrollLeft = scrollLeft;\r\n        this.scrollTop = scrollTop;\r\n        this.isDone = isDone;\r\n    }\r\n}\r\nfunction createEaseOutCubic(from, to) {\r\n    const delta = to - from;\r\n    return function (completion) {\r\n        return from + delta * easeOutCubic(completion);\r\n    };\r\n}\r\nfunction createComposed(a, b, cut) {\r\n    return function (completion) {\r\n        if (completion < cut) {\r\n            return a(completion / cut);\r\n        }\r\n        return b((completion - cut) / (1 - cut));\r\n    };\r\n}\r\nexport class SmoothScrollingOperation {\r\n    constructor(from, to, startTime, duration) {\r\n        this.from = from;\r\n        this.to = to;\r\n        this.duration = duration;\r\n        this.startTime = startTime;\r\n        this.animationFrameDisposable = null;\r\n        this._initAnimations();\r\n    }\r\n    _initAnimations() {\r\n        this.scrollLeft = this._initAnimation(this.from.scrollLeft, this.to.scrollLeft, this.to.width);\r\n        this.scrollTop = this._initAnimation(this.from.scrollTop, this.to.scrollTop, this.to.height);\r\n    }\r\n    _initAnimation(from, to, viewportSize) {\r\n        const delta = Math.abs(from - to);\r\n        if (delta > 2.5 * viewportSize) {\r\n            let stop1, stop2;\r\n            if (from < to) {\r\n                // scroll to 75% of the viewportSize\r\n                stop1 = from + 0.75 * viewportSize;\r\n                stop2 = to - 0.75 * viewportSize;\r\n            }\r\n            else {\r\n                stop1 = from - 0.75 * viewportSize;\r\n                stop2 = to + 0.75 * viewportSize;\r\n            }\r\n            return createComposed(createEaseOutCubic(from, stop1), createEaseOutCubic(stop2, to), 0.33);\r\n        }\r\n        return createEaseOutCubic(from, to);\r\n    }\r\n    dispose() {\r\n        if (this.animationFrameDisposable !== null) {\r\n            this.animationFrameDisposable.dispose();\r\n            this.animationFrameDisposable = null;\r\n        }\r\n    }\r\n    acceptScrollDimensions(state) {\r\n        this.to = state.withScrollPosition(this.to);\r\n        this._initAnimations();\r\n    }\r\n    tick() {\r\n        return this._tick(Date.now());\r\n    }\r\n    _tick(now) {\r\n        const completion = (now - this.startTime) / this.duration;\r\n        if (completion < 1) {\r\n            const newScrollLeft = this.scrollLeft(completion);\r\n            const newScrollTop = this.scrollTop(completion);\r\n            return new SmoothScrollingUpdate(newScrollLeft, newScrollTop, false);\r\n        }\r\n        return new SmoothScrollingUpdate(this.to.scrollLeft, this.to.scrollTop, true);\r\n    }\r\n    combine(from, to, duration) {\r\n        return SmoothScrollingOperation.start(from, to, duration);\r\n    }\r\n    static start(from, to, duration) {\r\n        // +10 / -10 : pretend the animation already started for a quicker response to a scroll request\r\n        duration = duration + 10;\r\n        const startTime = Date.now() - 10;\r\n        return new SmoothScrollingOperation(from, to, startTime, duration);\r\n    }\r\n}\r\nfunction easeInCubic(t) {\r\n    return Math.pow(t, 3);\r\n}\r\nfunction easeOutCubic(t) {\r\n    return 1 - easeInCubic(1 - t);\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}