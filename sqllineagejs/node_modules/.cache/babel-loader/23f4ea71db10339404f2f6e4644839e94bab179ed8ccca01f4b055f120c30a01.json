{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport * as arrays from '../../../base/common/arrays.js';\nimport { CancellationToken } from '../../../base/common/cancellation.js';\nimport { EditorAction, registerEditorAction, registerEditorContribution, registerModelCommand } from '../../browser/editorExtensions.js';\nimport { Position } from '../../common/core/position.js';\nimport { Range } from '../../common/core/range.js';\nimport { Selection } from '../../common/core/selection.js';\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\nimport * as modes from '../../common/modes.js';\nimport * as nls from '../../../nls.js';\nimport { MenuId } from '../../../platform/actions/common/actions.js';\nimport { WordSelectionRangeProvider } from './wordSelections.js';\nimport { BracketSelectionRangeProvider } from './bracketSelections.js';\nimport { CommandsRegistry } from '../../../platform/commands/common/commands.js';\nimport { onUnexpectedExternalError } from '../../../base/common/errors.js';\nclass SelectionRanges {\n  constructor(index, ranges) {\n    this.index = index;\n    this.ranges = ranges;\n  }\n  mov(fwd) {\n    let index = this.index + (fwd ? 1 : -1);\n    if (index < 0 || index >= this.ranges.length) {\n      return this;\n    }\n    const res = new SelectionRanges(index, this.ranges);\n    if (res.ranges[index].equalsRange(this.ranges[this.index])) {\n      // next range equals this range, retry with next-next\n      return res.mov(fwd);\n    }\n    return res;\n  }\n}\nclass SmartSelectController {\n  constructor(_editor) {\n    this._editor = _editor;\n    this._ignoreSelection = false;\n  }\n  static get(editor) {\n    return editor.getContribution(SmartSelectController.ID);\n  }\n  dispose() {\n    var _a;\n    (_a = this._selectionListener) === null || _a === void 0 ? void 0 : _a.dispose();\n  }\n  run(forward) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!this._editor.hasModel()) {\n        return;\n      }\n      const selections = this._editor.getSelections();\n      const model = this._editor.getModel();\n      if (!modes.SelectionRangeRegistry.has(model)) {\n        return;\n      }\n      if (!this._state) {\n        yield provideSelectionRanges(model, selections.map(s => s.getPosition()), this._editor.getOption(97 /* smartSelect */), CancellationToken.None).then(ranges => {\n          var _a;\n          if (!arrays.isNonEmptyArray(ranges) || ranges.length !== selections.length) {\n            // invalid result\n            return;\n          }\n          if (!this._editor.hasModel() || !arrays.equals(this._editor.getSelections(), selections, (a, b) => a.equalsSelection(b))) {\n            // invalid editor state\n            return;\n          }\n          for (let i = 0; i < ranges.length; i++) {\n            ranges[i] = ranges[i].filter(range => {\n              // filter ranges inside the selection\n              return range.containsPosition(selections[i].getStartPosition()) && range.containsPosition(selections[i].getEndPosition());\n            });\n            // prepend current selection\n            ranges[i].unshift(selections[i]);\n          }\n          this._state = ranges.map(ranges => new SelectionRanges(0, ranges));\n          // listen to caret move and forget about state\n          (_a = this._selectionListener) === null || _a === void 0 ? void 0 : _a.dispose();\n          this._selectionListener = this._editor.onDidChangeCursorPosition(() => {\n            var _a;\n            if (!this._ignoreSelection) {\n              (_a = this._selectionListener) === null || _a === void 0 ? void 0 : _a.dispose();\n              this._state = undefined;\n            }\n          });\n        });\n      }\n      if (!this._state) {\n        // no state\n        return;\n      }\n      this._state = this._state.map(state => state.mov(forward));\n      const newSelections = this._state.map(state => Selection.fromPositions(state.ranges[state.index].getStartPosition(), state.ranges[state.index].getEndPosition()));\n      this._ignoreSelection = true;\n      try {\n        this._editor.setSelections(newSelections);\n      } finally {\n        this._ignoreSelection = false;\n      }\n    });\n  }\n}\nSmartSelectController.ID = 'editor.contrib.smartSelectController';\nclass AbstractSmartSelect extends EditorAction {\n  constructor(forward, opts) {\n    super(opts);\n    this._forward = forward;\n  }\n  run(_accessor, editor) {\n    return __awaiter(this, void 0, void 0, function* () {\n      let controller = SmartSelectController.get(editor);\n      if (controller) {\n        yield controller.run(this._forward);\n      }\n    });\n  }\n}\nclass GrowSelectionAction extends AbstractSmartSelect {\n  constructor() {\n    super(true, {\n      id: 'editor.action.smartSelect.expand',\n      label: nls.localize('smartSelect.expand', \"Expand Selection\"),\n      alias: 'Expand Selection',\n      precondition: undefined,\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: 1024 /* Shift */ | 512 /* Alt */ | 17 /* RightArrow */,\n        mac: {\n          primary: 2048 /* CtrlCmd */ | 256 /* WinCtrl */ | 1024 /* Shift */ | 17 /* RightArrow */,\n          secondary: [256 /* WinCtrl */ | 1024 /* Shift */ | 17 /* RightArrow */]\n        },\n\n        weight: 100 /* EditorContrib */\n      },\n\n      menuOpts: {\n        menuId: MenuId.MenubarSelectionMenu,\n        group: '1_basic',\n        title: nls.localize({\n          key: 'miSmartSelectGrow',\n          comment: ['&& denotes a mnemonic']\n        }, \"&&Expand Selection\"),\n        order: 2\n      }\n    });\n  }\n}\n// renamed command id\nCommandsRegistry.registerCommandAlias('editor.action.smartSelect.grow', 'editor.action.smartSelect.expand');\nclass ShrinkSelectionAction extends AbstractSmartSelect {\n  constructor() {\n    super(false, {\n      id: 'editor.action.smartSelect.shrink',\n      label: nls.localize('smartSelect.shrink', \"Shrink Selection\"),\n      alias: 'Shrink Selection',\n      precondition: undefined,\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: 1024 /* Shift */ | 512 /* Alt */ | 15 /* LeftArrow */,\n        mac: {\n          primary: 2048 /* CtrlCmd */ | 256 /* WinCtrl */ | 1024 /* Shift */ | 15 /* LeftArrow */,\n          secondary: [256 /* WinCtrl */ | 1024 /* Shift */ | 15 /* LeftArrow */]\n        },\n\n        weight: 100 /* EditorContrib */\n      },\n\n      menuOpts: {\n        menuId: MenuId.MenubarSelectionMenu,\n        group: '1_basic',\n        title: nls.localize({\n          key: 'miSmartSelectShrink',\n          comment: ['&& denotes a mnemonic']\n        }, \"&&Shrink Selection\"),\n        order: 3\n      }\n    });\n  }\n}\nregisterEditorContribution(SmartSelectController.ID, SmartSelectController);\nregisterEditorAction(GrowSelectionAction);\nregisterEditorAction(ShrinkSelectionAction);\n// word selection\nmodes.SelectionRangeRegistry.register('*', new WordSelectionRangeProvider());\nexport function provideSelectionRanges(model, positions, options, token) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const providers = modes.SelectionRangeRegistry.all(model);\n    if (providers.length === 1) {\n      // add word selection and bracket selection when no provider exists\n      providers.unshift(new BracketSelectionRangeProvider());\n    }\n    let work = [];\n    let allRawRanges = [];\n    for (const provider of providers) {\n      work.push(Promise.resolve(provider.provideSelectionRanges(model, positions, token)).then(allProviderRanges => {\n        if (arrays.isNonEmptyArray(allProviderRanges) && allProviderRanges.length === positions.length) {\n          for (let i = 0; i < positions.length; i++) {\n            if (!allRawRanges[i]) {\n              allRawRanges[i] = [];\n            }\n            for (const oneProviderRanges of allProviderRanges[i]) {\n              if (Range.isIRange(oneProviderRanges.range) && Range.containsPosition(oneProviderRanges.range, positions[i])) {\n                allRawRanges[i].push(Range.lift(oneProviderRanges.range));\n              }\n            }\n          }\n        }\n      }, onUnexpectedExternalError));\n    }\n    yield Promise.all(work);\n    return allRawRanges.map(oneRawRanges => {\n      if (oneRawRanges.length === 0) {\n        return [];\n      }\n      // sort all by start/end position\n      oneRawRanges.sort((a, b) => {\n        if (Position.isBefore(a.getStartPosition(), b.getStartPosition())) {\n          return 1;\n        } else if (Position.isBefore(b.getStartPosition(), a.getStartPosition())) {\n          return -1;\n        } else if (Position.isBefore(a.getEndPosition(), b.getEndPosition())) {\n          return -1;\n        } else if (Position.isBefore(b.getEndPosition(), a.getEndPosition())) {\n          return 1;\n        } else {\n          return 0;\n        }\n      });\n      // remove ranges that don't contain the former range or that are equal to the\n      // former range\n      let oneRanges = [];\n      let last;\n      for (const range of oneRawRanges) {\n        if (!last || Range.containsRange(range, last) && !Range.equalsRange(range, last)) {\n          oneRanges.push(range);\n          last = range;\n        }\n      }\n      if (!options.selectLeadingAndTrailingWhitespace) {\n        return oneRanges;\n      }\n      // add ranges that expand trivia at line starts and ends whenever a range\n      // wraps onto the a new line\n      let oneRangesWithTrivia = [oneRanges[0]];\n      for (let i = 1; i < oneRanges.length; i++) {\n        const prev = oneRanges[i - 1];\n        const cur = oneRanges[i];\n        if (cur.startLineNumber !== prev.startLineNumber || cur.endLineNumber !== prev.endLineNumber) {\n          // add line/block range without leading/failing whitespace\n          const rangeNoWhitespace = new Range(prev.startLineNumber, model.getLineFirstNonWhitespaceColumn(prev.startLineNumber), prev.endLineNumber, model.getLineLastNonWhitespaceColumn(prev.endLineNumber));\n          if (rangeNoWhitespace.containsRange(prev) && !rangeNoWhitespace.equalsRange(prev) && cur.containsRange(rangeNoWhitespace) && !cur.equalsRange(rangeNoWhitespace)) {\n            oneRangesWithTrivia.push(rangeNoWhitespace);\n          }\n          // add line/block range\n          const rangeFull = new Range(prev.startLineNumber, 1, prev.endLineNumber, model.getLineMaxColumn(prev.endLineNumber));\n          if (rangeFull.containsRange(prev) && !rangeFull.equalsRange(rangeNoWhitespace) && cur.containsRange(rangeFull) && !cur.equalsRange(rangeFull)) {\n            oneRangesWithTrivia.push(rangeFull);\n          }\n        }\n        oneRangesWithTrivia.push(cur);\n      }\n      return oneRangesWithTrivia;\n    });\n  });\n}\nregisterModelCommand('_executeSelectionRangeProvider', function (model) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n  const [positions] = args;\n  return provideSelectionRanges(model, positions, {\n    selectLeadingAndTrailingWhitespace: true\n  }, CancellationToken.None);\n});","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","arrays","CancellationToken","EditorAction","registerEditorAction","registerEditorContribution","registerModelCommand","Position","Range","Selection","EditorContextKeys","modes","nls","MenuId","WordSelectionRangeProvider","BracketSelectionRangeProvider","CommandsRegistry","onUnexpectedExternalError","SelectionRanges","constructor","index","ranges","mov","fwd","length","res","equalsRange","SmartSelectController","_editor","_ignoreSelection","get","editor","getContribution","ID","dispose","_a","_selectionListener","run","forward","hasModel","selections","getSelections","model","getModel","SelectionRangeRegistry","has","_state","provideSelectionRanges","map","s","getPosition","getOption","None","isNonEmptyArray","equals","a","b","equalsSelection","i","filter","range","containsPosition","getStartPosition","getEndPosition","unshift","onDidChangeCursorPosition","undefined","state","newSelections","fromPositions","setSelections","AbstractSmartSelect","opts","_forward","_accessor","controller","GrowSelectionAction","id","label","localize","alias","precondition","kbOpts","kbExpr","editorTextFocus","primary","mac","secondary","weight","menuOpts","menuId","MenubarSelectionMenu","group","title","key","comment","order","registerCommandAlias","ShrinkSelectionAction","register","positions","options","token","providers","all","work","allRawRanges","provider","push","allProviderRanges","oneProviderRanges","isIRange","lift","oneRawRanges","sort","isBefore","oneRanges","last","containsRange","selectLeadingAndTrailingWhitespace","oneRangesWithTrivia","prev","cur","startLineNumber","endLineNumber","rangeNoWhitespace","getLineFirstNonWhitespaceColumn","getLineLastNonWhitespaceColumn","rangeFull","getLineMaxColumn","_len","arguments","args","Array","_key"],"sources":["C:/Users/Administrator/Desktop/sqllineage-master/sqllineagejs/node_modules/monaco-editor/esm/vs/editor/contrib/smartSelect/smartSelect.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport * as arrays from '../../../base/common/arrays.js';\r\nimport { CancellationToken } from '../../../base/common/cancellation.js';\r\nimport { EditorAction, registerEditorAction, registerEditorContribution, registerModelCommand } from '../../browser/editorExtensions.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { Selection } from '../../common/core/selection.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport * as modes from '../../common/modes.js';\r\nimport * as nls from '../../../nls.js';\r\nimport { MenuId } from '../../../platform/actions/common/actions.js';\r\nimport { WordSelectionRangeProvider } from './wordSelections.js';\r\nimport { BracketSelectionRangeProvider } from './bracketSelections.js';\r\nimport { CommandsRegistry } from '../../../platform/commands/common/commands.js';\r\nimport { onUnexpectedExternalError } from '../../../base/common/errors.js';\r\nclass SelectionRanges {\r\n    constructor(index, ranges) {\r\n        this.index = index;\r\n        this.ranges = ranges;\r\n    }\r\n    mov(fwd) {\r\n        let index = this.index + (fwd ? 1 : -1);\r\n        if (index < 0 || index >= this.ranges.length) {\r\n            return this;\r\n        }\r\n        const res = new SelectionRanges(index, this.ranges);\r\n        if (res.ranges[index].equalsRange(this.ranges[this.index])) {\r\n            // next range equals this range, retry with next-next\r\n            return res.mov(fwd);\r\n        }\r\n        return res;\r\n    }\r\n}\r\nclass SmartSelectController {\r\n    constructor(_editor) {\r\n        this._editor = _editor;\r\n        this._ignoreSelection = false;\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(SmartSelectController.ID);\r\n    }\r\n    dispose() {\r\n        var _a;\r\n        (_a = this._selectionListener) === null || _a === void 0 ? void 0 : _a.dispose();\r\n    }\r\n    run(forward) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!this._editor.hasModel()) {\r\n                return;\r\n            }\r\n            const selections = this._editor.getSelections();\r\n            const model = this._editor.getModel();\r\n            if (!modes.SelectionRangeRegistry.has(model)) {\r\n                return;\r\n            }\r\n            if (!this._state) {\r\n                yield provideSelectionRanges(model, selections.map(s => s.getPosition()), this._editor.getOption(97 /* smartSelect */), CancellationToken.None).then(ranges => {\r\n                    var _a;\r\n                    if (!arrays.isNonEmptyArray(ranges) || ranges.length !== selections.length) {\r\n                        // invalid result\r\n                        return;\r\n                    }\r\n                    if (!this._editor.hasModel() || !arrays.equals(this._editor.getSelections(), selections, (a, b) => a.equalsSelection(b))) {\r\n                        // invalid editor state\r\n                        return;\r\n                    }\r\n                    for (let i = 0; i < ranges.length; i++) {\r\n                        ranges[i] = ranges[i].filter(range => {\r\n                            // filter ranges inside the selection\r\n                            return range.containsPosition(selections[i].getStartPosition()) && range.containsPosition(selections[i].getEndPosition());\r\n                        });\r\n                        // prepend current selection\r\n                        ranges[i].unshift(selections[i]);\r\n                    }\r\n                    this._state = ranges.map(ranges => new SelectionRanges(0, ranges));\r\n                    // listen to caret move and forget about state\r\n                    (_a = this._selectionListener) === null || _a === void 0 ? void 0 : _a.dispose();\r\n                    this._selectionListener = this._editor.onDidChangeCursorPosition(() => {\r\n                        var _a;\r\n                        if (!this._ignoreSelection) {\r\n                            (_a = this._selectionListener) === null || _a === void 0 ? void 0 : _a.dispose();\r\n                            this._state = undefined;\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n            if (!this._state) {\r\n                // no state\r\n                return;\r\n            }\r\n            this._state = this._state.map(state => state.mov(forward));\r\n            const newSelections = this._state.map(state => Selection.fromPositions(state.ranges[state.index].getStartPosition(), state.ranges[state.index].getEndPosition()));\r\n            this._ignoreSelection = true;\r\n            try {\r\n                this._editor.setSelections(newSelections);\r\n            }\r\n            finally {\r\n                this._ignoreSelection = false;\r\n            }\r\n        });\r\n    }\r\n}\r\nSmartSelectController.ID = 'editor.contrib.smartSelectController';\r\nclass AbstractSmartSelect extends EditorAction {\r\n    constructor(forward, opts) {\r\n        super(opts);\r\n        this._forward = forward;\r\n    }\r\n    run(_accessor, editor) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let controller = SmartSelectController.get(editor);\r\n            if (controller) {\r\n                yield controller.run(this._forward);\r\n            }\r\n        });\r\n    }\r\n}\r\nclass GrowSelectionAction extends AbstractSmartSelect {\r\n    constructor() {\r\n        super(true, {\r\n            id: 'editor.action.smartSelect.expand',\r\n            label: nls.localize('smartSelect.expand', \"Expand Selection\"),\r\n            alias: 'Expand Selection',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 1024 /* Shift */ | 512 /* Alt */ | 17 /* RightArrow */,\r\n                mac: {\r\n                    primary: 2048 /* CtrlCmd */ | 256 /* WinCtrl */ | 1024 /* Shift */ | 17 /* RightArrow */,\r\n                    secondary: [256 /* WinCtrl */ | 1024 /* Shift */ | 17 /* RightArrow */],\r\n                },\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            menuOpts: {\r\n                menuId: MenuId.MenubarSelectionMenu,\r\n                group: '1_basic',\r\n                title: nls.localize({ key: 'miSmartSelectGrow', comment: ['&& denotes a mnemonic'] }, \"&&Expand Selection\"),\r\n                order: 2\r\n            }\r\n        });\r\n    }\r\n}\r\n// renamed command id\r\nCommandsRegistry.registerCommandAlias('editor.action.smartSelect.grow', 'editor.action.smartSelect.expand');\r\nclass ShrinkSelectionAction extends AbstractSmartSelect {\r\n    constructor() {\r\n        super(false, {\r\n            id: 'editor.action.smartSelect.shrink',\r\n            label: nls.localize('smartSelect.shrink', \"Shrink Selection\"),\r\n            alias: 'Shrink Selection',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 1024 /* Shift */ | 512 /* Alt */ | 15 /* LeftArrow */,\r\n                mac: {\r\n                    primary: 2048 /* CtrlCmd */ | 256 /* WinCtrl */ | 1024 /* Shift */ | 15 /* LeftArrow */,\r\n                    secondary: [256 /* WinCtrl */ | 1024 /* Shift */ | 15 /* LeftArrow */],\r\n                },\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            menuOpts: {\r\n                menuId: MenuId.MenubarSelectionMenu,\r\n                group: '1_basic',\r\n                title: nls.localize({ key: 'miSmartSelectShrink', comment: ['&& denotes a mnemonic'] }, \"&&Shrink Selection\"),\r\n                order: 3\r\n            }\r\n        });\r\n    }\r\n}\r\nregisterEditorContribution(SmartSelectController.ID, SmartSelectController);\r\nregisterEditorAction(GrowSelectionAction);\r\nregisterEditorAction(ShrinkSelectionAction);\r\n// word selection\r\nmodes.SelectionRangeRegistry.register('*', new WordSelectionRangeProvider());\r\nexport function provideSelectionRanges(model, positions, options, token) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const providers = modes.SelectionRangeRegistry.all(model);\r\n        if (providers.length === 1) {\r\n            // add word selection and bracket selection when no provider exists\r\n            providers.unshift(new BracketSelectionRangeProvider());\r\n        }\r\n        let work = [];\r\n        let allRawRanges = [];\r\n        for (const provider of providers) {\r\n            work.push(Promise.resolve(provider.provideSelectionRanges(model, positions, token)).then(allProviderRanges => {\r\n                if (arrays.isNonEmptyArray(allProviderRanges) && allProviderRanges.length === positions.length) {\r\n                    for (let i = 0; i < positions.length; i++) {\r\n                        if (!allRawRanges[i]) {\r\n                            allRawRanges[i] = [];\r\n                        }\r\n                        for (const oneProviderRanges of allProviderRanges[i]) {\r\n                            if (Range.isIRange(oneProviderRanges.range) && Range.containsPosition(oneProviderRanges.range, positions[i])) {\r\n                                allRawRanges[i].push(Range.lift(oneProviderRanges.range));\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }, onUnexpectedExternalError));\r\n        }\r\n        yield Promise.all(work);\r\n        return allRawRanges.map(oneRawRanges => {\r\n            if (oneRawRanges.length === 0) {\r\n                return [];\r\n            }\r\n            // sort all by start/end position\r\n            oneRawRanges.sort((a, b) => {\r\n                if (Position.isBefore(a.getStartPosition(), b.getStartPosition())) {\r\n                    return 1;\r\n                }\r\n                else if (Position.isBefore(b.getStartPosition(), a.getStartPosition())) {\r\n                    return -1;\r\n                }\r\n                else if (Position.isBefore(a.getEndPosition(), b.getEndPosition())) {\r\n                    return -1;\r\n                }\r\n                else if (Position.isBefore(b.getEndPosition(), a.getEndPosition())) {\r\n                    return 1;\r\n                }\r\n                else {\r\n                    return 0;\r\n                }\r\n            });\r\n            // remove ranges that don't contain the former range or that are equal to the\r\n            // former range\r\n            let oneRanges = [];\r\n            let last;\r\n            for (const range of oneRawRanges) {\r\n                if (!last || (Range.containsRange(range, last) && !Range.equalsRange(range, last))) {\r\n                    oneRanges.push(range);\r\n                    last = range;\r\n                }\r\n            }\r\n            if (!options.selectLeadingAndTrailingWhitespace) {\r\n                return oneRanges;\r\n            }\r\n            // add ranges that expand trivia at line starts and ends whenever a range\r\n            // wraps onto the a new line\r\n            let oneRangesWithTrivia = [oneRanges[0]];\r\n            for (let i = 1; i < oneRanges.length; i++) {\r\n                const prev = oneRanges[i - 1];\r\n                const cur = oneRanges[i];\r\n                if (cur.startLineNumber !== prev.startLineNumber || cur.endLineNumber !== prev.endLineNumber) {\r\n                    // add line/block range without leading/failing whitespace\r\n                    const rangeNoWhitespace = new Range(prev.startLineNumber, model.getLineFirstNonWhitespaceColumn(prev.startLineNumber), prev.endLineNumber, model.getLineLastNonWhitespaceColumn(prev.endLineNumber));\r\n                    if (rangeNoWhitespace.containsRange(prev) && !rangeNoWhitespace.equalsRange(prev) && cur.containsRange(rangeNoWhitespace) && !cur.equalsRange(rangeNoWhitespace)) {\r\n                        oneRangesWithTrivia.push(rangeNoWhitespace);\r\n                    }\r\n                    // add line/block range\r\n                    const rangeFull = new Range(prev.startLineNumber, 1, prev.endLineNumber, model.getLineMaxColumn(prev.endLineNumber));\r\n                    if (rangeFull.containsRange(prev) && !rangeFull.equalsRange(rangeNoWhitespace) && cur.containsRange(rangeFull) && !cur.equalsRange(rangeFull)) {\r\n                        oneRangesWithTrivia.push(rangeFull);\r\n                    }\r\n                }\r\n                oneRangesWithTrivia.push(cur);\r\n            }\r\n            return oneRangesWithTrivia;\r\n        });\r\n    });\r\n}\r\nregisterModelCommand('_executeSelectionRangeProvider', function (model, ...args) {\r\n    const [positions] = args;\r\n    return provideSelectionRanges(model, positions, { selectLeadingAndTrailingWhitespace: true }, CancellationToken.None);\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}