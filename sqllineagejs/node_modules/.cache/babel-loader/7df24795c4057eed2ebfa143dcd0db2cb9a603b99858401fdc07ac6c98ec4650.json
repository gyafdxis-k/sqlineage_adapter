{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { illegalArgument } from '../../../base/common/errors.js';\nimport { UILabelProvider, AriaLabelProvider } from '../../../base/common/keybindingLabels.js';\nimport { ResolvedKeybinding, ResolvedKeybindingPart } from '../../../base/common/keyCodes.js';\nexport class BaseResolvedKeybinding extends ResolvedKeybinding {\n  constructor(os, parts) {\n    super();\n    if (parts.length === 0) {\n      throw illegalArgument(\"parts\");\n    }\n    this._os = os;\n    this._parts = parts;\n  }\n  getLabel() {\n    return UILabelProvider.toLabel(this._os, this._parts, keybinding => this._getLabel(keybinding));\n  }\n  getAriaLabel() {\n    return AriaLabelProvider.toLabel(this._os, this._parts, keybinding => this._getAriaLabel(keybinding));\n  }\n  isChord() {\n    return this._parts.length > 1;\n  }\n  getParts() {\n    return this._parts.map(keybinding => this._getPart(keybinding));\n  }\n  _getPart(keybinding) {\n    return new ResolvedKeybindingPart(keybinding.ctrlKey, keybinding.shiftKey, keybinding.altKey, keybinding.metaKey, this._getLabel(keybinding), this._getAriaLabel(keybinding));\n  }\n  getDispatchParts() {\n    return this._parts.map(keybinding => this._getDispatchPart(keybinding));\n  }\n}","map":{"version":3,"names":["illegalArgument","UILabelProvider","AriaLabelProvider","ResolvedKeybinding","ResolvedKeybindingPart","BaseResolvedKeybinding","constructor","os","parts","length","_os","_parts","getLabel","toLabel","keybinding","_getLabel","getAriaLabel","_getAriaLabel","isChord","getParts","map","_getPart","ctrlKey","shiftKey","altKey","metaKey","getDispatchParts","_getDispatchPart"],"sources":["C:/Users/Administrator/Desktop/sqllineage-master/sqllineagejs/node_modules/monaco-editor/esm/vs/platform/keybinding/common/baseResolvedKeybinding.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { illegalArgument } from '../../../base/common/errors.js';\r\nimport { UILabelProvider, AriaLabelProvider } from '../../../base/common/keybindingLabels.js';\r\nimport { ResolvedKeybinding, ResolvedKeybindingPart } from '../../../base/common/keyCodes.js';\r\nexport class BaseResolvedKeybinding extends ResolvedKeybinding {\r\n    constructor(os, parts) {\r\n        super();\r\n        if (parts.length === 0) {\r\n            throw illegalArgument(`parts`);\r\n        }\r\n        this._os = os;\r\n        this._parts = parts;\r\n    }\r\n    getLabel() {\r\n        return UILabelProvider.toLabel(this._os, this._parts, (keybinding) => this._getLabel(keybinding));\r\n    }\r\n    getAriaLabel() {\r\n        return AriaLabelProvider.toLabel(this._os, this._parts, (keybinding) => this._getAriaLabel(keybinding));\r\n    }\r\n    isChord() {\r\n        return (this._parts.length > 1);\r\n    }\r\n    getParts() {\r\n        return this._parts.map((keybinding) => this._getPart(keybinding));\r\n    }\r\n    _getPart(keybinding) {\r\n        return new ResolvedKeybindingPart(keybinding.ctrlKey, keybinding.shiftKey, keybinding.altKey, keybinding.metaKey, this._getLabel(keybinding), this._getAriaLabel(keybinding));\r\n    }\r\n    getDispatchParts() {\r\n        return this._parts.map((keybinding) => this._getDispatchPart(keybinding));\r\n    }\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,eAAe,QAAQ,gCAAgC;AAChE,SAASC,eAAe,EAAEC,iBAAiB,QAAQ,0CAA0C;AAC7F,SAASC,kBAAkB,EAAEC,sBAAsB,QAAQ,kCAAkC;AAC7F,OAAO,MAAMC,sBAAsB,SAASF,kBAAkB,CAAC;EAC3DG,WAAWA,CAACC,EAAE,EAAEC,KAAK,EAAE;IACnB,KAAK,CAAC,CAAC;IACP,IAAIA,KAAK,CAACC,MAAM,KAAK,CAAC,EAAE;MACpB,MAAMT,eAAe,QAAQ,CAAC;IAClC;IACA,IAAI,CAACU,GAAG,GAAGH,EAAE;IACb,IAAI,CAACI,MAAM,GAAGH,KAAK;EACvB;EACAI,QAAQA,CAAA,EAAG;IACP,OAAOX,eAAe,CAACY,OAAO,CAAC,IAAI,CAACH,GAAG,EAAE,IAAI,CAACC,MAAM,EAAGG,UAAU,IAAK,IAAI,CAACC,SAAS,CAACD,UAAU,CAAC,CAAC;EACrG;EACAE,YAAYA,CAAA,EAAG;IACX,OAAOd,iBAAiB,CAACW,OAAO,CAAC,IAAI,CAACH,GAAG,EAAE,IAAI,CAACC,MAAM,EAAGG,UAAU,IAAK,IAAI,CAACG,aAAa,CAACH,UAAU,CAAC,CAAC;EAC3G;EACAI,OAAOA,CAAA,EAAG;IACN,OAAQ,IAAI,CAACP,MAAM,CAACF,MAAM,GAAG,CAAC;EAClC;EACAU,QAAQA,CAAA,EAAG;IACP,OAAO,IAAI,CAACR,MAAM,CAACS,GAAG,CAAEN,UAAU,IAAK,IAAI,CAACO,QAAQ,CAACP,UAAU,CAAC,CAAC;EACrE;EACAO,QAAQA,CAACP,UAAU,EAAE;IACjB,OAAO,IAAIV,sBAAsB,CAACU,UAAU,CAACQ,OAAO,EAAER,UAAU,CAACS,QAAQ,EAAET,UAAU,CAACU,MAAM,EAAEV,UAAU,CAACW,OAAO,EAAE,IAAI,CAACV,SAAS,CAACD,UAAU,CAAC,EAAE,IAAI,CAACG,aAAa,CAACH,UAAU,CAAC,CAAC;EACjL;EACAY,gBAAgBA,CAAA,EAAG;IACf,OAAO,IAAI,CAACf,MAAM,CAACS,GAAG,CAAEN,UAAU,IAAK,IAAI,CAACa,gBAAgB,CAACb,UAAU,CAAC,CAAC;EAC7E;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}