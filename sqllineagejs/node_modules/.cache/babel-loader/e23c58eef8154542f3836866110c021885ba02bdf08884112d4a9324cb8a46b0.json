{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nimport * as aria from '../../../base/browser/ui/aria/aria.js';\nimport { Disposable, toDisposable, DisposableStore } from '../../../base/common/lifecycle.js';\nimport { ICodeEditorService } from '../../browser/services/codeEditorService.js';\nimport { CodeEditorWidget } from '../../browser/widget/codeEditorWidget.js';\nimport { DiffEditorWidget } from '../../browser/widget/diffEditorWidget.js';\nimport { InternalEditorAction } from '../../common/editorAction.js';\nimport { IEditorWorkerService } from '../../common/services/editorWorkerService.js';\nimport { StandaloneKeybindingService, updateConfigurationService } from './simpleServices.js';\nimport { IStandaloneThemeService } from '../common/standaloneThemeService.js';\nimport { MenuId, MenuRegistry } from '../../../platform/actions/common/actions.js';\nimport { CommandsRegistry, ICommandService } from '../../../platform/commands/common/commands.js';\nimport { IConfigurationService } from '../../../platform/configuration/common/configuration.js';\nimport { ContextKeyExpr, IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\nimport { IContextViewService, IContextMenuService } from '../../../platform/contextview/browser/contextView.js';\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../../platform/keybinding/common/keybinding.js';\nimport { INotificationService } from '../../../platform/notification/common/notification.js';\nimport { IThemeService } from '../../../platform/theme/common/themeService.js';\nimport { IAccessibilityService } from '../../../platform/accessibility/common/accessibility.js';\nimport { StandaloneCodeEditorNLS } from '../../common/standaloneStrings.js';\nimport { IClipboardService } from '../../../platform/clipboard/common/clipboardService.js';\nimport { IEditorProgressService } from '../../../platform/progress/common/progress.js';\nimport { IModelService } from '../../common/services/modelService.js';\nimport { IModeService } from '../../common/services/modeService.js';\nlet LAST_GENERATED_COMMAND_ID = 0;\nlet ariaDomNodeCreated = false;\nfunction createAriaDomNode() {\n  if (ariaDomNodeCreated) {\n    return;\n  }\n  ariaDomNodeCreated = true;\n  aria.setARIAContainer(document.body);\n}\n/**\r\n * A code editor to be used both by the standalone editor and the standalone diff editor.\r\n */\nlet StandaloneCodeEditor = class StandaloneCodeEditor extends CodeEditorWidget {\n  constructor(domElement, _options, instantiationService, codeEditorService, commandService, contextKeyService, keybindingService, themeService, notificationService, accessibilityService) {\n    const options = Object.assign({}, _options);\n    options.ariaLabel = options.ariaLabel || StandaloneCodeEditorNLS.editorViewAccessibleLabel;\n    options.ariaLabel = options.ariaLabel + ';' + StandaloneCodeEditorNLS.accessibilityHelpMessage;\n    super(domElement, options, {}, instantiationService, codeEditorService, commandService, contextKeyService, themeService, notificationService, accessibilityService);\n    if (keybindingService instanceof StandaloneKeybindingService) {\n      this._standaloneKeybindingService = keybindingService;\n    } else {\n      this._standaloneKeybindingService = null;\n    }\n    // Create the ARIA dom node as soon as the first editor is instantiated\n    createAriaDomNode();\n  }\n  addCommand(keybinding, handler, context) {\n    if (!this._standaloneKeybindingService) {\n      console.warn('Cannot add command because the editor is configured with an unrecognized KeybindingService');\n      return null;\n    }\n    let commandId = 'DYNAMIC_' + ++LAST_GENERATED_COMMAND_ID;\n    let whenExpression = ContextKeyExpr.deserialize(context);\n    this._standaloneKeybindingService.addDynamicKeybinding(commandId, keybinding, handler, whenExpression);\n    return commandId;\n  }\n  createContextKey(key, defaultValue) {\n    return this._contextKeyService.createKey(key, defaultValue);\n  }\n  addAction(_descriptor) {\n    var _this = this;\n    if (typeof _descriptor.id !== 'string' || typeof _descriptor.label !== 'string' || typeof _descriptor.run !== 'function') {\n      throw new Error('Invalid action descriptor, `id`, `label` and `run` are required properties!');\n    }\n    if (!this._standaloneKeybindingService) {\n      console.warn('Cannot add keybinding because the editor is configured with an unrecognized KeybindingService');\n      return Disposable.None;\n    }\n    // Read descriptor options\n    const id = _descriptor.id;\n    const label = _descriptor.label;\n    const precondition = ContextKeyExpr.and(ContextKeyExpr.equals('editorId', this.getId()), ContextKeyExpr.deserialize(_descriptor.precondition));\n    const keybindings = _descriptor.keybindings;\n    const keybindingsWhen = ContextKeyExpr.and(precondition, ContextKeyExpr.deserialize(_descriptor.keybindingContext));\n    const contextMenuGroupId = _descriptor.contextMenuGroupId || null;\n    const contextMenuOrder = _descriptor.contextMenuOrder || 0;\n    const run = function (accessor) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n      return Promise.resolve(_descriptor.run(_this, ...args));\n    };\n    const toDispose = new DisposableStore();\n    // Generate a unique id to allow the same descriptor.id across multiple editor instances\n    const uniqueId = this.getId() + ':' + id;\n    // Register the command\n    toDispose.add(CommandsRegistry.registerCommand(uniqueId, run));\n    // Register the context menu item\n    if (contextMenuGroupId) {\n      let menuItem = {\n        command: {\n          id: uniqueId,\n          title: label\n        },\n        when: precondition,\n        group: contextMenuGroupId,\n        order: contextMenuOrder\n      };\n      toDispose.add(MenuRegistry.appendMenuItem(MenuId.EditorContext, menuItem));\n    }\n    // Register the keybindings\n    if (Array.isArray(keybindings)) {\n      for (const kb of keybindings) {\n        toDispose.add(this._standaloneKeybindingService.addDynamicKeybinding(uniqueId, kb, run, keybindingsWhen));\n      }\n    }\n    // Finally, register an internal editor action\n    let internalAction = new InternalEditorAction(uniqueId, label, label, precondition, run, this._contextKeyService);\n    // Store it under the original id, such that trigger with the original id will work\n    this._actions[id] = internalAction;\n    toDispose.add(toDisposable(() => {\n      delete this._actions[id];\n    }));\n    return toDispose;\n  }\n};\nStandaloneCodeEditor = __decorate([__param(2, IInstantiationService), __param(3, ICodeEditorService), __param(4, ICommandService), __param(5, IContextKeyService), __param(6, IKeybindingService), __param(7, IThemeService), __param(8, INotificationService), __param(9, IAccessibilityService)], StandaloneCodeEditor);\nexport { StandaloneCodeEditor };\nlet StandaloneEditor = class StandaloneEditor extends StandaloneCodeEditor {\n  constructor(domElement, _options, toDispose, instantiationService, codeEditorService, commandService, contextKeyService, keybindingService, contextViewService, themeService, notificationService, configurationService, accessibilityService, modelService, modeService) {\n    const options = Object.assign({}, _options);\n    updateConfigurationService(configurationService, options, false);\n    const themeDomRegistration = themeService.registerEditorContainer(domElement);\n    if (typeof options.theme === 'string') {\n      themeService.setTheme(options.theme);\n    }\n    let _model = options.model;\n    delete options.model;\n    super(domElement, options, instantiationService, codeEditorService, commandService, contextKeyService, keybindingService, themeService, notificationService, accessibilityService);\n    this._contextViewService = contextViewService;\n    this._configurationService = configurationService;\n    this._standaloneThemeService = themeService;\n    this._register(toDispose);\n    this._register(themeDomRegistration);\n    let model;\n    if (typeof _model === 'undefined') {\n      model = createTextModel(modelService, modeService, options.value || '', options.language || 'text/plain', undefined);\n      this._ownsModel = true;\n    } else {\n      model = _model;\n      this._ownsModel = false;\n    }\n    this._attachModel(model);\n    if (model) {\n      let e = {\n        oldModelUrl: null,\n        newModelUrl: model.uri\n      };\n      this._onDidChangeModel.fire(e);\n    }\n  }\n  dispose() {\n    super.dispose();\n  }\n  updateOptions(newOptions) {\n    updateConfigurationService(this._configurationService, newOptions, false);\n    if (typeof newOptions.theme === 'string') {\n      this._standaloneThemeService.setTheme(newOptions.theme);\n    }\n    super.updateOptions(newOptions);\n  }\n  _attachModel(model) {\n    super._attachModel(model);\n    if (this._modelData) {\n      this._contextViewService.setContainer(this._modelData.view.domNode.domNode);\n    }\n  }\n  _postDetachModelCleanup(detachedModel) {\n    super._postDetachModelCleanup(detachedModel);\n    if (detachedModel && this._ownsModel) {\n      detachedModel.dispose();\n      this._ownsModel = false;\n    }\n  }\n};\nStandaloneEditor = __decorate([__param(3, IInstantiationService), __param(4, ICodeEditorService), __param(5, ICommandService), __param(6, IContextKeyService), __param(7, IKeybindingService), __param(8, IContextViewService), __param(9, IStandaloneThemeService), __param(10, INotificationService), __param(11, IConfigurationService), __param(12, IAccessibilityService), __param(13, IModelService), __param(14, IModeService)], StandaloneEditor);\nexport { StandaloneEditor };\nlet StandaloneDiffEditor = class StandaloneDiffEditor extends DiffEditorWidget {\n  constructor(domElement, _options, toDispose, instantiationService, contextKeyService, keybindingService, contextViewService, editorWorkerService, codeEditorService, themeService, notificationService, configurationService, contextMenuService, editorProgressService, clipboardService) {\n    const options = Object.assign({}, _options);\n    updateConfigurationService(configurationService, options, true);\n    const themeDomRegistration = themeService.registerEditorContainer(domElement);\n    if (typeof options.theme === 'string') {\n      options.theme = themeService.setTheme(options.theme);\n    }\n    super(domElement, options, {}, clipboardService, editorWorkerService, contextKeyService, instantiationService, codeEditorService, themeService, notificationService, contextMenuService, editorProgressService);\n    this._contextViewService = contextViewService;\n    this._configurationService = configurationService;\n    this._standaloneThemeService = themeService;\n    this._register(toDispose);\n    this._register(themeDomRegistration);\n    this._contextViewService.setContainer(this._containerDomElement);\n  }\n  dispose() {\n    super.dispose();\n  }\n  updateOptions(newOptions) {\n    updateConfigurationService(this._configurationService, newOptions, true);\n    if (typeof newOptions.theme === 'string') {\n      this._standaloneThemeService.setTheme(newOptions.theme);\n    }\n    super.updateOptions(newOptions);\n  }\n  _createInnerEditor(instantiationService, container, options) {\n    return instantiationService.createInstance(StandaloneCodeEditor, container, options);\n  }\n  getOriginalEditor() {\n    return super.getOriginalEditor();\n  }\n  getModifiedEditor() {\n    return super.getModifiedEditor();\n  }\n  addCommand(keybinding, handler, context) {\n    return this.getModifiedEditor().addCommand(keybinding, handler, context);\n  }\n  createContextKey(key, defaultValue) {\n    return this.getModifiedEditor().createContextKey(key, defaultValue);\n  }\n  addAction(descriptor) {\n    return this.getModifiedEditor().addAction(descriptor);\n  }\n};\nStandaloneDiffEditor = __decorate([__param(3, IInstantiationService), __param(4, IContextKeyService), __param(5, IKeybindingService), __param(6, IContextViewService), __param(7, IEditorWorkerService), __param(8, ICodeEditorService), __param(9, IStandaloneThemeService), __param(10, INotificationService), __param(11, IConfigurationService), __param(12, IContextMenuService), __param(13, IEditorProgressService), __param(14, IClipboardService)], StandaloneDiffEditor);\nexport { StandaloneDiffEditor };\n/**\r\n * @internal\r\n */\nexport function createTextModel(modelService, modeService, value, language, uri) {\n  value = value || '';\n  if (!language) {\n    const firstLF = value.indexOf('\\n');\n    let firstLine = value;\n    if (firstLF !== -1) {\n      firstLine = value.substring(0, firstLF);\n    }\n    return doCreateModel(modelService, value, modeService.createByFilepathOrFirstLine(uri || null, firstLine), uri);\n  }\n  return doCreateModel(modelService, value, modeService.create(language), uri);\n}\n/**\r\n * @internal\r\n */\nfunction doCreateModel(modelService, value, languageSelection, uri) {\n  return modelService.createModel(value, languageSelection, uri);\n}","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","aria","Disposable","toDisposable","DisposableStore","ICodeEditorService","CodeEditorWidget","DiffEditorWidget","InternalEditorAction","IEditorWorkerService","StandaloneKeybindingService","updateConfigurationService","IStandaloneThemeService","MenuId","MenuRegistry","CommandsRegistry","ICommandService","IConfigurationService","ContextKeyExpr","IContextKeyService","IContextViewService","IContextMenuService","IInstantiationService","IKeybindingService","INotificationService","IThemeService","IAccessibilityService","StandaloneCodeEditorNLS","IClipboardService","IEditorProgressService","IModelService","IModeService","LAST_GENERATED_COMMAND_ID","ariaDomNodeCreated","createAriaDomNode","setARIAContainer","document","body","StandaloneCodeEditor","constructor","domElement","_options","instantiationService","codeEditorService","commandService","contextKeyService","keybindingService","themeService","notificationService","accessibilityService","options","assign","ariaLabel","editorViewAccessibleLabel","accessibilityHelpMessage","_standaloneKeybindingService","addCommand","keybinding","handler","context","console","warn","commandId","whenExpression","deserialize","addDynamicKeybinding","createContextKey","defaultValue","_contextKeyService","createKey","addAction","_descriptor","_this","id","label","run","Error","None","precondition","and","equals","getId","keybindings","keybindingsWhen","keybindingContext","contextMenuGroupId","contextMenuOrder","accessor","_len","args","Array","_key","Promise","resolve","toDispose","uniqueId","add","registerCommand","menuItem","command","title","when","group","order","appendMenuItem","EditorContext","isArray","kb","internalAction","_actions","StandaloneEditor","contextViewService","configurationService","modelService","modeService","themeDomRegistration","registerEditorContainer","theme","setTheme","_model","model","_contextViewService","_configurationService","_standaloneThemeService","_register","createTextModel","value","language","undefined","_ownsModel","_attachModel","e","oldModelUrl","newModelUrl","uri","_onDidChangeModel","fire","dispose","updateOptions","newOptions","_modelData","setContainer","view","domNode","_postDetachModelCleanup","detachedModel","StandaloneDiffEditor","editorWorkerService","contextMenuService","editorProgressService","clipboardService","_containerDomElement","_createInnerEditor","container","createInstance","getOriginalEditor","getModifiedEditor","descriptor","firstLF","indexOf","firstLine","substring","doCreateModel","createByFilepathOrFirstLine","create","languageSelection","createModel"],"sources":["C:/Users/Administrator/Desktop/sqllineage-master/sqllineagejs/node_modules/monaco-editor/esm/vs/editor/standalone/browser/standaloneCodeEditor.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport * as aria from '../../../base/browser/ui/aria/aria.js';\r\nimport { Disposable, toDisposable, DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { ICodeEditorService } from '../../browser/services/codeEditorService.js';\r\nimport { CodeEditorWidget } from '../../browser/widget/codeEditorWidget.js';\r\nimport { DiffEditorWidget } from '../../browser/widget/diffEditorWidget.js';\r\nimport { InternalEditorAction } from '../../common/editorAction.js';\r\nimport { IEditorWorkerService } from '../../common/services/editorWorkerService.js';\r\nimport { StandaloneKeybindingService, updateConfigurationService } from './simpleServices.js';\r\nimport { IStandaloneThemeService } from '../common/standaloneThemeService.js';\r\nimport { MenuId, MenuRegistry } from '../../../platform/actions/common/actions.js';\r\nimport { CommandsRegistry, ICommandService } from '../../../platform/commands/common/commands.js';\r\nimport { IConfigurationService } from '../../../platform/configuration/common/configuration.js';\r\nimport { ContextKeyExpr, IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { IContextViewService, IContextMenuService } from '../../../platform/contextview/browser/contextView.js';\r\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\r\nimport { IKeybindingService } from '../../../platform/keybinding/common/keybinding.js';\r\nimport { INotificationService } from '../../../platform/notification/common/notification.js';\r\nimport { IThemeService } from '../../../platform/theme/common/themeService.js';\r\nimport { IAccessibilityService } from '../../../platform/accessibility/common/accessibility.js';\r\nimport { StandaloneCodeEditorNLS } from '../../common/standaloneStrings.js';\r\nimport { IClipboardService } from '../../../platform/clipboard/common/clipboardService.js';\r\nimport { IEditorProgressService } from '../../../platform/progress/common/progress.js';\r\nimport { IModelService } from '../../common/services/modelService.js';\r\nimport { IModeService } from '../../common/services/modeService.js';\r\nlet LAST_GENERATED_COMMAND_ID = 0;\r\nlet ariaDomNodeCreated = false;\r\nfunction createAriaDomNode() {\r\n    if (ariaDomNodeCreated) {\r\n        return;\r\n    }\r\n    ariaDomNodeCreated = true;\r\n    aria.setARIAContainer(document.body);\r\n}\r\n/**\r\n * A code editor to be used both by the standalone editor and the standalone diff editor.\r\n */\r\nlet StandaloneCodeEditor = class StandaloneCodeEditor extends CodeEditorWidget {\r\n    constructor(domElement, _options, instantiationService, codeEditorService, commandService, contextKeyService, keybindingService, themeService, notificationService, accessibilityService) {\r\n        const options = Object.assign({}, _options);\r\n        options.ariaLabel = options.ariaLabel || StandaloneCodeEditorNLS.editorViewAccessibleLabel;\r\n        options.ariaLabel = options.ariaLabel + ';' + (StandaloneCodeEditorNLS.accessibilityHelpMessage);\r\n        super(domElement, options, {}, instantiationService, codeEditorService, commandService, contextKeyService, themeService, notificationService, accessibilityService);\r\n        if (keybindingService instanceof StandaloneKeybindingService) {\r\n            this._standaloneKeybindingService = keybindingService;\r\n        }\r\n        else {\r\n            this._standaloneKeybindingService = null;\r\n        }\r\n        // Create the ARIA dom node as soon as the first editor is instantiated\r\n        createAriaDomNode();\r\n    }\r\n    addCommand(keybinding, handler, context) {\r\n        if (!this._standaloneKeybindingService) {\r\n            console.warn('Cannot add command because the editor is configured with an unrecognized KeybindingService');\r\n            return null;\r\n        }\r\n        let commandId = 'DYNAMIC_' + (++LAST_GENERATED_COMMAND_ID);\r\n        let whenExpression = ContextKeyExpr.deserialize(context);\r\n        this._standaloneKeybindingService.addDynamicKeybinding(commandId, keybinding, handler, whenExpression);\r\n        return commandId;\r\n    }\r\n    createContextKey(key, defaultValue) {\r\n        return this._contextKeyService.createKey(key, defaultValue);\r\n    }\r\n    addAction(_descriptor) {\r\n        if ((typeof _descriptor.id !== 'string') || (typeof _descriptor.label !== 'string') || (typeof _descriptor.run !== 'function')) {\r\n            throw new Error('Invalid action descriptor, `id`, `label` and `run` are required properties!');\r\n        }\r\n        if (!this._standaloneKeybindingService) {\r\n            console.warn('Cannot add keybinding because the editor is configured with an unrecognized KeybindingService');\r\n            return Disposable.None;\r\n        }\r\n        // Read descriptor options\r\n        const id = _descriptor.id;\r\n        const label = _descriptor.label;\r\n        const precondition = ContextKeyExpr.and(ContextKeyExpr.equals('editorId', this.getId()), ContextKeyExpr.deserialize(_descriptor.precondition));\r\n        const keybindings = _descriptor.keybindings;\r\n        const keybindingsWhen = ContextKeyExpr.and(precondition, ContextKeyExpr.deserialize(_descriptor.keybindingContext));\r\n        const contextMenuGroupId = _descriptor.contextMenuGroupId || null;\r\n        const contextMenuOrder = _descriptor.contextMenuOrder || 0;\r\n        const run = (accessor, ...args) => {\r\n            return Promise.resolve(_descriptor.run(this, ...args));\r\n        };\r\n        const toDispose = new DisposableStore();\r\n        // Generate a unique id to allow the same descriptor.id across multiple editor instances\r\n        const uniqueId = this.getId() + ':' + id;\r\n        // Register the command\r\n        toDispose.add(CommandsRegistry.registerCommand(uniqueId, run));\r\n        // Register the context menu item\r\n        if (contextMenuGroupId) {\r\n            let menuItem = {\r\n                command: {\r\n                    id: uniqueId,\r\n                    title: label\r\n                },\r\n                when: precondition,\r\n                group: contextMenuGroupId,\r\n                order: contextMenuOrder\r\n            };\r\n            toDispose.add(MenuRegistry.appendMenuItem(MenuId.EditorContext, menuItem));\r\n        }\r\n        // Register the keybindings\r\n        if (Array.isArray(keybindings)) {\r\n            for (const kb of keybindings) {\r\n                toDispose.add(this._standaloneKeybindingService.addDynamicKeybinding(uniqueId, kb, run, keybindingsWhen));\r\n            }\r\n        }\r\n        // Finally, register an internal editor action\r\n        let internalAction = new InternalEditorAction(uniqueId, label, label, precondition, run, this._contextKeyService);\r\n        // Store it under the original id, such that trigger with the original id will work\r\n        this._actions[id] = internalAction;\r\n        toDispose.add(toDisposable(() => {\r\n            delete this._actions[id];\r\n        }));\r\n        return toDispose;\r\n    }\r\n};\r\nStandaloneCodeEditor = __decorate([\r\n    __param(2, IInstantiationService),\r\n    __param(3, ICodeEditorService),\r\n    __param(4, ICommandService),\r\n    __param(5, IContextKeyService),\r\n    __param(6, IKeybindingService),\r\n    __param(7, IThemeService),\r\n    __param(8, INotificationService),\r\n    __param(9, IAccessibilityService)\r\n], StandaloneCodeEditor);\r\nexport { StandaloneCodeEditor };\r\nlet StandaloneEditor = class StandaloneEditor extends StandaloneCodeEditor {\r\n    constructor(domElement, _options, toDispose, instantiationService, codeEditorService, commandService, contextKeyService, keybindingService, contextViewService, themeService, notificationService, configurationService, accessibilityService, modelService, modeService) {\r\n        const options = Object.assign({}, _options);\r\n        updateConfigurationService(configurationService, options, false);\r\n        const themeDomRegistration = themeService.registerEditorContainer(domElement);\r\n        if (typeof options.theme === 'string') {\r\n            themeService.setTheme(options.theme);\r\n        }\r\n        let _model = options.model;\r\n        delete options.model;\r\n        super(domElement, options, instantiationService, codeEditorService, commandService, contextKeyService, keybindingService, themeService, notificationService, accessibilityService);\r\n        this._contextViewService = contextViewService;\r\n        this._configurationService = configurationService;\r\n        this._standaloneThemeService = themeService;\r\n        this._register(toDispose);\r\n        this._register(themeDomRegistration);\r\n        let model;\r\n        if (typeof _model === 'undefined') {\r\n            model = createTextModel(modelService, modeService, options.value || '', options.language || 'text/plain', undefined);\r\n            this._ownsModel = true;\r\n        }\r\n        else {\r\n            model = _model;\r\n            this._ownsModel = false;\r\n        }\r\n        this._attachModel(model);\r\n        if (model) {\r\n            let e = {\r\n                oldModelUrl: null,\r\n                newModelUrl: model.uri\r\n            };\r\n            this._onDidChangeModel.fire(e);\r\n        }\r\n    }\r\n    dispose() {\r\n        super.dispose();\r\n    }\r\n    updateOptions(newOptions) {\r\n        updateConfigurationService(this._configurationService, newOptions, false);\r\n        if (typeof newOptions.theme === 'string') {\r\n            this._standaloneThemeService.setTheme(newOptions.theme);\r\n        }\r\n        super.updateOptions(newOptions);\r\n    }\r\n    _attachModel(model) {\r\n        super._attachModel(model);\r\n        if (this._modelData) {\r\n            this._contextViewService.setContainer(this._modelData.view.domNode.domNode);\r\n        }\r\n    }\r\n    _postDetachModelCleanup(detachedModel) {\r\n        super._postDetachModelCleanup(detachedModel);\r\n        if (detachedModel && this._ownsModel) {\r\n            detachedModel.dispose();\r\n            this._ownsModel = false;\r\n        }\r\n    }\r\n};\r\nStandaloneEditor = __decorate([\r\n    __param(3, IInstantiationService),\r\n    __param(4, ICodeEditorService),\r\n    __param(5, ICommandService),\r\n    __param(6, IContextKeyService),\r\n    __param(7, IKeybindingService),\r\n    __param(8, IContextViewService),\r\n    __param(9, IStandaloneThemeService),\r\n    __param(10, INotificationService),\r\n    __param(11, IConfigurationService),\r\n    __param(12, IAccessibilityService),\r\n    __param(13, IModelService),\r\n    __param(14, IModeService)\r\n], StandaloneEditor);\r\nexport { StandaloneEditor };\r\nlet StandaloneDiffEditor = class StandaloneDiffEditor extends DiffEditorWidget {\r\n    constructor(domElement, _options, toDispose, instantiationService, contextKeyService, keybindingService, contextViewService, editorWorkerService, codeEditorService, themeService, notificationService, configurationService, contextMenuService, editorProgressService, clipboardService) {\r\n        const options = Object.assign({}, _options);\r\n        updateConfigurationService(configurationService, options, true);\r\n        const themeDomRegistration = themeService.registerEditorContainer(domElement);\r\n        if (typeof options.theme === 'string') {\r\n            options.theme = themeService.setTheme(options.theme);\r\n        }\r\n        super(domElement, options, {}, clipboardService, editorWorkerService, contextKeyService, instantiationService, codeEditorService, themeService, notificationService, contextMenuService, editorProgressService);\r\n        this._contextViewService = contextViewService;\r\n        this._configurationService = configurationService;\r\n        this._standaloneThemeService = themeService;\r\n        this._register(toDispose);\r\n        this._register(themeDomRegistration);\r\n        this._contextViewService.setContainer(this._containerDomElement);\r\n    }\r\n    dispose() {\r\n        super.dispose();\r\n    }\r\n    updateOptions(newOptions) {\r\n        updateConfigurationService(this._configurationService, newOptions, true);\r\n        if (typeof newOptions.theme === 'string') {\r\n            this._standaloneThemeService.setTheme(newOptions.theme);\r\n        }\r\n        super.updateOptions(newOptions);\r\n    }\r\n    _createInnerEditor(instantiationService, container, options) {\r\n        return instantiationService.createInstance(StandaloneCodeEditor, container, options);\r\n    }\r\n    getOriginalEditor() {\r\n        return super.getOriginalEditor();\r\n    }\r\n    getModifiedEditor() {\r\n        return super.getModifiedEditor();\r\n    }\r\n    addCommand(keybinding, handler, context) {\r\n        return this.getModifiedEditor().addCommand(keybinding, handler, context);\r\n    }\r\n    createContextKey(key, defaultValue) {\r\n        return this.getModifiedEditor().createContextKey(key, defaultValue);\r\n    }\r\n    addAction(descriptor) {\r\n        return this.getModifiedEditor().addAction(descriptor);\r\n    }\r\n};\r\nStandaloneDiffEditor = __decorate([\r\n    __param(3, IInstantiationService),\r\n    __param(4, IContextKeyService),\r\n    __param(5, IKeybindingService),\r\n    __param(6, IContextViewService),\r\n    __param(7, IEditorWorkerService),\r\n    __param(8, ICodeEditorService),\r\n    __param(9, IStandaloneThemeService),\r\n    __param(10, INotificationService),\r\n    __param(11, IConfigurationService),\r\n    __param(12, IContextMenuService),\r\n    __param(13, IEditorProgressService),\r\n    __param(14, IClipboardService)\r\n], StandaloneDiffEditor);\r\nexport { StandaloneDiffEditor };\r\n/**\r\n * @internal\r\n */\r\nexport function createTextModel(modelService, modeService, value, language, uri) {\r\n    value = value || '';\r\n    if (!language) {\r\n        const firstLF = value.indexOf('\\n');\r\n        let firstLine = value;\r\n        if (firstLF !== -1) {\r\n            firstLine = value.substring(0, firstLF);\r\n        }\r\n        return doCreateModel(modelService, value, modeService.createByFilepathOrFirstLine(uri || null, firstLine), uri);\r\n    }\r\n    return doCreateModel(modelService, value, modeService.create(language), uri);\r\n}\r\n/**\r\n * @internal\r\n */\r\nfunction doCreateModel(modelService, value, languageSelection, uri) {\r\n    return modelService.createModel(value, languageSelection, uri);\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}