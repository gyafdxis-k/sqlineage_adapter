{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../../nls.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../browser/editorExtensions.js';\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\nclass CursorState {\n  constructor(selections) {\n    this.selections = selections;\n  }\n  equals(other) {\n    const thisLen = this.selections.length;\n    const otherLen = other.selections.length;\n    if (thisLen !== otherLen) {\n      return false;\n    }\n    for (let i = 0; i < thisLen; i++) {\n      if (!this.selections[i].equalsSelection(other.selections[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\nclass StackElement {\n  constructor(cursorState, scrollTop, scrollLeft) {\n    this.cursorState = cursorState;\n    this.scrollTop = scrollTop;\n    this.scrollLeft = scrollLeft;\n  }\n}\nexport class CursorUndoRedoController extends Disposable {\n  constructor(editor) {\n    super();\n    this._editor = editor;\n    this._isCursorUndoRedo = false;\n    this._undoStack = [];\n    this._redoStack = [];\n    this._register(editor.onDidChangeModel(e => {\n      this._undoStack = [];\n      this._redoStack = [];\n    }));\n    this._register(editor.onDidChangeModelContent(e => {\n      this._undoStack = [];\n      this._redoStack = [];\n    }));\n    this._register(editor.onDidChangeCursorSelection(e => {\n      if (this._isCursorUndoRedo) {\n        return;\n      }\n      if (!e.oldSelections) {\n        return;\n      }\n      if (e.oldModelVersionId !== e.modelVersionId) {\n        return;\n      }\n      const prevState = new CursorState(e.oldSelections);\n      const isEqualToLastUndoStack = this._undoStack.length > 0 && this._undoStack[this._undoStack.length - 1].cursorState.equals(prevState);\n      if (!isEqualToLastUndoStack) {\n        this._undoStack.push(new StackElement(prevState, editor.getScrollTop(), editor.getScrollLeft()));\n        this._redoStack = [];\n        if (this._undoStack.length > 50) {\n          // keep the cursor undo stack bounded\n          this._undoStack.shift();\n        }\n      }\n    }));\n  }\n  static get(editor) {\n    return editor.getContribution(CursorUndoRedoController.ID);\n  }\n  cursorUndo() {\n    if (!this._editor.hasModel() || this._undoStack.length === 0) {\n      return;\n    }\n    this._redoStack.push(new StackElement(new CursorState(this._editor.getSelections()), this._editor.getScrollTop(), this._editor.getScrollLeft()));\n    this._applyState(this._undoStack.pop());\n  }\n  cursorRedo() {\n    if (!this._editor.hasModel() || this._redoStack.length === 0) {\n      return;\n    }\n    this._undoStack.push(new StackElement(new CursorState(this._editor.getSelections()), this._editor.getScrollTop(), this._editor.getScrollLeft()));\n    this._applyState(this._redoStack.pop());\n  }\n  _applyState(stackElement) {\n    this._isCursorUndoRedo = true;\n    this._editor.setSelections(stackElement.cursorState.selections);\n    this._editor.setScrollPosition({\n      scrollTop: stackElement.scrollTop,\n      scrollLeft: stackElement.scrollLeft\n    });\n    this._isCursorUndoRedo = false;\n  }\n}\nCursorUndoRedoController.ID = 'editor.contrib.cursorUndoRedoController';\nexport class CursorUndo extends EditorAction {\n  constructor() {\n    super({\n      id: 'cursorUndo',\n      label: nls.localize('cursor.undo', \"Cursor Undo\"),\n      alias: 'Cursor Undo',\n      precondition: undefined,\n      kbOpts: {\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 2048 /* CtrlCmd */ | 51 /* KEY_U */,\n        weight: 100 /* EditorContrib */\n      }\n    });\n  }\n\n  run(accessor, editor, args) {\n    CursorUndoRedoController.get(editor).cursorUndo();\n  }\n}\nexport class CursorRedo extends EditorAction {\n  constructor() {\n    super({\n      id: 'cursorRedo',\n      label: nls.localize('cursor.redo', \"Cursor Redo\"),\n      alias: 'Cursor Redo',\n      precondition: undefined\n    });\n  }\n  run(accessor, editor, args) {\n    CursorUndoRedoController.get(editor).cursorRedo();\n  }\n}\nregisterEditorContribution(CursorUndoRedoController.ID, CursorUndoRedoController);\nregisterEditorAction(CursorUndo);\nregisterEditorAction(CursorRedo);","map":{"version":3,"names":["nls","Disposable","EditorAction","registerEditorAction","registerEditorContribution","EditorContextKeys","CursorState","constructor","selections","equals","other","thisLen","length","otherLen","i","equalsSelection","StackElement","cursorState","scrollTop","scrollLeft","CursorUndoRedoController","editor","_editor","_isCursorUndoRedo","_undoStack","_redoStack","_register","onDidChangeModel","e","onDidChangeModelContent","onDidChangeCursorSelection","oldSelections","oldModelVersionId","modelVersionId","prevState","isEqualToLastUndoStack","push","getScrollTop","getScrollLeft","shift","get","getContribution","ID","cursorUndo","hasModel","getSelections","_applyState","pop","cursorRedo","stackElement","setSelections","setScrollPosition","CursorUndo","id","label","localize","alias","precondition","undefined","kbOpts","kbExpr","textInputFocus","primary","weight","run","accessor","args","CursorRedo"],"sources":["C:/Users/Administrator/Desktop/sqllineage-master/sqllineagejs/node_modules/monaco-editor/esm/vs/editor/contrib/cursorUndo/cursorUndo.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as nls from '../../../nls.js';\r\nimport { Disposable } from '../../../base/common/lifecycle.js';\r\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../browser/editorExtensions.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nclass CursorState {\r\n    constructor(selections) {\r\n        this.selections = selections;\r\n    }\r\n    equals(other) {\r\n        const thisLen = this.selections.length;\r\n        const otherLen = other.selections.length;\r\n        if (thisLen !== otherLen) {\r\n            return false;\r\n        }\r\n        for (let i = 0; i < thisLen; i++) {\r\n            if (!this.selections[i].equalsSelection(other.selections[i])) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n}\r\nclass StackElement {\r\n    constructor(cursorState, scrollTop, scrollLeft) {\r\n        this.cursorState = cursorState;\r\n        this.scrollTop = scrollTop;\r\n        this.scrollLeft = scrollLeft;\r\n    }\r\n}\r\nexport class CursorUndoRedoController extends Disposable {\r\n    constructor(editor) {\r\n        super();\r\n        this._editor = editor;\r\n        this._isCursorUndoRedo = false;\r\n        this._undoStack = [];\r\n        this._redoStack = [];\r\n        this._register(editor.onDidChangeModel((e) => {\r\n            this._undoStack = [];\r\n            this._redoStack = [];\r\n        }));\r\n        this._register(editor.onDidChangeModelContent((e) => {\r\n            this._undoStack = [];\r\n            this._redoStack = [];\r\n        }));\r\n        this._register(editor.onDidChangeCursorSelection((e) => {\r\n            if (this._isCursorUndoRedo) {\r\n                return;\r\n            }\r\n            if (!e.oldSelections) {\r\n                return;\r\n            }\r\n            if (e.oldModelVersionId !== e.modelVersionId) {\r\n                return;\r\n            }\r\n            const prevState = new CursorState(e.oldSelections);\r\n            const isEqualToLastUndoStack = (this._undoStack.length > 0 && this._undoStack[this._undoStack.length - 1].cursorState.equals(prevState));\r\n            if (!isEqualToLastUndoStack) {\r\n                this._undoStack.push(new StackElement(prevState, editor.getScrollTop(), editor.getScrollLeft()));\r\n                this._redoStack = [];\r\n                if (this._undoStack.length > 50) {\r\n                    // keep the cursor undo stack bounded\r\n                    this._undoStack.shift();\r\n                }\r\n            }\r\n        }));\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(CursorUndoRedoController.ID);\r\n    }\r\n    cursorUndo() {\r\n        if (!this._editor.hasModel() || this._undoStack.length === 0) {\r\n            return;\r\n        }\r\n        this._redoStack.push(new StackElement(new CursorState(this._editor.getSelections()), this._editor.getScrollTop(), this._editor.getScrollLeft()));\r\n        this._applyState(this._undoStack.pop());\r\n    }\r\n    cursorRedo() {\r\n        if (!this._editor.hasModel() || this._redoStack.length === 0) {\r\n            return;\r\n        }\r\n        this._undoStack.push(new StackElement(new CursorState(this._editor.getSelections()), this._editor.getScrollTop(), this._editor.getScrollLeft()));\r\n        this._applyState(this._redoStack.pop());\r\n    }\r\n    _applyState(stackElement) {\r\n        this._isCursorUndoRedo = true;\r\n        this._editor.setSelections(stackElement.cursorState.selections);\r\n        this._editor.setScrollPosition({\r\n            scrollTop: stackElement.scrollTop,\r\n            scrollLeft: stackElement.scrollLeft\r\n        });\r\n        this._isCursorUndoRedo = false;\r\n    }\r\n}\r\nCursorUndoRedoController.ID = 'editor.contrib.cursorUndoRedoController';\r\nexport class CursorUndo extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'cursorUndo',\r\n            label: nls.localize('cursor.undo', \"Cursor Undo\"),\r\n            alias: 'Cursor Undo',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.textInputFocus,\r\n                primary: 2048 /* CtrlCmd */ | 51 /* KEY_U */,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(accessor, editor, args) {\r\n        CursorUndoRedoController.get(editor).cursorUndo();\r\n    }\r\n}\r\nexport class CursorRedo extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'cursorRedo',\r\n            label: nls.localize('cursor.redo', \"Cursor Redo\"),\r\n            alias: 'Cursor Redo',\r\n            precondition: undefined\r\n        });\r\n    }\r\n    run(accessor, editor, args) {\r\n        CursorUndoRedoController.get(editor).cursorRedo();\r\n    }\r\n}\r\nregisterEditorContribution(CursorUndoRedoController.ID, CursorUndoRedoController);\r\nregisterEditorAction(CursorUndo);\r\nregisterEditorAction(CursorRedo);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}