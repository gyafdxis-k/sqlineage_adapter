{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nexport class AbstractCodeEditorService extends Disposable {\n  constructor() {\n    super();\n    this._onCodeEditorAdd = this._register(new Emitter());\n    this.onCodeEditorAdd = this._onCodeEditorAdd.event;\n    this._onCodeEditorRemove = this._register(new Emitter());\n    this.onCodeEditorRemove = this._onCodeEditorRemove.event;\n    this._onDiffEditorAdd = this._register(new Emitter());\n    this._onDiffEditorRemove = this._register(new Emitter());\n    this._onDecorationTypeRegistered = this._register(new Emitter());\n    this._modelProperties = new Map();\n    this._codeEditors = Object.create(null);\n    this._diffEditors = Object.create(null);\n  }\n  addCodeEditor(editor) {\n    this._codeEditors[editor.getId()] = editor;\n    this._onCodeEditorAdd.fire(editor);\n  }\n  removeCodeEditor(editor) {\n    if (delete this._codeEditors[editor.getId()]) {\n      this._onCodeEditorRemove.fire(editor);\n    }\n  }\n  listCodeEditors() {\n    return Object.keys(this._codeEditors).map(id => this._codeEditors[id]);\n  }\n  addDiffEditor(editor) {\n    this._diffEditors[editor.getId()] = editor;\n    this._onDiffEditorAdd.fire(editor);\n  }\n  removeDiffEditor(editor) {\n    if (delete this._diffEditors[editor.getId()]) {\n      this._onDiffEditorRemove.fire(editor);\n    }\n  }\n  listDiffEditors() {\n    return Object.keys(this._diffEditors).map(id => this._diffEditors[id]);\n  }\n  getFocusedCodeEditor() {\n    let editorWithWidgetFocus = null;\n    const editors = this.listCodeEditors();\n    for (const editor of editors) {\n      if (editor.hasTextFocus()) {\n        // bingo!\n        return editor;\n      }\n      if (editor.hasWidgetFocus()) {\n        editorWithWidgetFocus = editor;\n      }\n    }\n    return editorWithWidgetFocus;\n  }\n  setModelProperty(resource, key, value) {\n    const key1 = resource.toString();\n    let dest;\n    if (this._modelProperties.has(key1)) {\n      dest = this._modelProperties.get(key1);\n    } else {\n      dest = new Map();\n      this._modelProperties.set(key1, dest);\n    }\n    dest.set(key, value);\n  }\n  getModelProperty(resource, key) {\n    const key1 = resource.toString();\n    if (this._modelProperties.has(key1)) {\n      const innerMap = this._modelProperties.get(key1);\n      return innerMap.get(key);\n    }\n    return undefined;\n  }\n}","map":{"version":3,"names":["Emitter","Disposable","AbstractCodeEditorService","constructor","_onCodeEditorAdd","_register","onCodeEditorAdd","event","_onCodeEditorRemove","onCodeEditorRemove","_onDiffEditorAdd","_onDiffEditorRemove","_onDecorationTypeRegistered","_modelProperties","Map","_codeEditors","Object","create","_diffEditors","addCodeEditor","editor","getId","fire","removeCodeEditor","listCodeEditors","keys","map","id","addDiffEditor","removeDiffEditor","listDiffEditors","getFocusedCodeEditor","editorWithWidgetFocus","editors","hasTextFocus","hasWidgetFocus","setModelProperty","resource","key","value","key1","toString","dest","has","get","set","getModelProperty","innerMap","undefined"],"sources":["C:/Users/Administrator/Desktop/sqllineage-master/sqllineagejs/node_modules/monaco-editor/esm/vs/editor/browser/services/abstractCodeEditorService.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { Disposable } from '../../../base/common/lifecycle.js';\r\nexport class AbstractCodeEditorService extends Disposable {\r\n    constructor() {\r\n        super();\r\n        this._onCodeEditorAdd = this._register(new Emitter());\r\n        this.onCodeEditorAdd = this._onCodeEditorAdd.event;\r\n        this._onCodeEditorRemove = this._register(new Emitter());\r\n        this.onCodeEditorRemove = this._onCodeEditorRemove.event;\r\n        this._onDiffEditorAdd = this._register(new Emitter());\r\n        this._onDiffEditorRemove = this._register(new Emitter());\r\n        this._onDecorationTypeRegistered = this._register(new Emitter());\r\n        this._modelProperties = new Map();\r\n        this._codeEditors = Object.create(null);\r\n        this._diffEditors = Object.create(null);\r\n    }\r\n    addCodeEditor(editor) {\r\n        this._codeEditors[editor.getId()] = editor;\r\n        this._onCodeEditorAdd.fire(editor);\r\n    }\r\n    removeCodeEditor(editor) {\r\n        if (delete this._codeEditors[editor.getId()]) {\r\n            this._onCodeEditorRemove.fire(editor);\r\n        }\r\n    }\r\n    listCodeEditors() {\r\n        return Object.keys(this._codeEditors).map(id => this._codeEditors[id]);\r\n    }\r\n    addDiffEditor(editor) {\r\n        this._diffEditors[editor.getId()] = editor;\r\n        this._onDiffEditorAdd.fire(editor);\r\n    }\r\n    removeDiffEditor(editor) {\r\n        if (delete this._diffEditors[editor.getId()]) {\r\n            this._onDiffEditorRemove.fire(editor);\r\n        }\r\n    }\r\n    listDiffEditors() {\r\n        return Object.keys(this._diffEditors).map(id => this._diffEditors[id]);\r\n    }\r\n    getFocusedCodeEditor() {\r\n        let editorWithWidgetFocus = null;\r\n        const editors = this.listCodeEditors();\r\n        for (const editor of editors) {\r\n            if (editor.hasTextFocus()) {\r\n                // bingo!\r\n                return editor;\r\n            }\r\n            if (editor.hasWidgetFocus()) {\r\n                editorWithWidgetFocus = editor;\r\n            }\r\n        }\r\n        return editorWithWidgetFocus;\r\n    }\r\n    setModelProperty(resource, key, value) {\r\n        const key1 = resource.toString();\r\n        let dest;\r\n        if (this._modelProperties.has(key1)) {\r\n            dest = this._modelProperties.get(key1);\r\n        }\r\n        else {\r\n            dest = new Map();\r\n            this._modelProperties.set(key1, dest);\r\n        }\r\n        dest.set(key, value);\r\n    }\r\n    getModelProperty(resource, key) {\r\n        const key1 = resource.toString();\r\n        if (this._modelProperties.has(key1)) {\r\n            const innerMap = this._modelProperties.get(key1);\r\n            return innerMap.get(key);\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}