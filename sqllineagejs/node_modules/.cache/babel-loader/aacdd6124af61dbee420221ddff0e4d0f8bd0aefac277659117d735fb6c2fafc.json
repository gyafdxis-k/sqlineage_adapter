{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { isNonEmptyArray } from '../../../base/common/arrays.js';\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\nimport { CharacterSet } from '../../common/core/characterClassifier.js';\nexport class CommitCharacterController {\n  constructor(editor, widget, accept) {\n    this._disposables = new DisposableStore();\n    this._disposables.add(widget.onDidShow(() => this._onItem(widget.getFocusedItem())));\n    this._disposables.add(widget.onDidFocus(this._onItem, this));\n    this._disposables.add(widget.onDidHide(this.reset, this));\n    this._disposables.add(editor.onWillType(text => {\n      if (this._active && !widget.isFrozen()) {\n        const ch = text.charCodeAt(text.length - 1);\n        if (this._active.acceptCharacters.has(ch) && editor.getOption(0 /* acceptSuggestionOnCommitCharacter */)) {\n          accept(this._active.item);\n        }\n      }\n    }));\n  }\n  _onItem(selected) {\n    if (!selected || !isNonEmptyArray(selected.item.completion.commitCharacters)) {\n      // no item or no commit characters\n      this.reset();\n      return;\n    }\n    if (this._active && this._active.item.item === selected.item) {\n      // still the same item\n      return;\n    }\n    // keep item and its commit characters\n    const acceptCharacters = new CharacterSet();\n    for (const ch of selected.item.completion.commitCharacters) {\n      if (ch.length > 0) {\n        acceptCharacters.add(ch.charCodeAt(0));\n      }\n    }\n    this._active = {\n      acceptCharacters,\n      item: selected\n    };\n  }\n  reset() {\n    this._active = undefined;\n  }\n  dispose() {\n    this._disposables.dispose();\n  }\n}","map":{"version":3,"names":["isNonEmptyArray","DisposableStore","CharacterSet","CommitCharacterController","constructor","editor","widget","accept","_disposables","add","onDidShow","_onItem","getFocusedItem","onDidFocus","onDidHide","reset","onWillType","text","_active","isFrozen","ch","charCodeAt","length","acceptCharacters","has","getOption","item","selected","completion","commitCharacters","undefined","dispose"],"sources":["C:/Users/Administrator/Desktop/sqllineage-master/sqllineagejs/node_modules/monaco-editor/esm/vs/editor/contrib/suggest/suggestCommitCharacters.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { isNonEmptyArray } from '../../../base/common/arrays.js';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { CharacterSet } from '../../common/core/characterClassifier.js';\r\nexport class CommitCharacterController {\r\n    constructor(editor, widget, accept) {\r\n        this._disposables = new DisposableStore();\r\n        this._disposables.add(widget.onDidShow(() => this._onItem(widget.getFocusedItem())));\r\n        this._disposables.add(widget.onDidFocus(this._onItem, this));\r\n        this._disposables.add(widget.onDidHide(this.reset, this));\r\n        this._disposables.add(editor.onWillType(text => {\r\n            if (this._active && !widget.isFrozen()) {\r\n                const ch = text.charCodeAt(text.length - 1);\r\n                if (this._active.acceptCharacters.has(ch) && editor.getOption(0 /* acceptSuggestionOnCommitCharacter */)) {\r\n                    accept(this._active.item);\r\n                }\r\n            }\r\n        }));\r\n    }\r\n    _onItem(selected) {\r\n        if (!selected || !isNonEmptyArray(selected.item.completion.commitCharacters)) {\r\n            // no item or no commit characters\r\n            this.reset();\r\n            return;\r\n        }\r\n        if (this._active && this._active.item.item === selected.item) {\r\n            // still the same item\r\n            return;\r\n        }\r\n        // keep item and its commit characters\r\n        const acceptCharacters = new CharacterSet();\r\n        for (const ch of selected.item.completion.commitCharacters) {\r\n            if (ch.length > 0) {\r\n                acceptCharacters.add(ch.charCodeAt(0));\r\n            }\r\n        }\r\n        this._active = { acceptCharacters, item: selected };\r\n    }\r\n    reset() {\r\n        this._active = undefined;\r\n    }\r\n    dispose() {\r\n        this._disposables.dispose();\r\n    }\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,eAAe,QAAQ,gCAAgC;AAChE,SAASC,eAAe,QAAQ,mCAAmC;AACnE,SAASC,YAAY,QAAQ,0CAA0C;AACvE,OAAO,MAAMC,yBAAyB,CAAC;EACnCC,WAAWA,CAACC,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAE;IAChC,IAAI,CAACC,YAAY,GAAG,IAAIP,eAAe,CAAC,CAAC;IACzC,IAAI,CAACO,YAAY,CAACC,GAAG,CAACH,MAAM,CAACI,SAAS,CAAC,MAAM,IAAI,CAACC,OAAO,CAACL,MAAM,CAACM,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;IACpF,IAAI,CAACJ,YAAY,CAACC,GAAG,CAACH,MAAM,CAACO,UAAU,CAAC,IAAI,CAACF,OAAO,EAAE,IAAI,CAAC,CAAC;IAC5D,IAAI,CAACH,YAAY,CAACC,GAAG,CAACH,MAAM,CAACQ,SAAS,CAAC,IAAI,CAACC,KAAK,EAAE,IAAI,CAAC,CAAC;IACzD,IAAI,CAACP,YAAY,CAACC,GAAG,CAACJ,MAAM,CAACW,UAAU,CAACC,IAAI,IAAI;MAC5C,IAAI,IAAI,CAACC,OAAO,IAAI,CAACZ,MAAM,CAACa,QAAQ,CAAC,CAAC,EAAE;QACpC,MAAMC,EAAE,GAAGH,IAAI,CAACI,UAAU,CAACJ,IAAI,CAACK,MAAM,GAAG,CAAC,CAAC;QAC3C,IAAI,IAAI,CAACJ,OAAO,CAACK,gBAAgB,CAACC,GAAG,CAACJ,EAAE,CAAC,IAAIf,MAAM,CAACoB,SAAS,CAAC,CAAC,CAAC,uCAAuC,CAAC,EAAE;UACtGlB,MAAM,CAAC,IAAI,CAACW,OAAO,CAACQ,IAAI,CAAC;QAC7B;MACJ;IACJ,CAAC,CAAC,CAAC;EACP;EACAf,OAAOA,CAACgB,QAAQ,EAAE;IACd,IAAI,CAACA,QAAQ,IAAI,CAAC3B,eAAe,CAAC2B,QAAQ,CAACD,IAAI,CAACE,UAAU,CAACC,gBAAgB,CAAC,EAAE;MAC1E;MACA,IAAI,CAACd,KAAK,CAAC,CAAC;MACZ;IACJ;IACA,IAAI,IAAI,CAACG,OAAO,IAAI,IAAI,CAACA,OAAO,CAACQ,IAAI,CAACA,IAAI,KAAKC,QAAQ,CAACD,IAAI,EAAE;MAC1D;MACA;IACJ;IACA;IACA,MAAMH,gBAAgB,GAAG,IAAIrB,YAAY,CAAC,CAAC;IAC3C,KAAK,MAAMkB,EAAE,IAAIO,QAAQ,CAACD,IAAI,CAACE,UAAU,CAACC,gBAAgB,EAAE;MACxD,IAAIT,EAAE,CAACE,MAAM,GAAG,CAAC,EAAE;QACfC,gBAAgB,CAACd,GAAG,CAACW,EAAE,CAACC,UAAU,CAAC,CAAC,CAAC,CAAC;MAC1C;IACJ;IACA,IAAI,CAACH,OAAO,GAAG;MAAEK,gBAAgB;MAAEG,IAAI,EAAEC;IAAS,CAAC;EACvD;EACAZ,KAAKA,CAAA,EAAG;IACJ,IAAI,CAACG,OAAO,GAAGY,SAAS;EAC5B;EACAC,OAAOA,CAAA,EAAG;IACN,IAAI,CAACvB,YAAY,CAACuB,OAAO,CAAC,CAAC;EAC/B;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}