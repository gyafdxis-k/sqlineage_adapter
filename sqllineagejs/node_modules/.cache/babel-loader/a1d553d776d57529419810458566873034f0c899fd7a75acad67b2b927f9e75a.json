{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nimport { Separator, SubmenuAction } from '../../../base/common/actions.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nimport { IContextKeyService } from '../../contextkey/common/contextkey.js';\nimport { ICommandService } from '../../commands/common/commands.js';\nimport { toDisposable } from '../../../base/common/lifecycle.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { ThemeIcon } from '../../theme/common/themeService.js';\nimport { Iterable } from '../../../base/common/iterator.js';\nimport { LinkedList } from '../../../base/common/linkedList.js';\nimport { CSSIcon } from '../../../base/common/codicons.js';\nexport function isIMenuItem(item) {\n  return item.command !== undefined;\n}\nexport class MenuId {\n  constructor(debugName) {\n    this.id = MenuId._idPool++;\n    this._debugName = debugName;\n  }\n}\nMenuId._idPool = 0;\nMenuId.CommandPalette = new MenuId('CommandPalette');\nMenuId.EditorContext = new MenuId('EditorContext');\nMenuId.EditorContextPeek = new MenuId('EditorContextPeek');\nMenuId.MenubarEditMenu = new MenuId('MenubarEditMenu');\nMenuId.MenubarGoMenu = new MenuId('MenubarGoMenu');\nMenuId.MenubarSelectionMenu = new MenuId('MenubarSelectionMenu');\nexport const IMenuService = createDecorator('menuService');\nexport const MenuRegistry = new class {\n  constructor() {\n    this._commands = new Map();\n    this._menuItems = new Map();\n    this._onDidChangeMenu = new Emitter();\n    this.onDidChangeMenu = this._onDidChangeMenu.event;\n    this._commandPaletteChangeEvent = {\n      has: id => id === MenuId.CommandPalette\n    };\n  }\n  addCommand(command) {\n    return this.addCommands(Iterable.single(command));\n  }\n  addCommands(commands) {\n    for (const command of commands) {\n      this._commands.set(command.id, command);\n    }\n    this._onDidChangeMenu.fire(this._commandPaletteChangeEvent);\n    return toDisposable(() => {\n      let didChange = false;\n      for (const command of commands) {\n        didChange = this._commands.delete(command.id) || didChange;\n      }\n      if (didChange) {\n        this._onDidChangeMenu.fire(this._commandPaletteChangeEvent);\n      }\n    });\n  }\n  getCommand(id) {\n    return this._commands.get(id);\n  }\n  getCommands() {\n    const map = new Map();\n    this._commands.forEach((value, key) => map.set(key, value));\n    return map;\n  }\n  appendMenuItem(id, item) {\n    return this.appendMenuItems(Iterable.single({\n      id,\n      item\n    }));\n  }\n  appendMenuItems(items) {\n    const changedIds = new Set();\n    const toRemove = new LinkedList();\n    for (const {\n      id,\n      item\n    } of items) {\n      let list = this._menuItems.get(id);\n      if (!list) {\n        list = new LinkedList();\n        this._menuItems.set(id, list);\n      }\n      toRemove.push(list.push(item));\n      changedIds.add(id);\n    }\n    this._onDidChangeMenu.fire(changedIds);\n    return toDisposable(() => {\n      if (toRemove.size > 0) {\n        for (let fn of toRemove) {\n          fn();\n        }\n        this._onDidChangeMenu.fire(changedIds);\n        toRemove.clear();\n      }\n    });\n  }\n  getMenuItems(id) {\n    let result;\n    if (this._menuItems.has(id)) {\n      result = [...this._menuItems.get(id)];\n    } else {\n      result = [];\n    }\n    if (id === MenuId.CommandPalette) {\n      // CommandPalette is special because it shows\n      // all commands by default\n      this._appendImplicitItems(result);\n    }\n    return result;\n  }\n  _appendImplicitItems(result) {\n    const set = new Set();\n    for (const item of result) {\n      if (isIMenuItem(item)) {\n        set.add(item.command.id);\n        if (item.alt) {\n          set.add(item.alt.id);\n        }\n      }\n    }\n    this._commands.forEach((command, id) => {\n      if (!set.has(id)) {\n        result.push({\n          command\n        });\n      }\n    });\n  }\n}();\nexport class SubmenuItemAction extends SubmenuAction {\n  constructor(item, menuService, contextKeyService, options) {\n    const result = [];\n    const menu = menuService.createMenu(item.submenu, contextKeyService);\n    const groups = menu.getActions(options);\n    menu.dispose();\n    for (let group of groups) {\n      const [, actions] = group;\n      if (actions.length > 0) {\n        result.push(...actions);\n        result.push(new Separator());\n      }\n    }\n    if (result.length) {\n      result.pop(); // remove last separator\n    }\n\n    super(\"submenuitem.\".concat(item.submenu.id), typeof item.title === 'string' ? item.title : item.title.value, result, 'submenu');\n    this.item = item;\n  }\n}\n// implements IAction, does NOT extend Action, so that no one\n// subscribes to events of Action or modified properties\nlet MenuItemAction = class MenuItemAction {\n  constructor(item, alt, options, contextKeyService, _commandService) {\n    var _a;\n    this._commandService = _commandService;\n    this.id = item.id;\n    this.label = typeof item.title === 'string' ? item.title : item.title.value;\n    this.tooltip = (_a = item.tooltip) !== null && _a !== void 0 ? _a : '';\n    this.enabled = !item.precondition || contextKeyService.contextMatchesRules(item.precondition);\n    this.checked = false;\n    if (item.toggled) {\n      const toggled = item.toggled.condition ? item.toggled : {\n        condition: item.toggled\n      };\n      this.checked = contextKeyService.contextMatchesRules(toggled.condition);\n      if (this.checked && toggled.tooltip) {\n        this.tooltip = typeof toggled.tooltip === 'string' ? toggled.tooltip : toggled.tooltip.value;\n      }\n    }\n    this.item = item;\n    this.alt = alt ? new MenuItemAction(alt, undefined, options, contextKeyService, _commandService) : undefined;\n    this._options = options;\n    if (ThemeIcon.isThemeIcon(item.icon)) {\n      this.class = CSSIcon.asClassName(item.icon);\n    }\n  }\n  dispose() {\n    // there is NOTHING to dispose and the MenuItemAction should\n    // never have anything to dispose as it is a convenience type\n    // to bridge into the rendering world.\n  }\n  run() {\n    var _a, _b;\n    let runArgs = [];\n    if ((_a = this._options) === null || _a === void 0 ? void 0 : _a.arg) {\n      runArgs = [...runArgs, this._options.arg];\n    }\n    if ((_b = this._options) === null || _b === void 0 ? void 0 : _b.shouldForwardArgs) {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      runArgs = [...runArgs, ...args];\n    }\n    return this._commandService.executeCommand(this.id, ...runArgs);\n  }\n};\nMenuItemAction = __decorate([__param(3, IContextKeyService), __param(4, ICommandService)], MenuItemAction);\nexport { MenuItemAction };\n//#endregion","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","Separator","SubmenuAction","createDecorator","IContextKeyService","ICommandService","toDisposable","Emitter","ThemeIcon","Iterable","LinkedList","CSSIcon","isIMenuItem","item","command","undefined","MenuId","constructor","debugName","id","_idPool","_debugName","CommandPalette","EditorContext","EditorContextPeek","MenubarEditMenu","MenubarGoMenu","MenubarSelectionMenu","IMenuService","MenuRegistry","_commands","Map","_menuItems","_onDidChangeMenu","onDidChangeMenu","event","_commandPaletteChangeEvent","has","addCommand","addCommands","single","commands","set","fire","didChange","delete","getCommand","get","getCommands","map","forEach","value","appendMenuItem","appendMenuItems","items","changedIds","Set","toRemove","list","push","add","size","fn","clear","getMenuItems","result","_appendImplicitItems","alt","SubmenuItemAction","menuService","contextKeyService","options","menu","createMenu","submenu","groups","getActions","dispose","group","actions","pop","concat","title","MenuItemAction","_commandService","_a","label","tooltip","enabled","precondition","contextMatchesRules","checked","toggled","condition","_options","isThemeIcon","icon","class","asClassName","run","_b","runArgs","arg","shouldForwardArgs","_len","args","Array","_key","executeCommand"],"sources":["C:/Users/Administrator/Desktop/sqllineage-master/sqllineagejs/node_modules/monaco-editor/esm/vs/platform/actions/common/actions.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { Separator, SubmenuAction } from '../../../base/common/actions.js';\r\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\r\nimport { IContextKeyService } from '../../contextkey/common/contextkey.js';\r\nimport { ICommandService } from '../../commands/common/commands.js';\r\nimport { toDisposable } from '../../../base/common/lifecycle.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { ThemeIcon } from '../../theme/common/themeService.js';\r\nimport { Iterable } from '../../../base/common/iterator.js';\r\nimport { LinkedList } from '../../../base/common/linkedList.js';\r\nimport { CSSIcon } from '../../../base/common/codicons.js';\r\nexport function isIMenuItem(item) {\r\n    return item.command !== undefined;\r\n}\r\nexport class MenuId {\r\n    constructor(debugName) {\r\n        this.id = MenuId._idPool++;\r\n        this._debugName = debugName;\r\n    }\r\n}\r\nMenuId._idPool = 0;\r\nMenuId.CommandPalette = new MenuId('CommandPalette');\r\nMenuId.EditorContext = new MenuId('EditorContext');\r\nMenuId.EditorContextPeek = new MenuId('EditorContextPeek');\r\nMenuId.MenubarEditMenu = new MenuId('MenubarEditMenu');\r\nMenuId.MenubarGoMenu = new MenuId('MenubarGoMenu');\r\nMenuId.MenubarSelectionMenu = new MenuId('MenubarSelectionMenu');\r\nexport const IMenuService = createDecorator('menuService');\r\nexport const MenuRegistry = new class {\r\n    constructor() {\r\n        this._commands = new Map();\r\n        this._menuItems = new Map();\r\n        this._onDidChangeMenu = new Emitter();\r\n        this.onDidChangeMenu = this._onDidChangeMenu.event;\r\n        this._commandPaletteChangeEvent = {\r\n            has: id => id === MenuId.CommandPalette\r\n        };\r\n    }\r\n    addCommand(command) {\r\n        return this.addCommands(Iterable.single(command));\r\n    }\r\n    addCommands(commands) {\r\n        for (const command of commands) {\r\n            this._commands.set(command.id, command);\r\n        }\r\n        this._onDidChangeMenu.fire(this._commandPaletteChangeEvent);\r\n        return toDisposable(() => {\r\n            let didChange = false;\r\n            for (const command of commands) {\r\n                didChange = this._commands.delete(command.id) || didChange;\r\n            }\r\n            if (didChange) {\r\n                this._onDidChangeMenu.fire(this._commandPaletteChangeEvent);\r\n            }\r\n        });\r\n    }\r\n    getCommand(id) {\r\n        return this._commands.get(id);\r\n    }\r\n    getCommands() {\r\n        const map = new Map();\r\n        this._commands.forEach((value, key) => map.set(key, value));\r\n        return map;\r\n    }\r\n    appendMenuItem(id, item) {\r\n        return this.appendMenuItems(Iterable.single({ id, item }));\r\n    }\r\n    appendMenuItems(items) {\r\n        const changedIds = new Set();\r\n        const toRemove = new LinkedList();\r\n        for (const { id, item } of items) {\r\n            let list = this._menuItems.get(id);\r\n            if (!list) {\r\n                list = new LinkedList();\r\n                this._menuItems.set(id, list);\r\n            }\r\n            toRemove.push(list.push(item));\r\n            changedIds.add(id);\r\n        }\r\n        this._onDidChangeMenu.fire(changedIds);\r\n        return toDisposable(() => {\r\n            if (toRemove.size > 0) {\r\n                for (let fn of toRemove) {\r\n                    fn();\r\n                }\r\n                this._onDidChangeMenu.fire(changedIds);\r\n                toRemove.clear();\r\n            }\r\n        });\r\n    }\r\n    getMenuItems(id) {\r\n        let result;\r\n        if (this._menuItems.has(id)) {\r\n            result = [...this._menuItems.get(id)];\r\n        }\r\n        else {\r\n            result = [];\r\n        }\r\n        if (id === MenuId.CommandPalette) {\r\n            // CommandPalette is special because it shows\r\n            // all commands by default\r\n            this._appendImplicitItems(result);\r\n        }\r\n        return result;\r\n    }\r\n    _appendImplicitItems(result) {\r\n        const set = new Set();\r\n        for (const item of result) {\r\n            if (isIMenuItem(item)) {\r\n                set.add(item.command.id);\r\n                if (item.alt) {\r\n                    set.add(item.alt.id);\r\n                }\r\n            }\r\n        }\r\n        this._commands.forEach((command, id) => {\r\n            if (!set.has(id)) {\r\n                result.push({ command });\r\n            }\r\n        });\r\n    }\r\n};\r\nexport class SubmenuItemAction extends SubmenuAction {\r\n    constructor(item, menuService, contextKeyService, options) {\r\n        const result = [];\r\n        const menu = menuService.createMenu(item.submenu, contextKeyService);\r\n        const groups = menu.getActions(options);\r\n        menu.dispose();\r\n        for (let group of groups) {\r\n            const [, actions] = group;\r\n            if (actions.length > 0) {\r\n                result.push(...actions);\r\n                result.push(new Separator());\r\n            }\r\n        }\r\n        if (result.length) {\r\n            result.pop(); // remove last separator\r\n        }\r\n        super(`submenuitem.${item.submenu.id}`, typeof item.title === 'string' ? item.title : item.title.value, result, 'submenu');\r\n        this.item = item;\r\n    }\r\n}\r\n// implements IAction, does NOT extend Action, so that no one\r\n// subscribes to events of Action or modified properties\r\nlet MenuItemAction = class MenuItemAction {\r\n    constructor(item, alt, options, contextKeyService, _commandService) {\r\n        var _a;\r\n        this._commandService = _commandService;\r\n        this.id = item.id;\r\n        this.label = typeof item.title === 'string' ? item.title : item.title.value;\r\n        this.tooltip = (_a = item.tooltip) !== null && _a !== void 0 ? _a : '';\r\n        this.enabled = !item.precondition || contextKeyService.contextMatchesRules(item.precondition);\r\n        this.checked = false;\r\n        if (item.toggled) {\r\n            const toggled = (item.toggled.condition ? item.toggled : { condition: item.toggled });\r\n            this.checked = contextKeyService.contextMatchesRules(toggled.condition);\r\n            if (this.checked && toggled.tooltip) {\r\n                this.tooltip = typeof toggled.tooltip === 'string' ? toggled.tooltip : toggled.tooltip.value;\r\n            }\r\n        }\r\n        this.item = item;\r\n        this.alt = alt ? new MenuItemAction(alt, undefined, options, contextKeyService, _commandService) : undefined;\r\n        this._options = options;\r\n        if (ThemeIcon.isThemeIcon(item.icon)) {\r\n            this.class = CSSIcon.asClassName(item.icon);\r\n        }\r\n    }\r\n    dispose() {\r\n        // there is NOTHING to dispose and the MenuItemAction should\r\n        // never have anything to dispose as it is a convenience type\r\n        // to bridge into the rendering world.\r\n    }\r\n    run(...args) {\r\n        var _a, _b;\r\n        let runArgs = [];\r\n        if ((_a = this._options) === null || _a === void 0 ? void 0 : _a.arg) {\r\n            runArgs = [...runArgs, this._options.arg];\r\n        }\r\n        if ((_b = this._options) === null || _b === void 0 ? void 0 : _b.shouldForwardArgs) {\r\n            runArgs = [...runArgs, ...args];\r\n        }\r\n        return this._commandService.executeCommand(this.id, ...runArgs);\r\n    }\r\n};\r\nMenuItemAction = __decorate([\r\n    __param(3, IContextKeyService),\r\n    __param(4, ICommandService)\r\n], MenuItemAction);\r\nexport { MenuItemAction };\r\n//#endregion\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}