{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../../../base/common/event.js';\nexport class ColorPickerModel {\n  constructor(color, availableColorPresentations, presentationIndex) {\n    this.presentationIndex = presentationIndex;\n    this._onColorFlushed = new Emitter();\n    this.onColorFlushed = this._onColorFlushed.event;\n    this._onDidChangeColor = new Emitter();\n    this.onDidChangeColor = this._onDidChangeColor.event;\n    this._onDidChangePresentation = new Emitter();\n    this.onDidChangePresentation = this._onDidChangePresentation.event;\n    this.originalColor = color;\n    this._color = color;\n    this._colorPresentations = availableColorPresentations;\n  }\n  get color() {\n    return this._color;\n  }\n  set color(color) {\n    if (this._color.equals(color)) {\n      return;\n    }\n    this._color = color;\n    this._onDidChangeColor.fire(color);\n  }\n  get presentation() {\n    return this.colorPresentations[this.presentationIndex];\n  }\n  get colorPresentations() {\n    return this._colorPresentations;\n  }\n  set colorPresentations(colorPresentations) {\n    this._colorPresentations = colorPresentations;\n    if (this.presentationIndex > colorPresentations.length - 1) {\n      this.presentationIndex = 0;\n    }\n    this._onDidChangePresentation.fire(this.presentation);\n  }\n  selectNextColorPresentation() {\n    this.presentationIndex = (this.presentationIndex + 1) % this.colorPresentations.length;\n    this.flushColor();\n    this._onDidChangePresentation.fire(this.presentation);\n  }\n  guessColorPresentation(color, originalText) {\n    for (let i = 0; i < this.colorPresentations.length; i++) {\n      if (originalText.toLowerCase() === this.colorPresentations[i].label) {\n        this.presentationIndex = i;\n        this._onDidChangePresentation.fire(this.presentation);\n        break;\n      }\n    }\n  }\n  flushColor() {\n    this._onColorFlushed.fire(this._color);\n  }\n}","map":{"version":3,"names":["Emitter","ColorPickerModel","constructor","color","availableColorPresentations","presentationIndex","_onColorFlushed","onColorFlushed","event","_onDidChangeColor","onDidChangeColor","_onDidChangePresentation","onDidChangePresentation","originalColor","_color","_colorPresentations","equals","fire","presentation","colorPresentations","length","selectNextColorPresentation","flushColor","guessColorPresentation","originalText","i","toLowerCase","label"],"sources":["C:/Users/Administrator/Desktop/sqllineage-master/sqllineagejs/node_modules/monaco-editor/esm/vs/editor/contrib/colorPicker/colorPickerModel.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Emitter } from '../../../base/common/event.js';\r\nexport class ColorPickerModel {\r\n    constructor(color, availableColorPresentations, presentationIndex) {\r\n        this.presentationIndex = presentationIndex;\r\n        this._onColorFlushed = new Emitter();\r\n        this.onColorFlushed = this._onColorFlushed.event;\r\n        this._onDidChangeColor = new Emitter();\r\n        this.onDidChangeColor = this._onDidChangeColor.event;\r\n        this._onDidChangePresentation = new Emitter();\r\n        this.onDidChangePresentation = this._onDidChangePresentation.event;\r\n        this.originalColor = color;\r\n        this._color = color;\r\n        this._colorPresentations = availableColorPresentations;\r\n    }\r\n    get color() {\r\n        return this._color;\r\n    }\r\n    set color(color) {\r\n        if (this._color.equals(color)) {\r\n            return;\r\n        }\r\n        this._color = color;\r\n        this._onDidChangeColor.fire(color);\r\n    }\r\n    get presentation() { return this.colorPresentations[this.presentationIndex]; }\r\n    get colorPresentations() {\r\n        return this._colorPresentations;\r\n    }\r\n    set colorPresentations(colorPresentations) {\r\n        this._colorPresentations = colorPresentations;\r\n        if (this.presentationIndex > colorPresentations.length - 1) {\r\n            this.presentationIndex = 0;\r\n        }\r\n        this._onDidChangePresentation.fire(this.presentation);\r\n    }\r\n    selectNextColorPresentation() {\r\n        this.presentationIndex = (this.presentationIndex + 1) % this.colorPresentations.length;\r\n        this.flushColor();\r\n        this._onDidChangePresentation.fire(this.presentation);\r\n    }\r\n    guessColorPresentation(color, originalText) {\r\n        for (let i = 0; i < this.colorPresentations.length; i++) {\r\n            if (originalText.toLowerCase() === this.colorPresentations[i].label) {\r\n                this.presentationIndex = i;\r\n                this._onDidChangePresentation.fire(this.presentation);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    flushColor() {\r\n        this._onColorFlushed.fire(this._color);\r\n    }\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,OAAO,QAAQ,+BAA+B;AACvD,OAAO,MAAMC,gBAAgB,CAAC;EAC1BC,WAAWA,CAACC,KAAK,EAAEC,2BAA2B,EAAEC,iBAAiB,EAAE;IAC/D,IAAI,CAACA,iBAAiB,GAAGA,iBAAiB;IAC1C,IAAI,CAACC,eAAe,GAAG,IAAIN,OAAO,CAAC,CAAC;IACpC,IAAI,CAACO,cAAc,GAAG,IAAI,CAACD,eAAe,CAACE,KAAK;IAChD,IAAI,CAACC,iBAAiB,GAAG,IAAIT,OAAO,CAAC,CAAC;IACtC,IAAI,CAACU,gBAAgB,GAAG,IAAI,CAACD,iBAAiB,CAACD,KAAK;IACpD,IAAI,CAACG,wBAAwB,GAAG,IAAIX,OAAO,CAAC,CAAC;IAC7C,IAAI,CAACY,uBAAuB,GAAG,IAAI,CAACD,wBAAwB,CAACH,KAAK;IAClE,IAAI,CAACK,aAAa,GAAGV,KAAK;IAC1B,IAAI,CAACW,MAAM,GAAGX,KAAK;IACnB,IAAI,CAACY,mBAAmB,GAAGX,2BAA2B;EAC1D;EACA,IAAID,KAAKA,CAAA,EAAG;IACR,OAAO,IAAI,CAACW,MAAM;EACtB;EACA,IAAIX,KAAKA,CAACA,KAAK,EAAE;IACb,IAAI,IAAI,CAACW,MAAM,CAACE,MAAM,CAACb,KAAK,CAAC,EAAE;MAC3B;IACJ;IACA,IAAI,CAACW,MAAM,GAAGX,KAAK;IACnB,IAAI,CAACM,iBAAiB,CAACQ,IAAI,CAACd,KAAK,CAAC;EACtC;EACA,IAAIe,YAAYA,CAAA,EAAG;IAAE,OAAO,IAAI,CAACC,kBAAkB,CAAC,IAAI,CAACd,iBAAiB,CAAC;EAAE;EAC7E,IAAIc,kBAAkBA,CAAA,EAAG;IACrB,OAAO,IAAI,CAACJ,mBAAmB;EACnC;EACA,IAAII,kBAAkBA,CAACA,kBAAkB,EAAE;IACvC,IAAI,CAACJ,mBAAmB,GAAGI,kBAAkB;IAC7C,IAAI,IAAI,CAACd,iBAAiB,GAAGc,kBAAkB,CAACC,MAAM,GAAG,CAAC,EAAE;MACxD,IAAI,CAACf,iBAAiB,GAAG,CAAC;IAC9B;IACA,IAAI,CAACM,wBAAwB,CAACM,IAAI,CAAC,IAAI,CAACC,YAAY,CAAC;EACzD;EACAG,2BAA2BA,CAAA,EAAG;IAC1B,IAAI,CAAChB,iBAAiB,GAAG,CAAC,IAAI,CAACA,iBAAiB,GAAG,CAAC,IAAI,IAAI,CAACc,kBAAkB,CAACC,MAAM;IACtF,IAAI,CAACE,UAAU,CAAC,CAAC;IACjB,IAAI,CAACX,wBAAwB,CAACM,IAAI,CAAC,IAAI,CAACC,YAAY,CAAC;EACzD;EACAK,sBAAsBA,CAACpB,KAAK,EAAEqB,YAAY,EAAE;IACxC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACN,kBAAkB,CAACC,MAAM,EAAEK,CAAC,EAAE,EAAE;MACrD,IAAID,YAAY,CAACE,WAAW,CAAC,CAAC,KAAK,IAAI,CAACP,kBAAkB,CAACM,CAAC,CAAC,CAACE,KAAK,EAAE;QACjE,IAAI,CAACtB,iBAAiB,GAAGoB,CAAC;QAC1B,IAAI,CAACd,wBAAwB,CAACM,IAAI,CAAC,IAAI,CAACC,YAAY,CAAC;QACrD;MACJ;IACJ;EACJ;EACAI,UAAUA,CAAA,EAAG;IACT,IAAI,CAAChB,eAAe,CAACW,IAAI,CAAC,IAAI,CAACH,MAAM,CAAC;EAC1C;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}