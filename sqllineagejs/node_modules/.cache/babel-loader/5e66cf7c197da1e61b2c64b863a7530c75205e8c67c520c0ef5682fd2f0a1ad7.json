{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport { IntervalTimer, timeout } from '../../../base/common/async.js';\nimport { Disposable, dispose, toDisposable, DisposableStore } from '../../../base/common/lifecycle.js';\nimport { SimpleWorkerClient, logOnceWebWorkerWarning } from '../../../base/common/worker/simpleWorker.js';\nimport { DefaultWorkerFactory } from '../../../base/worker/defaultWorkerFactory.js';\nimport { Range } from '../core/range.js';\nimport * as modes from '../modes.js';\nimport { LanguageConfigurationRegistry } from '../modes/languageConfigurationRegistry.js';\nimport { EditorSimpleWorker } from './editorSimpleWorker.js';\nimport { IModelService } from './modelService.js';\nimport { ITextResourceConfigurationService } from './textResourceConfigurationService.js';\nimport { regExpFlags } from '../../../base/common/strings.js';\nimport { isNonEmptyArray } from '../../../base/common/arrays.js';\nimport { ILogService } from '../../../platform/log/common/log.js';\nimport { StopWatch } from '../../../base/common/stopwatch.js';\nimport { canceled } from '../../../base/common/errors.js';\n/**\r\n * Stop syncing a model to the worker if it was not needed for 1 min.\r\n */\nconst STOP_SYNC_MODEL_DELTA_TIME_MS = 60 * 1000;\n/**\r\n * Stop the worker if it was not needed for 5 min.\r\n */\nconst STOP_WORKER_DELTA_TIME_MS = 5 * 60 * 1000;\nfunction canSyncModel(modelService, resource) {\n  let model = modelService.getModel(resource);\n  if (!model) {\n    return false;\n  }\n  if (model.isTooLargeForSyncing()) {\n    return false;\n  }\n  return true;\n}\nlet EditorWorkerServiceImpl = class EditorWorkerServiceImpl extends Disposable {\n  constructor(modelService, configurationService, logService) {\n    super();\n    this._modelService = modelService;\n    this._workerManager = this._register(new WorkerManager(this._modelService));\n    this._logService = logService;\n    // register default link-provider and default completions-provider\n    this._register(modes.LinkProviderRegistry.register('*', {\n      provideLinks: (model, token) => {\n        if (!canSyncModel(this._modelService, model.uri)) {\n          return Promise.resolve({\n            links: []\n          }); // File too large\n        }\n\n        return this._workerManager.withWorker().then(client => client.computeLinks(model.uri)).then(links => {\n          return links && {\n            links\n          };\n        });\n      }\n    }));\n    this._register(modes.CompletionProviderRegistry.register('*', new WordBasedCompletionItemProvider(this._workerManager, configurationService, this._modelService)));\n  }\n  dispose() {\n    super.dispose();\n  }\n  canComputeDiff(original, modified) {\n    return canSyncModel(this._modelService, original) && canSyncModel(this._modelService, modified);\n  }\n  computeDiff(original, modified, ignoreTrimWhitespace, maxComputationTime) {\n    return this._workerManager.withWorker().then(client => client.computeDiff(original, modified, ignoreTrimWhitespace, maxComputationTime));\n  }\n  computeMoreMinimalEdits(resource, edits) {\n    if (isNonEmptyArray(edits)) {\n      if (!canSyncModel(this._modelService, resource)) {\n        return Promise.resolve(edits); // File too large\n      }\n\n      const sw = StopWatch.create(true);\n      const result = this._workerManager.withWorker().then(client => client.computeMoreMinimalEdits(resource, edits));\n      result.finally(() => this._logService.trace('FORMAT#computeMoreMinimalEdits', resource.toString(true), sw.elapsed()));\n      return Promise.race([result, timeout(1000).then(() => edits)]);\n    } else {\n      return Promise.resolve(undefined);\n    }\n  }\n  canNavigateValueSet(resource) {\n    return canSyncModel(this._modelService, resource);\n  }\n  navigateValueSet(resource, range, up) {\n    return this._workerManager.withWorker().then(client => client.navigateValueSet(resource, range, up));\n  }\n  canComputeWordRanges(resource) {\n    return canSyncModel(this._modelService, resource);\n  }\n  computeWordRanges(resource, range) {\n    return this._workerManager.withWorker().then(client => client.computeWordRanges(resource, range));\n  }\n};\nEditorWorkerServiceImpl = __decorate([__param(0, IModelService), __param(1, ITextResourceConfigurationService), __param(2, ILogService)], EditorWorkerServiceImpl);\nexport { EditorWorkerServiceImpl };\nclass WordBasedCompletionItemProvider {\n  constructor(workerManager, configurationService, modelService) {\n    this._debugDisplayName = 'wordbasedCompletions';\n    this._workerManager = workerManager;\n    this._configurationService = configurationService;\n    this._modelService = modelService;\n  }\n  provideCompletionItems(model, position) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const config = this._configurationService.getValue(model.uri, position, 'editor');\n      if (!config.wordBasedSuggestions) {\n        return undefined;\n      }\n      const models = [];\n      if (config.wordBasedSuggestionsMode === 'currentDocument') {\n        // only current file and only if not too large\n        if (canSyncModel(this._modelService, model.uri)) {\n          models.push(model.uri);\n        }\n      } else {\n        // either all files or files of same language\n        for (const candidate of this._modelService.getModels()) {\n          if (!canSyncModel(this._modelService, candidate.uri)) {\n            continue;\n          }\n          if (candidate === model) {\n            models.unshift(candidate.uri);\n          } else if (config.wordBasedSuggestionsMode === 'allDocuments' || candidate.getLanguageIdentifier().id === model.getLanguageIdentifier().id) {\n            models.push(candidate.uri);\n          }\n        }\n      }\n      if (models.length === 0) {\n        return undefined; // File too large, no other files\n      }\n\n      const wordDefRegExp = LanguageConfigurationRegistry.getWordDefinition(model.getLanguageIdentifier().id);\n      const word = model.getWordAtPosition(position);\n      const replace = !word ? Range.fromPositions(position) : new Range(position.lineNumber, word.startColumn, position.lineNumber, word.endColumn);\n      const insert = replace.setEndPosition(position.lineNumber, position.column);\n      const client = yield this._workerManager.withWorker();\n      const data = yield client.textualSuggest(models, word === null || word === void 0 ? void 0 : word.word, wordDefRegExp);\n      if (!data) {\n        return undefined;\n      }\n      return {\n        duration: data.duration,\n        suggestions: data.words.map(word => {\n          return {\n            kind: 18 /* Text */,\n            label: word,\n            insertText: word,\n            range: {\n              insert,\n              replace\n            }\n          };\n        })\n      };\n    });\n  }\n}\nclass WorkerManager extends Disposable {\n  constructor(modelService) {\n    super();\n    this._modelService = modelService;\n    this._editorWorkerClient = null;\n    this._lastWorkerUsedTime = new Date().getTime();\n    let stopWorkerInterval = this._register(new IntervalTimer());\n    stopWorkerInterval.cancelAndSet(() => this._checkStopIdleWorker(), Math.round(STOP_WORKER_DELTA_TIME_MS / 2));\n    this._register(this._modelService.onModelRemoved(_ => this._checkStopEmptyWorker()));\n  }\n  dispose() {\n    if (this._editorWorkerClient) {\n      this._editorWorkerClient.dispose();\n      this._editorWorkerClient = null;\n    }\n    super.dispose();\n  }\n  /**\r\n   * Check if the model service has no more models and stop the worker if that is the case.\r\n   */\n  _checkStopEmptyWorker() {\n    if (!this._editorWorkerClient) {\n      return;\n    }\n    let models = this._modelService.getModels();\n    if (models.length === 0) {\n      // There are no more models => nothing possible for me to do\n      this._editorWorkerClient.dispose();\n      this._editorWorkerClient = null;\n    }\n  }\n  /**\r\n   * Check if the worker has been idle for a while and then stop it.\r\n   */\n  _checkStopIdleWorker() {\n    if (!this._editorWorkerClient) {\n      return;\n    }\n    let timeSinceLastWorkerUsedTime = new Date().getTime() - this._lastWorkerUsedTime;\n    if (timeSinceLastWorkerUsedTime > STOP_WORKER_DELTA_TIME_MS) {\n      this._editorWorkerClient.dispose();\n      this._editorWorkerClient = null;\n    }\n  }\n  withWorker() {\n    this._lastWorkerUsedTime = new Date().getTime();\n    if (!this._editorWorkerClient) {\n      this._editorWorkerClient = new EditorWorkerClient(this._modelService, false, 'editorWorkerService');\n    }\n    return Promise.resolve(this._editorWorkerClient);\n  }\n}\nclass EditorModelManager extends Disposable {\n  constructor(proxy, modelService, keepIdleModels) {\n    super();\n    this._syncedModels = Object.create(null);\n    this._syncedModelsLastUsedTime = Object.create(null);\n    this._proxy = proxy;\n    this._modelService = modelService;\n    if (!keepIdleModels) {\n      let timer = new IntervalTimer();\n      timer.cancelAndSet(() => this._checkStopModelSync(), Math.round(STOP_SYNC_MODEL_DELTA_TIME_MS / 2));\n      this._register(timer);\n    }\n  }\n  dispose() {\n    for (let modelUrl in this._syncedModels) {\n      dispose(this._syncedModels[modelUrl]);\n    }\n    this._syncedModels = Object.create(null);\n    this._syncedModelsLastUsedTime = Object.create(null);\n    super.dispose();\n  }\n  ensureSyncedResources(resources) {\n    for (const resource of resources) {\n      let resourceStr = resource.toString();\n      if (!this._syncedModels[resourceStr]) {\n        this._beginModelSync(resource);\n      }\n      if (this._syncedModels[resourceStr]) {\n        this._syncedModelsLastUsedTime[resourceStr] = new Date().getTime();\n      }\n    }\n  }\n  _checkStopModelSync() {\n    let currentTime = new Date().getTime();\n    let toRemove = [];\n    for (let modelUrl in this._syncedModelsLastUsedTime) {\n      let elapsedTime = currentTime - this._syncedModelsLastUsedTime[modelUrl];\n      if (elapsedTime > STOP_SYNC_MODEL_DELTA_TIME_MS) {\n        toRemove.push(modelUrl);\n      }\n    }\n    for (const e of toRemove) {\n      this._stopModelSync(e);\n    }\n  }\n  _beginModelSync(resource) {\n    let model = this._modelService.getModel(resource);\n    if (!model) {\n      return;\n    }\n    if (model.isTooLargeForSyncing()) {\n      return;\n    }\n    let modelUrl = resource.toString();\n    this._proxy.acceptNewModel({\n      url: model.uri.toString(),\n      lines: model.getLinesContent(),\n      EOL: model.getEOL(),\n      versionId: model.getVersionId()\n    });\n    const toDispose = new DisposableStore();\n    toDispose.add(model.onDidChangeContent(e => {\n      this._proxy.acceptModelChanged(modelUrl.toString(), e);\n    }));\n    toDispose.add(model.onWillDispose(() => {\n      this._stopModelSync(modelUrl);\n    }));\n    toDispose.add(toDisposable(() => {\n      this._proxy.acceptRemovedModel(modelUrl);\n    }));\n    this._syncedModels[modelUrl] = toDispose;\n  }\n  _stopModelSync(modelUrl) {\n    let toDispose = this._syncedModels[modelUrl];\n    delete this._syncedModels[modelUrl];\n    delete this._syncedModelsLastUsedTime[modelUrl];\n    dispose(toDispose);\n  }\n}\nclass SynchronousWorkerClient {\n  constructor(instance) {\n    this._instance = instance;\n    this._proxyObj = Promise.resolve(this._instance);\n  }\n  dispose() {\n    this._instance.dispose();\n  }\n  getProxyObject() {\n    return this._proxyObj;\n  }\n}\nexport class EditorWorkerHost {\n  constructor(workerClient) {\n    this._workerClient = workerClient;\n  }\n  // foreign host request\n  fhr(method, args) {\n    return this._workerClient.fhr(method, args);\n  }\n}\nexport class EditorWorkerClient extends Disposable {\n  constructor(modelService, keepIdleModels, label) {\n    super();\n    this._disposed = false;\n    this._modelService = modelService;\n    this._keepIdleModels = keepIdleModels;\n    this._workerFactory = new DefaultWorkerFactory(label);\n    this._worker = null;\n    this._modelManager = null;\n  }\n  // foreign host request\n  fhr(method, args) {\n    throw new Error(\"Not implemented!\");\n  }\n  _getOrCreateWorker() {\n    if (!this._worker) {\n      try {\n        this._worker = this._register(new SimpleWorkerClient(this._workerFactory, 'vs/editor/common/services/editorSimpleWorker', new EditorWorkerHost(this)));\n      } catch (err) {\n        logOnceWebWorkerWarning(err);\n        this._worker = new SynchronousWorkerClient(new EditorSimpleWorker(new EditorWorkerHost(this), null));\n      }\n    }\n    return this._worker;\n  }\n  _getProxy() {\n    return this._getOrCreateWorker().getProxyObject().then(undefined, err => {\n      logOnceWebWorkerWarning(err);\n      this._worker = new SynchronousWorkerClient(new EditorSimpleWorker(new EditorWorkerHost(this), null));\n      return this._getOrCreateWorker().getProxyObject();\n    });\n  }\n  _getOrCreateModelManager(proxy) {\n    if (!this._modelManager) {\n      this._modelManager = this._register(new EditorModelManager(proxy, this._modelService, this._keepIdleModels));\n    }\n    return this._modelManager;\n  }\n  _withSyncedResources(resources) {\n    if (this._disposed) {\n      return Promise.reject(canceled());\n    }\n    return this._getProxy().then(proxy => {\n      this._getOrCreateModelManager(proxy).ensureSyncedResources(resources);\n      return proxy;\n    });\n  }\n  computeDiff(original, modified, ignoreTrimWhitespace, maxComputationTime) {\n    return this._withSyncedResources([original, modified]).then(proxy => {\n      return proxy.computeDiff(original.toString(), modified.toString(), ignoreTrimWhitespace, maxComputationTime);\n    });\n  }\n  computeMoreMinimalEdits(resource, edits) {\n    return this._withSyncedResources([resource]).then(proxy => {\n      return proxy.computeMoreMinimalEdits(resource.toString(), edits);\n    });\n  }\n  computeLinks(resource) {\n    return this._withSyncedResources([resource]).then(proxy => {\n      return proxy.computeLinks(resource.toString());\n    });\n  }\n  textualSuggest(resources, leadingWord, wordDefRegExp) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const proxy = yield this._withSyncedResources(resources);\n      const wordDef = wordDefRegExp.source;\n      const wordDefFlags = regExpFlags(wordDefRegExp);\n      return proxy.textualSuggest(resources.map(r => r.toString()), leadingWord, wordDef, wordDefFlags);\n    });\n  }\n  computeWordRanges(resource, range) {\n    return this._withSyncedResources([resource]).then(proxy => {\n      let model = this._modelService.getModel(resource);\n      if (!model) {\n        return Promise.resolve(null);\n      }\n      let wordDefRegExp = LanguageConfigurationRegistry.getWordDefinition(model.getLanguageIdentifier().id);\n      let wordDef = wordDefRegExp.source;\n      let wordDefFlags = regExpFlags(wordDefRegExp);\n      return proxy.computeWordRanges(resource.toString(), range, wordDef, wordDefFlags);\n    });\n  }\n  navigateValueSet(resource, range, up) {\n    return this._withSyncedResources([resource]).then(proxy => {\n      let model = this._modelService.getModel(resource);\n      if (!model) {\n        return null;\n      }\n      let wordDefRegExp = LanguageConfigurationRegistry.getWordDefinition(model.getLanguageIdentifier().id);\n      let wordDef = wordDefRegExp.source;\n      let wordDefFlags = regExpFlags(wordDefRegExp);\n      return proxy.navigateValueSet(resource.toString(), range, up, wordDef, wordDefFlags);\n    });\n  }\n  dispose() {\n    super.dispose();\n    this._disposed = true;\n  }\n}","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","IntervalTimer","timeout","Disposable","dispose","toDisposable","DisposableStore","SimpleWorkerClient","logOnceWebWorkerWarning","DefaultWorkerFactory","Range","modes","LanguageConfigurationRegistry","EditorSimpleWorker","IModelService","ITextResourceConfigurationService","regExpFlags","isNonEmptyArray","ILogService","StopWatch","canceled","STOP_SYNC_MODEL_DELTA_TIME_MS","STOP_WORKER_DELTA_TIME_MS","canSyncModel","modelService","resource","model","getModel","isTooLargeForSyncing","EditorWorkerServiceImpl","constructor","configurationService","logService","_modelService","_workerManager","_register","WorkerManager","_logService","LinkProviderRegistry","register","provideLinks","token","uri","links","withWorker","client","computeLinks","CompletionProviderRegistry","WordBasedCompletionItemProvider","canComputeDiff","original","modified","computeDiff","ignoreTrimWhitespace","maxComputationTime","computeMoreMinimalEdits","edits","sw","create","finally","trace","toString","elapsed","race","undefined","canNavigateValueSet","navigateValueSet","range","up","canComputeWordRanges","computeWordRanges","workerManager","_debugDisplayName","_configurationService","provideCompletionItems","position","config","getValue","wordBasedSuggestions","models","wordBasedSuggestionsMode","push","candidate","getModels","unshift","getLanguageIdentifier","id","wordDefRegExp","getWordDefinition","word","getWordAtPosition","replace","fromPositions","lineNumber","startColumn","endColumn","insert","setEndPosition","column","data","textualSuggest","duration","suggestions","words","map","kind","label","insertText","_editorWorkerClient","_lastWorkerUsedTime","Date","getTime","stopWorkerInterval","cancelAndSet","_checkStopIdleWorker","Math","round","onModelRemoved","_","_checkStopEmptyWorker","timeSinceLastWorkerUsedTime","EditorWorkerClient","EditorModelManager","proxy","keepIdleModels","_syncedModels","_syncedModelsLastUsedTime","_proxy","timer","_checkStopModelSync","modelUrl","ensureSyncedResources","resources","resourceStr","_beginModelSync","currentTime","toRemove","elapsedTime","_stopModelSync","acceptNewModel","url","lines","getLinesContent","EOL","getEOL","versionId","getVersionId","toDispose","add","onDidChangeContent","acceptModelChanged","onWillDispose","acceptRemovedModel","SynchronousWorkerClient","instance","_instance","_proxyObj","getProxyObject","EditorWorkerHost","workerClient","_workerClient","fhr","method","args","_disposed","_keepIdleModels","_workerFactory","_worker","_modelManager","Error","_getOrCreateWorker","err","_getProxy","_getOrCreateModelManager","_withSyncedResources","leadingWord","wordDef","source","wordDefFlags"],"sources":["C:/Users/Administrator/Desktop/sqllineage-master/sqllineagejs/node_modules/monaco-editor/esm/vs/editor/common/services/editorWorkerServiceImpl.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { IntervalTimer, timeout } from '../../../base/common/async.js';\r\nimport { Disposable, dispose, toDisposable, DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { SimpleWorkerClient, logOnceWebWorkerWarning } from '../../../base/common/worker/simpleWorker.js';\r\nimport { DefaultWorkerFactory } from '../../../base/worker/defaultWorkerFactory.js';\r\nimport { Range } from '../core/range.js';\r\nimport * as modes from '../modes.js';\r\nimport { LanguageConfigurationRegistry } from '../modes/languageConfigurationRegistry.js';\r\nimport { EditorSimpleWorker } from './editorSimpleWorker.js';\r\nimport { IModelService } from './modelService.js';\r\nimport { ITextResourceConfigurationService } from './textResourceConfigurationService.js';\r\nimport { regExpFlags } from '../../../base/common/strings.js';\r\nimport { isNonEmptyArray } from '../../../base/common/arrays.js';\r\nimport { ILogService } from '../../../platform/log/common/log.js';\r\nimport { StopWatch } from '../../../base/common/stopwatch.js';\r\nimport { canceled } from '../../../base/common/errors.js';\r\n/**\r\n * Stop syncing a model to the worker if it was not needed for 1 min.\r\n */\r\nconst STOP_SYNC_MODEL_DELTA_TIME_MS = 60 * 1000;\r\n/**\r\n * Stop the worker if it was not needed for 5 min.\r\n */\r\nconst STOP_WORKER_DELTA_TIME_MS = 5 * 60 * 1000;\r\nfunction canSyncModel(modelService, resource) {\r\n    let model = modelService.getModel(resource);\r\n    if (!model) {\r\n        return false;\r\n    }\r\n    if (model.isTooLargeForSyncing()) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\nlet EditorWorkerServiceImpl = class EditorWorkerServiceImpl extends Disposable {\r\n    constructor(modelService, configurationService, logService) {\r\n        super();\r\n        this._modelService = modelService;\r\n        this._workerManager = this._register(new WorkerManager(this._modelService));\r\n        this._logService = logService;\r\n        // register default link-provider and default completions-provider\r\n        this._register(modes.LinkProviderRegistry.register('*', {\r\n            provideLinks: (model, token) => {\r\n                if (!canSyncModel(this._modelService, model.uri)) {\r\n                    return Promise.resolve({ links: [] }); // File too large\r\n                }\r\n                return this._workerManager.withWorker().then(client => client.computeLinks(model.uri)).then(links => {\r\n                    return links && { links };\r\n                });\r\n            }\r\n        }));\r\n        this._register(modes.CompletionProviderRegistry.register('*', new WordBasedCompletionItemProvider(this._workerManager, configurationService, this._modelService)));\r\n    }\r\n    dispose() {\r\n        super.dispose();\r\n    }\r\n    canComputeDiff(original, modified) {\r\n        return (canSyncModel(this._modelService, original) && canSyncModel(this._modelService, modified));\r\n    }\r\n    computeDiff(original, modified, ignoreTrimWhitespace, maxComputationTime) {\r\n        return this._workerManager.withWorker().then(client => client.computeDiff(original, modified, ignoreTrimWhitespace, maxComputationTime));\r\n    }\r\n    computeMoreMinimalEdits(resource, edits) {\r\n        if (isNonEmptyArray(edits)) {\r\n            if (!canSyncModel(this._modelService, resource)) {\r\n                return Promise.resolve(edits); // File too large\r\n            }\r\n            const sw = StopWatch.create(true);\r\n            const result = this._workerManager.withWorker().then(client => client.computeMoreMinimalEdits(resource, edits));\r\n            result.finally(() => this._logService.trace('FORMAT#computeMoreMinimalEdits', resource.toString(true), sw.elapsed()));\r\n            return Promise.race([result, timeout(1000).then(() => edits)]);\r\n        }\r\n        else {\r\n            return Promise.resolve(undefined);\r\n        }\r\n    }\r\n    canNavigateValueSet(resource) {\r\n        return (canSyncModel(this._modelService, resource));\r\n    }\r\n    navigateValueSet(resource, range, up) {\r\n        return this._workerManager.withWorker().then(client => client.navigateValueSet(resource, range, up));\r\n    }\r\n    canComputeWordRanges(resource) {\r\n        return canSyncModel(this._modelService, resource);\r\n    }\r\n    computeWordRanges(resource, range) {\r\n        return this._workerManager.withWorker().then(client => client.computeWordRanges(resource, range));\r\n    }\r\n};\r\nEditorWorkerServiceImpl = __decorate([\r\n    __param(0, IModelService),\r\n    __param(1, ITextResourceConfigurationService),\r\n    __param(2, ILogService)\r\n], EditorWorkerServiceImpl);\r\nexport { EditorWorkerServiceImpl };\r\nclass WordBasedCompletionItemProvider {\r\n    constructor(workerManager, configurationService, modelService) {\r\n        this._debugDisplayName = 'wordbasedCompletions';\r\n        this._workerManager = workerManager;\r\n        this._configurationService = configurationService;\r\n        this._modelService = modelService;\r\n    }\r\n    provideCompletionItems(model, position) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const config = this._configurationService.getValue(model.uri, position, 'editor');\r\n            if (!config.wordBasedSuggestions) {\r\n                return undefined;\r\n            }\r\n            const models = [];\r\n            if (config.wordBasedSuggestionsMode === 'currentDocument') {\r\n                // only current file and only if not too large\r\n                if (canSyncModel(this._modelService, model.uri)) {\r\n                    models.push(model.uri);\r\n                }\r\n            }\r\n            else {\r\n                // either all files or files of same language\r\n                for (const candidate of this._modelService.getModels()) {\r\n                    if (!canSyncModel(this._modelService, candidate.uri)) {\r\n                        continue;\r\n                    }\r\n                    if (candidate === model) {\r\n                        models.unshift(candidate.uri);\r\n                    }\r\n                    else if (config.wordBasedSuggestionsMode === 'allDocuments' || candidate.getLanguageIdentifier().id === model.getLanguageIdentifier().id) {\r\n                        models.push(candidate.uri);\r\n                    }\r\n                }\r\n            }\r\n            if (models.length === 0) {\r\n                return undefined; // File too large, no other files\r\n            }\r\n            const wordDefRegExp = LanguageConfigurationRegistry.getWordDefinition(model.getLanguageIdentifier().id);\r\n            const word = model.getWordAtPosition(position);\r\n            const replace = !word ? Range.fromPositions(position) : new Range(position.lineNumber, word.startColumn, position.lineNumber, word.endColumn);\r\n            const insert = replace.setEndPosition(position.lineNumber, position.column);\r\n            const client = yield this._workerManager.withWorker();\r\n            const data = yield client.textualSuggest(models, word === null || word === void 0 ? void 0 : word.word, wordDefRegExp);\r\n            if (!data) {\r\n                return undefined;\r\n            }\r\n            return {\r\n                duration: data.duration,\r\n                suggestions: data.words.map((word) => {\r\n                    return {\r\n                        kind: 18 /* Text */,\r\n                        label: word,\r\n                        insertText: word,\r\n                        range: { insert, replace }\r\n                    };\r\n                }),\r\n            };\r\n        });\r\n    }\r\n}\r\nclass WorkerManager extends Disposable {\r\n    constructor(modelService) {\r\n        super();\r\n        this._modelService = modelService;\r\n        this._editorWorkerClient = null;\r\n        this._lastWorkerUsedTime = (new Date()).getTime();\r\n        let stopWorkerInterval = this._register(new IntervalTimer());\r\n        stopWorkerInterval.cancelAndSet(() => this._checkStopIdleWorker(), Math.round(STOP_WORKER_DELTA_TIME_MS / 2));\r\n        this._register(this._modelService.onModelRemoved(_ => this._checkStopEmptyWorker()));\r\n    }\r\n    dispose() {\r\n        if (this._editorWorkerClient) {\r\n            this._editorWorkerClient.dispose();\r\n            this._editorWorkerClient = null;\r\n        }\r\n        super.dispose();\r\n    }\r\n    /**\r\n     * Check if the model service has no more models and stop the worker if that is the case.\r\n     */\r\n    _checkStopEmptyWorker() {\r\n        if (!this._editorWorkerClient) {\r\n            return;\r\n        }\r\n        let models = this._modelService.getModels();\r\n        if (models.length === 0) {\r\n            // There are no more models => nothing possible for me to do\r\n            this._editorWorkerClient.dispose();\r\n            this._editorWorkerClient = null;\r\n        }\r\n    }\r\n    /**\r\n     * Check if the worker has been idle for a while and then stop it.\r\n     */\r\n    _checkStopIdleWorker() {\r\n        if (!this._editorWorkerClient) {\r\n            return;\r\n        }\r\n        let timeSinceLastWorkerUsedTime = (new Date()).getTime() - this._lastWorkerUsedTime;\r\n        if (timeSinceLastWorkerUsedTime > STOP_WORKER_DELTA_TIME_MS) {\r\n            this._editorWorkerClient.dispose();\r\n            this._editorWorkerClient = null;\r\n        }\r\n    }\r\n    withWorker() {\r\n        this._lastWorkerUsedTime = (new Date()).getTime();\r\n        if (!this._editorWorkerClient) {\r\n            this._editorWorkerClient = new EditorWorkerClient(this._modelService, false, 'editorWorkerService');\r\n        }\r\n        return Promise.resolve(this._editorWorkerClient);\r\n    }\r\n}\r\nclass EditorModelManager extends Disposable {\r\n    constructor(proxy, modelService, keepIdleModels) {\r\n        super();\r\n        this._syncedModels = Object.create(null);\r\n        this._syncedModelsLastUsedTime = Object.create(null);\r\n        this._proxy = proxy;\r\n        this._modelService = modelService;\r\n        if (!keepIdleModels) {\r\n            let timer = new IntervalTimer();\r\n            timer.cancelAndSet(() => this._checkStopModelSync(), Math.round(STOP_SYNC_MODEL_DELTA_TIME_MS / 2));\r\n            this._register(timer);\r\n        }\r\n    }\r\n    dispose() {\r\n        for (let modelUrl in this._syncedModels) {\r\n            dispose(this._syncedModels[modelUrl]);\r\n        }\r\n        this._syncedModels = Object.create(null);\r\n        this._syncedModelsLastUsedTime = Object.create(null);\r\n        super.dispose();\r\n    }\r\n    ensureSyncedResources(resources) {\r\n        for (const resource of resources) {\r\n            let resourceStr = resource.toString();\r\n            if (!this._syncedModels[resourceStr]) {\r\n                this._beginModelSync(resource);\r\n            }\r\n            if (this._syncedModels[resourceStr]) {\r\n                this._syncedModelsLastUsedTime[resourceStr] = (new Date()).getTime();\r\n            }\r\n        }\r\n    }\r\n    _checkStopModelSync() {\r\n        let currentTime = (new Date()).getTime();\r\n        let toRemove = [];\r\n        for (let modelUrl in this._syncedModelsLastUsedTime) {\r\n            let elapsedTime = currentTime - this._syncedModelsLastUsedTime[modelUrl];\r\n            if (elapsedTime > STOP_SYNC_MODEL_DELTA_TIME_MS) {\r\n                toRemove.push(modelUrl);\r\n            }\r\n        }\r\n        for (const e of toRemove) {\r\n            this._stopModelSync(e);\r\n        }\r\n    }\r\n    _beginModelSync(resource) {\r\n        let model = this._modelService.getModel(resource);\r\n        if (!model) {\r\n            return;\r\n        }\r\n        if (model.isTooLargeForSyncing()) {\r\n            return;\r\n        }\r\n        let modelUrl = resource.toString();\r\n        this._proxy.acceptNewModel({\r\n            url: model.uri.toString(),\r\n            lines: model.getLinesContent(),\r\n            EOL: model.getEOL(),\r\n            versionId: model.getVersionId()\r\n        });\r\n        const toDispose = new DisposableStore();\r\n        toDispose.add(model.onDidChangeContent((e) => {\r\n            this._proxy.acceptModelChanged(modelUrl.toString(), e);\r\n        }));\r\n        toDispose.add(model.onWillDispose(() => {\r\n            this._stopModelSync(modelUrl);\r\n        }));\r\n        toDispose.add(toDisposable(() => {\r\n            this._proxy.acceptRemovedModel(modelUrl);\r\n        }));\r\n        this._syncedModels[modelUrl] = toDispose;\r\n    }\r\n    _stopModelSync(modelUrl) {\r\n        let toDispose = this._syncedModels[modelUrl];\r\n        delete this._syncedModels[modelUrl];\r\n        delete this._syncedModelsLastUsedTime[modelUrl];\r\n        dispose(toDispose);\r\n    }\r\n}\r\nclass SynchronousWorkerClient {\r\n    constructor(instance) {\r\n        this._instance = instance;\r\n        this._proxyObj = Promise.resolve(this._instance);\r\n    }\r\n    dispose() {\r\n        this._instance.dispose();\r\n    }\r\n    getProxyObject() {\r\n        return this._proxyObj;\r\n    }\r\n}\r\nexport class EditorWorkerHost {\r\n    constructor(workerClient) {\r\n        this._workerClient = workerClient;\r\n    }\r\n    // foreign host request\r\n    fhr(method, args) {\r\n        return this._workerClient.fhr(method, args);\r\n    }\r\n}\r\nexport class EditorWorkerClient extends Disposable {\r\n    constructor(modelService, keepIdleModels, label) {\r\n        super();\r\n        this._disposed = false;\r\n        this._modelService = modelService;\r\n        this._keepIdleModels = keepIdleModels;\r\n        this._workerFactory = new DefaultWorkerFactory(label);\r\n        this._worker = null;\r\n        this._modelManager = null;\r\n    }\r\n    // foreign host request\r\n    fhr(method, args) {\r\n        throw new Error(`Not implemented!`);\r\n    }\r\n    _getOrCreateWorker() {\r\n        if (!this._worker) {\r\n            try {\r\n                this._worker = this._register(new SimpleWorkerClient(this._workerFactory, 'vs/editor/common/services/editorSimpleWorker', new EditorWorkerHost(this)));\r\n            }\r\n            catch (err) {\r\n                logOnceWebWorkerWarning(err);\r\n                this._worker = new SynchronousWorkerClient(new EditorSimpleWorker(new EditorWorkerHost(this), null));\r\n            }\r\n        }\r\n        return this._worker;\r\n    }\r\n    _getProxy() {\r\n        return this._getOrCreateWorker().getProxyObject().then(undefined, (err) => {\r\n            logOnceWebWorkerWarning(err);\r\n            this._worker = new SynchronousWorkerClient(new EditorSimpleWorker(new EditorWorkerHost(this), null));\r\n            return this._getOrCreateWorker().getProxyObject();\r\n        });\r\n    }\r\n    _getOrCreateModelManager(proxy) {\r\n        if (!this._modelManager) {\r\n            this._modelManager = this._register(new EditorModelManager(proxy, this._modelService, this._keepIdleModels));\r\n        }\r\n        return this._modelManager;\r\n    }\r\n    _withSyncedResources(resources) {\r\n        if (this._disposed) {\r\n            return Promise.reject(canceled());\r\n        }\r\n        return this._getProxy().then((proxy) => {\r\n            this._getOrCreateModelManager(proxy).ensureSyncedResources(resources);\r\n            return proxy;\r\n        });\r\n    }\r\n    computeDiff(original, modified, ignoreTrimWhitespace, maxComputationTime) {\r\n        return this._withSyncedResources([original, modified]).then(proxy => {\r\n            return proxy.computeDiff(original.toString(), modified.toString(), ignoreTrimWhitespace, maxComputationTime);\r\n        });\r\n    }\r\n    computeMoreMinimalEdits(resource, edits) {\r\n        return this._withSyncedResources([resource]).then(proxy => {\r\n            return proxy.computeMoreMinimalEdits(resource.toString(), edits);\r\n        });\r\n    }\r\n    computeLinks(resource) {\r\n        return this._withSyncedResources([resource]).then(proxy => {\r\n            return proxy.computeLinks(resource.toString());\r\n        });\r\n    }\r\n    textualSuggest(resources, leadingWord, wordDefRegExp) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const proxy = yield this._withSyncedResources(resources);\r\n            const wordDef = wordDefRegExp.source;\r\n            const wordDefFlags = regExpFlags(wordDefRegExp);\r\n            return proxy.textualSuggest(resources.map(r => r.toString()), leadingWord, wordDef, wordDefFlags);\r\n        });\r\n    }\r\n    computeWordRanges(resource, range) {\r\n        return this._withSyncedResources([resource]).then(proxy => {\r\n            let model = this._modelService.getModel(resource);\r\n            if (!model) {\r\n                return Promise.resolve(null);\r\n            }\r\n            let wordDefRegExp = LanguageConfigurationRegistry.getWordDefinition(model.getLanguageIdentifier().id);\r\n            let wordDef = wordDefRegExp.source;\r\n            let wordDefFlags = regExpFlags(wordDefRegExp);\r\n            return proxy.computeWordRanges(resource.toString(), range, wordDef, wordDefFlags);\r\n        });\r\n    }\r\n    navigateValueSet(resource, range, up) {\r\n        return this._withSyncedResources([resource]).then(proxy => {\r\n            let model = this._modelService.getModel(resource);\r\n            if (!model) {\r\n                return null;\r\n            }\r\n            let wordDefRegExp = LanguageConfigurationRegistry.getWordDefinition(model.getLanguageIdentifier().id);\r\n            let wordDef = wordDefRegExp.source;\r\n            let wordDefFlags = regExpFlags(wordDefRegExp);\r\n            return proxy.navigateValueSet(resource.toString(), range, up, wordDef, wordDefFlags);\r\n        });\r\n    }\r\n    dispose() {\r\n        super.dispose();\r\n        this._disposed = true;\r\n    }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}