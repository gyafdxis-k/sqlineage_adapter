{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../../nls.js';\nimport { EditorAction, registerEditorAction } from '../../browser/editorExtensions.js';\nimport { EditorZoom } from '../../common/config/editorZoom.js';\nclass EditorFontZoomIn extends EditorAction {\n  constructor() {\n    super({\n      id: 'editor.action.fontZoomIn',\n      label: nls.localize('EditorFontZoomIn.label', \"Editor Font Zoom In\"),\n      alias: 'Editor Font Zoom In',\n      precondition: undefined\n    });\n  }\n  run(accessor, editor) {\n    EditorZoom.setZoomLevel(EditorZoom.getZoomLevel() + 1);\n  }\n}\nclass EditorFontZoomOut extends EditorAction {\n  constructor() {\n    super({\n      id: 'editor.action.fontZoomOut',\n      label: nls.localize('EditorFontZoomOut.label', \"Editor Font Zoom Out\"),\n      alias: 'Editor Font Zoom Out',\n      precondition: undefined\n    });\n  }\n  run(accessor, editor) {\n    EditorZoom.setZoomLevel(EditorZoom.getZoomLevel() - 1);\n  }\n}\nclass EditorFontZoomReset extends EditorAction {\n  constructor() {\n    super({\n      id: 'editor.action.fontZoomReset',\n      label: nls.localize('EditorFontZoomReset.label', \"Editor Font Zoom Reset\"),\n      alias: 'Editor Font Zoom Reset',\n      precondition: undefined\n    });\n  }\n  run(accessor, editor) {\n    EditorZoom.setZoomLevel(0);\n  }\n}\nregisterEditorAction(EditorFontZoomIn);\nregisterEditorAction(EditorFontZoomOut);\nregisterEditorAction(EditorFontZoomReset);","map":{"version":3,"names":["nls","EditorAction","registerEditorAction","EditorZoom","EditorFontZoomIn","constructor","id","label","localize","alias","precondition","undefined","run","accessor","editor","setZoomLevel","getZoomLevel","EditorFontZoomOut","EditorFontZoomReset"],"sources":["C:/Users/Administrator/Desktop/sqllineage-master/sqllineagejs/node_modules/monaco-editor/esm/vs/editor/contrib/fontZoom/fontZoom.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as nls from '../../../nls.js';\r\nimport { EditorAction, registerEditorAction } from '../../browser/editorExtensions.js';\r\nimport { EditorZoom } from '../../common/config/editorZoom.js';\r\nclass EditorFontZoomIn extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.fontZoomIn',\r\n            label: nls.localize('EditorFontZoomIn.label', \"Editor Font Zoom In\"),\r\n            alias: 'Editor Font Zoom In',\r\n            precondition: undefined\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        EditorZoom.setZoomLevel(EditorZoom.getZoomLevel() + 1);\r\n    }\r\n}\r\nclass EditorFontZoomOut extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.fontZoomOut',\r\n            label: nls.localize('EditorFontZoomOut.label', \"Editor Font Zoom Out\"),\r\n            alias: 'Editor Font Zoom Out',\r\n            precondition: undefined\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        EditorZoom.setZoomLevel(EditorZoom.getZoomLevel() - 1);\r\n    }\r\n}\r\nclass EditorFontZoomReset extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.fontZoomReset',\r\n            label: nls.localize('EditorFontZoomReset.label', \"Editor Font Zoom Reset\"),\r\n            alias: 'Editor Font Zoom Reset',\r\n            precondition: undefined\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        EditorZoom.setZoomLevel(0);\r\n    }\r\n}\r\nregisterEditorAction(EditorFontZoomIn);\r\nregisterEditorAction(EditorFontZoomOut);\r\nregisterEditorAction(EditorFontZoomReset);\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAO,KAAKA,GAAG,MAAM,iBAAiB;AACtC,SAASC,YAAY,EAAEC,oBAAoB,QAAQ,mCAAmC;AACtF,SAASC,UAAU,QAAQ,mCAAmC;AAC9D,MAAMC,gBAAgB,SAASH,YAAY,CAAC;EACxCI,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC;MACFC,EAAE,EAAE,0BAA0B;MAC9BC,KAAK,EAAEP,GAAG,CAACQ,QAAQ,CAAC,wBAAwB,EAAE,qBAAqB,CAAC;MACpEC,KAAK,EAAE,qBAAqB;MAC5BC,YAAY,EAAEC;IAClB,CAAC,CAAC;EACN;EACAC,GAAGA,CAACC,QAAQ,EAAEC,MAAM,EAAE;IAClBX,UAAU,CAACY,YAAY,CAACZ,UAAU,CAACa,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC;EAC1D;AACJ;AACA,MAAMC,iBAAiB,SAAShB,YAAY,CAAC;EACzCI,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC;MACFC,EAAE,EAAE,2BAA2B;MAC/BC,KAAK,EAAEP,GAAG,CAACQ,QAAQ,CAAC,yBAAyB,EAAE,sBAAsB,CAAC;MACtEC,KAAK,EAAE,sBAAsB;MAC7BC,YAAY,EAAEC;IAClB,CAAC,CAAC;EACN;EACAC,GAAGA,CAACC,QAAQ,EAAEC,MAAM,EAAE;IAClBX,UAAU,CAACY,YAAY,CAACZ,UAAU,CAACa,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC;EAC1D;AACJ;AACA,MAAME,mBAAmB,SAASjB,YAAY,CAAC;EAC3CI,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC;MACFC,EAAE,EAAE,6BAA6B;MACjCC,KAAK,EAAEP,GAAG,CAACQ,QAAQ,CAAC,2BAA2B,EAAE,wBAAwB,CAAC;MAC1EC,KAAK,EAAE,wBAAwB;MAC/BC,YAAY,EAAEC;IAClB,CAAC,CAAC;EACN;EACAC,GAAGA,CAACC,QAAQ,EAAEC,MAAM,EAAE;IAClBX,UAAU,CAACY,YAAY,CAAC,CAAC,CAAC;EAC9B;AACJ;AACAb,oBAAoB,CAACE,gBAAgB,CAAC;AACtCF,oBAAoB,CAACe,iBAAiB,CAAC;AACvCf,oBAAoB,CAACgB,mBAAmB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}