{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport './dnd.css';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { isMacintosh } from '../../../base/common/platform.js';\nimport { registerEditorContribution } from '../../browser/editorExtensions.js';\nimport { Position } from '../../common/core/position.js';\nimport { Range } from '../../common/core/range.js';\nimport { Selection } from '../../common/core/selection.js';\nimport { DragAndDropCommand } from './dragAndDropCommand.js';\nimport { ModelDecorationOptions } from '../../common/model/textModel.js';\nfunction hasTriggerModifier(e) {\n  if (isMacintosh) {\n    return e.altKey;\n  } else {\n    return e.ctrlKey;\n  }\n}\nexport class DragAndDropController extends Disposable {\n  constructor(editor) {\n    super();\n    this._editor = editor;\n    this._register(this._editor.onMouseDown(e => this._onEditorMouseDown(e)));\n    this._register(this._editor.onMouseUp(e => this._onEditorMouseUp(e)));\n    this._register(this._editor.onMouseDrag(e => this._onEditorMouseDrag(e)));\n    this._register(this._editor.onMouseDrop(e => this._onEditorMouseDrop(e)));\n    this._register(this._editor.onMouseDropCanceled(() => this._onEditorMouseDropCanceled()));\n    this._register(this._editor.onKeyDown(e => this.onEditorKeyDown(e)));\n    this._register(this._editor.onKeyUp(e => this.onEditorKeyUp(e)));\n    this._register(this._editor.onDidBlurEditorWidget(() => this.onEditorBlur()));\n    this._register(this._editor.onDidBlurEditorText(() => this.onEditorBlur()));\n    this._dndDecorationIds = [];\n    this._mouseDown = false;\n    this._modifierPressed = false;\n    this._dragSelection = null;\n  }\n  onEditorBlur() {\n    this._removeDecoration();\n    this._dragSelection = null;\n    this._mouseDown = false;\n    this._modifierPressed = false;\n  }\n  onEditorKeyDown(e) {\n    if (!this._editor.getOption(27 /* dragAndDrop */) || this._editor.getOption(15 /* columnSelection */)) {\n      return;\n    }\n    if (hasTriggerModifier(e)) {\n      this._modifierPressed = true;\n    }\n    if (this._mouseDown && hasTriggerModifier(e)) {\n      this._editor.updateOptions({\n        mouseStyle: 'copy'\n      });\n    }\n  }\n  onEditorKeyUp(e) {\n    if (!this._editor.getOption(27 /* dragAndDrop */) || this._editor.getOption(15 /* columnSelection */)) {\n      return;\n    }\n    if (hasTriggerModifier(e)) {\n      this._modifierPressed = false;\n    }\n    if (this._mouseDown && e.keyCode === DragAndDropController.TRIGGER_KEY_VALUE) {\n      this._editor.updateOptions({\n        mouseStyle: 'default'\n      });\n    }\n  }\n  _onEditorMouseDown(mouseEvent) {\n    this._mouseDown = true;\n  }\n  _onEditorMouseUp(mouseEvent) {\n    this._mouseDown = false;\n    // Whenever users release the mouse, the drag and drop operation should finish and the cursor should revert to text.\n    this._editor.updateOptions({\n      mouseStyle: 'text'\n    });\n  }\n  _onEditorMouseDrag(mouseEvent) {\n    let target = mouseEvent.target;\n    if (this._dragSelection === null) {\n      const selections = this._editor.getSelections() || [];\n      let possibleSelections = selections.filter(selection => target.position && selection.containsPosition(target.position));\n      if (possibleSelections.length === 1) {\n        this._dragSelection = possibleSelections[0];\n      } else {\n        return;\n      }\n    }\n    if (hasTriggerModifier(mouseEvent.event)) {\n      this._editor.updateOptions({\n        mouseStyle: 'copy'\n      });\n    } else {\n      this._editor.updateOptions({\n        mouseStyle: 'default'\n      });\n    }\n    if (target.position) {\n      if (this._dragSelection.containsPosition(target.position)) {\n        this._removeDecoration();\n      } else {\n        this.showAt(target.position);\n      }\n    }\n  }\n  _onEditorMouseDropCanceled() {\n    this._editor.updateOptions({\n      mouseStyle: 'text'\n    });\n    this._removeDecoration();\n    this._dragSelection = null;\n    this._mouseDown = false;\n  }\n  _onEditorMouseDrop(mouseEvent) {\n    if (mouseEvent.target && (this._hitContent(mouseEvent.target) || this._hitMargin(mouseEvent.target)) && mouseEvent.target.position) {\n      let newCursorPosition = new Position(mouseEvent.target.position.lineNumber, mouseEvent.target.position.column);\n      if (this._dragSelection === null) {\n        let newSelections = null;\n        if (mouseEvent.event.shiftKey) {\n          let primarySelection = this._editor.getSelection();\n          if (primarySelection) {\n            const {\n              selectionStartLineNumber,\n              selectionStartColumn\n            } = primarySelection;\n            newSelections = [new Selection(selectionStartLineNumber, selectionStartColumn, newCursorPosition.lineNumber, newCursorPosition.column)];\n          }\n        } else {\n          newSelections = (this._editor.getSelections() || []).map(selection => {\n            if (selection.containsPosition(newCursorPosition)) {\n              return new Selection(newCursorPosition.lineNumber, newCursorPosition.column, newCursorPosition.lineNumber, newCursorPosition.column);\n            } else {\n              return selection;\n            }\n          });\n        }\n        // Use `mouse` as the source instead of `api` and setting the reason to explicit (to behave like any other mouse operation).\n        this._editor.setSelections(newSelections || [], 'mouse', 3 /* Explicit */);\n      } else if (!this._dragSelection.containsPosition(newCursorPosition) || (hasTriggerModifier(mouseEvent.event) || this._modifierPressed) && (this._dragSelection.getEndPosition().equals(newCursorPosition) || this._dragSelection.getStartPosition().equals(newCursorPosition)) // we allow users to paste content beside the selection\n      ) {\n        this._editor.pushUndoStop();\n        this._editor.executeCommand(DragAndDropController.ID, new DragAndDropCommand(this._dragSelection, newCursorPosition, hasTriggerModifier(mouseEvent.event) || this._modifierPressed));\n        this._editor.pushUndoStop();\n      }\n    }\n    this._editor.updateOptions({\n      mouseStyle: 'text'\n    });\n    this._removeDecoration();\n    this._dragSelection = null;\n    this._mouseDown = false;\n  }\n  showAt(position) {\n    let newDecorations = [{\n      range: new Range(position.lineNumber, position.column, position.lineNumber, position.column),\n      options: DragAndDropController._DECORATION_OPTIONS\n    }];\n    this._dndDecorationIds = this._editor.deltaDecorations(this._dndDecorationIds, newDecorations);\n    this._editor.revealPosition(position, 1 /* Immediate */);\n  }\n\n  _removeDecoration() {\n    this._dndDecorationIds = this._editor.deltaDecorations(this._dndDecorationIds, []);\n  }\n  _hitContent(target) {\n    return target.type === 6 /* CONTENT_TEXT */ || target.type === 7 /* CONTENT_EMPTY */;\n  }\n\n  _hitMargin(target) {\n    return target.type === 2 /* GUTTER_GLYPH_MARGIN */ || target.type === 3 /* GUTTER_LINE_NUMBERS */ || target.type === 4 /* GUTTER_LINE_DECORATIONS */;\n  }\n\n  dispose() {\n    this._removeDecoration();\n    this._dragSelection = null;\n    this._mouseDown = false;\n    this._modifierPressed = false;\n    super.dispose();\n  }\n}\nDragAndDropController.ID = 'editor.contrib.dragAndDrop';\nDragAndDropController.TRIGGER_KEY_VALUE = isMacintosh ? 6 /* Alt */ : 5 /* Ctrl */;\nDragAndDropController._DECORATION_OPTIONS = ModelDecorationOptions.register({\n  className: 'dnd-target'\n});\nregisterEditorContribution(DragAndDropController.ID, DragAndDropController);","map":{"version":3,"names":["Disposable","isMacintosh","registerEditorContribution","Position","Range","Selection","DragAndDropCommand","ModelDecorationOptions","hasTriggerModifier","e","altKey","ctrlKey","DragAndDropController","constructor","editor","_editor","_register","onMouseDown","_onEditorMouseDown","onMouseUp","_onEditorMouseUp","onMouseDrag","_onEditorMouseDrag","onMouseDrop","_onEditorMouseDrop","onMouseDropCanceled","_onEditorMouseDropCanceled","onKeyDown","onEditorKeyDown","onKeyUp","onEditorKeyUp","onDidBlurEditorWidget","onEditorBlur","onDidBlurEditorText","_dndDecorationIds","_mouseDown","_modifierPressed","_dragSelection","_removeDecoration","getOption","updateOptions","mouseStyle","keyCode","TRIGGER_KEY_VALUE","mouseEvent","target","selections","getSelections","possibleSelections","filter","selection","position","containsPosition","length","event","showAt","_hitContent","_hitMargin","newCursorPosition","lineNumber","column","newSelections","shiftKey","primarySelection","getSelection","selectionStartLineNumber","selectionStartColumn","map","setSelections","getEndPosition","equals","getStartPosition","pushUndoStop","executeCommand","ID","newDecorations","range","options","_DECORATION_OPTIONS","deltaDecorations","revealPosition","type","dispose","register","className"],"sources":["C:/Users/Administrator/Desktop/sqllineage-master/sqllineagejs/node_modules/monaco-editor/esm/vs/editor/contrib/dnd/dnd.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport './dnd.css';\r\nimport { Disposable } from '../../../base/common/lifecycle.js';\r\nimport { isMacintosh } from '../../../base/common/platform.js';\r\nimport { registerEditorContribution } from '../../browser/editorExtensions.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { Selection } from '../../common/core/selection.js';\r\nimport { DragAndDropCommand } from './dragAndDropCommand.js';\r\nimport { ModelDecorationOptions } from '../../common/model/textModel.js';\r\nfunction hasTriggerModifier(e) {\r\n    if (isMacintosh) {\r\n        return e.altKey;\r\n    }\r\n    else {\r\n        return e.ctrlKey;\r\n    }\r\n}\r\nexport class DragAndDropController extends Disposable {\r\n    constructor(editor) {\r\n        super();\r\n        this._editor = editor;\r\n        this._register(this._editor.onMouseDown((e) => this._onEditorMouseDown(e)));\r\n        this._register(this._editor.onMouseUp((e) => this._onEditorMouseUp(e)));\r\n        this._register(this._editor.onMouseDrag((e) => this._onEditorMouseDrag(e)));\r\n        this._register(this._editor.onMouseDrop((e) => this._onEditorMouseDrop(e)));\r\n        this._register(this._editor.onMouseDropCanceled(() => this._onEditorMouseDropCanceled()));\r\n        this._register(this._editor.onKeyDown((e) => this.onEditorKeyDown(e)));\r\n        this._register(this._editor.onKeyUp((e) => this.onEditorKeyUp(e)));\r\n        this._register(this._editor.onDidBlurEditorWidget(() => this.onEditorBlur()));\r\n        this._register(this._editor.onDidBlurEditorText(() => this.onEditorBlur()));\r\n        this._dndDecorationIds = [];\r\n        this._mouseDown = false;\r\n        this._modifierPressed = false;\r\n        this._dragSelection = null;\r\n    }\r\n    onEditorBlur() {\r\n        this._removeDecoration();\r\n        this._dragSelection = null;\r\n        this._mouseDown = false;\r\n        this._modifierPressed = false;\r\n    }\r\n    onEditorKeyDown(e) {\r\n        if (!this._editor.getOption(27 /* dragAndDrop */) || this._editor.getOption(15 /* columnSelection */)) {\r\n            return;\r\n        }\r\n        if (hasTriggerModifier(e)) {\r\n            this._modifierPressed = true;\r\n        }\r\n        if (this._mouseDown && hasTriggerModifier(e)) {\r\n            this._editor.updateOptions({\r\n                mouseStyle: 'copy'\r\n            });\r\n        }\r\n    }\r\n    onEditorKeyUp(e) {\r\n        if (!this._editor.getOption(27 /* dragAndDrop */) || this._editor.getOption(15 /* columnSelection */)) {\r\n            return;\r\n        }\r\n        if (hasTriggerModifier(e)) {\r\n            this._modifierPressed = false;\r\n        }\r\n        if (this._mouseDown && e.keyCode === DragAndDropController.TRIGGER_KEY_VALUE) {\r\n            this._editor.updateOptions({\r\n                mouseStyle: 'default'\r\n            });\r\n        }\r\n    }\r\n    _onEditorMouseDown(mouseEvent) {\r\n        this._mouseDown = true;\r\n    }\r\n    _onEditorMouseUp(mouseEvent) {\r\n        this._mouseDown = false;\r\n        // Whenever users release the mouse, the drag and drop operation should finish and the cursor should revert to text.\r\n        this._editor.updateOptions({\r\n            mouseStyle: 'text'\r\n        });\r\n    }\r\n    _onEditorMouseDrag(mouseEvent) {\r\n        let target = mouseEvent.target;\r\n        if (this._dragSelection === null) {\r\n            const selections = this._editor.getSelections() || [];\r\n            let possibleSelections = selections.filter(selection => target.position && selection.containsPosition(target.position));\r\n            if (possibleSelections.length === 1) {\r\n                this._dragSelection = possibleSelections[0];\r\n            }\r\n            else {\r\n                return;\r\n            }\r\n        }\r\n        if (hasTriggerModifier(mouseEvent.event)) {\r\n            this._editor.updateOptions({\r\n                mouseStyle: 'copy'\r\n            });\r\n        }\r\n        else {\r\n            this._editor.updateOptions({\r\n                mouseStyle: 'default'\r\n            });\r\n        }\r\n        if (target.position) {\r\n            if (this._dragSelection.containsPosition(target.position)) {\r\n                this._removeDecoration();\r\n            }\r\n            else {\r\n                this.showAt(target.position);\r\n            }\r\n        }\r\n    }\r\n    _onEditorMouseDropCanceled() {\r\n        this._editor.updateOptions({\r\n            mouseStyle: 'text'\r\n        });\r\n        this._removeDecoration();\r\n        this._dragSelection = null;\r\n        this._mouseDown = false;\r\n    }\r\n    _onEditorMouseDrop(mouseEvent) {\r\n        if (mouseEvent.target && (this._hitContent(mouseEvent.target) || this._hitMargin(mouseEvent.target)) && mouseEvent.target.position) {\r\n            let newCursorPosition = new Position(mouseEvent.target.position.lineNumber, mouseEvent.target.position.column);\r\n            if (this._dragSelection === null) {\r\n                let newSelections = null;\r\n                if (mouseEvent.event.shiftKey) {\r\n                    let primarySelection = this._editor.getSelection();\r\n                    if (primarySelection) {\r\n                        const { selectionStartLineNumber, selectionStartColumn } = primarySelection;\r\n                        newSelections = [new Selection(selectionStartLineNumber, selectionStartColumn, newCursorPosition.lineNumber, newCursorPosition.column)];\r\n                    }\r\n                }\r\n                else {\r\n                    newSelections = (this._editor.getSelections() || []).map(selection => {\r\n                        if (selection.containsPosition(newCursorPosition)) {\r\n                            return new Selection(newCursorPosition.lineNumber, newCursorPosition.column, newCursorPosition.lineNumber, newCursorPosition.column);\r\n                        }\r\n                        else {\r\n                            return selection;\r\n                        }\r\n                    });\r\n                }\r\n                // Use `mouse` as the source instead of `api` and setting the reason to explicit (to behave like any other mouse operation).\r\n                this._editor.setSelections(newSelections || [], 'mouse', 3 /* Explicit */);\r\n            }\r\n            else if (!this._dragSelection.containsPosition(newCursorPosition) ||\r\n                ((hasTriggerModifier(mouseEvent.event) ||\r\n                    this._modifierPressed) && (this._dragSelection.getEndPosition().equals(newCursorPosition) || this._dragSelection.getStartPosition().equals(newCursorPosition)) // we allow users to paste content beside the selection\r\n                )) {\r\n                this._editor.pushUndoStop();\r\n                this._editor.executeCommand(DragAndDropController.ID, new DragAndDropCommand(this._dragSelection, newCursorPosition, hasTriggerModifier(mouseEvent.event) || this._modifierPressed));\r\n                this._editor.pushUndoStop();\r\n            }\r\n        }\r\n        this._editor.updateOptions({\r\n            mouseStyle: 'text'\r\n        });\r\n        this._removeDecoration();\r\n        this._dragSelection = null;\r\n        this._mouseDown = false;\r\n    }\r\n    showAt(position) {\r\n        let newDecorations = [{\r\n                range: new Range(position.lineNumber, position.column, position.lineNumber, position.column),\r\n                options: DragAndDropController._DECORATION_OPTIONS\r\n            }];\r\n        this._dndDecorationIds = this._editor.deltaDecorations(this._dndDecorationIds, newDecorations);\r\n        this._editor.revealPosition(position, 1 /* Immediate */);\r\n    }\r\n    _removeDecoration() {\r\n        this._dndDecorationIds = this._editor.deltaDecorations(this._dndDecorationIds, []);\r\n    }\r\n    _hitContent(target) {\r\n        return target.type === 6 /* CONTENT_TEXT */ ||\r\n            target.type === 7 /* CONTENT_EMPTY */;\r\n    }\r\n    _hitMargin(target) {\r\n        return target.type === 2 /* GUTTER_GLYPH_MARGIN */ ||\r\n            target.type === 3 /* GUTTER_LINE_NUMBERS */ ||\r\n            target.type === 4 /* GUTTER_LINE_DECORATIONS */;\r\n    }\r\n    dispose() {\r\n        this._removeDecoration();\r\n        this._dragSelection = null;\r\n        this._mouseDown = false;\r\n        this._modifierPressed = false;\r\n        super.dispose();\r\n    }\r\n}\r\nDragAndDropController.ID = 'editor.contrib.dragAndDrop';\r\nDragAndDropController.TRIGGER_KEY_VALUE = isMacintosh ? 6 /* Alt */ : 5 /* Ctrl */;\r\nDragAndDropController._DECORATION_OPTIONS = ModelDecorationOptions.register({\r\n    className: 'dnd-target'\r\n});\r\nregisterEditorContribution(DragAndDropController.ID, DragAndDropController);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}