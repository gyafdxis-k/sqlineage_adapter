{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { ViewPart } from '../../view/viewPart.js';\nimport { Position } from '../../../common/core/position.js';\nconst invalidFunc = () => {\n  throw new Error(\"Invalid change accessor\");\n};\nexport class ViewZones extends ViewPart {\n  constructor(context) {\n    super(context);\n    const options = this._context.configuration.options;\n    const layoutInfo = options.get(124 /* layoutInfo */);\n    this._lineHeight = options.get(53 /* lineHeight */);\n    this._contentWidth = layoutInfo.contentWidth;\n    this._contentLeft = layoutInfo.contentLeft;\n    this.domNode = createFastDomNode(document.createElement('div'));\n    this.domNode.setClassName('view-zones');\n    this.domNode.setPosition('absolute');\n    this.domNode.setAttribute('role', 'presentation');\n    this.domNode.setAttribute('aria-hidden', 'true');\n    this.marginDomNode = createFastDomNode(document.createElement('div'));\n    this.marginDomNode.setClassName('margin-view-zones');\n    this.marginDomNode.setPosition('absolute');\n    this.marginDomNode.setAttribute('role', 'presentation');\n    this.marginDomNode.setAttribute('aria-hidden', 'true');\n    this._zones = {};\n  }\n  dispose() {\n    super.dispose();\n    this._zones = {};\n  }\n  // ---- begin view event handlers\n  _recomputeWhitespacesProps() {\n    const whitespaces = this._context.viewLayout.getWhitespaces();\n    const oldWhitespaces = new Map();\n    for (const whitespace of whitespaces) {\n      oldWhitespaces.set(whitespace.id, whitespace);\n    }\n    let hadAChange = false;\n    this._context.model.changeWhitespace(whitespaceAccessor => {\n      const keys = Object.keys(this._zones);\n      for (let i = 0, len = keys.length; i < len; i++) {\n        const id = keys[i];\n        const zone = this._zones[id];\n        const props = this._computeWhitespaceProps(zone.delegate);\n        const oldWhitespace = oldWhitespaces.get(id);\n        if (oldWhitespace && (oldWhitespace.afterLineNumber !== props.afterViewLineNumber || oldWhitespace.height !== props.heightInPx)) {\n          whitespaceAccessor.changeOneWhitespace(id, props.afterViewLineNumber, props.heightInPx);\n          this._safeCallOnComputedHeight(zone.delegate, props.heightInPx);\n          hadAChange = true;\n        }\n      }\n    });\n    return hadAChange;\n  }\n  onConfigurationChanged(e) {\n    const options = this._context.configuration.options;\n    const layoutInfo = options.get(124 /* layoutInfo */);\n    this._lineHeight = options.get(53 /* lineHeight */);\n    this._contentWidth = layoutInfo.contentWidth;\n    this._contentLeft = layoutInfo.contentLeft;\n    if (e.hasChanged(53 /* lineHeight */)) {\n      this._recomputeWhitespacesProps();\n    }\n    return true;\n  }\n  onLineMappingChanged(e) {\n    return this._recomputeWhitespacesProps();\n  }\n  onLinesDeleted(e) {\n    return true;\n  }\n  onScrollChanged(e) {\n    return e.scrollTopChanged || e.scrollWidthChanged;\n  }\n  onZonesChanged(e) {\n    return true;\n  }\n  onLinesInserted(e) {\n    return true;\n  }\n  // ---- end view event handlers\n  _getZoneOrdinal(zone) {\n    if (typeof zone.afterColumn !== 'undefined') {\n      return zone.afterColumn;\n    }\n    return 10000;\n  }\n  _computeWhitespaceProps(zone) {\n    if (zone.afterLineNumber === 0) {\n      return {\n        afterViewLineNumber: 0,\n        heightInPx: this._heightInPixels(zone),\n        minWidthInPx: this._minWidthInPixels(zone)\n      };\n    }\n    let zoneAfterModelPosition;\n    if (typeof zone.afterColumn !== 'undefined') {\n      zoneAfterModelPosition = this._context.model.validateModelPosition({\n        lineNumber: zone.afterLineNumber,\n        column: zone.afterColumn\n      });\n    } else {\n      const validAfterLineNumber = this._context.model.validateModelPosition({\n        lineNumber: zone.afterLineNumber,\n        column: 1\n      }).lineNumber;\n      zoneAfterModelPosition = new Position(validAfterLineNumber, this._context.model.getModelLineMaxColumn(validAfterLineNumber));\n    }\n    let zoneBeforeModelPosition;\n    if (zoneAfterModelPosition.column === this._context.model.getModelLineMaxColumn(zoneAfterModelPosition.lineNumber)) {\n      zoneBeforeModelPosition = this._context.model.validateModelPosition({\n        lineNumber: zoneAfterModelPosition.lineNumber + 1,\n        column: 1\n      });\n    } else {\n      zoneBeforeModelPosition = this._context.model.validateModelPosition({\n        lineNumber: zoneAfterModelPosition.lineNumber,\n        column: zoneAfterModelPosition.column + 1\n      });\n    }\n    const viewPosition = this._context.model.coordinatesConverter.convertModelPositionToViewPosition(zoneAfterModelPosition);\n    const isVisible = this._context.model.coordinatesConverter.modelPositionIsVisible(zoneBeforeModelPosition);\n    return {\n      afterViewLineNumber: viewPosition.lineNumber,\n      heightInPx: isVisible ? this._heightInPixels(zone) : 0,\n      minWidthInPx: this._minWidthInPixels(zone)\n    };\n  }\n  changeViewZones(callback) {\n    let zonesHaveChanged = false;\n    this._context.model.changeWhitespace(whitespaceAccessor => {\n      const changeAccessor = {\n        addZone: zone => {\n          zonesHaveChanged = true;\n          return this._addZone(whitespaceAccessor, zone);\n        },\n        removeZone: id => {\n          if (!id) {\n            return;\n          }\n          zonesHaveChanged = this._removeZone(whitespaceAccessor, id) || zonesHaveChanged;\n        },\n        layoutZone: id => {\n          if (!id) {\n            return;\n          }\n          zonesHaveChanged = this._layoutZone(whitespaceAccessor, id) || zonesHaveChanged;\n        }\n      };\n      safeInvoke1Arg(callback, changeAccessor);\n      // Invalidate changeAccessor\n      changeAccessor.addZone = invalidFunc;\n      changeAccessor.removeZone = invalidFunc;\n      changeAccessor.layoutZone = invalidFunc;\n    });\n    return zonesHaveChanged;\n  }\n  _addZone(whitespaceAccessor, zone) {\n    const props = this._computeWhitespaceProps(zone);\n    const whitespaceId = whitespaceAccessor.insertWhitespace(props.afterViewLineNumber, this._getZoneOrdinal(zone), props.heightInPx, props.minWidthInPx);\n    const myZone = {\n      whitespaceId: whitespaceId,\n      delegate: zone,\n      isVisible: false,\n      domNode: createFastDomNode(zone.domNode),\n      marginDomNode: zone.marginDomNode ? createFastDomNode(zone.marginDomNode) : null\n    };\n    this._safeCallOnComputedHeight(myZone.delegate, props.heightInPx);\n    myZone.domNode.setPosition('absolute');\n    myZone.domNode.domNode.style.width = '100%';\n    myZone.domNode.setDisplay('none');\n    myZone.domNode.setAttribute('monaco-view-zone', myZone.whitespaceId);\n    this.domNode.appendChild(myZone.domNode);\n    if (myZone.marginDomNode) {\n      myZone.marginDomNode.setPosition('absolute');\n      myZone.marginDomNode.domNode.style.width = '100%';\n      myZone.marginDomNode.setDisplay('none');\n      myZone.marginDomNode.setAttribute('monaco-view-zone', myZone.whitespaceId);\n      this.marginDomNode.appendChild(myZone.marginDomNode);\n    }\n    this._zones[myZone.whitespaceId] = myZone;\n    this.setShouldRender();\n    return myZone.whitespaceId;\n  }\n  _removeZone(whitespaceAccessor, id) {\n    if (this._zones.hasOwnProperty(id)) {\n      const zone = this._zones[id];\n      delete this._zones[id];\n      whitespaceAccessor.removeWhitespace(zone.whitespaceId);\n      zone.domNode.removeAttribute('monaco-visible-view-zone');\n      zone.domNode.removeAttribute('monaco-view-zone');\n      zone.domNode.domNode.parentNode.removeChild(zone.domNode.domNode);\n      if (zone.marginDomNode) {\n        zone.marginDomNode.removeAttribute('monaco-visible-view-zone');\n        zone.marginDomNode.removeAttribute('monaco-view-zone');\n        zone.marginDomNode.domNode.parentNode.removeChild(zone.marginDomNode.domNode);\n      }\n      this.setShouldRender();\n      return true;\n    }\n    return false;\n  }\n  _layoutZone(whitespaceAccessor, id) {\n    if (this._zones.hasOwnProperty(id)) {\n      const zone = this._zones[id];\n      const props = this._computeWhitespaceProps(zone.delegate);\n      // const newOrdinal = this._getZoneOrdinal(zone.delegate);\n      whitespaceAccessor.changeOneWhitespace(zone.whitespaceId, props.afterViewLineNumber, props.heightInPx);\n      // TODO@Alex: change `newOrdinal` too\n      this._safeCallOnComputedHeight(zone.delegate, props.heightInPx);\n      this.setShouldRender();\n      return true;\n    }\n    return false;\n  }\n  shouldSuppressMouseDownOnViewZone(id) {\n    if (this._zones.hasOwnProperty(id)) {\n      const zone = this._zones[id];\n      return Boolean(zone.delegate.suppressMouseDown);\n    }\n    return false;\n  }\n  _heightInPixels(zone) {\n    if (typeof zone.heightInPx === 'number') {\n      return zone.heightInPx;\n    }\n    if (typeof zone.heightInLines === 'number') {\n      return this._lineHeight * zone.heightInLines;\n    }\n    return this._lineHeight;\n  }\n  _minWidthInPixels(zone) {\n    if (typeof zone.minWidthInPx === 'number') {\n      return zone.minWidthInPx;\n    }\n    return 0;\n  }\n  _safeCallOnComputedHeight(zone, height) {\n    if (typeof zone.onComputedHeight === 'function') {\n      try {\n        zone.onComputedHeight(height);\n      } catch (e) {\n        onUnexpectedError(e);\n      }\n    }\n  }\n  _safeCallOnDomNodeTop(zone, top) {\n    if (typeof zone.onDomNodeTop === 'function') {\n      try {\n        zone.onDomNodeTop(top);\n      } catch (e) {\n        onUnexpectedError(e);\n      }\n    }\n  }\n  prepareRender(ctx) {\n    // Nothing to read\n  }\n  render(ctx) {\n    const visibleWhitespaces = ctx.viewportData.whitespaceViewportData;\n    const visibleZones = {};\n    let hasVisibleZone = false;\n    for (let i = 0, len = visibleWhitespaces.length; i < len; i++) {\n      visibleZones[visibleWhitespaces[i].id] = visibleWhitespaces[i];\n      hasVisibleZone = true;\n    }\n    const keys = Object.keys(this._zones);\n    for (let i = 0, len = keys.length; i < len; i++) {\n      const id = keys[i];\n      const zone = this._zones[id];\n      let newTop = 0;\n      let newHeight = 0;\n      let newDisplay = 'none';\n      if (visibleZones.hasOwnProperty(id)) {\n        newTop = visibleZones[id].verticalOffset - ctx.bigNumbersDelta;\n        newHeight = visibleZones[id].height;\n        newDisplay = 'block';\n        // zone is visible\n        if (!zone.isVisible) {\n          zone.domNode.setAttribute('monaco-visible-view-zone', 'true');\n          zone.isVisible = true;\n        }\n        this._safeCallOnDomNodeTop(zone.delegate, ctx.getScrolledTopFromAbsoluteTop(visibleZones[id].verticalOffset));\n      } else {\n        if (zone.isVisible) {\n          zone.domNode.removeAttribute('monaco-visible-view-zone');\n          zone.isVisible = false;\n        }\n        this._safeCallOnDomNodeTop(zone.delegate, ctx.getScrolledTopFromAbsoluteTop(-1000000));\n      }\n      zone.domNode.setTop(newTop);\n      zone.domNode.setHeight(newHeight);\n      zone.domNode.setDisplay(newDisplay);\n      if (zone.marginDomNode) {\n        zone.marginDomNode.setTop(newTop);\n        zone.marginDomNode.setHeight(newHeight);\n        zone.marginDomNode.setDisplay(newDisplay);\n      }\n    }\n    if (hasVisibleZone) {\n      this.domNode.setWidth(Math.max(ctx.scrollWidth, this._contentWidth));\n      this.marginDomNode.setWidth(this._contentLeft);\n    }\n  }\n}\nfunction safeInvoke1Arg(func, arg1) {\n  try {\n    return func(arg1);\n  } catch (e) {\n    onUnexpectedError(e);\n  }\n}","map":{"version":3,"names":["createFastDomNode","onUnexpectedError","ViewPart","Position","invalidFunc","Error","ViewZones","constructor","context","options","_context","configuration","layoutInfo","get","_lineHeight","_contentWidth","contentWidth","_contentLeft","contentLeft","domNode","document","createElement","setClassName","setPosition","setAttribute","marginDomNode","_zones","dispose","_recomputeWhitespacesProps","whitespaces","viewLayout","getWhitespaces","oldWhitespaces","Map","whitespace","set","id","hadAChange","model","changeWhitespace","whitespaceAccessor","keys","Object","i","len","length","zone","props","_computeWhitespaceProps","delegate","oldWhitespace","afterLineNumber","afterViewLineNumber","height","heightInPx","changeOneWhitespace","_safeCallOnComputedHeight","onConfigurationChanged","e","hasChanged","onLineMappingChanged","onLinesDeleted","onScrollChanged","scrollTopChanged","scrollWidthChanged","onZonesChanged","onLinesInserted","_getZoneOrdinal","afterColumn","_heightInPixels","minWidthInPx","_minWidthInPixels","zoneAfterModelPosition","validateModelPosition","lineNumber","column","validAfterLineNumber","getModelLineMaxColumn","zoneBeforeModelPosition","viewPosition","coordinatesConverter","convertModelPositionToViewPosition","isVisible","modelPositionIsVisible","changeViewZones","callback","zonesHaveChanged","changeAccessor","addZone","_addZone","removeZone","_removeZone","layoutZone","_layoutZone","safeInvoke1Arg","whitespaceId","insertWhitespace","myZone","style","width","setDisplay","appendChild","setShouldRender","hasOwnProperty","removeWhitespace","removeAttribute","parentNode","removeChild","shouldSuppressMouseDownOnViewZone","Boolean","suppressMouseDown","heightInLines","onComputedHeight","_safeCallOnDomNodeTop","top","onDomNodeTop","prepareRender","ctx","render","visibleWhitespaces","viewportData","whitespaceViewportData","visibleZones","hasVisibleZone","newTop","newHeight","newDisplay","verticalOffset","bigNumbersDelta","getScrolledTopFromAbsoluteTop","setTop","setHeight","setWidth","Math","max","scrollWidth","func","arg1"],"sources":["C:/Users/Administrator/Desktop/sqllineage-master/sqllineagejs/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/viewZones/viewZones.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\r\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\r\nimport { ViewPart } from '../../view/viewPart.js';\r\nimport { Position } from '../../../common/core/position.js';\r\nconst invalidFunc = () => { throw new Error(`Invalid change accessor`); };\r\nexport class ViewZones extends ViewPart {\r\n    constructor(context) {\r\n        super(context);\r\n        const options = this._context.configuration.options;\r\n        const layoutInfo = options.get(124 /* layoutInfo */);\r\n        this._lineHeight = options.get(53 /* lineHeight */);\r\n        this._contentWidth = layoutInfo.contentWidth;\r\n        this._contentLeft = layoutInfo.contentLeft;\r\n        this.domNode = createFastDomNode(document.createElement('div'));\r\n        this.domNode.setClassName('view-zones');\r\n        this.domNode.setPosition('absolute');\r\n        this.domNode.setAttribute('role', 'presentation');\r\n        this.domNode.setAttribute('aria-hidden', 'true');\r\n        this.marginDomNode = createFastDomNode(document.createElement('div'));\r\n        this.marginDomNode.setClassName('margin-view-zones');\r\n        this.marginDomNode.setPosition('absolute');\r\n        this.marginDomNode.setAttribute('role', 'presentation');\r\n        this.marginDomNode.setAttribute('aria-hidden', 'true');\r\n        this._zones = {};\r\n    }\r\n    dispose() {\r\n        super.dispose();\r\n        this._zones = {};\r\n    }\r\n    // ---- begin view event handlers\r\n    _recomputeWhitespacesProps() {\r\n        const whitespaces = this._context.viewLayout.getWhitespaces();\r\n        const oldWhitespaces = new Map();\r\n        for (const whitespace of whitespaces) {\r\n            oldWhitespaces.set(whitespace.id, whitespace);\r\n        }\r\n        let hadAChange = false;\r\n        this._context.model.changeWhitespace((whitespaceAccessor) => {\r\n            const keys = Object.keys(this._zones);\r\n            for (let i = 0, len = keys.length; i < len; i++) {\r\n                const id = keys[i];\r\n                const zone = this._zones[id];\r\n                const props = this._computeWhitespaceProps(zone.delegate);\r\n                const oldWhitespace = oldWhitespaces.get(id);\r\n                if (oldWhitespace && (oldWhitespace.afterLineNumber !== props.afterViewLineNumber || oldWhitespace.height !== props.heightInPx)) {\r\n                    whitespaceAccessor.changeOneWhitespace(id, props.afterViewLineNumber, props.heightInPx);\r\n                    this._safeCallOnComputedHeight(zone.delegate, props.heightInPx);\r\n                    hadAChange = true;\r\n                }\r\n            }\r\n        });\r\n        return hadAChange;\r\n    }\r\n    onConfigurationChanged(e) {\r\n        const options = this._context.configuration.options;\r\n        const layoutInfo = options.get(124 /* layoutInfo */);\r\n        this._lineHeight = options.get(53 /* lineHeight */);\r\n        this._contentWidth = layoutInfo.contentWidth;\r\n        this._contentLeft = layoutInfo.contentLeft;\r\n        if (e.hasChanged(53 /* lineHeight */)) {\r\n            this._recomputeWhitespacesProps();\r\n        }\r\n        return true;\r\n    }\r\n    onLineMappingChanged(e) {\r\n        return this._recomputeWhitespacesProps();\r\n    }\r\n    onLinesDeleted(e) {\r\n        return true;\r\n    }\r\n    onScrollChanged(e) {\r\n        return e.scrollTopChanged || e.scrollWidthChanged;\r\n    }\r\n    onZonesChanged(e) {\r\n        return true;\r\n    }\r\n    onLinesInserted(e) {\r\n        return true;\r\n    }\r\n    // ---- end view event handlers\r\n    _getZoneOrdinal(zone) {\r\n        if (typeof zone.afterColumn !== 'undefined') {\r\n            return zone.afterColumn;\r\n        }\r\n        return 10000;\r\n    }\r\n    _computeWhitespaceProps(zone) {\r\n        if (zone.afterLineNumber === 0) {\r\n            return {\r\n                afterViewLineNumber: 0,\r\n                heightInPx: this._heightInPixels(zone),\r\n                minWidthInPx: this._minWidthInPixels(zone)\r\n            };\r\n        }\r\n        let zoneAfterModelPosition;\r\n        if (typeof zone.afterColumn !== 'undefined') {\r\n            zoneAfterModelPosition = this._context.model.validateModelPosition({\r\n                lineNumber: zone.afterLineNumber,\r\n                column: zone.afterColumn\r\n            });\r\n        }\r\n        else {\r\n            const validAfterLineNumber = this._context.model.validateModelPosition({\r\n                lineNumber: zone.afterLineNumber,\r\n                column: 1\r\n            }).lineNumber;\r\n            zoneAfterModelPosition = new Position(validAfterLineNumber, this._context.model.getModelLineMaxColumn(validAfterLineNumber));\r\n        }\r\n        let zoneBeforeModelPosition;\r\n        if (zoneAfterModelPosition.column === this._context.model.getModelLineMaxColumn(zoneAfterModelPosition.lineNumber)) {\r\n            zoneBeforeModelPosition = this._context.model.validateModelPosition({\r\n                lineNumber: zoneAfterModelPosition.lineNumber + 1,\r\n                column: 1\r\n            });\r\n        }\r\n        else {\r\n            zoneBeforeModelPosition = this._context.model.validateModelPosition({\r\n                lineNumber: zoneAfterModelPosition.lineNumber,\r\n                column: zoneAfterModelPosition.column + 1\r\n            });\r\n        }\r\n        const viewPosition = this._context.model.coordinatesConverter.convertModelPositionToViewPosition(zoneAfterModelPosition);\r\n        const isVisible = this._context.model.coordinatesConverter.modelPositionIsVisible(zoneBeforeModelPosition);\r\n        return {\r\n            afterViewLineNumber: viewPosition.lineNumber,\r\n            heightInPx: (isVisible ? this._heightInPixels(zone) : 0),\r\n            minWidthInPx: this._minWidthInPixels(zone)\r\n        };\r\n    }\r\n    changeViewZones(callback) {\r\n        let zonesHaveChanged = false;\r\n        this._context.model.changeWhitespace((whitespaceAccessor) => {\r\n            const changeAccessor = {\r\n                addZone: (zone) => {\r\n                    zonesHaveChanged = true;\r\n                    return this._addZone(whitespaceAccessor, zone);\r\n                },\r\n                removeZone: (id) => {\r\n                    if (!id) {\r\n                        return;\r\n                    }\r\n                    zonesHaveChanged = this._removeZone(whitespaceAccessor, id) || zonesHaveChanged;\r\n                },\r\n                layoutZone: (id) => {\r\n                    if (!id) {\r\n                        return;\r\n                    }\r\n                    zonesHaveChanged = this._layoutZone(whitespaceAccessor, id) || zonesHaveChanged;\r\n                }\r\n            };\r\n            safeInvoke1Arg(callback, changeAccessor);\r\n            // Invalidate changeAccessor\r\n            changeAccessor.addZone = invalidFunc;\r\n            changeAccessor.removeZone = invalidFunc;\r\n            changeAccessor.layoutZone = invalidFunc;\r\n        });\r\n        return zonesHaveChanged;\r\n    }\r\n    _addZone(whitespaceAccessor, zone) {\r\n        const props = this._computeWhitespaceProps(zone);\r\n        const whitespaceId = whitespaceAccessor.insertWhitespace(props.afterViewLineNumber, this._getZoneOrdinal(zone), props.heightInPx, props.minWidthInPx);\r\n        const myZone = {\r\n            whitespaceId: whitespaceId,\r\n            delegate: zone,\r\n            isVisible: false,\r\n            domNode: createFastDomNode(zone.domNode),\r\n            marginDomNode: zone.marginDomNode ? createFastDomNode(zone.marginDomNode) : null\r\n        };\r\n        this._safeCallOnComputedHeight(myZone.delegate, props.heightInPx);\r\n        myZone.domNode.setPosition('absolute');\r\n        myZone.domNode.domNode.style.width = '100%';\r\n        myZone.domNode.setDisplay('none');\r\n        myZone.domNode.setAttribute('monaco-view-zone', myZone.whitespaceId);\r\n        this.domNode.appendChild(myZone.domNode);\r\n        if (myZone.marginDomNode) {\r\n            myZone.marginDomNode.setPosition('absolute');\r\n            myZone.marginDomNode.domNode.style.width = '100%';\r\n            myZone.marginDomNode.setDisplay('none');\r\n            myZone.marginDomNode.setAttribute('monaco-view-zone', myZone.whitespaceId);\r\n            this.marginDomNode.appendChild(myZone.marginDomNode);\r\n        }\r\n        this._zones[myZone.whitespaceId] = myZone;\r\n        this.setShouldRender();\r\n        return myZone.whitespaceId;\r\n    }\r\n    _removeZone(whitespaceAccessor, id) {\r\n        if (this._zones.hasOwnProperty(id)) {\r\n            const zone = this._zones[id];\r\n            delete this._zones[id];\r\n            whitespaceAccessor.removeWhitespace(zone.whitespaceId);\r\n            zone.domNode.removeAttribute('monaco-visible-view-zone');\r\n            zone.domNode.removeAttribute('monaco-view-zone');\r\n            zone.domNode.domNode.parentNode.removeChild(zone.domNode.domNode);\r\n            if (zone.marginDomNode) {\r\n                zone.marginDomNode.removeAttribute('monaco-visible-view-zone');\r\n                zone.marginDomNode.removeAttribute('monaco-view-zone');\r\n                zone.marginDomNode.domNode.parentNode.removeChild(zone.marginDomNode.domNode);\r\n            }\r\n            this.setShouldRender();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    _layoutZone(whitespaceAccessor, id) {\r\n        if (this._zones.hasOwnProperty(id)) {\r\n            const zone = this._zones[id];\r\n            const props = this._computeWhitespaceProps(zone.delegate);\r\n            // const newOrdinal = this._getZoneOrdinal(zone.delegate);\r\n            whitespaceAccessor.changeOneWhitespace(zone.whitespaceId, props.afterViewLineNumber, props.heightInPx);\r\n            // TODO@Alex: change `newOrdinal` too\r\n            this._safeCallOnComputedHeight(zone.delegate, props.heightInPx);\r\n            this.setShouldRender();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    shouldSuppressMouseDownOnViewZone(id) {\r\n        if (this._zones.hasOwnProperty(id)) {\r\n            const zone = this._zones[id];\r\n            return Boolean(zone.delegate.suppressMouseDown);\r\n        }\r\n        return false;\r\n    }\r\n    _heightInPixels(zone) {\r\n        if (typeof zone.heightInPx === 'number') {\r\n            return zone.heightInPx;\r\n        }\r\n        if (typeof zone.heightInLines === 'number') {\r\n            return this._lineHeight * zone.heightInLines;\r\n        }\r\n        return this._lineHeight;\r\n    }\r\n    _minWidthInPixels(zone) {\r\n        if (typeof zone.minWidthInPx === 'number') {\r\n            return zone.minWidthInPx;\r\n        }\r\n        return 0;\r\n    }\r\n    _safeCallOnComputedHeight(zone, height) {\r\n        if (typeof zone.onComputedHeight === 'function') {\r\n            try {\r\n                zone.onComputedHeight(height);\r\n            }\r\n            catch (e) {\r\n                onUnexpectedError(e);\r\n            }\r\n        }\r\n    }\r\n    _safeCallOnDomNodeTop(zone, top) {\r\n        if (typeof zone.onDomNodeTop === 'function') {\r\n            try {\r\n                zone.onDomNodeTop(top);\r\n            }\r\n            catch (e) {\r\n                onUnexpectedError(e);\r\n            }\r\n        }\r\n    }\r\n    prepareRender(ctx) {\r\n        // Nothing to read\r\n    }\r\n    render(ctx) {\r\n        const visibleWhitespaces = ctx.viewportData.whitespaceViewportData;\r\n        const visibleZones = {};\r\n        let hasVisibleZone = false;\r\n        for (let i = 0, len = visibleWhitespaces.length; i < len; i++) {\r\n            visibleZones[visibleWhitespaces[i].id] = visibleWhitespaces[i];\r\n            hasVisibleZone = true;\r\n        }\r\n        const keys = Object.keys(this._zones);\r\n        for (let i = 0, len = keys.length; i < len; i++) {\r\n            const id = keys[i];\r\n            const zone = this._zones[id];\r\n            let newTop = 0;\r\n            let newHeight = 0;\r\n            let newDisplay = 'none';\r\n            if (visibleZones.hasOwnProperty(id)) {\r\n                newTop = visibleZones[id].verticalOffset - ctx.bigNumbersDelta;\r\n                newHeight = visibleZones[id].height;\r\n                newDisplay = 'block';\r\n                // zone is visible\r\n                if (!zone.isVisible) {\r\n                    zone.domNode.setAttribute('monaco-visible-view-zone', 'true');\r\n                    zone.isVisible = true;\r\n                }\r\n                this._safeCallOnDomNodeTop(zone.delegate, ctx.getScrolledTopFromAbsoluteTop(visibleZones[id].verticalOffset));\r\n            }\r\n            else {\r\n                if (zone.isVisible) {\r\n                    zone.domNode.removeAttribute('monaco-visible-view-zone');\r\n                    zone.isVisible = false;\r\n                }\r\n                this._safeCallOnDomNodeTop(zone.delegate, ctx.getScrolledTopFromAbsoluteTop(-1000000));\r\n            }\r\n            zone.domNode.setTop(newTop);\r\n            zone.domNode.setHeight(newHeight);\r\n            zone.domNode.setDisplay(newDisplay);\r\n            if (zone.marginDomNode) {\r\n                zone.marginDomNode.setTop(newTop);\r\n                zone.marginDomNode.setHeight(newHeight);\r\n                zone.marginDomNode.setDisplay(newDisplay);\r\n            }\r\n        }\r\n        if (hasVisibleZone) {\r\n            this.domNode.setWidth(Math.max(ctx.scrollWidth, this._contentWidth));\r\n            this.marginDomNode.setWidth(this._contentLeft);\r\n        }\r\n    }\r\n}\r\nfunction safeInvoke1Arg(func, arg1) {\r\n    try {\r\n        return func(arg1);\r\n    }\r\n    catch (e) {\r\n        onUnexpectedError(e);\r\n    }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}