{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport { createCancelablePromise, Delayer } from '../../../base/common/async.js';\nimport { onUnexpectedError } from '../../../base/common/errors.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable, MutableDisposable } from '../../../base/common/lifecycle.js';\nimport { CharacterSet } from '../../common/core/characterClassifier.js';\nimport * as modes from '../../common/modes.js';\nimport { provideSignatureHelp } from './provideSignatureHelp.js';\nvar ParameterHintState;\n(function (ParameterHintState) {\n  ParameterHintState.Default = {\n    type: 0 /* Default */\n  };\n  class Pending {\n    constructor(request, previouslyActiveHints) {\n      this.request = request;\n      this.previouslyActiveHints = previouslyActiveHints;\n      this.type = 2 /* Pending */;\n    }\n  }\n\n  ParameterHintState.Pending = Pending;\n  class Active {\n    constructor(hints) {\n      this.hints = hints;\n      this.type = 1 /* Active */;\n    }\n  }\n\n  ParameterHintState.Active = Active;\n})(ParameterHintState || (ParameterHintState = {}));\nexport class ParameterHintsModel extends Disposable {\n  constructor(editor) {\n    let delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ParameterHintsModel.DEFAULT_DELAY;\n    super();\n    this._onChangedHints = this._register(new Emitter());\n    this.onChangedHints = this._onChangedHints.event;\n    this.triggerOnType = false;\n    this._state = ParameterHintState.Default;\n    this._pendingTriggers = [];\n    this._lastSignatureHelpResult = this._register(new MutableDisposable());\n    this.triggerChars = new CharacterSet();\n    this.retriggerChars = new CharacterSet();\n    this.triggerId = 0;\n    this.editor = editor;\n    this.throttledDelayer = new Delayer(delay);\n    this._register(this.editor.onDidChangeConfiguration(() => this.onEditorConfigurationChange()));\n    this._register(this.editor.onDidChangeModel(e => this.onModelChanged()));\n    this._register(this.editor.onDidChangeModelLanguage(_ => this.onModelChanged()));\n    this._register(this.editor.onDidChangeCursorSelection(e => this.onCursorChange(e)));\n    this._register(this.editor.onDidChangeModelContent(e => this.onModelContentChange()));\n    this._register(modes.SignatureHelpProviderRegistry.onDidChange(this.onModelChanged, this));\n    this._register(this.editor.onDidType(text => this.onDidType(text)));\n    this.onEditorConfigurationChange();\n    this.onModelChanged();\n  }\n  get state() {\n    return this._state;\n  }\n  set state(value) {\n    if (this._state.type === 2 /* Pending */) {\n      this._state.request.cancel();\n    }\n    this._state = value;\n  }\n  cancel() {\n    let silent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    this.state = ParameterHintState.Default;\n    this.throttledDelayer.cancel();\n    if (!silent) {\n      this._onChangedHints.fire(undefined);\n    }\n  }\n  trigger(context, delay) {\n    const model = this.editor.getModel();\n    if (!model || !modes.SignatureHelpProviderRegistry.has(model)) {\n      return;\n    }\n    const triggerId = ++this.triggerId;\n    this._pendingTriggers.push(context);\n    this.throttledDelayer.trigger(() => {\n      return this.doTrigger(triggerId);\n    }, delay).catch(onUnexpectedError);\n  }\n  next() {\n    if (this.state.type !== 1 /* Active */) {\n      return;\n    }\n    const length = this.state.hints.signatures.length;\n    const activeSignature = this.state.hints.activeSignature;\n    const last = activeSignature % length === length - 1;\n    const cycle = this.editor.getOption(70 /* parameterHints */).cycle;\n    // If there is only one signature, or we're on last signature of list\n    if ((length < 2 || last) && !cycle) {\n      this.cancel();\n      return;\n    }\n    this.updateActiveSignature(last && cycle ? 0 : activeSignature + 1);\n  }\n  previous() {\n    if (this.state.type !== 1 /* Active */) {\n      return;\n    }\n    const length = this.state.hints.signatures.length;\n    const activeSignature = this.state.hints.activeSignature;\n    const first = activeSignature === 0;\n    const cycle = this.editor.getOption(70 /* parameterHints */).cycle;\n    // If there is only one signature, or we're on first signature of list\n    if ((length < 2 || first) && !cycle) {\n      this.cancel();\n      return;\n    }\n    this.updateActiveSignature(first && cycle ? length - 1 : activeSignature - 1);\n  }\n  updateActiveSignature(activeSignature) {\n    if (this.state.type !== 1 /* Active */) {\n      return;\n    }\n    this.state = new ParameterHintState.Active(Object.assign(Object.assign({}, this.state.hints), {\n      activeSignature\n    }));\n    this._onChangedHints.fire(this.state.hints);\n  }\n  doTrigger(triggerId) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const isRetrigger = this.state.type === 1 /* Active */ || this.state.type === 2 /* Pending */;\n      const activeSignatureHelp = this.getLastActiveHints();\n      this.cancel(true);\n      if (this._pendingTriggers.length === 0) {\n        return false;\n      }\n      const context = this._pendingTriggers.reduce(mergeTriggerContexts);\n      this._pendingTriggers = [];\n      const triggerContext = {\n        triggerKind: context.triggerKind,\n        triggerCharacter: context.triggerCharacter,\n        isRetrigger: isRetrigger,\n        activeSignatureHelp: activeSignatureHelp\n      };\n      if (!this.editor.hasModel()) {\n        return false;\n      }\n      const model = this.editor.getModel();\n      const position = this.editor.getPosition();\n      this.state = new ParameterHintState.Pending(createCancelablePromise(token => provideSignatureHelp(model, position, triggerContext, token)), activeSignatureHelp);\n      try {\n        const result = yield this.state.request;\n        // Check that we are still resolving the correct signature help\n        if (triggerId !== this.triggerId) {\n          result === null || result === void 0 ? void 0 : result.dispose();\n          return false;\n        }\n        if (!result || !result.value.signatures || result.value.signatures.length === 0) {\n          result === null || result === void 0 ? void 0 : result.dispose();\n          this._lastSignatureHelpResult.clear();\n          this.cancel();\n          return false;\n        } else {\n          this.state = new ParameterHintState.Active(result.value);\n          this._lastSignatureHelpResult.value = result;\n          this._onChangedHints.fire(this.state.hints);\n          return true;\n        }\n      } catch (error) {\n        if (triggerId === this.triggerId) {\n          this.state = ParameterHintState.Default;\n        }\n        onUnexpectedError(error);\n        return false;\n      }\n    });\n  }\n  getLastActiveHints() {\n    switch (this.state.type) {\n      case 1 /* Active */:\n        return this.state.hints;\n      case 2 /* Pending */:\n        return this.state.previouslyActiveHints;\n      default:\n        return undefined;\n    }\n  }\n  get isTriggered() {\n    return this.state.type === 1 /* Active */ || this.state.type === 2 /* Pending */ || this.throttledDelayer.isTriggered();\n  }\n  onModelChanged() {\n    this.cancel();\n    // Update trigger characters\n    this.triggerChars = new CharacterSet();\n    this.retriggerChars = new CharacterSet();\n    const model = this.editor.getModel();\n    if (!model) {\n      return;\n    }\n    for (const support of modes.SignatureHelpProviderRegistry.ordered(model)) {\n      for (const ch of support.signatureHelpTriggerCharacters || []) {\n        this.triggerChars.add(ch.charCodeAt(0));\n        // All trigger characters are also considered retrigger characters\n        this.retriggerChars.add(ch.charCodeAt(0));\n      }\n      for (const ch of support.signatureHelpRetriggerCharacters || []) {\n        this.retriggerChars.add(ch.charCodeAt(0));\n      }\n    }\n  }\n  onDidType(text) {\n    if (!this.triggerOnType) {\n      return;\n    }\n    const lastCharIndex = text.length - 1;\n    const triggerCharCode = text.charCodeAt(lastCharIndex);\n    if (this.triggerChars.has(triggerCharCode) || this.isTriggered && this.retriggerChars.has(triggerCharCode)) {\n      this.trigger({\n        triggerKind: modes.SignatureHelpTriggerKind.TriggerCharacter,\n        triggerCharacter: text.charAt(lastCharIndex)\n      });\n    }\n  }\n  onCursorChange(e) {\n    if (e.source === 'mouse') {\n      this.cancel();\n    } else if (this.isTriggered) {\n      this.trigger({\n        triggerKind: modes.SignatureHelpTriggerKind.ContentChange\n      });\n    }\n  }\n  onModelContentChange() {\n    if (this.isTriggered) {\n      this.trigger({\n        triggerKind: modes.SignatureHelpTriggerKind.ContentChange\n      });\n    }\n  }\n  onEditorConfigurationChange() {\n    this.triggerOnType = this.editor.getOption(70 /* parameterHints */).enabled;\n    if (!this.triggerOnType) {\n      this.cancel();\n    }\n  }\n  dispose() {\n    this.cancel(true);\n    super.dispose();\n  }\n}\nParameterHintsModel.DEFAULT_DELAY = 120; // ms\nfunction mergeTriggerContexts(previous, current) {\n  switch (current.triggerKind) {\n    case modes.SignatureHelpTriggerKind.Invoke:\n      // Invoke overrides previous triggers.\n      return current;\n    case modes.SignatureHelpTriggerKind.ContentChange:\n      // Ignore content changes triggers\n      return previous;\n    case modes.SignatureHelpTriggerKind.TriggerCharacter:\n    default:\n      return current;\n  }\n}","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","createCancelablePromise","Delayer","onUnexpectedError","Emitter","Disposable","MutableDisposable","CharacterSet","modes","provideSignatureHelp","ParameterHintState","Default","type","Pending","constructor","request","previouslyActiveHints","Active","hints","ParameterHintsModel","editor","delay","arguments","length","undefined","DEFAULT_DELAY","_onChangedHints","_register","onChangedHints","event","triggerOnType","_state","_pendingTriggers","_lastSignatureHelpResult","triggerChars","retriggerChars","triggerId","throttledDelayer","onDidChangeConfiguration","onEditorConfigurationChange","onDidChangeModel","onModelChanged","onDidChangeModelLanguage","_","onDidChangeCursorSelection","onCursorChange","onDidChangeModelContent","onModelContentChange","SignatureHelpProviderRegistry","onDidChange","onDidType","text","state","cancel","silent","fire","trigger","context","model","getModel","has","push","doTrigger","catch","signatures","activeSignature","last","cycle","getOption","updateActiveSignature","previous","first","Object","assign","isRetrigger","activeSignatureHelp","getLastActiveHints","reduce","mergeTriggerContexts","triggerContext","triggerKind","triggerCharacter","hasModel","position","getPosition","token","dispose","clear","error","isTriggered","support","ordered","ch","signatureHelpTriggerCharacters","add","charCodeAt","signatureHelpRetriggerCharacters","lastCharIndex","triggerCharCode","SignatureHelpTriggerKind","TriggerCharacter","charAt","source","ContentChange","enabled","current","Invoke"],"sources":["C:/Users/Administrator/Desktop/sqllineage-master/sqllineagejs/node_modules/monaco-editor/esm/vs/editor/contrib/parameterHints/parameterHintsModel.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { createCancelablePromise, Delayer } from '../../../base/common/async.js';\r\nimport { onUnexpectedError } from '../../../base/common/errors.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { Disposable, MutableDisposable } from '../../../base/common/lifecycle.js';\r\nimport { CharacterSet } from '../../common/core/characterClassifier.js';\r\nimport * as modes from '../../common/modes.js';\r\nimport { provideSignatureHelp } from './provideSignatureHelp.js';\r\nvar ParameterHintState;\r\n(function (ParameterHintState) {\r\n    ParameterHintState.Default = { type: 0 /* Default */ };\r\n    class Pending {\r\n        constructor(request, previouslyActiveHints) {\r\n            this.request = request;\r\n            this.previouslyActiveHints = previouslyActiveHints;\r\n            this.type = 2 /* Pending */;\r\n        }\r\n    }\r\n    ParameterHintState.Pending = Pending;\r\n    class Active {\r\n        constructor(hints) {\r\n            this.hints = hints;\r\n            this.type = 1 /* Active */;\r\n        }\r\n    }\r\n    ParameterHintState.Active = Active;\r\n})(ParameterHintState || (ParameterHintState = {}));\r\nexport class ParameterHintsModel extends Disposable {\r\n    constructor(editor, delay = ParameterHintsModel.DEFAULT_DELAY) {\r\n        super();\r\n        this._onChangedHints = this._register(new Emitter());\r\n        this.onChangedHints = this._onChangedHints.event;\r\n        this.triggerOnType = false;\r\n        this._state = ParameterHintState.Default;\r\n        this._pendingTriggers = [];\r\n        this._lastSignatureHelpResult = this._register(new MutableDisposable());\r\n        this.triggerChars = new CharacterSet();\r\n        this.retriggerChars = new CharacterSet();\r\n        this.triggerId = 0;\r\n        this.editor = editor;\r\n        this.throttledDelayer = new Delayer(delay);\r\n        this._register(this.editor.onDidChangeConfiguration(() => this.onEditorConfigurationChange()));\r\n        this._register(this.editor.onDidChangeModel(e => this.onModelChanged()));\r\n        this._register(this.editor.onDidChangeModelLanguage(_ => this.onModelChanged()));\r\n        this._register(this.editor.onDidChangeCursorSelection(e => this.onCursorChange(e)));\r\n        this._register(this.editor.onDidChangeModelContent(e => this.onModelContentChange()));\r\n        this._register(modes.SignatureHelpProviderRegistry.onDidChange(this.onModelChanged, this));\r\n        this._register(this.editor.onDidType(text => this.onDidType(text)));\r\n        this.onEditorConfigurationChange();\r\n        this.onModelChanged();\r\n    }\r\n    get state() { return this._state; }\r\n    set state(value) {\r\n        if (this._state.type === 2 /* Pending */) {\r\n            this._state.request.cancel();\r\n        }\r\n        this._state = value;\r\n    }\r\n    cancel(silent = false) {\r\n        this.state = ParameterHintState.Default;\r\n        this.throttledDelayer.cancel();\r\n        if (!silent) {\r\n            this._onChangedHints.fire(undefined);\r\n        }\r\n    }\r\n    trigger(context, delay) {\r\n        const model = this.editor.getModel();\r\n        if (!model || !modes.SignatureHelpProviderRegistry.has(model)) {\r\n            return;\r\n        }\r\n        const triggerId = ++this.triggerId;\r\n        this._pendingTriggers.push(context);\r\n        this.throttledDelayer.trigger(() => {\r\n            return this.doTrigger(triggerId);\r\n        }, delay)\r\n            .catch(onUnexpectedError);\r\n    }\r\n    next() {\r\n        if (this.state.type !== 1 /* Active */) {\r\n            return;\r\n        }\r\n        const length = this.state.hints.signatures.length;\r\n        const activeSignature = this.state.hints.activeSignature;\r\n        const last = (activeSignature % length) === (length - 1);\r\n        const cycle = this.editor.getOption(70 /* parameterHints */).cycle;\r\n        // If there is only one signature, or we're on last signature of list\r\n        if ((length < 2 || last) && !cycle) {\r\n            this.cancel();\r\n            return;\r\n        }\r\n        this.updateActiveSignature(last && cycle ? 0 : activeSignature + 1);\r\n    }\r\n    previous() {\r\n        if (this.state.type !== 1 /* Active */) {\r\n            return;\r\n        }\r\n        const length = this.state.hints.signatures.length;\r\n        const activeSignature = this.state.hints.activeSignature;\r\n        const first = activeSignature === 0;\r\n        const cycle = this.editor.getOption(70 /* parameterHints */).cycle;\r\n        // If there is only one signature, or we're on first signature of list\r\n        if ((length < 2 || first) && !cycle) {\r\n            this.cancel();\r\n            return;\r\n        }\r\n        this.updateActiveSignature(first && cycle ? length - 1 : activeSignature - 1);\r\n    }\r\n    updateActiveSignature(activeSignature) {\r\n        if (this.state.type !== 1 /* Active */) {\r\n            return;\r\n        }\r\n        this.state = new ParameterHintState.Active(Object.assign(Object.assign({}, this.state.hints), { activeSignature }));\r\n        this._onChangedHints.fire(this.state.hints);\r\n    }\r\n    doTrigger(triggerId) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const isRetrigger = this.state.type === 1 /* Active */ || this.state.type === 2 /* Pending */;\r\n            const activeSignatureHelp = this.getLastActiveHints();\r\n            this.cancel(true);\r\n            if (this._pendingTriggers.length === 0) {\r\n                return false;\r\n            }\r\n            const context = this._pendingTriggers.reduce(mergeTriggerContexts);\r\n            this._pendingTriggers = [];\r\n            const triggerContext = {\r\n                triggerKind: context.triggerKind,\r\n                triggerCharacter: context.triggerCharacter,\r\n                isRetrigger: isRetrigger,\r\n                activeSignatureHelp: activeSignatureHelp\r\n            };\r\n            if (!this.editor.hasModel()) {\r\n                return false;\r\n            }\r\n            const model = this.editor.getModel();\r\n            const position = this.editor.getPosition();\r\n            this.state = new ParameterHintState.Pending(createCancelablePromise(token => provideSignatureHelp(model, position, triggerContext, token)), activeSignatureHelp);\r\n            try {\r\n                const result = yield this.state.request;\r\n                // Check that we are still resolving the correct signature help\r\n                if (triggerId !== this.triggerId) {\r\n                    result === null || result === void 0 ? void 0 : result.dispose();\r\n                    return false;\r\n                }\r\n                if (!result || !result.value.signatures || result.value.signatures.length === 0) {\r\n                    result === null || result === void 0 ? void 0 : result.dispose();\r\n                    this._lastSignatureHelpResult.clear();\r\n                    this.cancel();\r\n                    return false;\r\n                }\r\n                else {\r\n                    this.state = new ParameterHintState.Active(result.value);\r\n                    this._lastSignatureHelpResult.value = result;\r\n                    this._onChangedHints.fire(this.state.hints);\r\n                    return true;\r\n                }\r\n            }\r\n            catch (error) {\r\n                if (triggerId === this.triggerId) {\r\n                    this.state = ParameterHintState.Default;\r\n                }\r\n                onUnexpectedError(error);\r\n                return false;\r\n            }\r\n        });\r\n    }\r\n    getLastActiveHints() {\r\n        switch (this.state.type) {\r\n            case 1 /* Active */: return this.state.hints;\r\n            case 2 /* Pending */: return this.state.previouslyActiveHints;\r\n            default: return undefined;\r\n        }\r\n    }\r\n    get isTriggered() {\r\n        return this.state.type === 1 /* Active */\r\n            || this.state.type === 2 /* Pending */\r\n            || this.throttledDelayer.isTriggered();\r\n    }\r\n    onModelChanged() {\r\n        this.cancel();\r\n        // Update trigger characters\r\n        this.triggerChars = new CharacterSet();\r\n        this.retriggerChars = new CharacterSet();\r\n        const model = this.editor.getModel();\r\n        if (!model) {\r\n            return;\r\n        }\r\n        for (const support of modes.SignatureHelpProviderRegistry.ordered(model)) {\r\n            for (const ch of support.signatureHelpTriggerCharacters || []) {\r\n                this.triggerChars.add(ch.charCodeAt(0));\r\n                // All trigger characters are also considered retrigger characters\r\n                this.retriggerChars.add(ch.charCodeAt(0));\r\n            }\r\n            for (const ch of support.signatureHelpRetriggerCharacters || []) {\r\n                this.retriggerChars.add(ch.charCodeAt(0));\r\n            }\r\n        }\r\n    }\r\n    onDidType(text) {\r\n        if (!this.triggerOnType) {\r\n            return;\r\n        }\r\n        const lastCharIndex = text.length - 1;\r\n        const triggerCharCode = text.charCodeAt(lastCharIndex);\r\n        if (this.triggerChars.has(triggerCharCode) || this.isTriggered && this.retriggerChars.has(triggerCharCode)) {\r\n            this.trigger({\r\n                triggerKind: modes.SignatureHelpTriggerKind.TriggerCharacter,\r\n                triggerCharacter: text.charAt(lastCharIndex),\r\n            });\r\n        }\r\n    }\r\n    onCursorChange(e) {\r\n        if (e.source === 'mouse') {\r\n            this.cancel();\r\n        }\r\n        else if (this.isTriggered) {\r\n            this.trigger({ triggerKind: modes.SignatureHelpTriggerKind.ContentChange });\r\n        }\r\n    }\r\n    onModelContentChange() {\r\n        if (this.isTriggered) {\r\n            this.trigger({ triggerKind: modes.SignatureHelpTriggerKind.ContentChange });\r\n        }\r\n    }\r\n    onEditorConfigurationChange() {\r\n        this.triggerOnType = this.editor.getOption(70 /* parameterHints */).enabled;\r\n        if (!this.triggerOnType) {\r\n            this.cancel();\r\n        }\r\n    }\r\n    dispose() {\r\n        this.cancel(true);\r\n        super.dispose();\r\n    }\r\n}\r\nParameterHintsModel.DEFAULT_DELAY = 120; // ms\r\nfunction mergeTriggerContexts(previous, current) {\r\n    switch (current.triggerKind) {\r\n        case modes.SignatureHelpTriggerKind.Invoke:\r\n            // Invoke overrides previous triggers.\r\n            return current;\r\n        case modes.SignatureHelpTriggerKind.ContentChange:\r\n            // Ignore content changes triggers\r\n            return previous;\r\n        case modes.SignatureHelpTriggerKind.TriggerCharacter:\r\n        default:\r\n            return current;\r\n    }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}