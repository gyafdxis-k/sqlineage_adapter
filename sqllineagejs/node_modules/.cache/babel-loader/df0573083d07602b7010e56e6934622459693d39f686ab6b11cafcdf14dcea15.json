{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nimport { alert } from '../../../base/browser/ui/aria/aria.js';\nimport { isNonEmptyArray } from '../../../base/common/arrays.js';\nimport { onUnexpectedError } from '../../../base/common/errors.js';\nimport { SimpleKeybinding } from '../../../base/common/keyCodes.js';\nimport { dispose, DisposableStore, toDisposable, MutableDisposable } from '../../../base/common/lifecycle.js';\nimport { StableEditorScrollState } from '../../browser/core/editorState.js';\nimport { EditorAction, EditorCommand, registerEditorAction, registerEditorCommand, registerEditorContribution } from '../../browser/editorExtensions.js';\nimport { EditOperation } from '../../common/core/editOperation.js';\nimport { Range } from '../../common/core/range.js';\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\nimport { SnippetController2 } from '../snippet/snippetController2.js';\nimport { SnippetParser } from '../snippet/snippetParser.js';\nimport { ISuggestMemoryService } from './suggestMemory.js';\nimport * as nls from '../../../nls.js';\nimport { ICommandService, CommandsRegistry } from '../../../platform/commands/common/commands.js';\nimport { ContextKeyExpr, IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\nimport { KeybindingsRegistry } from '../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { Context as SuggestContext, suggestWidgetStatusbarMenu } from './suggest.js';\nimport { SuggestAlternatives } from './suggestAlternatives.js';\nimport { SuggestModel } from './suggestModel.js';\nimport { SuggestWidget } from './suggestWidget.js';\nimport { WordContextKey } from './wordContextKey.js';\nimport { Event } from '../../../base/common/event.js';\nimport { IdleValue } from '../../../base/common/async.js';\nimport { isObject, assertType } from '../../../base/common/types.js';\nimport { CommitCharacterController } from './suggestCommitCharacters.js';\nimport { OvertypingCapturer } from './suggestOvertypingCapturer.js';\nimport { Position } from '../../common/core/position.js';\nimport * as platform from '../../../base/common/platform.js';\nimport { MenuRegistry } from '../../../platform/actions/common/actions.js';\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\nimport { ILogService } from '../../../platform/log/common/log.js';\nimport { StopWatch } from '../../../base/common/stopwatch.js';\n// sticky suggest widget which doesn't disappear on focus out and such\nlet _sticky = false;\n// _sticky = Boolean(\"true\"); // done \"weirdly\" so that a lint warning prevents you from pushing this\nclass LineSuffix {\n  constructor(_model, _position) {\n    this._model = _model;\n    this._position = _position;\n    // spy on what's happening right of the cursor. two cases:\n    // 1. end of line -> check that it's still end of line\n    // 2. mid of line -> add a marker and compute the delta\n    const maxColumn = _model.getLineMaxColumn(_position.lineNumber);\n    if (maxColumn !== _position.column) {\n      const offset = _model.getOffsetAt(_position);\n      const end = _model.getPositionAt(offset + 1);\n      this._marker = _model.deltaDecorations([], [{\n        range: Range.fromPositions(_position, end),\n        options: {\n          stickiness: 1 /* NeverGrowsWhenTypingAtEdges */\n        }\n      }]);\n    }\n  }\n\n  dispose() {\n    if (this._marker && !this._model.isDisposed()) {\n      this._model.deltaDecorations(this._marker, []);\n    }\n  }\n  delta(position) {\n    if (this._model.isDisposed() || this._position.lineNumber !== position.lineNumber) {\n      // bail out early if things seems fishy\n      return 0;\n    }\n    // read the marker (in case suggest was triggered at line end) or compare\n    // the cursor to the line end.\n    if (this._marker) {\n      const range = this._model.getDecorationRange(this._marker[0]);\n      const end = this._model.getOffsetAt(range.getStartPosition());\n      return end - this._model.getOffsetAt(position);\n    } else {\n      return this._model.getLineMaxColumn(position.lineNumber) - position.column;\n    }\n  }\n}\nlet SuggestController = class SuggestController {\n  constructor(editor, _memoryService, _commandService, _contextKeyService, _instantiationService, _logService) {\n    this._memoryService = _memoryService;\n    this._commandService = _commandService;\n    this._contextKeyService = _contextKeyService;\n    this._instantiationService = _instantiationService;\n    this._logService = _logService;\n    this._lineSuffix = new MutableDisposable();\n    this._toDispose = new DisposableStore();\n    this.editor = editor;\n    this.model = _instantiationService.createInstance(SuggestModel, this.editor);\n    // context key: update insert/replace mode\n    const ctxInsertMode = SuggestContext.InsertMode.bindTo(_contextKeyService);\n    ctxInsertMode.set(editor.getOption(101 /* suggest */).insertMode);\n    this.model.onDidTrigger(() => ctxInsertMode.set(editor.getOption(101 /* suggest */).insertMode));\n    this.widget = this._toDispose.add(new IdleValue(() => {\n      const widget = this._instantiationService.createInstance(SuggestWidget, this.editor);\n      this._toDispose.add(widget);\n      this._toDispose.add(widget.onDidSelect(item => this._insertSuggestion(item, 0), this));\n      // Wire up logic to accept a suggestion on certain characters\n      const commitCharacterController = new CommitCharacterController(this.editor, widget, item => this._insertSuggestion(item, 2 /* NoAfterUndoStop */));\n      this._toDispose.add(commitCharacterController);\n      this._toDispose.add(this.model.onDidSuggest(e => {\n        if (e.completionModel.items.length === 0) {\n          commitCharacterController.reset();\n        }\n      }));\n      // Wire up makes text edit context key\n      const ctxMakesTextEdit = SuggestContext.MakesTextEdit.bindTo(this._contextKeyService);\n      const ctxHasInsertAndReplace = SuggestContext.HasInsertAndReplaceRange.bindTo(this._contextKeyService);\n      const ctxCanResolve = SuggestContext.CanResolve.bindTo(this._contextKeyService);\n      this._toDispose.add(toDisposable(() => {\n        ctxMakesTextEdit.reset();\n        ctxHasInsertAndReplace.reset();\n        ctxCanResolve.reset();\n      }));\n      this._toDispose.add(widget.onDidFocus(_ref => {\n        let {\n          item\n        } = _ref;\n        // (ctx: makesTextEdit)\n        const position = this.editor.getPosition();\n        const startColumn = item.editStart.column;\n        const endColumn = position.column;\n        let value = true;\n        if (this.editor.getOption(1 /* acceptSuggestionOnEnter */) === 'smart' && this.model.state === 2 /* Auto */ && !item.completion.command && !item.completion.additionalTextEdits && !(item.completion.insertTextRules & 4 /* InsertAsSnippet */) && endColumn - startColumn === item.completion.insertText.length) {\n          const oldText = this.editor.getModel().getValueInRange({\n            startLineNumber: position.lineNumber,\n            startColumn,\n            endLineNumber: position.lineNumber,\n            endColumn\n          });\n          value = oldText !== item.completion.insertText;\n        }\n        ctxMakesTextEdit.set(value);\n        // (ctx: hasInsertAndReplaceRange)\n        ctxHasInsertAndReplace.set(!Position.equals(item.editInsertEnd, item.editReplaceEnd));\n        // (ctx: canResolve)\n        ctxCanResolve.set(Boolean(item.provider.resolveCompletionItem) || Boolean(item.completion.documentation) || item.completion.detail !== item.completion.label);\n      }));\n      this._toDispose.add(widget.onDetailsKeyDown(e => {\n        // cmd + c on macOS, ctrl + c on Win / Linux\n        if (e.toKeybinding().equals(new SimpleKeybinding(true, false, false, false, 33 /* KEY_C */)) || platform.isMacintosh && e.toKeybinding().equals(new SimpleKeybinding(false, false, false, true, 33 /* KEY_C */))) {\n          e.stopPropagation();\n          return;\n        }\n        if (!e.toKeybinding().isModifierKey()) {\n          this.editor.focus();\n        }\n      }));\n      return widget;\n    }));\n    // Wire up text overtyping capture\n    this._overtypingCapturer = this._toDispose.add(new IdleValue(() => {\n      return this._toDispose.add(new OvertypingCapturer(this.editor, this.model));\n    }));\n    this._alternatives = this._toDispose.add(new IdleValue(() => {\n      return this._toDispose.add(new SuggestAlternatives(this.editor, this._contextKeyService));\n    }));\n    this._toDispose.add(_instantiationService.createInstance(WordContextKey, editor));\n    this._toDispose.add(this.model.onDidTrigger(e => {\n      this.widget.value.showTriggered(e.auto, e.shy ? 250 : 50);\n      this._lineSuffix.value = new LineSuffix(this.editor.getModel(), e.position);\n    }));\n    this._toDispose.add(this.model.onDidSuggest(e => {\n      if (!e.shy) {\n        let index = this._memoryService.select(this.editor.getModel(), this.editor.getPosition(), e.completionModel.items);\n        this.widget.value.showSuggestions(e.completionModel, index, e.isFrozen, e.auto);\n      }\n    }));\n    this._toDispose.add(this.model.onDidCancel(e => {\n      if (!e.retrigger) {\n        this.widget.value.hideWidget();\n      }\n    }));\n    this._toDispose.add(this.editor.onDidBlurEditorWidget(() => {\n      if (!_sticky) {\n        this.model.cancel();\n        this.model.clear();\n      }\n    }));\n    // Manage the acceptSuggestionsOnEnter context key\n    let acceptSuggestionsOnEnter = SuggestContext.AcceptSuggestionsOnEnter.bindTo(_contextKeyService);\n    let updateFromConfig = () => {\n      const acceptSuggestionOnEnter = this.editor.getOption(1 /* acceptSuggestionOnEnter */);\n      acceptSuggestionsOnEnter.set(acceptSuggestionOnEnter === 'on' || acceptSuggestionOnEnter === 'smart');\n    };\n    this._toDispose.add(this.editor.onDidChangeConfiguration(() => updateFromConfig()));\n    updateFromConfig();\n  }\n  static get(editor) {\n    return editor.getContribution(SuggestController.ID);\n  }\n  dispose() {\n    this._alternatives.dispose();\n    this._toDispose.dispose();\n    this.widget.dispose();\n    this.model.dispose();\n    this._lineSuffix.dispose();\n  }\n  _insertSuggestion(event, flags) {\n    if (!event || !event.item) {\n      this._alternatives.value.reset();\n      this.model.cancel();\n      this.model.clear();\n      return;\n    }\n    if (!this.editor.hasModel()) {\n      return;\n    }\n    const model = this.editor.getModel();\n    const modelVersionNow = model.getAlternativeVersionId();\n    const {\n      item\n    } = event;\n    //\n    const tasks = [];\n    const cts = new CancellationTokenSource();\n    // pushing undo stops *before* additional text edits and\n    // *after* the main edit\n    if (!(flags & 1 /* NoBeforeUndoStop */)) {\n      this.editor.pushUndoStop();\n    }\n    // compute overwrite[Before|After] deltas BEFORE applying extra edits\n    const info = this.getOverwriteInfo(item, Boolean(flags & 8 /* AlternativeOverwriteConfig */));\n    // keep item in memory\n    this._memoryService.memorize(model, this.editor.getPosition(), item);\n    if (Array.isArray(item.completion.additionalTextEdits)) {\n      // sync additional edits\n      const scrollState = StableEditorScrollState.capture(this.editor);\n      this.editor.executeEdits('suggestController.additionalTextEdits.sync', item.completion.additionalTextEdits.map(edit => EditOperation.replace(Range.lift(edit.range), edit.text)));\n      scrollState.restoreRelativeVerticalPositionOfCursor(this.editor);\n    } else if (!item.isResolved) {\n      // async additional edits\n      const sw = new StopWatch(true);\n      let position;\n      const docListener = model.onDidChangeContent(e => {\n        if (e.isFlush) {\n          cts.cancel();\n          docListener.dispose();\n          return;\n        }\n        for (let change of e.changes) {\n          const thisPosition = Range.getEndPosition(change.range);\n          if (!position || Position.isBefore(thisPosition, position)) {\n            position = thisPosition;\n          }\n        }\n      });\n      let oldFlags = flags;\n      flags |= 2 /* NoAfterUndoStop */;\n      let didType = false;\n      let typeListener = this.editor.onWillType(() => {\n        typeListener.dispose();\n        didType = true;\n        if (!(oldFlags & 2 /* NoAfterUndoStop */)) {\n          this.editor.pushUndoStop();\n        }\n      });\n      tasks.push(item.resolve(cts.token).then(() => {\n        if (!item.completion.additionalTextEdits || cts.token.isCancellationRequested) {\n          return false;\n        }\n        if (position && item.completion.additionalTextEdits.some(edit => Position.isBefore(position, Range.getStartPosition(edit.range)))) {\n          return false;\n        }\n        if (didType) {\n          this.editor.pushUndoStop();\n        }\n        const scrollState = StableEditorScrollState.capture(this.editor);\n        this.editor.executeEdits('suggestController.additionalTextEdits.async', item.completion.additionalTextEdits.map(edit => EditOperation.replace(Range.lift(edit.range), edit.text)));\n        scrollState.restoreRelativeVerticalPositionOfCursor(this.editor);\n        if (didType || !(oldFlags & 2 /* NoAfterUndoStop */)) {\n          this.editor.pushUndoStop();\n        }\n        return true;\n      }).then(applied => {\n        this._logService.trace('[suggest] async resolving of edits DONE (ms, applied?)', sw.elapsed(), applied);\n        docListener.dispose();\n        typeListener.dispose();\n      }));\n    }\n    let {\n      insertText\n    } = item.completion;\n    if (!(item.completion.insertTextRules & 4 /* InsertAsSnippet */)) {\n      insertText = SnippetParser.escape(insertText);\n    }\n    SnippetController2.get(this.editor).insert(insertText, {\n      overwriteBefore: info.overwriteBefore,\n      overwriteAfter: info.overwriteAfter,\n      undoStopBefore: false,\n      undoStopAfter: false,\n      adjustWhitespace: !(item.completion.insertTextRules & 1 /* KeepWhitespace */),\n      clipboardText: event.model.clipboardText,\n      overtypingCapturer: this._overtypingCapturer.value\n    });\n    if (!(flags & 2 /* NoAfterUndoStop */)) {\n      this.editor.pushUndoStop();\n    }\n    if (!item.completion.command) {\n      // done\n      this.model.cancel();\n    } else if (item.completion.command.id === TriggerSuggestAction.id) {\n      // retigger\n      this.model.trigger({\n        auto: true,\n        shy: false\n      }, true);\n    } else {\n      // exec command, done\n      tasks.push(this._commandService.executeCommand(item.completion.command.id, ...(item.completion.command.arguments ? [...item.completion.command.arguments] : [])).catch(onUnexpectedError));\n      this.model.cancel();\n    }\n    if (flags & 4 /* KeepAlternativeSuggestions */) {\n      this._alternatives.value.set(event, next => {\n        // cancel resolving of additional edits\n        cts.cancel();\n        // this is not so pretty. when inserting the 'next'\n        // suggestion we undo until we are at the state at\n        // which we were before inserting the previous suggestion...\n        while (model.canUndo()) {\n          if (modelVersionNow !== model.getAlternativeVersionId()) {\n            model.undo();\n          }\n          this._insertSuggestion(next, 1 /* NoBeforeUndoStop */ | 2 /* NoAfterUndoStop */ | (flags & 8 /* AlternativeOverwriteConfig */ ? 8 /* AlternativeOverwriteConfig */ : 0));\n          break;\n        }\n      });\n    }\n    this._alertCompletionItem(item);\n    // clear only now - after all tasks are done\n    Promise.all(tasks).finally(() => {\n      this.model.clear();\n      cts.dispose();\n    });\n  }\n  getOverwriteInfo(item, toggleMode) {\n    assertType(this.editor.hasModel());\n    let replace = this.editor.getOption(101 /* suggest */).insertMode === 'replace';\n    if (toggleMode) {\n      replace = !replace;\n    }\n    const overwriteBefore = item.position.column - item.editStart.column;\n    const overwriteAfter = (replace ? item.editReplaceEnd.column : item.editInsertEnd.column) - item.position.column;\n    const columnDelta = this.editor.getPosition().column - item.position.column;\n    const suffixDelta = this._lineSuffix.value ? this._lineSuffix.value.delta(this.editor.getPosition()) : 0;\n    return {\n      overwriteBefore: overwriteBefore + columnDelta,\n      overwriteAfter: overwriteAfter + suffixDelta\n    };\n  }\n  _alertCompletionItem(_ref2) {\n    let {\n      completion: suggestion\n    } = _ref2;\n    const textLabel = typeof suggestion.label === 'string' ? suggestion.label : suggestion.label.name;\n    if (isNonEmptyArray(suggestion.additionalTextEdits)) {\n      let msg = nls.localize('aria.alert.snippet', \"Accepting '{0}' made {1} additional edits\", textLabel, suggestion.additionalTextEdits.length);\n      alert(msg);\n    }\n  }\n  triggerSuggest(onlyFrom) {\n    if (this.editor.hasModel()) {\n      this.model.trigger({\n        auto: false,\n        shy: false\n      }, false, onlyFrom);\n      this.editor.revealLine(this.editor.getPosition().lineNumber, 0 /* Smooth */);\n      this.editor.focus();\n    }\n  }\n  triggerSuggestAndAcceptBest(arg) {\n    if (!this.editor.hasModel()) {\n      return;\n    }\n    const positionNow = this.editor.getPosition();\n    const fallback = () => {\n      if (positionNow.equals(this.editor.getPosition())) {\n        this._commandService.executeCommand(arg.fallback);\n      }\n    };\n    const makesTextEdit = item => {\n      if (item.completion.insertTextRules & 4 /* InsertAsSnippet */ || item.completion.additionalTextEdits) {\n        // snippet, other editor -> makes edit\n        return true;\n      }\n      const position = this.editor.getPosition();\n      const startColumn = item.editStart.column;\n      const endColumn = position.column;\n      if (endColumn - startColumn !== item.completion.insertText.length) {\n        // unequal lengths -> makes edit\n        return true;\n      }\n      const textNow = this.editor.getModel().getValueInRange({\n        startLineNumber: position.lineNumber,\n        startColumn,\n        endLineNumber: position.lineNumber,\n        endColumn\n      });\n      // unequal text -> makes edit\n      return textNow !== item.completion.insertText;\n    };\n    Event.once(this.model.onDidTrigger)(_ => {\n      // wait for trigger because only then the cancel-event is trustworthy\n      let listener = [];\n      Event.any(this.model.onDidTrigger, this.model.onDidCancel)(() => {\n        // retrigger or cancel -> try to type default text\n        dispose(listener);\n        fallback();\n      }, undefined, listener);\n      this.model.onDidSuggest(_ref3 => {\n        let {\n          completionModel\n        } = _ref3;\n        dispose(listener);\n        if (completionModel.items.length === 0) {\n          fallback();\n          return;\n        }\n        const index = this._memoryService.select(this.editor.getModel(), this.editor.getPosition(), completionModel.items);\n        const item = completionModel.items[index];\n        if (!makesTextEdit(item)) {\n          fallback();\n          return;\n        }\n        this.editor.pushUndoStop();\n        this._insertSuggestion({\n          index,\n          item,\n          model: completionModel\n        }, 4 /* KeepAlternativeSuggestions */ | 1 /* NoBeforeUndoStop */ | 2 /* NoAfterUndoStop */);\n      }, undefined, listener);\n    });\n    this.model.trigger({\n      auto: false,\n      shy: true\n    });\n    this.editor.revealLine(positionNow.lineNumber, 0 /* Smooth */);\n    this.editor.focus();\n  }\n  acceptSelectedSuggestion(keepAlternativeSuggestions, alternativeOverwriteConfig) {\n    const item = this.widget.value.getFocusedItem();\n    let flags = 0;\n    if (keepAlternativeSuggestions) {\n      flags |= 4 /* KeepAlternativeSuggestions */;\n    }\n\n    if (alternativeOverwriteConfig) {\n      flags |= 8 /* AlternativeOverwriteConfig */;\n    }\n\n    this._insertSuggestion(item, flags);\n  }\n  acceptNextSuggestion() {\n    this._alternatives.value.next();\n  }\n  acceptPrevSuggestion() {\n    this._alternatives.value.prev();\n  }\n  cancelSuggestWidget() {\n    this.model.cancel();\n    this.model.clear();\n    this.widget.value.hideWidget();\n  }\n  selectNextSuggestion() {\n    this.widget.value.selectNext();\n  }\n  selectNextPageSuggestion() {\n    this.widget.value.selectNextPage();\n  }\n  selectLastSuggestion() {\n    this.widget.value.selectLast();\n  }\n  selectPrevSuggestion() {\n    this.widget.value.selectPrevious();\n  }\n  selectPrevPageSuggestion() {\n    this.widget.value.selectPreviousPage();\n  }\n  selectFirstSuggestion() {\n    this.widget.value.selectFirst();\n  }\n  toggleSuggestionDetails() {\n    this.widget.value.toggleDetails();\n  }\n  toggleExplainMode() {\n    this.widget.value.toggleExplainMode();\n  }\n  toggleSuggestionFocus() {\n    this.widget.value.toggleDetailsFocus();\n  }\n  resetWidgetSize() {\n    this.widget.value.resetPersistedSize();\n  }\n};\nSuggestController.ID = 'editor.contrib.suggestController';\nSuggestController = __decorate([__param(1, ISuggestMemoryService), __param(2, ICommandService), __param(3, IContextKeyService), __param(4, IInstantiationService), __param(5, ILogService)], SuggestController);\nexport { SuggestController };\nexport class TriggerSuggestAction extends EditorAction {\n  constructor() {\n    super({\n      id: TriggerSuggestAction.id,\n      label: nls.localize('suggest.trigger.label', \"Trigger Suggest\"),\n      alias: 'Trigger Suggest',\n      precondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasCompletionItemProvider),\n      kbOpts: {\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 2048 /* CtrlCmd */ | 10 /* Space */,\n        secondary: [2048 /* CtrlCmd */ | 39 /* KEY_I */],\n        mac: {\n          primary: 256 /* WinCtrl */ | 10 /* Space */,\n          secondary: [512 /* Alt */ | 9 /* Escape */, 2048 /* CtrlCmd */ | 39 /* KEY_I */]\n        },\n        weight: 100 /* EditorContrib */\n      }\n    });\n  }\n\n  run(accessor, editor) {\n    const controller = SuggestController.get(editor);\n    if (!controller) {\n      return;\n    }\n    controller.triggerSuggest();\n  }\n}\nTriggerSuggestAction.id = 'editor.action.triggerSuggest';\nregisterEditorContribution(SuggestController.ID, SuggestController);\nregisterEditorAction(TriggerSuggestAction);\nconst weight = 100 /* EditorContrib */ + 90;\nconst SuggestCommand = EditorCommand.bindToContribution(SuggestController.get);\nregisterEditorCommand(new SuggestCommand({\n  id: 'acceptSelectedSuggestion',\n  precondition: SuggestContext.Visible,\n  handler(x) {\n    x.acceptSelectedSuggestion(true, false);\n  }\n}));\n// normal tab\nKeybindingsRegistry.registerKeybindingRule({\n  id: 'acceptSelectedSuggestion',\n  when: ContextKeyExpr.and(SuggestContext.Visible, EditorContextKeys.textInputFocus),\n  primary: 2 /* Tab */,\n  weight\n});\n// accept on enter has special rules\nKeybindingsRegistry.registerKeybindingRule({\n  id: 'acceptSelectedSuggestion',\n  when: ContextKeyExpr.and(SuggestContext.Visible, EditorContextKeys.textInputFocus, SuggestContext.AcceptSuggestionsOnEnter, SuggestContext.MakesTextEdit),\n  primary: 3 /* Enter */,\n  weight\n});\nMenuRegistry.appendMenuItem(suggestWidgetStatusbarMenu, {\n  command: {\n    id: 'acceptSelectedSuggestion',\n    title: nls.localize('accept.insert', \"Insert\")\n  },\n  group: 'left',\n  order: 1,\n  when: SuggestContext.HasInsertAndReplaceRange.toNegated()\n});\nMenuRegistry.appendMenuItem(suggestWidgetStatusbarMenu, {\n  command: {\n    id: 'acceptSelectedSuggestion',\n    title: nls.localize('accept.insert', \"Insert\")\n  },\n  group: 'left',\n  order: 1,\n  when: ContextKeyExpr.and(SuggestContext.HasInsertAndReplaceRange, SuggestContext.InsertMode.isEqualTo('insert'))\n});\nMenuRegistry.appendMenuItem(suggestWidgetStatusbarMenu, {\n  command: {\n    id: 'acceptSelectedSuggestion',\n    title: nls.localize('accept.replace', \"Replace\")\n  },\n  group: 'left',\n  order: 1,\n  when: ContextKeyExpr.and(SuggestContext.HasInsertAndReplaceRange, SuggestContext.InsertMode.isEqualTo('replace'))\n});\nregisterEditorCommand(new SuggestCommand({\n  id: 'acceptAlternativeSelectedSuggestion',\n  precondition: ContextKeyExpr.and(SuggestContext.Visible, EditorContextKeys.textInputFocus),\n  kbOpts: {\n    weight: weight,\n    kbExpr: EditorContextKeys.textInputFocus,\n    primary: 1024 /* Shift */ | 3 /* Enter */,\n    secondary: [1024 /* Shift */ | 2 /* Tab */]\n  },\n\n  handler(x) {\n    x.acceptSelectedSuggestion(false, true);\n  },\n  menuOpts: [{\n    menuId: suggestWidgetStatusbarMenu,\n    group: 'left',\n    order: 2,\n    when: ContextKeyExpr.and(SuggestContext.HasInsertAndReplaceRange, SuggestContext.InsertMode.isEqualTo('insert')),\n    title: nls.localize('accept.replace', \"Replace\")\n  }, {\n    menuId: suggestWidgetStatusbarMenu,\n    group: 'left',\n    order: 2,\n    when: ContextKeyExpr.and(SuggestContext.HasInsertAndReplaceRange, SuggestContext.InsertMode.isEqualTo('replace')),\n    title: nls.localize('accept.insert', \"Insert\")\n  }]\n}));\n// continue to support the old command\nCommandsRegistry.registerCommandAlias('acceptSelectedSuggestionOnEnter', 'acceptSelectedSuggestion');\nregisterEditorCommand(new SuggestCommand({\n  id: 'hideSuggestWidget',\n  precondition: SuggestContext.Visible,\n  handler: x => x.cancelSuggestWidget(),\n  kbOpts: {\n    weight: weight,\n    kbExpr: EditorContextKeys.textInputFocus,\n    primary: 9 /* Escape */,\n    secondary: [1024 /* Shift */ | 9 /* Escape */]\n  }\n}));\n\nregisterEditorCommand(new SuggestCommand({\n  id: 'selectNextSuggestion',\n  precondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.MultipleSuggestions),\n  handler: c => c.selectNextSuggestion(),\n  kbOpts: {\n    weight: weight,\n    kbExpr: EditorContextKeys.textInputFocus,\n    primary: 18 /* DownArrow */,\n    secondary: [2048 /* CtrlCmd */ | 18 /* DownArrow */],\n    mac: {\n      primary: 18 /* DownArrow */,\n      secondary: [2048 /* CtrlCmd */ | 18 /* DownArrow */, 256 /* WinCtrl */ | 44 /* KEY_N */]\n    }\n  }\n}));\n\nregisterEditorCommand(new SuggestCommand({\n  id: 'selectNextPageSuggestion',\n  precondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.MultipleSuggestions),\n  handler: c => c.selectNextPageSuggestion(),\n  kbOpts: {\n    weight: weight,\n    kbExpr: EditorContextKeys.textInputFocus,\n    primary: 12 /* PageDown */,\n    secondary: [2048 /* CtrlCmd */ | 12 /* PageDown */]\n  }\n}));\n\nregisterEditorCommand(new SuggestCommand({\n  id: 'selectLastSuggestion',\n  precondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.MultipleSuggestions),\n  handler: c => c.selectLastSuggestion()\n}));\nregisterEditorCommand(new SuggestCommand({\n  id: 'selectPrevSuggestion',\n  precondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.MultipleSuggestions),\n  handler: c => c.selectPrevSuggestion(),\n  kbOpts: {\n    weight: weight,\n    kbExpr: EditorContextKeys.textInputFocus,\n    primary: 16 /* UpArrow */,\n    secondary: [2048 /* CtrlCmd */ | 16 /* UpArrow */],\n    mac: {\n      primary: 16 /* UpArrow */,\n      secondary: [2048 /* CtrlCmd */ | 16 /* UpArrow */, 256 /* WinCtrl */ | 46 /* KEY_P */]\n    }\n  }\n}));\n\nregisterEditorCommand(new SuggestCommand({\n  id: 'selectPrevPageSuggestion',\n  precondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.MultipleSuggestions),\n  handler: c => c.selectPrevPageSuggestion(),\n  kbOpts: {\n    weight: weight,\n    kbExpr: EditorContextKeys.textInputFocus,\n    primary: 11 /* PageUp */,\n    secondary: [2048 /* CtrlCmd */ | 11 /* PageUp */]\n  }\n}));\n\nregisterEditorCommand(new SuggestCommand({\n  id: 'selectFirstSuggestion',\n  precondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.MultipleSuggestions),\n  handler: c => c.selectFirstSuggestion()\n}));\nregisterEditorCommand(new SuggestCommand({\n  id: 'toggleSuggestionDetails',\n  precondition: SuggestContext.Visible,\n  handler: x => x.toggleSuggestionDetails(),\n  kbOpts: {\n    weight: weight,\n    kbExpr: EditorContextKeys.textInputFocus,\n    primary: 2048 /* CtrlCmd */ | 10 /* Space */,\n    mac: {\n      primary: 256 /* WinCtrl */ | 10 /* Space */\n    }\n  },\n\n  menuOpts: [{\n    menuId: suggestWidgetStatusbarMenu,\n    group: 'right',\n    order: 1,\n    when: ContextKeyExpr.and(SuggestContext.DetailsVisible, SuggestContext.CanResolve),\n    title: nls.localize('detail.more', \"show less\")\n  }, {\n    menuId: suggestWidgetStatusbarMenu,\n    group: 'right',\n    order: 1,\n    when: ContextKeyExpr.and(SuggestContext.DetailsVisible.toNegated(), SuggestContext.CanResolve),\n    title: nls.localize('detail.less', \"show more\")\n  }]\n}));\nregisterEditorCommand(new SuggestCommand({\n  id: 'toggleExplainMode',\n  precondition: SuggestContext.Visible,\n  handler: x => x.toggleExplainMode(),\n  kbOpts: {\n    weight: 100 /* EditorContrib */,\n    primary: 2048 /* CtrlCmd */ | 85 /* US_SLASH */\n  }\n}));\n\nregisterEditorCommand(new SuggestCommand({\n  id: 'toggleSuggestionFocus',\n  precondition: SuggestContext.Visible,\n  handler: x => x.toggleSuggestionFocus(),\n  kbOpts: {\n    weight: weight,\n    kbExpr: EditorContextKeys.textInputFocus,\n    primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 10 /* Space */,\n    mac: {\n      primary: 256 /* WinCtrl */ | 512 /* Alt */ | 10 /* Space */\n    }\n  }\n}));\n//#region tab completions\nregisterEditorCommand(new SuggestCommand({\n  id: 'insertBestCompletion',\n  precondition: ContextKeyExpr.and(EditorContextKeys.textInputFocus, ContextKeyExpr.equals('config.editor.tabCompletion', 'on'), WordContextKey.AtEnd, SuggestContext.Visible.toNegated(), SuggestAlternatives.OtherSuggestions.toNegated(), SnippetController2.InSnippetMode.toNegated()),\n  handler: (x, arg) => {\n    x.triggerSuggestAndAcceptBest(isObject(arg) ? Object.assign({\n      fallback: 'tab'\n    }, arg) : {\n      fallback: 'tab'\n    });\n  },\n  kbOpts: {\n    weight,\n    primary: 2 /* Tab */\n  }\n}));\n\nregisterEditorCommand(new SuggestCommand({\n  id: 'insertNextSuggestion',\n  precondition: ContextKeyExpr.and(EditorContextKeys.textInputFocus, ContextKeyExpr.equals('config.editor.tabCompletion', 'on'), SuggestAlternatives.OtherSuggestions, SuggestContext.Visible.toNegated(), SnippetController2.InSnippetMode.toNegated()),\n  handler: x => x.acceptNextSuggestion(),\n  kbOpts: {\n    weight: weight,\n    kbExpr: EditorContextKeys.textInputFocus,\n    primary: 2 /* Tab */\n  }\n}));\n\nregisterEditorCommand(new SuggestCommand({\n  id: 'insertPrevSuggestion',\n  precondition: ContextKeyExpr.and(EditorContextKeys.textInputFocus, ContextKeyExpr.equals('config.editor.tabCompletion', 'on'), SuggestAlternatives.OtherSuggestions, SuggestContext.Visible.toNegated(), SnippetController2.InSnippetMode.toNegated()),\n  handler: x => x.acceptPrevSuggestion(),\n  kbOpts: {\n    weight: weight,\n    kbExpr: EditorContextKeys.textInputFocus,\n    primary: 1024 /* Shift */ | 2 /* Tab */\n  }\n}));\n\nregisterEditorAction(class extends EditorAction {\n  constructor() {\n    super({\n      id: 'editor.action.resetSuggestSize',\n      label: nls.localize('suggest.reset.label', \"Reset Suggest Widget Size\"),\n      alias: 'Reset Suggest Widget Size',\n      precondition: undefined\n    });\n  }\n  run(_accessor, editor) {\n    SuggestController.get(editor).resetWidgetSize();\n  }\n});","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","alert","isNonEmptyArray","onUnexpectedError","SimpleKeybinding","dispose","DisposableStore","toDisposable","MutableDisposable","StableEditorScrollState","EditorAction","EditorCommand","registerEditorAction","registerEditorCommand","registerEditorContribution","EditOperation","Range","EditorContextKeys","SnippetController2","SnippetParser","ISuggestMemoryService","nls","ICommandService","CommandsRegistry","ContextKeyExpr","IContextKeyService","IInstantiationService","KeybindingsRegistry","Context","SuggestContext","suggestWidgetStatusbarMenu","SuggestAlternatives","SuggestModel","SuggestWidget","WordContextKey","Event","IdleValue","isObject","assertType","CommitCharacterController","OvertypingCapturer","Position","platform","MenuRegistry","CancellationTokenSource","ILogService","StopWatch","_sticky","LineSuffix","constructor","_model","_position","maxColumn","getLineMaxColumn","lineNumber","column","offset","getOffsetAt","end","getPositionAt","_marker","deltaDecorations","range","fromPositions","options","stickiness","isDisposed","delta","position","getDecorationRange","getStartPosition","SuggestController","editor","_memoryService","_commandService","_contextKeyService","_instantiationService","_logService","_lineSuffix","_toDispose","model","createInstance","ctxInsertMode","InsertMode","bindTo","set","getOption","insertMode","onDidTrigger","widget","add","onDidSelect","item","_insertSuggestion","commitCharacterController","onDidSuggest","e","completionModel","items","reset","ctxMakesTextEdit","MakesTextEdit","ctxHasInsertAndReplace","HasInsertAndReplaceRange","ctxCanResolve","CanResolve","onDidFocus","_ref","getPosition","startColumn","editStart","endColumn","value","state","completion","command","additionalTextEdits","insertTextRules","insertText","oldText","getModel","getValueInRange","startLineNumber","endLineNumber","equals","editInsertEnd","editReplaceEnd","Boolean","provider","resolveCompletionItem","documentation","detail","label","onDetailsKeyDown","toKeybinding","isMacintosh","stopPropagation","isModifierKey","focus","_overtypingCapturer","_alternatives","showTriggered","auto","shy","index","select","showSuggestions","isFrozen","onDidCancel","retrigger","hideWidget","onDidBlurEditorWidget","cancel","clear","acceptSuggestionsOnEnter","AcceptSuggestionsOnEnter","updateFromConfig","acceptSuggestionOnEnter","onDidChangeConfiguration","get","getContribution","ID","event","flags","hasModel","modelVersionNow","getAlternativeVersionId","tasks","cts","pushUndoStop","info","getOverwriteInfo","memorize","Array","isArray","scrollState","capture","executeEdits","map","edit","replace","lift","text","restoreRelativeVerticalPositionOfCursor","isResolved","sw","docListener","onDidChangeContent","isFlush","change","changes","thisPosition","getEndPosition","isBefore","oldFlags","didType","typeListener","onWillType","push","resolve","token","then","isCancellationRequested","some","applied","trace","elapsed","escape","insert","overwriteBefore","overwriteAfter","undoStopBefore","undoStopAfter","adjustWhitespace","clipboardText","overtypingCapturer","id","TriggerSuggestAction","trigger","executeCommand","catch","next","canUndo","undo","_alertCompletionItem","Promise","all","finally","toggleMode","columnDelta","suffixDelta","_ref2","suggestion","textLabel","name","msg","localize","triggerSuggest","onlyFrom","revealLine","triggerSuggestAndAcceptBest","arg","positionNow","fallback","makesTextEdit","textNow","once","_","listener","any","undefined","_ref3","acceptSelectedSuggestion","keepAlternativeSuggestions","alternativeOverwriteConfig","getFocusedItem","acceptNextSuggestion","acceptPrevSuggestion","prev","cancelSuggestWidget","selectNextSuggestion","selectNext","selectNextPageSuggestion","selectNextPage","selectLastSuggestion","selectLast","selectPrevSuggestion","selectPrevious","selectPrevPageSuggestion","selectPreviousPage","selectFirstSuggestion","selectFirst","toggleSuggestionDetails","toggleDetails","toggleExplainMode","toggleSuggestionFocus","toggleDetailsFocus","resetWidgetSize","resetPersistedSize","alias","precondition","and","writable","hasCompletionItemProvider","kbOpts","kbExpr","textInputFocus","primary","secondary","mac","weight","run","accessor","controller","SuggestCommand","bindToContribution","Visible","handler","x","registerKeybindingRule","when","appendMenuItem","title","group","order","toNegated","isEqualTo","menuOpts","menuId","registerCommandAlias","MultipleSuggestions","DetailsVisible","AtEnd","OtherSuggestions","InSnippetMode","assign","_accessor"],"sources":["C:/Users/Administrator/Desktop/sqllineage-master/sqllineagejs/node_modules/monaco-editor/esm/vs/editor/contrib/suggest/suggestController.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { alert } from '../../../base/browser/ui/aria/aria.js';\r\nimport { isNonEmptyArray } from '../../../base/common/arrays.js';\r\nimport { onUnexpectedError } from '../../../base/common/errors.js';\r\nimport { SimpleKeybinding } from '../../../base/common/keyCodes.js';\r\nimport { dispose, DisposableStore, toDisposable, MutableDisposable } from '../../../base/common/lifecycle.js';\r\nimport { StableEditorScrollState } from '../../browser/core/editorState.js';\r\nimport { EditorAction, EditorCommand, registerEditorAction, registerEditorCommand, registerEditorContribution } from '../../browser/editorExtensions.js';\r\nimport { EditOperation } from '../../common/core/editOperation.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { SnippetController2 } from '../snippet/snippetController2.js';\r\nimport { SnippetParser } from '../snippet/snippetParser.js';\r\nimport { ISuggestMemoryService } from './suggestMemory.js';\r\nimport * as nls from '../../../nls.js';\r\nimport { ICommandService, CommandsRegistry } from '../../../platform/commands/common/commands.js';\r\nimport { ContextKeyExpr, IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\r\nimport { KeybindingsRegistry } from '../../../platform/keybinding/common/keybindingsRegistry.js';\r\nimport { Context as SuggestContext, suggestWidgetStatusbarMenu } from './suggest.js';\r\nimport { SuggestAlternatives } from './suggestAlternatives.js';\r\nimport { SuggestModel } from './suggestModel.js';\r\nimport { SuggestWidget } from './suggestWidget.js';\r\nimport { WordContextKey } from './wordContextKey.js';\r\nimport { Event } from '../../../base/common/event.js';\r\nimport { IdleValue } from '../../../base/common/async.js';\r\nimport { isObject, assertType } from '../../../base/common/types.js';\r\nimport { CommitCharacterController } from './suggestCommitCharacters.js';\r\nimport { OvertypingCapturer } from './suggestOvertypingCapturer.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport * as platform from '../../../base/common/platform.js';\r\nimport { MenuRegistry } from '../../../platform/actions/common/actions.js';\r\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\r\nimport { ILogService } from '../../../platform/log/common/log.js';\r\nimport { StopWatch } from '../../../base/common/stopwatch.js';\r\n// sticky suggest widget which doesn't disappear on focus out and such\r\nlet _sticky = false;\r\n// _sticky = Boolean(\"true\"); // done \"weirdly\" so that a lint warning prevents you from pushing this\r\nclass LineSuffix {\r\n    constructor(_model, _position) {\r\n        this._model = _model;\r\n        this._position = _position;\r\n        // spy on what's happening right of the cursor. two cases:\r\n        // 1. end of line -> check that it's still end of line\r\n        // 2. mid of line -> add a marker and compute the delta\r\n        const maxColumn = _model.getLineMaxColumn(_position.lineNumber);\r\n        if (maxColumn !== _position.column) {\r\n            const offset = _model.getOffsetAt(_position);\r\n            const end = _model.getPositionAt(offset + 1);\r\n            this._marker = _model.deltaDecorations([], [{\r\n                    range: Range.fromPositions(_position, end),\r\n                    options: { stickiness: 1 /* NeverGrowsWhenTypingAtEdges */ }\r\n                }]);\r\n        }\r\n    }\r\n    dispose() {\r\n        if (this._marker && !this._model.isDisposed()) {\r\n            this._model.deltaDecorations(this._marker, []);\r\n        }\r\n    }\r\n    delta(position) {\r\n        if (this._model.isDisposed() || this._position.lineNumber !== position.lineNumber) {\r\n            // bail out early if things seems fishy\r\n            return 0;\r\n        }\r\n        // read the marker (in case suggest was triggered at line end) or compare\r\n        // the cursor to the line end.\r\n        if (this._marker) {\r\n            const range = this._model.getDecorationRange(this._marker[0]);\r\n            const end = this._model.getOffsetAt(range.getStartPosition());\r\n            return end - this._model.getOffsetAt(position);\r\n        }\r\n        else {\r\n            return this._model.getLineMaxColumn(position.lineNumber) - position.column;\r\n        }\r\n    }\r\n}\r\nlet SuggestController = class SuggestController {\r\n    constructor(editor, _memoryService, _commandService, _contextKeyService, _instantiationService, _logService) {\r\n        this._memoryService = _memoryService;\r\n        this._commandService = _commandService;\r\n        this._contextKeyService = _contextKeyService;\r\n        this._instantiationService = _instantiationService;\r\n        this._logService = _logService;\r\n        this._lineSuffix = new MutableDisposable();\r\n        this._toDispose = new DisposableStore();\r\n        this.editor = editor;\r\n        this.model = _instantiationService.createInstance(SuggestModel, this.editor);\r\n        // context key: update insert/replace mode\r\n        const ctxInsertMode = SuggestContext.InsertMode.bindTo(_contextKeyService);\r\n        ctxInsertMode.set(editor.getOption(101 /* suggest */).insertMode);\r\n        this.model.onDidTrigger(() => ctxInsertMode.set(editor.getOption(101 /* suggest */).insertMode));\r\n        this.widget = this._toDispose.add(new IdleValue(() => {\r\n            const widget = this._instantiationService.createInstance(SuggestWidget, this.editor);\r\n            this._toDispose.add(widget);\r\n            this._toDispose.add(widget.onDidSelect(item => this._insertSuggestion(item, 0), this));\r\n            // Wire up logic to accept a suggestion on certain characters\r\n            const commitCharacterController = new CommitCharacterController(this.editor, widget, item => this._insertSuggestion(item, 2 /* NoAfterUndoStop */));\r\n            this._toDispose.add(commitCharacterController);\r\n            this._toDispose.add(this.model.onDidSuggest(e => {\r\n                if (e.completionModel.items.length === 0) {\r\n                    commitCharacterController.reset();\r\n                }\r\n            }));\r\n            // Wire up makes text edit context key\r\n            const ctxMakesTextEdit = SuggestContext.MakesTextEdit.bindTo(this._contextKeyService);\r\n            const ctxHasInsertAndReplace = SuggestContext.HasInsertAndReplaceRange.bindTo(this._contextKeyService);\r\n            const ctxCanResolve = SuggestContext.CanResolve.bindTo(this._contextKeyService);\r\n            this._toDispose.add(toDisposable(() => {\r\n                ctxMakesTextEdit.reset();\r\n                ctxHasInsertAndReplace.reset();\r\n                ctxCanResolve.reset();\r\n            }));\r\n            this._toDispose.add(widget.onDidFocus(({ item }) => {\r\n                // (ctx: makesTextEdit)\r\n                const position = this.editor.getPosition();\r\n                const startColumn = item.editStart.column;\r\n                const endColumn = position.column;\r\n                let value = true;\r\n                if (this.editor.getOption(1 /* acceptSuggestionOnEnter */) === 'smart'\r\n                    && this.model.state === 2 /* Auto */\r\n                    && !item.completion.command\r\n                    && !item.completion.additionalTextEdits\r\n                    && !(item.completion.insertTextRules & 4 /* InsertAsSnippet */)\r\n                    && endColumn - startColumn === item.completion.insertText.length) {\r\n                    const oldText = this.editor.getModel().getValueInRange({\r\n                        startLineNumber: position.lineNumber,\r\n                        startColumn,\r\n                        endLineNumber: position.lineNumber,\r\n                        endColumn\r\n                    });\r\n                    value = oldText !== item.completion.insertText;\r\n                }\r\n                ctxMakesTextEdit.set(value);\r\n                // (ctx: hasInsertAndReplaceRange)\r\n                ctxHasInsertAndReplace.set(!Position.equals(item.editInsertEnd, item.editReplaceEnd));\r\n                // (ctx: canResolve)\r\n                ctxCanResolve.set(Boolean(item.provider.resolveCompletionItem) || Boolean(item.completion.documentation) || item.completion.detail !== item.completion.label);\r\n            }));\r\n            this._toDispose.add(widget.onDetailsKeyDown(e => {\r\n                // cmd + c on macOS, ctrl + c on Win / Linux\r\n                if (e.toKeybinding().equals(new SimpleKeybinding(true, false, false, false, 33 /* KEY_C */)) ||\r\n                    (platform.isMacintosh && e.toKeybinding().equals(new SimpleKeybinding(false, false, false, true, 33 /* KEY_C */)))) {\r\n                    e.stopPropagation();\r\n                    return;\r\n                }\r\n                if (!e.toKeybinding().isModifierKey()) {\r\n                    this.editor.focus();\r\n                }\r\n            }));\r\n            return widget;\r\n        }));\r\n        // Wire up text overtyping capture\r\n        this._overtypingCapturer = this._toDispose.add(new IdleValue(() => {\r\n            return this._toDispose.add(new OvertypingCapturer(this.editor, this.model));\r\n        }));\r\n        this._alternatives = this._toDispose.add(new IdleValue(() => {\r\n            return this._toDispose.add(new SuggestAlternatives(this.editor, this._contextKeyService));\r\n        }));\r\n        this._toDispose.add(_instantiationService.createInstance(WordContextKey, editor));\r\n        this._toDispose.add(this.model.onDidTrigger(e => {\r\n            this.widget.value.showTriggered(e.auto, e.shy ? 250 : 50);\r\n            this._lineSuffix.value = new LineSuffix(this.editor.getModel(), e.position);\r\n        }));\r\n        this._toDispose.add(this.model.onDidSuggest(e => {\r\n            if (!e.shy) {\r\n                let index = this._memoryService.select(this.editor.getModel(), this.editor.getPosition(), e.completionModel.items);\r\n                this.widget.value.showSuggestions(e.completionModel, index, e.isFrozen, e.auto);\r\n            }\r\n        }));\r\n        this._toDispose.add(this.model.onDidCancel(e => {\r\n            if (!e.retrigger) {\r\n                this.widget.value.hideWidget();\r\n            }\r\n        }));\r\n        this._toDispose.add(this.editor.onDidBlurEditorWidget(() => {\r\n            if (!_sticky) {\r\n                this.model.cancel();\r\n                this.model.clear();\r\n            }\r\n        }));\r\n        // Manage the acceptSuggestionsOnEnter context key\r\n        let acceptSuggestionsOnEnter = SuggestContext.AcceptSuggestionsOnEnter.bindTo(_contextKeyService);\r\n        let updateFromConfig = () => {\r\n            const acceptSuggestionOnEnter = this.editor.getOption(1 /* acceptSuggestionOnEnter */);\r\n            acceptSuggestionsOnEnter.set(acceptSuggestionOnEnter === 'on' || acceptSuggestionOnEnter === 'smart');\r\n        };\r\n        this._toDispose.add(this.editor.onDidChangeConfiguration(() => updateFromConfig()));\r\n        updateFromConfig();\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(SuggestController.ID);\r\n    }\r\n    dispose() {\r\n        this._alternatives.dispose();\r\n        this._toDispose.dispose();\r\n        this.widget.dispose();\r\n        this.model.dispose();\r\n        this._lineSuffix.dispose();\r\n    }\r\n    _insertSuggestion(event, flags) {\r\n        if (!event || !event.item) {\r\n            this._alternatives.value.reset();\r\n            this.model.cancel();\r\n            this.model.clear();\r\n            return;\r\n        }\r\n        if (!this.editor.hasModel()) {\r\n            return;\r\n        }\r\n        const model = this.editor.getModel();\r\n        const modelVersionNow = model.getAlternativeVersionId();\r\n        const { item } = event;\r\n        //\r\n        const tasks = [];\r\n        const cts = new CancellationTokenSource();\r\n        // pushing undo stops *before* additional text edits and\r\n        // *after* the main edit\r\n        if (!(flags & 1 /* NoBeforeUndoStop */)) {\r\n            this.editor.pushUndoStop();\r\n        }\r\n        // compute overwrite[Before|After] deltas BEFORE applying extra edits\r\n        const info = this.getOverwriteInfo(item, Boolean(flags & 8 /* AlternativeOverwriteConfig */));\r\n        // keep item in memory\r\n        this._memoryService.memorize(model, this.editor.getPosition(), item);\r\n        if (Array.isArray(item.completion.additionalTextEdits)) {\r\n            // sync additional edits\r\n            const scrollState = StableEditorScrollState.capture(this.editor);\r\n            this.editor.executeEdits('suggestController.additionalTextEdits.sync', item.completion.additionalTextEdits.map(edit => EditOperation.replace(Range.lift(edit.range), edit.text)));\r\n            scrollState.restoreRelativeVerticalPositionOfCursor(this.editor);\r\n        }\r\n        else if (!item.isResolved) {\r\n            // async additional edits\r\n            const sw = new StopWatch(true);\r\n            let position;\r\n            const docListener = model.onDidChangeContent(e => {\r\n                if (e.isFlush) {\r\n                    cts.cancel();\r\n                    docListener.dispose();\r\n                    return;\r\n                }\r\n                for (let change of e.changes) {\r\n                    const thisPosition = Range.getEndPosition(change.range);\r\n                    if (!position || Position.isBefore(thisPosition, position)) {\r\n                        position = thisPosition;\r\n                    }\r\n                }\r\n            });\r\n            let oldFlags = flags;\r\n            flags |= 2 /* NoAfterUndoStop */;\r\n            let didType = false;\r\n            let typeListener = this.editor.onWillType(() => {\r\n                typeListener.dispose();\r\n                didType = true;\r\n                if (!(oldFlags & 2 /* NoAfterUndoStop */)) {\r\n                    this.editor.pushUndoStop();\r\n                }\r\n            });\r\n            tasks.push(item.resolve(cts.token).then(() => {\r\n                if (!item.completion.additionalTextEdits || cts.token.isCancellationRequested) {\r\n                    return false;\r\n                }\r\n                if (position && item.completion.additionalTextEdits.some(edit => Position.isBefore(position, Range.getStartPosition(edit.range)))) {\r\n                    return false;\r\n                }\r\n                if (didType) {\r\n                    this.editor.pushUndoStop();\r\n                }\r\n                const scrollState = StableEditorScrollState.capture(this.editor);\r\n                this.editor.executeEdits('suggestController.additionalTextEdits.async', item.completion.additionalTextEdits.map(edit => EditOperation.replace(Range.lift(edit.range), edit.text)));\r\n                scrollState.restoreRelativeVerticalPositionOfCursor(this.editor);\r\n                if (didType || !(oldFlags & 2 /* NoAfterUndoStop */)) {\r\n                    this.editor.pushUndoStop();\r\n                }\r\n                return true;\r\n            }).then(applied => {\r\n                this._logService.trace('[suggest] async resolving of edits DONE (ms, applied?)', sw.elapsed(), applied);\r\n                docListener.dispose();\r\n                typeListener.dispose();\r\n            }));\r\n        }\r\n        let { insertText } = item.completion;\r\n        if (!(item.completion.insertTextRules & 4 /* InsertAsSnippet */)) {\r\n            insertText = SnippetParser.escape(insertText);\r\n        }\r\n        SnippetController2.get(this.editor).insert(insertText, {\r\n            overwriteBefore: info.overwriteBefore,\r\n            overwriteAfter: info.overwriteAfter,\r\n            undoStopBefore: false,\r\n            undoStopAfter: false,\r\n            adjustWhitespace: !(item.completion.insertTextRules & 1 /* KeepWhitespace */),\r\n            clipboardText: event.model.clipboardText,\r\n            overtypingCapturer: this._overtypingCapturer.value\r\n        });\r\n        if (!(flags & 2 /* NoAfterUndoStop */)) {\r\n            this.editor.pushUndoStop();\r\n        }\r\n        if (!item.completion.command) {\r\n            // done\r\n            this.model.cancel();\r\n        }\r\n        else if (item.completion.command.id === TriggerSuggestAction.id) {\r\n            // retigger\r\n            this.model.trigger({ auto: true, shy: false }, true);\r\n        }\r\n        else {\r\n            // exec command, done\r\n            tasks.push(this._commandService.executeCommand(item.completion.command.id, ...(item.completion.command.arguments ? [...item.completion.command.arguments] : [])).catch(onUnexpectedError));\r\n            this.model.cancel();\r\n        }\r\n        if (flags & 4 /* KeepAlternativeSuggestions */) {\r\n            this._alternatives.value.set(event, next => {\r\n                // cancel resolving of additional edits\r\n                cts.cancel();\r\n                // this is not so pretty. when inserting the 'next'\r\n                // suggestion we undo until we are at the state at\r\n                // which we were before inserting the previous suggestion...\r\n                while (model.canUndo()) {\r\n                    if (modelVersionNow !== model.getAlternativeVersionId()) {\r\n                        model.undo();\r\n                    }\r\n                    this._insertSuggestion(next, 1 /* NoBeforeUndoStop */ | 2 /* NoAfterUndoStop */ | (flags & 8 /* AlternativeOverwriteConfig */ ? 8 /* AlternativeOverwriteConfig */ : 0));\r\n                    break;\r\n                }\r\n            });\r\n        }\r\n        this._alertCompletionItem(item);\r\n        // clear only now - after all tasks are done\r\n        Promise.all(tasks).finally(() => {\r\n            this.model.clear();\r\n            cts.dispose();\r\n        });\r\n    }\r\n    getOverwriteInfo(item, toggleMode) {\r\n        assertType(this.editor.hasModel());\r\n        let replace = this.editor.getOption(101 /* suggest */).insertMode === 'replace';\r\n        if (toggleMode) {\r\n            replace = !replace;\r\n        }\r\n        const overwriteBefore = item.position.column - item.editStart.column;\r\n        const overwriteAfter = (replace ? item.editReplaceEnd.column : item.editInsertEnd.column) - item.position.column;\r\n        const columnDelta = this.editor.getPosition().column - item.position.column;\r\n        const suffixDelta = this._lineSuffix.value ? this._lineSuffix.value.delta(this.editor.getPosition()) : 0;\r\n        return {\r\n            overwriteBefore: overwriteBefore + columnDelta,\r\n            overwriteAfter: overwriteAfter + suffixDelta\r\n        };\r\n    }\r\n    _alertCompletionItem({ completion: suggestion }) {\r\n        const textLabel = typeof suggestion.label === 'string' ? suggestion.label : suggestion.label.name;\r\n        if (isNonEmptyArray(suggestion.additionalTextEdits)) {\r\n            let msg = nls.localize('aria.alert.snippet', \"Accepting '{0}' made {1} additional edits\", textLabel, suggestion.additionalTextEdits.length);\r\n            alert(msg);\r\n        }\r\n    }\r\n    triggerSuggest(onlyFrom) {\r\n        if (this.editor.hasModel()) {\r\n            this.model.trigger({ auto: false, shy: false }, false, onlyFrom);\r\n            this.editor.revealLine(this.editor.getPosition().lineNumber, 0 /* Smooth */);\r\n            this.editor.focus();\r\n        }\r\n    }\r\n    triggerSuggestAndAcceptBest(arg) {\r\n        if (!this.editor.hasModel()) {\r\n            return;\r\n        }\r\n        const positionNow = this.editor.getPosition();\r\n        const fallback = () => {\r\n            if (positionNow.equals(this.editor.getPosition())) {\r\n                this._commandService.executeCommand(arg.fallback);\r\n            }\r\n        };\r\n        const makesTextEdit = (item) => {\r\n            if (item.completion.insertTextRules & 4 /* InsertAsSnippet */ || item.completion.additionalTextEdits) {\r\n                // snippet, other editor -> makes edit\r\n                return true;\r\n            }\r\n            const position = this.editor.getPosition();\r\n            const startColumn = item.editStart.column;\r\n            const endColumn = position.column;\r\n            if (endColumn - startColumn !== item.completion.insertText.length) {\r\n                // unequal lengths -> makes edit\r\n                return true;\r\n            }\r\n            const textNow = this.editor.getModel().getValueInRange({\r\n                startLineNumber: position.lineNumber,\r\n                startColumn,\r\n                endLineNumber: position.lineNumber,\r\n                endColumn\r\n            });\r\n            // unequal text -> makes edit\r\n            return textNow !== item.completion.insertText;\r\n        };\r\n        Event.once(this.model.onDidTrigger)(_ => {\r\n            // wait for trigger because only then the cancel-event is trustworthy\r\n            let listener = [];\r\n            Event.any(this.model.onDidTrigger, this.model.onDidCancel)(() => {\r\n                // retrigger or cancel -> try to type default text\r\n                dispose(listener);\r\n                fallback();\r\n            }, undefined, listener);\r\n            this.model.onDidSuggest(({ completionModel }) => {\r\n                dispose(listener);\r\n                if (completionModel.items.length === 0) {\r\n                    fallback();\r\n                    return;\r\n                }\r\n                const index = this._memoryService.select(this.editor.getModel(), this.editor.getPosition(), completionModel.items);\r\n                const item = completionModel.items[index];\r\n                if (!makesTextEdit(item)) {\r\n                    fallback();\r\n                    return;\r\n                }\r\n                this.editor.pushUndoStop();\r\n                this._insertSuggestion({ index, item, model: completionModel }, 4 /* KeepAlternativeSuggestions */ | 1 /* NoBeforeUndoStop */ | 2 /* NoAfterUndoStop */);\r\n            }, undefined, listener);\r\n        });\r\n        this.model.trigger({ auto: false, shy: true });\r\n        this.editor.revealLine(positionNow.lineNumber, 0 /* Smooth */);\r\n        this.editor.focus();\r\n    }\r\n    acceptSelectedSuggestion(keepAlternativeSuggestions, alternativeOverwriteConfig) {\r\n        const item = this.widget.value.getFocusedItem();\r\n        let flags = 0;\r\n        if (keepAlternativeSuggestions) {\r\n            flags |= 4 /* KeepAlternativeSuggestions */;\r\n        }\r\n        if (alternativeOverwriteConfig) {\r\n            flags |= 8 /* AlternativeOverwriteConfig */;\r\n        }\r\n        this._insertSuggestion(item, flags);\r\n    }\r\n    acceptNextSuggestion() {\r\n        this._alternatives.value.next();\r\n    }\r\n    acceptPrevSuggestion() {\r\n        this._alternatives.value.prev();\r\n    }\r\n    cancelSuggestWidget() {\r\n        this.model.cancel();\r\n        this.model.clear();\r\n        this.widget.value.hideWidget();\r\n    }\r\n    selectNextSuggestion() {\r\n        this.widget.value.selectNext();\r\n    }\r\n    selectNextPageSuggestion() {\r\n        this.widget.value.selectNextPage();\r\n    }\r\n    selectLastSuggestion() {\r\n        this.widget.value.selectLast();\r\n    }\r\n    selectPrevSuggestion() {\r\n        this.widget.value.selectPrevious();\r\n    }\r\n    selectPrevPageSuggestion() {\r\n        this.widget.value.selectPreviousPage();\r\n    }\r\n    selectFirstSuggestion() {\r\n        this.widget.value.selectFirst();\r\n    }\r\n    toggleSuggestionDetails() {\r\n        this.widget.value.toggleDetails();\r\n    }\r\n    toggleExplainMode() {\r\n        this.widget.value.toggleExplainMode();\r\n    }\r\n    toggleSuggestionFocus() {\r\n        this.widget.value.toggleDetailsFocus();\r\n    }\r\n    resetWidgetSize() {\r\n        this.widget.value.resetPersistedSize();\r\n    }\r\n};\r\nSuggestController.ID = 'editor.contrib.suggestController';\r\nSuggestController = __decorate([\r\n    __param(1, ISuggestMemoryService),\r\n    __param(2, ICommandService),\r\n    __param(3, IContextKeyService),\r\n    __param(4, IInstantiationService),\r\n    __param(5, ILogService)\r\n], SuggestController);\r\nexport { SuggestController };\r\nexport class TriggerSuggestAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: TriggerSuggestAction.id,\r\n            label: nls.localize('suggest.trigger.label', \"Trigger Suggest\"),\r\n            alias: 'Trigger Suggest',\r\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasCompletionItemProvider),\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.textInputFocus,\r\n                primary: 2048 /* CtrlCmd */ | 10 /* Space */,\r\n                secondary: [2048 /* CtrlCmd */ | 39 /* KEY_I */],\r\n                mac: { primary: 256 /* WinCtrl */ | 10 /* Space */, secondary: [512 /* Alt */ | 9 /* Escape */, 2048 /* CtrlCmd */ | 39 /* KEY_I */] },\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        const controller = SuggestController.get(editor);\r\n        if (!controller) {\r\n            return;\r\n        }\r\n        controller.triggerSuggest();\r\n    }\r\n}\r\nTriggerSuggestAction.id = 'editor.action.triggerSuggest';\r\nregisterEditorContribution(SuggestController.ID, SuggestController);\r\nregisterEditorAction(TriggerSuggestAction);\r\nconst weight = 100 /* EditorContrib */ + 90;\r\nconst SuggestCommand = EditorCommand.bindToContribution(SuggestController.get);\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'acceptSelectedSuggestion',\r\n    precondition: SuggestContext.Visible,\r\n    handler(x) {\r\n        x.acceptSelectedSuggestion(true, false);\r\n    }\r\n}));\r\n// normal tab\r\nKeybindingsRegistry.registerKeybindingRule({\r\n    id: 'acceptSelectedSuggestion',\r\n    when: ContextKeyExpr.and(SuggestContext.Visible, EditorContextKeys.textInputFocus),\r\n    primary: 2 /* Tab */,\r\n    weight\r\n});\r\n// accept on enter has special rules\r\nKeybindingsRegistry.registerKeybindingRule({\r\n    id: 'acceptSelectedSuggestion',\r\n    when: ContextKeyExpr.and(SuggestContext.Visible, EditorContextKeys.textInputFocus, SuggestContext.AcceptSuggestionsOnEnter, SuggestContext.MakesTextEdit),\r\n    primary: 3 /* Enter */,\r\n    weight,\r\n});\r\nMenuRegistry.appendMenuItem(suggestWidgetStatusbarMenu, {\r\n    command: { id: 'acceptSelectedSuggestion', title: nls.localize('accept.insert', \"Insert\") },\r\n    group: 'left',\r\n    order: 1,\r\n    when: SuggestContext.HasInsertAndReplaceRange.toNegated()\r\n});\r\nMenuRegistry.appendMenuItem(suggestWidgetStatusbarMenu, {\r\n    command: { id: 'acceptSelectedSuggestion', title: nls.localize('accept.insert', \"Insert\") },\r\n    group: 'left',\r\n    order: 1,\r\n    when: ContextKeyExpr.and(SuggestContext.HasInsertAndReplaceRange, SuggestContext.InsertMode.isEqualTo('insert'))\r\n});\r\nMenuRegistry.appendMenuItem(suggestWidgetStatusbarMenu, {\r\n    command: { id: 'acceptSelectedSuggestion', title: nls.localize('accept.replace', \"Replace\") },\r\n    group: 'left',\r\n    order: 1,\r\n    when: ContextKeyExpr.and(SuggestContext.HasInsertAndReplaceRange, SuggestContext.InsertMode.isEqualTo('replace'))\r\n});\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'acceptAlternativeSelectedSuggestion',\r\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, EditorContextKeys.textInputFocus),\r\n    kbOpts: {\r\n        weight: weight,\r\n        kbExpr: EditorContextKeys.textInputFocus,\r\n        primary: 1024 /* Shift */ | 3 /* Enter */,\r\n        secondary: [1024 /* Shift */ | 2 /* Tab */],\r\n    },\r\n    handler(x) {\r\n        x.acceptSelectedSuggestion(false, true);\r\n    },\r\n    menuOpts: [{\r\n            menuId: suggestWidgetStatusbarMenu,\r\n            group: 'left',\r\n            order: 2,\r\n            when: ContextKeyExpr.and(SuggestContext.HasInsertAndReplaceRange, SuggestContext.InsertMode.isEqualTo('insert')),\r\n            title: nls.localize('accept.replace', \"Replace\")\r\n        }, {\r\n            menuId: suggestWidgetStatusbarMenu,\r\n            group: 'left',\r\n            order: 2,\r\n            when: ContextKeyExpr.and(SuggestContext.HasInsertAndReplaceRange, SuggestContext.InsertMode.isEqualTo('replace')),\r\n            title: nls.localize('accept.insert', \"Insert\")\r\n        }]\r\n}));\r\n// continue to support the old command\r\nCommandsRegistry.registerCommandAlias('acceptSelectedSuggestionOnEnter', 'acceptSelectedSuggestion');\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'hideSuggestWidget',\r\n    precondition: SuggestContext.Visible,\r\n    handler: x => x.cancelSuggestWidget(),\r\n    kbOpts: {\r\n        weight: weight,\r\n        kbExpr: EditorContextKeys.textInputFocus,\r\n        primary: 9 /* Escape */,\r\n        secondary: [1024 /* Shift */ | 9 /* Escape */]\r\n    }\r\n}));\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'selectNextSuggestion',\r\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.MultipleSuggestions),\r\n    handler: c => c.selectNextSuggestion(),\r\n    kbOpts: {\r\n        weight: weight,\r\n        kbExpr: EditorContextKeys.textInputFocus,\r\n        primary: 18 /* DownArrow */,\r\n        secondary: [2048 /* CtrlCmd */ | 18 /* DownArrow */],\r\n        mac: { primary: 18 /* DownArrow */, secondary: [2048 /* CtrlCmd */ | 18 /* DownArrow */, 256 /* WinCtrl */ | 44 /* KEY_N */] }\r\n    }\r\n}));\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'selectNextPageSuggestion',\r\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.MultipleSuggestions),\r\n    handler: c => c.selectNextPageSuggestion(),\r\n    kbOpts: {\r\n        weight: weight,\r\n        kbExpr: EditorContextKeys.textInputFocus,\r\n        primary: 12 /* PageDown */,\r\n        secondary: [2048 /* CtrlCmd */ | 12 /* PageDown */]\r\n    }\r\n}));\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'selectLastSuggestion',\r\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.MultipleSuggestions),\r\n    handler: c => c.selectLastSuggestion()\r\n}));\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'selectPrevSuggestion',\r\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.MultipleSuggestions),\r\n    handler: c => c.selectPrevSuggestion(),\r\n    kbOpts: {\r\n        weight: weight,\r\n        kbExpr: EditorContextKeys.textInputFocus,\r\n        primary: 16 /* UpArrow */,\r\n        secondary: [2048 /* CtrlCmd */ | 16 /* UpArrow */],\r\n        mac: { primary: 16 /* UpArrow */, secondary: [2048 /* CtrlCmd */ | 16 /* UpArrow */, 256 /* WinCtrl */ | 46 /* KEY_P */] }\r\n    }\r\n}));\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'selectPrevPageSuggestion',\r\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.MultipleSuggestions),\r\n    handler: c => c.selectPrevPageSuggestion(),\r\n    kbOpts: {\r\n        weight: weight,\r\n        kbExpr: EditorContextKeys.textInputFocus,\r\n        primary: 11 /* PageUp */,\r\n        secondary: [2048 /* CtrlCmd */ | 11 /* PageUp */]\r\n    }\r\n}));\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'selectFirstSuggestion',\r\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.MultipleSuggestions),\r\n    handler: c => c.selectFirstSuggestion()\r\n}));\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'toggleSuggestionDetails',\r\n    precondition: SuggestContext.Visible,\r\n    handler: x => x.toggleSuggestionDetails(),\r\n    kbOpts: {\r\n        weight: weight,\r\n        kbExpr: EditorContextKeys.textInputFocus,\r\n        primary: 2048 /* CtrlCmd */ | 10 /* Space */,\r\n        mac: { primary: 256 /* WinCtrl */ | 10 /* Space */ }\r\n    },\r\n    menuOpts: [{\r\n            menuId: suggestWidgetStatusbarMenu,\r\n            group: 'right',\r\n            order: 1,\r\n            when: ContextKeyExpr.and(SuggestContext.DetailsVisible, SuggestContext.CanResolve),\r\n            title: nls.localize('detail.more', \"show less\")\r\n        }, {\r\n            menuId: suggestWidgetStatusbarMenu,\r\n            group: 'right',\r\n            order: 1,\r\n            when: ContextKeyExpr.and(SuggestContext.DetailsVisible.toNegated(), SuggestContext.CanResolve),\r\n            title: nls.localize('detail.less', \"show more\")\r\n        }]\r\n}));\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'toggleExplainMode',\r\n    precondition: SuggestContext.Visible,\r\n    handler: x => x.toggleExplainMode(),\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */,\r\n        primary: 2048 /* CtrlCmd */ | 85 /* US_SLASH */,\r\n    }\r\n}));\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'toggleSuggestionFocus',\r\n    precondition: SuggestContext.Visible,\r\n    handler: x => x.toggleSuggestionFocus(),\r\n    kbOpts: {\r\n        weight: weight,\r\n        kbExpr: EditorContextKeys.textInputFocus,\r\n        primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 10 /* Space */,\r\n        mac: { primary: 256 /* WinCtrl */ | 512 /* Alt */ | 10 /* Space */ }\r\n    }\r\n}));\r\n//#region tab completions\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'insertBestCompletion',\r\n    precondition: ContextKeyExpr.and(EditorContextKeys.textInputFocus, ContextKeyExpr.equals('config.editor.tabCompletion', 'on'), WordContextKey.AtEnd, SuggestContext.Visible.toNegated(), SuggestAlternatives.OtherSuggestions.toNegated(), SnippetController2.InSnippetMode.toNegated()),\r\n    handler: (x, arg) => {\r\n        x.triggerSuggestAndAcceptBest(isObject(arg) ? Object.assign({ fallback: 'tab' }, arg) : { fallback: 'tab' });\r\n    },\r\n    kbOpts: {\r\n        weight,\r\n        primary: 2 /* Tab */\r\n    }\r\n}));\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'insertNextSuggestion',\r\n    precondition: ContextKeyExpr.and(EditorContextKeys.textInputFocus, ContextKeyExpr.equals('config.editor.tabCompletion', 'on'), SuggestAlternatives.OtherSuggestions, SuggestContext.Visible.toNegated(), SnippetController2.InSnippetMode.toNegated()),\r\n    handler: x => x.acceptNextSuggestion(),\r\n    kbOpts: {\r\n        weight: weight,\r\n        kbExpr: EditorContextKeys.textInputFocus,\r\n        primary: 2 /* Tab */\r\n    }\r\n}));\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'insertPrevSuggestion',\r\n    precondition: ContextKeyExpr.and(EditorContextKeys.textInputFocus, ContextKeyExpr.equals('config.editor.tabCompletion', 'on'), SuggestAlternatives.OtherSuggestions, SuggestContext.Visible.toNegated(), SnippetController2.InSnippetMode.toNegated()),\r\n    handler: x => x.acceptPrevSuggestion(),\r\n    kbOpts: {\r\n        weight: weight,\r\n        kbExpr: EditorContextKeys.textInputFocus,\r\n        primary: 1024 /* Shift */ | 2 /* Tab */\r\n    }\r\n}));\r\nregisterEditorAction(class extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.resetSuggestSize',\r\n            label: nls.localize('suggest.reset.label', \"Reset Suggest Widget Size\"),\r\n            alias: 'Reset Suggest Widget Size',\r\n            precondition: undefined\r\n        });\r\n    }\r\n    run(_accessor, editor) {\r\n        SuggestController.get(editor).resetWidgetSize();\r\n    }\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}