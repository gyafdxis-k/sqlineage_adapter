{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nimport './menuEntryActionViewItem.css';\nimport { asCSSUrl, ModifierKeyEmitter } from '../../../base/browser/dom.js';\nimport { domEvent } from '../../../base/browser/event.js';\nimport { Separator } from '../../../base/common/actions.js';\nimport { toDisposable, MutableDisposable, DisposableStore } from '../../../base/common/lifecycle.js';\nimport { localize } from '../../../nls.js';\nimport { MenuItemAction, SubmenuItemAction } from '../common/actions.js';\nimport { IContextMenuService } from '../../contextview/browser/contextView.js';\nimport { IKeybindingService } from '../../keybinding/common/keybinding.js';\nimport { INotificationService } from '../../notification/common/notification.js';\nimport { ThemeIcon } from '../../theme/common/themeService.js';\nimport { ActionViewItem } from '../../../base/browser/ui/actionbar/actionViewItems.js';\nimport { DropdownMenuActionViewItem } from '../../../base/browser/ui/dropdown/dropdownActionViewItem.js';\nimport { isWindows, isLinux } from '../../../base/common/platform.js';\nexport function createAndFillInActionBarActions(menu, options, target, isPrimaryGroup) {\n  const groups = menu.getActions(options);\n  // Action bars handle alternative actions on their own so the alternative actions should be ignored\n  fillInActions(groups, target, false, isPrimaryGroup);\n  return asDisposable(groups);\n}\nfunction asDisposable(groups) {\n  const disposables = new DisposableStore();\n  for (const [, actions] of groups) {\n    for (const action of actions) {\n      disposables.add(action);\n    }\n  }\n  return disposables;\n}\nfunction fillInActions(groups, target, useAlternativeActions) {\n  let isPrimaryGroup = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : group => group === 'navigation';\n  for (let [group, actions] of groups) {\n    if (useAlternativeActions) {\n      actions = actions.map(a => a instanceof MenuItemAction && !!a.alt ? a.alt : a);\n    }\n    if (isPrimaryGroup(group)) {\n      const to = Array.isArray(target) ? target : target.primary;\n      to.unshift(...actions);\n    } else {\n      const to = Array.isArray(target) ? target : target.secondary;\n      if (to.length > 0) {\n        to.push(new Separator());\n      }\n      to.push(...actions);\n    }\n  }\n}\nlet MenuEntryActionViewItem = class MenuEntryActionViewItem extends ActionViewItem {\n  constructor(_action, _keybindingService, _notificationService) {\n    super(undefined, _action, {\n      icon: !!(_action.class || _action.item.icon),\n      label: !_action.class && !_action.item.icon\n    });\n    this._action = _action;\n    this._keybindingService = _keybindingService;\n    this._notificationService = _notificationService;\n    this._wantsAltCommand = false;\n    this._itemClassDispose = this._register(new MutableDisposable());\n    this._altKey = ModifierKeyEmitter.getInstance();\n  }\n  get _commandAction() {\n    return this._wantsAltCommand && this._action.alt || this._action;\n  }\n  onClick(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.actionRunner.run(this._commandAction, this._context).catch(err => this._notificationService.error(err));\n  }\n  render(container) {\n    super.render(container);\n    container.classList.add('menu-entry');\n    this._updateItemClass(this._action.item);\n    let mouseOver = false;\n    let alternativeKeyDown = this._altKey.keyStatus.altKey || (isWindows || isLinux) && this._altKey.keyStatus.shiftKey;\n    const updateAltState = () => {\n      const wantsAltCommand = mouseOver && alternativeKeyDown;\n      if (wantsAltCommand !== this._wantsAltCommand) {\n        this._wantsAltCommand = wantsAltCommand;\n        this.updateLabel();\n        this.updateTooltip();\n        this.updateClass();\n      }\n    };\n    if (this._action.alt) {\n      this._register(this._altKey.event(value => {\n        alternativeKeyDown = value.altKey || (isWindows || isLinux) && value.shiftKey;\n        updateAltState();\n      }));\n    }\n    this._register(domEvent(container, 'mouseleave')(_ => {\n      mouseOver = false;\n      updateAltState();\n    }));\n    this._register(domEvent(container, 'mouseenter')(e => {\n      mouseOver = true;\n      updateAltState();\n    }));\n  }\n  updateLabel() {\n    if (this.options.label && this.label) {\n      this.label.textContent = this._commandAction.label;\n    }\n  }\n  updateTooltip() {\n    if (this.label) {\n      const keybinding = this._keybindingService.lookupKeybinding(this._commandAction.id);\n      const keybindingLabel = keybinding && keybinding.getLabel();\n      const tooltip = this._commandAction.tooltip || this._commandAction.label;\n      this.label.title = keybindingLabel ? localize('titleAndKb', \"{0} ({1})\", tooltip, keybindingLabel) : tooltip;\n    }\n  }\n  updateClass() {\n    if (this.options.icon) {\n      if (this._commandAction !== this._action) {\n        if (this._action.alt) {\n          this._updateItemClass(this._action.alt.item);\n        }\n      } else if (this._action.alt) {\n        this._updateItemClass(this._action.item);\n      }\n    }\n  }\n  _updateItemClass(item) {\n    var _a;\n    this._itemClassDispose.value = undefined;\n    const {\n      element,\n      label\n    } = this;\n    if (!element || !label) {\n      return;\n    }\n    const icon = this._commandAction.checked && ((_a = item.toggled) === null || _a === void 0 ? void 0 : _a.icon) ? item.toggled.icon : item.icon;\n    if (!icon) {\n      return;\n    }\n    if (ThemeIcon.isThemeIcon(icon)) {\n      // theme icons\n      const iconClass = ThemeIcon.asClassName(icon);\n      label.classList.add(...iconClass.split(' '));\n      this._itemClassDispose.value = toDisposable(() => {\n        label.classList.remove(...iconClass.split(' '));\n      });\n    } else {\n      // icon path/url\n      if (icon.light) {\n        label.style.setProperty('--menu-entry-icon-light', asCSSUrl(icon.light));\n      }\n      if (icon.dark) {\n        label.style.setProperty('--menu-entry-icon-dark', asCSSUrl(icon.dark));\n      }\n      label.classList.add('icon');\n      this._itemClassDispose.value = toDisposable(() => {\n        label.classList.remove('icon');\n        label.style.removeProperty('--menu-entry-icon-light');\n        label.style.removeProperty('--menu-entry-icon-dark');\n      });\n    }\n  }\n};\nMenuEntryActionViewItem = __decorate([__param(1, IKeybindingService), __param(2, INotificationService)], MenuEntryActionViewItem);\nexport { MenuEntryActionViewItem };\nlet SubmenuEntryActionViewItem = class SubmenuEntryActionViewItem extends DropdownMenuActionViewItem {\n  constructor(action, contextMenuService) {\n    super(action, {\n      getActions: () => action.actions\n    }, contextMenuService, {\n      menuAsChild: true,\n      classNames: ThemeIcon.isThemeIcon(action.item.icon) ? ThemeIcon.asClassName(action.item.icon) : undefined\n    });\n  }\n  render(container) {\n    super.render(container);\n    if (this.element) {\n      container.classList.add('menu-entry');\n      const {\n        icon\n      } = this._action.item;\n      if (icon && !ThemeIcon.isThemeIcon(icon)) {\n        this.element.classList.add('icon');\n        if (icon.light) {\n          this.element.style.setProperty('--menu-entry-icon-light', asCSSUrl(icon.light));\n        }\n        if (icon.dark) {\n          this.element.style.setProperty('--menu-entry-icon-dark', asCSSUrl(icon.dark));\n        }\n      }\n    }\n  }\n};\nSubmenuEntryActionViewItem = __decorate([__param(1, IContextMenuService)], SubmenuEntryActionViewItem);\nexport { SubmenuEntryActionViewItem };\n/**\r\n * Creates action view items for menu actions or submenu actions.\r\n */\nexport function createActionViewItem(instaService, action) {\n  if (action instanceof MenuItemAction) {\n    return instaService.createInstance(MenuEntryActionViewItem, action);\n  } else if (action instanceof SubmenuItemAction) {\n    return instaService.createInstance(SubmenuEntryActionViewItem, action);\n  } else {\n    return undefined;\n  }\n}","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","asCSSUrl","ModifierKeyEmitter","domEvent","Separator","toDisposable","MutableDisposable","DisposableStore","localize","MenuItemAction","SubmenuItemAction","IContextMenuService","IKeybindingService","INotificationService","ThemeIcon","ActionViewItem","DropdownMenuActionViewItem","isWindows","isLinux","createAndFillInActionBarActions","menu","options","isPrimaryGroup","groups","getActions","fillInActions","asDisposable","disposables","actions","action","add","useAlternativeActions","undefined","group","map","a","alt","to","Array","isArray","primary","unshift","secondary","push","MenuEntryActionViewItem","constructor","_action","_keybindingService","_notificationService","icon","class","item","label","_wantsAltCommand","_itemClassDispose","_register","_altKey","getInstance","_commandAction","onClick","event","preventDefault","stopPropagation","actionRunner","run","_context","catch","err","error","render","container","classList","_updateItemClass","mouseOver","alternativeKeyDown","keyStatus","altKey","shiftKey","updateAltState","wantsAltCommand","updateLabel","updateTooltip","updateClass","value","_","e","textContent","keybinding","lookupKeybinding","id","keybindingLabel","getLabel","tooltip","title","_a","element","checked","toggled","isThemeIcon","iconClass","asClassName","split","remove","light","style","setProperty","dark","removeProperty","SubmenuEntryActionViewItem","contextMenuService","menuAsChild","classNames","createActionViewItem","instaService","createInstance"],"sources":["C:/Users/Administrator/Desktop/sqllineage-master/sqllineagejs/node_modules/monaco-editor/esm/vs/platform/actions/browser/menuEntryActionViewItem.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport './menuEntryActionViewItem.css';\r\nimport { asCSSUrl, ModifierKeyEmitter } from '../../../base/browser/dom.js';\r\nimport { domEvent } from '../../../base/browser/event.js';\r\nimport { Separator } from '../../../base/common/actions.js';\r\nimport { toDisposable, MutableDisposable, DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { localize } from '../../../nls.js';\r\nimport { MenuItemAction, SubmenuItemAction } from '../common/actions.js';\r\nimport { IContextMenuService } from '../../contextview/browser/contextView.js';\r\nimport { IKeybindingService } from '../../keybinding/common/keybinding.js';\r\nimport { INotificationService } from '../../notification/common/notification.js';\r\nimport { ThemeIcon } from '../../theme/common/themeService.js';\r\nimport { ActionViewItem } from '../../../base/browser/ui/actionbar/actionViewItems.js';\r\nimport { DropdownMenuActionViewItem } from '../../../base/browser/ui/dropdown/dropdownActionViewItem.js';\r\nimport { isWindows, isLinux } from '../../../base/common/platform.js';\r\nexport function createAndFillInActionBarActions(menu, options, target, isPrimaryGroup) {\r\n    const groups = menu.getActions(options);\r\n    // Action bars handle alternative actions on their own so the alternative actions should be ignored\r\n    fillInActions(groups, target, false, isPrimaryGroup);\r\n    return asDisposable(groups);\r\n}\r\nfunction asDisposable(groups) {\r\n    const disposables = new DisposableStore();\r\n    for (const [, actions] of groups) {\r\n        for (const action of actions) {\r\n            disposables.add(action);\r\n        }\r\n    }\r\n    return disposables;\r\n}\r\nfunction fillInActions(groups, target, useAlternativeActions, isPrimaryGroup = group => group === 'navigation') {\r\n    for (let [group, actions] of groups) {\r\n        if (useAlternativeActions) {\r\n            actions = actions.map(a => (a instanceof MenuItemAction) && !!a.alt ? a.alt : a);\r\n        }\r\n        if (isPrimaryGroup(group)) {\r\n            const to = Array.isArray(target) ? target : target.primary;\r\n            to.unshift(...actions);\r\n        }\r\n        else {\r\n            const to = Array.isArray(target) ? target : target.secondary;\r\n            if (to.length > 0) {\r\n                to.push(new Separator());\r\n            }\r\n            to.push(...actions);\r\n        }\r\n    }\r\n}\r\nlet MenuEntryActionViewItem = class MenuEntryActionViewItem extends ActionViewItem {\r\n    constructor(_action, _keybindingService, _notificationService) {\r\n        super(undefined, _action, { icon: !!(_action.class || _action.item.icon), label: !_action.class && !_action.item.icon });\r\n        this._action = _action;\r\n        this._keybindingService = _keybindingService;\r\n        this._notificationService = _notificationService;\r\n        this._wantsAltCommand = false;\r\n        this._itemClassDispose = this._register(new MutableDisposable());\r\n        this._altKey = ModifierKeyEmitter.getInstance();\r\n    }\r\n    get _commandAction() {\r\n        return this._wantsAltCommand && this._action.alt || this._action;\r\n    }\r\n    onClick(event) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        this.actionRunner\r\n            .run(this._commandAction, this._context)\r\n            .catch(err => this._notificationService.error(err));\r\n    }\r\n    render(container) {\r\n        super.render(container);\r\n        container.classList.add('menu-entry');\r\n        this._updateItemClass(this._action.item);\r\n        let mouseOver = false;\r\n        let alternativeKeyDown = this._altKey.keyStatus.altKey || ((isWindows || isLinux) && this._altKey.keyStatus.shiftKey);\r\n        const updateAltState = () => {\r\n            const wantsAltCommand = mouseOver && alternativeKeyDown;\r\n            if (wantsAltCommand !== this._wantsAltCommand) {\r\n                this._wantsAltCommand = wantsAltCommand;\r\n                this.updateLabel();\r\n                this.updateTooltip();\r\n                this.updateClass();\r\n            }\r\n        };\r\n        if (this._action.alt) {\r\n            this._register(this._altKey.event(value => {\r\n                alternativeKeyDown = value.altKey || ((isWindows || isLinux) && value.shiftKey);\r\n                updateAltState();\r\n            }));\r\n        }\r\n        this._register(domEvent(container, 'mouseleave')(_ => {\r\n            mouseOver = false;\r\n            updateAltState();\r\n        }));\r\n        this._register(domEvent(container, 'mouseenter')(e => {\r\n            mouseOver = true;\r\n            updateAltState();\r\n        }));\r\n    }\r\n    updateLabel() {\r\n        if (this.options.label && this.label) {\r\n            this.label.textContent = this._commandAction.label;\r\n        }\r\n    }\r\n    updateTooltip() {\r\n        if (this.label) {\r\n            const keybinding = this._keybindingService.lookupKeybinding(this._commandAction.id);\r\n            const keybindingLabel = keybinding && keybinding.getLabel();\r\n            const tooltip = this._commandAction.tooltip || this._commandAction.label;\r\n            this.label.title = keybindingLabel\r\n                ? localize('titleAndKb', \"{0} ({1})\", tooltip, keybindingLabel)\r\n                : tooltip;\r\n        }\r\n    }\r\n    updateClass() {\r\n        if (this.options.icon) {\r\n            if (this._commandAction !== this._action) {\r\n                if (this._action.alt) {\r\n                    this._updateItemClass(this._action.alt.item);\r\n                }\r\n            }\r\n            else if (this._action.alt) {\r\n                this._updateItemClass(this._action.item);\r\n            }\r\n        }\r\n    }\r\n    _updateItemClass(item) {\r\n        var _a;\r\n        this._itemClassDispose.value = undefined;\r\n        const { element, label } = this;\r\n        if (!element || !label) {\r\n            return;\r\n        }\r\n        const icon = this._commandAction.checked && ((_a = item.toggled) === null || _a === void 0 ? void 0 : _a.icon) ? item.toggled.icon : item.icon;\r\n        if (!icon) {\r\n            return;\r\n        }\r\n        if (ThemeIcon.isThemeIcon(icon)) {\r\n            // theme icons\r\n            const iconClass = ThemeIcon.asClassName(icon);\r\n            label.classList.add(...iconClass.split(' '));\r\n            this._itemClassDispose.value = toDisposable(() => {\r\n                label.classList.remove(...iconClass.split(' '));\r\n            });\r\n        }\r\n        else {\r\n            // icon path/url\r\n            if (icon.light) {\r\n                label.style.setProperty('--menu-entry-icon-light', asCSSUrl(icon.light));\r\n            }\r\n            if (icon.dark) {\r\n                label.style.setProperty('--menu-entry-icon-dark', asCSSUrl(icon.dark));\r\n            }\r\n            label.classList.add('icon');\r\n            this._itemClassDispose.value = toDisposable(() => {\r\n                label.classList.remove('icon');\r\n                label.style.removeProperty('--menu-entry-icon-light');\r\n                label.style.removeProperty('--menu-entry-icon-dark');\r\n            });\r\n        }\r\n    }\r\n};\r\nMenuEntryActionViewItem = __decorate([\r\n    __param(1, IKeybindingService),\r\n    __param(2, INotificationService)\r\n], MenuEntryActionViewItem);\r\nexport { MenuEntryActionViewItem };\r\nlet SubmenuEntryActionViewItem = class SubmenuEntryActionViewItem extends DropdownMenuActionViewItem {\r\n    constructor(action, contextMenuService) {\r\n        super(action, { getActions: () => action.actions }, contextMenuService, {\r\n            menuAsChild: true,\r\n            classNames: ThemeIcon.isThemeIcon(action.item.icon) ? ThemeIcon.asClassName(action.item.icon) : undefined,\r\n        });\r\n    }\r\n    render(container) {\r\n        super.render(container);\r\n        if (this.element) {\r\n            container.classList.add('menu-entry');\r\n            const { icon } = this._action.item;\r\n            if (icon && !ThemeIcon.isThemeIcon(icon)) {\r\n                this.element.classList.add('icon');\r\n                if (icon.light) {\r\n                    this.element.style.setProperty('--menu-entry-icon-light', asCSSUrl(icon.light));\r\n                }\r\n                if (icon.dark) {\r\n                    this.element.style.setProperty('--menu-entry-icon-dark', asCSSUrl(icon.dark));\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\nSubmenuEntryActionViewItem = __decorate([\r\n    __param(1, IContextMenuService)\r\n], SubmenuEntryActionViewItem);\r\nexport { SubmenuEntryActionViewItem };\r\n/**\r\n * Creates action view items for menu actions or submenu actions.\r\n */\r\nexport function createActionViewItem(instaService, action) {\r\n    if (action instanceof MenuItemAction) {\r\n        return instaService.createInstance(MenuEntryActionViewItem, action);\r\n    }\r\n    else if (action instanceof SubmenuItemAction) {\r\n        return instaService.createInstance(SubmenuEntryActionViewItem, action);\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}