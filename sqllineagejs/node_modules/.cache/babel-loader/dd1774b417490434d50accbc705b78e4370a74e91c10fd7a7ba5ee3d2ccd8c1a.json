{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport { RunOnceScheduler } from '../../../base/common/async.js';\nimport { onUnexpectedExternalError } from '../../../base/common/errors.js';\nimport { hash } from '../../../base/common/hash.js';\nimport { DisposableStore, toDisposable } from '../../../base/common/lifecycle.js';\nimport { registerEditorContribution } from '../../browser/editorExtensions.js';\nimport { ICodeEditorService } from '../../browser/services/codeEditorService.js';\nimport { InlineHintsProviderRegistry } from '../../common/modes.js';\nimport { flatten } from '../../../base/common/arrays.js';\nimport { editorInlineHintForeground, editorInlineHintBackground } from '../../../platform/theme/common/colorRegistry.js';\nimport { CancellationToken, CancellationTokenSource } from '../../../base/common/cancellation.js';\nimport { IThemeService } from '../../../platform/theme/common/themeService.js';\nimport { Range } from '../../common/core/range.js';\nimport { LanguageFeatureRequestDelays } from '../../common/modes/languageFeatureRegistry.js';\nimport { MarkdownString } from '../../../base/common/htmlContent.js';\nimport { CommandsRegistry } from '../../../platform/commands/common/commands.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { assertType } from '../../../base/common/types.js';\nimport { ITextModelService } from '../../common/services/resolverService.js';\nconst MAX_DECORATORS = 500;\nexport function getInlineHints(model, ranges, token) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const datas = [];\n    const providers = InlineHintsProviderRegistry.ordered(model).reverse();\n    const promises = flatten(providers.map(provider => ranges.map(range => Promise.resolve(provider.provideInlineHints(model, range, token)).then(result => {\n      if (result) {\n        datas.push({\n          list: result,\n          provider\n        });\n      }\n    }, err => {\n      onUnexpectedExternalError(err);\n    }))));\n    yield Promise.all(promises);\n    return datas;\n  });\n}\nlet InlineHintsController = class InlineHintsController {\n  constructor(_editor, _codeEditorService, _themeService) {\n    this._editor = _editor;\n    this._codeEditorService = _codeEditorService;\n    this._themeService = _themeService;\n    // static get(editor: ICodeEditor): InlineHintsController {\n    // \treturn editor.getContribution<InlineHintsController>(this.ID);\n    // }\n    this._disposables = new DisposableStore();\n    this._sessionDisposables = new DisposableStore();\n    this._getInlineHintsDelays = new LanguageFeatureRequestDelays(InlineHintsProviderRegistry, 250, 2500);\n    this._decorationsTypeIds = [];\n    this._decorationIds = [];\n    this._disposables.add(InlineHintsProviderRegistry.onDidChange(() => this._update()));\n    this._disposables.add(_themeService.onDidColorThemeChange(() => this._update()));\n    this._disposables.add(_editor.onDidChangeModel(() => this._update()));\n    this._disposables.add(_editor.onDidChangeModelLanguage(() => this._update()));\n    this._disposables.add(_editor.onDidChangeConfiguration(e => {\n      if (e.hasChanged(120 /* inlineHints */)) {\n        this._update();\n      }\n    }));\n    this._update();\n  }\n  dispose() {\n    this._sessionDisposables.dispose();\n    this._removeAllDecorations();\n    this._disposables.dispose();\n  }\n  _update() {\n    this._sessionDisposables.clear();\n    if (!this._editor.getOption(120 /* inlineHints */).enabled) {\n      this._removeAllDecorations();\n      return;\n    }\n    const model = this._editor.getModel();\n    if (!model || !InlineHintsProviderRegistry.has(model)) {\n      this._removeAllDecorations();\n      return;\n    }\n    const scheduler = new RunOnceScheduler(() => __awaiter(this, void 0, void 0, function* () {\n      const t1 = Date.now();\n      const cts = new CancellationTokenSource();\n      this._sessionDisposables.add(toDisposable(() => cts.dispose(true)));\n      const visibleRanges = this._editor.getVisibleRangesPlusViewportAboveBelow();\n      const result = yield getInlineHints(model, visibleRanges, cts.token);\n      // update moving average\n      const newDelay = this._getInlineHintsDelays.update(model, Date.now() - t1);\n      scheduler.delay = newDelay;\n      // render hints\n      this._updateHintsDecorators(result);\n    }), this._getInlineHintsDelays.get(model));\n    this._sessionDisposables.add(scheduler);\n    // update inline hints when content or scroll position changes\n    this._sessionDisposables.add(this._editor.onDidChangeModelContent(() => scheduler.schedule()));\n    this._disposables.add(this._editor.onDidScrollChange(() => scheduler.schedule()));\n    scheduler.schedule();\n    // update inline hints when any any provider fires an event\n    const providerListener = new DisposableStore();\n    this._sessionDisposables.add(providerListener);\n    for (const provider of InlineHintsProviderRegistry.all(model)) {\n      if (typeof provider.onDidChangeInlineHints === 'function') {\n        providerListener.add(provider.onDidChangeInlineHints(() => scheduler.schedule()));\n      }\n    }\n  }\n  _updateHintsDecorators(hintsData) {\n    const {\n      fontSize,\n      fontFamily\n    } = this._getLayoutInfo();\n    const backgroundColor = this._themeService.getColorTheme().getColor(editorInlineHintBackground);\n    const fontColor = this._themeService.getColorTheme().getColor(editorInlineHintForeground);\n    const newDecorationsTypeIds = [];\n    const newDecorationsData = [];\n    for (const {\n      list: hints\n    } of hintsData) {\n      for (let j = 0; j < hints.length && newDecorationsData.length < MAX_DECORATORS; j++) {\n        const {\n          text,\n          range,\n          description: hoverMessage,\n          whitespaceBefore,\n          whitespaceAfter\n        } = hints[j];\n        const marginBefore = whitespaceBefore ? fontSize / 3 | 0 : 0;\n        const marginAfter = whitespaceAfter ? fontSize / 3 | 0 : 0;\n        const before = {\n          contentText: text,\n          backgroundColor: \"\".concat(backgroundColor),\n          color: \"\".concat(fontColor),\n          margin: \"0px \".concat(marginAfter, \"px 0px \").concat(marginBefore, \"px\"),\n          fontSize: \"\".concat(fontSize, \"px\"),\n          fontFamily: fontFamily,\n          padding: \"0px \".concat(fontSize / 4 | 0, \"px\"),\n          borderRadius: \"\".concat(fontSize / 4 | 0, \"px\")\n        };\n        const key = 'inlineHints-' + hash(before).toString(16);\n        this._codeEditorService.registerDecorationType(key, {\n          before\n        }, undefined, this._editor);\n        // decoration types are ref-counted which means we only need to\n        // call register und remove equally often\n        newDecorationsTypeIds.push(key);\n        const options = this._codeEditorService.resolveDecorationOptions(key, true);\n        if (typeof hoverMessage === 'string') {\n          options.hoverMessage = new MarkdownString().appendText(hoverMessage);\n        } else if (hoverMessage) {\n          options.hoverMessage = hoverMessage;\n        }\n        newDecorationsData.push({\n          range,\n          options\n        });\n      }\n    }\n    this._decorationsTypeIds.forEach(this._codeEditorService.removeDecorationType, this._codeEditorService);\n    this._decorationsTypeIds = newDecorationsTypeIds;\n    this._decorationIds = this._editor.deltaDecorations(this._decorationIds, newDecorationsData);\n  }\n  _getLayoutInfo() {\n    const options = this._editor.getOption(120 /* inlineHints */);\n    const editorFontSize = this._editor.getOption(40 /* fontSize */);\n    let fontSize = options.fontSize;\n    if (!fontSize || fontSize < 5 || fontSize > editorFontSize) {\n      fontSize = editorFontSize * .9 | 0;\n    }\n    const fontFamily = options.fontFamily;\n    return {\n      fontSize,\n      fontFamily\n    };\n  }\n  _removeAllDecorations() {\n    this._decorationIds = this._editor.deltaDecorations(this._decorationIds, []);\n    this._decorationsTypeIds.forEach(this._codeEditorService.removeDecorationType, this._codeEditorService);\n    this._decorationsTypeIds = [];\n  }\n};\nInlineHintsController.ID = 'editor.contrib.InlineHints';\nInlineHintsController = __decorate([__param(1, ICodeEditorService), __param(2, IThemeService)], InlineHintsController);\nexport { InlineHintsController };\nregisterEditorContribution(InlineHintsController.ID, InlineHintsController);\nCommandsRegistry.registerCommand('_executeInlineHintProvider', function (accessor) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n  return __awaiter(void 0, void 0, void 0, function* () {\n    const [uri, range] = args;\n    assertType(URI.isUri(uri));\n    assertType(Range.isIRange(range));\n    const ref = yield accessor.get(ITextModelService).createModelReference(uri);\n    try {\n      const data = yield getInlineHints(ref.object.textEditorModel, [Range.lift(range)], CancellationToken.None);\n      return flatten(data.map(item => item.list)).sort((a, b) => Range.compareRangesUsingStarts(a.range, b.range));\n    } finally {\n      ref.dispose();\n    }\n  });\n});","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","RunOnceScheduler","onUnexpectedExternalError","hash","DisposableStore","toDisposable","registerEditorContribution","ICodeEditorService","InlineHintsProviderRegistry","flatten","editorInlineHintForeground","editorInlineHintBackground","CancellationToken","CancellationTokenSource","IThemeService","Range","LanguageFeatureRequestDelays","MarkdownString","CommandsRegistry","URI","assertType","ITextModelService","MAX_DECORATORS","getInlineHints","model","ranges","token","datas","providers","ordered","reverse","promises","map","provider","range","provideInlineHints","push","list","err","all","InlineHintsController","constructor","_editor","_codeEditorService","_themeService","_disposables","_sessionDisposables","_getInlineHintsDelays","_decorationsTypeIds","_decorationIds","add","onDidChange","_update","onDidColorThemeChange","onDidChangeModel","onDidChangeModelLanguage","onDidChangeConfiguration","hasChanged","dispose","_removeAllDecorations","clear","getOption","enabled","getModel","has","scheduler","t1","Date","now","cts","visibleRanges","getVisibleRangesPlusViewportAboveBelow","newDelay","update","delay","_updateHintsDecorators","get","onDidChangeModelContent","schedule","onDidScrollChange","providerListener","onDidChangeInlineHints","hintsData","fontSize","fontFamily","_getLayoutInfo","backgroundColor","getColorTheme","getColor","fontColor","newDecorationsTypeIds","newDecorationsData","hints","j","text","description","hoverMessage","whitespaceBefore","whitespaceAfter","marginBefore","marginAfter","before","contentText","concat","color","margin","padding","borderRadius","toString","registerDecorationType","undefined","options","resolveDecorationOptions","appendText","forEach","removeDecorationType","deltaDecorations","editorFontSize","ID","registerCommand","accessor","_len","args","Array","_key","uri","isUri","isIRange","ref","createModelReference","data","object","textEditorModel","lift","None","item","sort","a","b","compareRangesUsingStarts"],"sources":["C:/Users/Administrator/Desktop/sqllineage-master/sqllineagejs/node_modules/monaco-editor/esm/vs/editor/contrib/inlineHints/inlineHintsController.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { RunOnceScheduler } from '../../../base/common/async.js';\r\nimport { onUnexpectedExternalError } from '../../../base/common/errors.js';\r\nimport { hash } from '../../../base/common/hash.js';\r\nimport { DisposableStore, toDisposable } from '../../../base/common/lifecycle.js';\r\nimport { registerEditorContribution } from '../../browser/editorExtensions.js';\r\nimport { ICodeEditorService } from '../../browser/services/codeEditorService.js';\r\nimport { InlineHintsProviderRegistry } from '../../common/modes.js';\r\nimport { flatten } from '../../../base/common/arrays.js';\r\nimport { editorInlineHintForeground, editorInlineHintBackground } from '../../../platform/theme/common/colorRegistry.js';\r\nimport { CancellationToken, CancellationTokenSource } from '../../../base/common/cancellation.js';\r\nimport { IThemeService } from '../../../platform/theme/common/themeService.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { LanguageFeatureRequestDelays } from '../../common/modes/languageFeatureRegistry.js';\r\nimport { MarkdownString } from '../../../base/common/htmlContent.js';\r\nimport { CommandsRegistry } from '../../../platform/commands/common/commands.js';\r\nimport { URI } from '../../../base/common/uri.js';\r\nimport { assertType } from '../../../base/common/types.js';\r\nimport { ITextModelService } from '../../common/services/resolverService.js';\r\nconst MAX_DECORATORS = 500;\r\nexport function getInlineHints(model, ranges, token) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const datas = [];\r\n        const providers = InlineHintsProviderRegistry.ordered(model).reverse();\r\n        const promises = flatten(providers.map(provider => ranges.map(range => Promise.resolve(provider.provideInlineHints(model, range, token)).then(result => {\r\n            if (result) {\r\n                datas.push({ list: result, provider });\r\n            }\r\n        }, err => {\r\n            onUnexpectedExternalError(err);\r\n        }))));\r\n        yield Promise.all(promises);\r\n        return datas;\r\n    });\r\n}\r\nlet InlineHintsController = class InlineHintsController {\r\n    constructor(_editor, _codeEditorService, _themeService) {\r\n        this._editor = _editor;\r\n        this._codeEditorService = _codeEditorService;\r\n        this._themeService = _themeService;\r\n        // static get(editor: ICodeEditor): InlineHintsController {\r\n        // \treturn editor.getContribution<InlineHintsController>(this.ID);\r\n        // }\r\n        this._disposables = new DisposableStore();\r\n        this._sessionDisposables = new DisposableStore();\r\n        this._getInlineHintsDelays = new LanguageFeatureRequestDelays(InlineHintsProviderRegistry, 250, 2500);\r\n        this._decorationsTypeIds = [];\r\n        this._decorationIds = [];\r\n        this._disposables.add(InlineHintsProviderRegistry.onDidChange(() => this._update()));\r\n        this._disposables.add(_themeService.onDidColorThemeChange(() => this._update()));\r\n        this._disposables.add(_editor.onDidChangeModel(() => this._update()));\r\n        this._disposables.add(_editor.onDidChangeModelLanguage(() => this._update()));\r\n        this._disposables.add(_editor.onDidChangeConfiguration(e => {\r\n            if (e.hasChanged(120 /* inlineHints */)) {\r\n                this._update();\r\n            }\r\n        }));\r\n        this._update();\r\n    }\r\n    dispose() {\r\n        this._sessionDisposables.dispose();\r\n        this._removeAllDecorations();\r\n        this._disposables.dispose();\r\n    }\r\n    _update() {\r\n        this._sessionDisposables.clear();\r\n        if (!this._editor.getOption(120 /* inlineHints */).enabled) {\r\n            this._removeAllDecorations();\r\n            return;\r\n        }\r\n        const model = this._editor.getModel();\r\n        if (!model || !InlineHintsProviderRegistry.has(model)) {\r\n            this._removeAllDecorations();\r\n            return;\r\n        }\r\n        const scheduler = new RunOnceScheduler(() => __awaiter(this, void 0, void 0, function* () {\r\n            const t1 = Date.now();\r\n            const cts = new CancellationTokenSource();\r\n            this._sessionDisposables.add(toDisposable(() => cts.dispose(true)));\r\n            const visibleRanges = this._editor.getVisibleRangesPlusViewportAboveBelow();\r\n            const result = yield getInlineHints(model, visibleRanges, cts.token);\r\n            // update moving average\r\n            const newDelay = this._getInlineHintsDelays.update(model, Date.now() - t1);\r\n            scheduler.delay = newDelay;\r\n            // render hints\r\n            this._updateHintsDecorators(result);\r\n        }), this._getInlineHintsDelays.get(model));\r\n        this._sessionDisposables.add(scheduler);\r\n        // update inline hints when content or scroll position changes\r\n        this._sessionDisposables.add(this._editor.onDidChangeModelContent(() => scheduler.schedule()));\r\n        this._disposables.add(this._editor.onDidScrollChange(() => scheduler.schedule()));\r\n        scheduler.schedule();\r\n        // update inline hints when any any provider fires an event\r\n        const providerListener = new DisposableStore();\r\n        this._sessionDisposables.add(providerListener);\r\n        for (const provider of InlineHintsProviderRegistry.all(model)) {\r\n            if (typeof provider.onDidChangeInlineHints === 'function') {\r\n                providerListener.add(provider.onDidChangeInlineHints(() => scheduler.schedule()));\r\n            }\r\n        }\r\n    }\r\n    _updateHintsDecorators(hintsData) {\r\n        const { fontSize, fontFamily } = this._getLayoutInfo();\r\n        const backgroundColor = this._themeService.getColorTheme().getColor(editorInlineHintBackground);\r\n        const fontColor = this._themeService.getColorTheme().getColor(editorInlineHintForeground);\r\n        const newDecorationsTypeIds = [];\r\n        const newDecorationsData = [];\r\n        for (const { list: hints } of hintsData) {\r\n            for (let j = 0; j < hints.length && newDecorationsData.length < MAX_DECORATORS; j++) {\r\n                const { text, range, description: hoverMessage, whitespaceBefore, whitespaceAfter } = hints[j];\r\n                const marginBefore = whitespaceBefore ? (fontSize / 3) | 0 : 0;\r\n                const marginAfter = whitespaceAfter ? (fontSize / 3) | 0 : 0;\r\n                const before = {\r\n                    contentText: text,\r\n                    backgroundColor: `${backgroundColor}`,\r\n                    color: `${fontColor}`,\r\n                    margin: `0px ${marginAfter}px 0px ${marginBefore}px`,\r\n                    fontSize: `${fontSize}px`,\r\n                    fontFamily: fontFamily,\r\n                    padding: `0px ${(fontSize / 4) | 0}px`,\r\n                    borderRadius: `${(fontSize / 4) | 0}px`,\r\n                };\r\n                const key = 'inlineHints-' + hash(before).toString(16);\r\n                this._codeEditorService.registerDecorationType(key, { before }, undefined, this._editor);\r\n                // decoration types are ref-counted which means we only need to\r\n                // call register und remove equally often\r\n                newDecorationsTypeIds.push(key);\r\n                const options = this._codeEditorService.resolveDecorationOptions(key, true);\r\n                if (typeof hoverMessage === 'string') {\r\n                    options.hoverMessage = new MarkdownString().appendText(hoverMessage);\r\n                }\r\n                else if (hoverMessage) {\r\n                    options.hoverMessage = hoverMessage;\r\n                }\r\n                newDecorationsData.push({\r\n                    range,\r\n                    options\r\n                });\r\n            }\r\n        }\r\n        this._decorationsTypeIds.forEach(this._codeEditorService.removeDecorationType, this._codeEditorService);\r\n        this._decorationsTypeIds = newDecorationsTypeIds;\r\n        this._decorationIds = this._editor.deltaDecorations(this._decorationIds, newDecorationsData);\r\n    }\r\n    _getLayoutInfo() {\r\n        const options = this._editor.getOption(120 /* inlineHints */);\r\n        const editorFontSize = this._editor.getOption(40 /* fontSize */);\r\n        let fontSize = options.fontSize;\r\n        if (!fontSize || fontSize < 5 || fontSize > editorFontSize) {\r\n            fontSize = (editorFontSize * .9) | 0;\r\n        }\r\n        const fontFamily = options.fontFamily;\r\n        return { fontSize, fontFamily };\r\n    }\r\n    _removeAllDecorations() {\r\n        this._decorationIds = this._editor.deltaDecorations(this._decorationIds, []);\r\n        this._decorationsTypeIds.forEach(this._codeEditorService.removeDecorationType, this._codeEditorService);\r\n        this._decorationsTypeIds = [];\r\n    }\r\n};\r\nInlineHintsController.ID = 'editor.contrib.InlineHints';\r\nInlineHintsController = __decorate([\r\n    __param(1, ICodeEditorService),\r\n    __param(2, IThemeService)\r\n], InlineHintsController);\r\nexport { InlineHintsController };\r\nregisterEditorContribution(InlineHintsController.ID, InlineHintsController);\r\nCommandsRegistry.registerCommand('_executeInlineHintProvider', (accessor, ...args) => __awaiter(void 0, void 0, void 0, function* () {\r\n    const [uri, range] = args;\r\n    assertType(URI.isUri(uri));\r\n    assertType(Range.isIRange(range));\r\n    const ref = yield accessor.get(ITextModelService).createModelReference(uri);\r\n    try {\r\n        const data = yield getInlineHints(ref.object.textEditorModel, [Range.lift(range)], CancellationToken.None);\r\n        return flatten(data.map(item => item.list)).sort((a, b) => Range.compareRangesUsingStarts(a.range, b.range));\r\n    }\r\n    finally {\r\n        ref.dispose();\r\n    }\r\n}));\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}